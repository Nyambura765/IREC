{"id":"57fb9fb70944fc95c5352472d4aea7e8","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n * {IERC721-setApprovalForAll}.\n */\nabstract contract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/FractionalCertificateToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\r\n\r\n\r\ncontract FractionalCertificateToken is ERC20, Ownable, ERC20Permit, ERC721Holder {\r\n\r\n    // The IReCCertificate NFT contract (ERC-721)\r\n    IERC721 public immutable iRecCertificateContract;\r\n\r\n    \r\n    uint256 public immutable certificateTokenId;\r\n    bool public isFractionalized;\r\n\r\n    // Event emitted when NFT is locked and fractions minted\r\n    event CertificateFractionalized(uint256 tokenId, uint256 totalFractions, address indexed initiator);\r\n\r\n    constructor(\r\n        uint256 totalFractions,\r\n        string memory tokenName,\r\n        string memory tokenSymbol,\r\n        address certificateContractAddress,\r\n        uint256 certificateTokenId_\r\n    ) ERC20(tokenName, tokenSymbol) ERC20Permit(tokenName) Ownable(msg.sender) {\r\n        iRecCertificateContract = IERC721(certificateContractAddress);\r\n        certificateTokenId = certificateTokenId_;\r\n\r\n        _mint(msg.sender, totalFractions);\r\n    }\r\n\r\n    /**\r\n     * @dev Locks the NFT (green energy certificate) inside this contract to fractionalize it.\r\n     */\r\n    function fractionalizeCertificate() external onlyOwner {\r\n        require(!isFractionalized, \"Certificate already fractionalized\");\r\n\r\n        // Transfer certificate NFT to this contract (lock)\r\n        iRecCertificateContract.safeTransferFrom(msg.sender, address(this), certificateTokenId);\r\n\r\n        isFractionalized = true;\r\n\r\n        emit CertificateFractionalized(certificateTokenId, totalSupply(), msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns information about the fractionalized certificate\r\n     */\r\n    function getFractionInfo() external view returns (\r\n        address nftAddress,\r\n        uint256 tokenId,\r\n        uint256 totalFractions,\r\n        address ownerAddress\r\n    ) {\r\n        return (\r\n            address(iRecCertificateContract),\r\n            certificateTokenId,\r\n            totalSupply(),\r\n            owner()\r\n        );\r\n    }\r\n}\r\n"},"contracts/IReCCertificate.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n/**\n * @title IReCCertificate\n * @dev Contract for creating I-REC certificates as NFTs (ERC-721)\n */\ncontract IReCCertificate is ERC721URIStorage, Ownable {\n    \n    // Certificate metadata\n    struct CertificateData {\n        string facilityName;\n        string energySource;\n        uint256 productionDate;\n        uint256 expiryDate;\n        uint256 energyAmount; // in Wh (1 MWh = 1,000,000 Wh)\n    }\n    \n    mapping(uint256 => CertificateData) public certificates;\n    mapping(uint256 => address) private tokenIdOwner;\n    \n    // Events\n    event CertificateMinted(uint256 tokenId, address owner, uint256 energyAmount);\n    event CertificateBurned(uint256 tokenId, address burner, uint256 energyAmount);\n    event CertificateDetailsUpdated(uint256 tokenId);\n\n    \n\n    \n    string private baseURIValue;\n\n    constructor(string memory name, string memory symbol, string memory initialBaseURI) ERC721(name, symbol) Ownable(msg.sender) {\n        baseURIValue = initialBaseURI;\n    }\n\n    /**\n     * @dev Override the _baseURI() function from ERC721\n     */\n    function _baseURI() internal view virtual override returns (string memory) {\n        return baseURIValue;\n    }\n\n    /**\n     * @dev Function to update the base URI if needed\n     */\n    function setBaseURI(string memory newBaseURI) public onlyOwner {\n        baseURIValue = newBaseURI;\n    }\n\n    /**\n     * @dev Creates a new I-REC certificate as an NFT\n     */\n    function mintCertificate(\n        address recipient,\n        string memory baseURI,\n        string memory facilityName,\n        string memory energySource,\n        uint256 productionDate,\n        uint256 expiryDate,\n        uint256 newItemId\n    ) public onlyOwner returns (uint256) {\n        \n        _mint(recipient, newItemId);\n        _setTokenURI(newItemId, baseURI);\n        \n        // Store certificate data (1 MWh = 1,000,000 Wh)\n        certificates[newItemId] = CertificateData({\n            facilityName: facilityName,\n            energySource: energySource,\n            productionDate: productionDate,\n            expiryDate: expiryDate,\n            energyAmount: 1000000 // 1 MWh in Wh\n        });\n\n        // Store token ID to the certificate data\n        tokenIdOwner[newItemId] = recipient;\n        \n        emit CertificateMinted(newItemId, recipient, 1000000);\n        \n        return newItemId;\n    }\n    \n    /**\n     * @dev Burns (destroys) an I-REC certificate\n     * @param tokenId The ID of the token to burn\n     * Requirements:\n     * - The caller must own the token or be an approved operator\n     */\n    function burnCertificate(uint256 tokenId) public {\n        require(msg.sender == tokenIdOwner[tokenId], \"IReCCertificate: caller is not owner nor approved\");\n        \n        // Get certificate data before burning for the event\n        uint256 energyAmount = certificates[tokenId].energyAmount;\n        \n        // Delete certificate data\n        delete certificates[tokenId];\n        \n        // Burn the token\n        _burn(tokenId);\n        \n        // Emit burn event\n        emit CertificateBurned(tokenId, msg.sender, energyAmount);\n    }\n\n    /**\n     * @dev Returns the complete details of a certificate\n     * @param tokenId The ID of the certificate to query\n     */\n    function getCertificateDetails(uint256 tokenId) public view returns (\n        string memory facilityName,\n        string memory energySource,\n        uint256 productionDate,\n        uint256 expiryDate,\n        uint256 energyAmount,\n        address owner\n    ) {\n        require(tokenIdOwner[tokenId] != address(0), \"Certificate does not exist\");\n        \n        CertificateData memory certData = certificates[tokenId];\n        \n        return (\n            certData.facilityName,\n            certData.energySource,\n            certData.productionDate,\n            certData.expiryDate,\n            certData.energyAmount,\n            ownerOf(tokenId)\n        );\n    }\n}"},"contracts/Marketplace.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"./FractionalCertificateToken.sol\";\r\nimport  \"./IReCCertificate.sol\";\r\n\r\n\r\ncontract Marketplace is Ownable, ReentrancyGuard  {\r\n    struct Listing {\r\n        address seller;\r\n        uint256 pricePerToken; // in wei\r\n        uint256 amountAvailable;\r\n    }\r\n\r\n    // Mapping: ERC20 token address => seller => Listing\r\n    mapping(address => mapping(address => Listing)) public listings;\r\n\r\n    event Listed(address indexed token, address indexed seller, uint256 amount, uint256 pricePerToken);\r\n    event Purchased(address indexed token, address indexed buyer, uint256 amount, uint256 totalCost);\r\n    event Withdrawn(address indexed seller, uint256 amount);\r\n    event ListingCancelled(address indexed token, address indexed seller);\r\n    // Constructor \r\n    constructor(address initialOwner) Ownable(initialOwner) {}\r\n\r\n\r\n    /**\r\n     * @dev Seller lists their fractional tokens\r\n     */\r\n    function listTokens(\r\n        address tokenAddress,\r\n        uint256 amount,\r\n        uint256 pricePerToken\r\n    ) external {\r\n        require(amount > 0 && pricePerToken > 0, \"Invalid inputs\");\r\n\r\n        IERC20 token = IERC20(tokenAddress);\r\n        require(token.allowance(msg.sender, address(this)) >= amount, \"Marketplace not approved\");\r\n        require(token.balanceOf(msg.sender) >= amount, \"Insufficient balance\");\r\n\r\n        listings[tokenAddress][msg.sender] = Listing(msg.sender, pricePerToken, amount);\r\n\r\n        emit Listed(tokenAddress, msg.sender, amount, pricePerToken);\r\n    }\r\n\r\n    /**\r\n     * @dev Buyer buys `amountToBuy` of fractional tokens\r\n     */\r\n    function buyTokens(address tokenAddress, address seller, uint256 amountToBuy) external payable nonReentrant {\r\n        Listing storage item = listings[tokenAddress][seller];\r\n        require(item.amountAvailable >= amountToBuy, \"Not enough tokens listed\");\r\n        \r\n        uint256 totalCost = item.pricePerToken * amountToBuy;\r\n        require(msg.value >= totalCost, \"Insufficient ETH sent\");\r\n\r\n        // Transfer ERC20 tokens from seller to buyer\r\n        IERC20(tokenAddress).transferFrom(item.seller, msg.sender, amountToBuy);\r\n\r\n        // Reduce the listing's available amount\r\n        item.amountAvailable -= amountToBuy;\r\n\r\n        // Send ETH to seller\r\n        (bool sent, ) = payable(item.seller).call{value: totalCost}(\"\");\r\n        require(sent, \"ETH transfer failed\");\r\n\r\n        emit Purchased(tokenAddress, msg.sender, amountToBuy, totalCost);\r\n    }\r\n\r\n    /**\r\n     * @dev Cancel listing\r\n     */\r\n    function cancelListing(address tokenAddress) external {\r\n        Listing storage item = listings[tokenAddress][msg.sender];\r\n        require(item.amountAvailable > 0, \"No listing to cancel\");\r\n\r\n        delete listings[tokenAddress][msg.sender];\r\n\r\n        emit ListingCancelled(tokenAddress, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns listing details for UI\r\n     */\r\n    function getListing(address tokenAddress, address seller) external view returns (\r\n        address sellerAddress,\r\n        uint256 pricePerToken,\r\n        uint256 amountAvailable\r\n    ) {\r\n        Listing memory l = listings[tokenAddress][seller];\r\n        return (l.seller, l.pricePerToken, l.amountAvailable);\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2530],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2531,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2530],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4945]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":4946,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[4945],"IERC4906":[175],"IERC721":[2224]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":205,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4945,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2224,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,2224,4945],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,2123,2132,2141]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[200]},"id":201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":200,"linearizedBaseContracts":[200],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":180,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":199,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":183,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":199,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":185,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":199,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":187,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":199,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":199,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":199,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":199,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":200,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":201,"src":"133:605:3","usedErrors":[],"usedEvents":[180]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[2224]},"id":205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":202,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":205,"sourceUnit":2225,"src":"132:52:4","symbolAliases":[{"foreign":{"id":203,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"140:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[341],"IERC20Errors":[246],"IERC721Errors":[294]},"id":342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":206,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":216,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":216,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":216,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":216,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":221,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":221,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":226,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":226,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":235,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":235,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":235,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":235,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":240,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":240,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":245,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":245,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":342,"src":"280:1764:5","usedErrors":[216,221,226,235,240,245],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":294,"linearizedBaseContracts":[294],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":252,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":252,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":257,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":257,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":266,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":266,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":266,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":266,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":271,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":271,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":276,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":276,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":283,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":283,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":283,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":288,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":288,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":293,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":293,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":342,"src":"2190:2092:5","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":341,"linearizedBaseContracts":[341],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":306,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":306,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":306,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":306,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":306,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":311,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":311,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":316,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":316,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":323,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":323,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":323,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":328,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":328,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":333,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":333,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":340,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":340,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":340,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":342,"src":"4430:2107:5","usedErrors":[306,311,316,323,328,333,340],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2530],"ERC20":[856],"IERC20":[934],"IERC20Errors":[246],"IERC20Metadata":[1114]},"id":857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":343,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":857,"sourceUnit":935,"src":"131:36:6","symbolAliases":[{"foreign":{"id":344,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":857,"sourceUnit":1115,"src":"168:63:6","symbolAliases":[{"foreign":{"id":346,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":857,"sourceUnit":2531,"src":"232:48:6","symbolAliases":[{"foreign":{"id":348,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":857,"sourceUnit":342,"src":"281:65:6","symbolAliases":[{"foreign":{"id":350,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":353,"name":"Context","nameLocations":["1133:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"1133:7:6"},"id":354,"nodeType":"InheritanceSpecifier","src":"1133:7:6"},{"baseName":{"id":355,"name":"IERC20","nameLocations":["1142:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":934,"src":"1142:6:6"},"id":356,"nodeType":"InheritanceSpecifier","src":"1142:6:6"},{"baseName":{"id":357,"name":"IERC20Metadata","nameLocations":["1150:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1114,"src":"1150:14:6"},"id":358,"nodeType":"InheritanceSpecifier","src":"1150:14:6"},{"baseName":{"id":359,"name":"IERC20Errors","nameLocations":["1166:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"1166:12:6"},"id":360,"nodeType":"InheritanceSpecifier","src":"1166:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"348:757:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":856,"linearizedBaseContracts":[856,246,1114,934,2530],"name":"ERC20","nameLocation":"1124:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":364,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:6","nodeType":"VariableDeclaration","scope":856,"src":"1185:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":363,"keyName":"account","keyNameLocation":"1201:7:6","keyType":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":370,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:6","nodeType":"VariableDeclaration","scope":856,"src":"1245:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":369,"keyName":"account","keyNameLocation":"1261:7:6","keyType":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":368,"keyName":"spender","keyNameLocation":"1288:7:6","keyType":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":372,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:6","nodeType":"VariableDeclaration","scope":856,"src":"1335:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":374,"mutability":"mutable","name":"_name","nameLocation":"1385:5:6","nodeType":"VariableDeclaration","scope":856,"src":"1370:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":376,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:6","nodeType":"VariableDeclaration","scope":856,"src":"1396:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":375,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":392,"nodeType":"Block","src":"1657:57:6","statements":[{"expression":{"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1667:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":385,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"1675:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":387,"nodeType":"ExpressionStatement","src":"1667:13:6"},{"expression":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":388,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1690:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":389,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"1700:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":391,"nodeType":"ExpressionStatement","src":"1690:17:6"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1425:171:6","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":393,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"name_","nameLocation":"1627:5:6","nodeType":"VariableDeclaration","scope":393,"src":"1613:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":378,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:6","nodeType":"VariableDeclaration","scope":393,"src":"1634:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":380,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:6"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"1657:0:6"},"scope":856,"src":"1601:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1101],"body":{"id":401,"nodeType":"Block","src":"1839:29:6","statements":[{"expression":{"id":399,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1856:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":398,"id":400,"nodeType":"Return","src":"1849:12:6"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"1720:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:6","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"1792:2:6"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"1824:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":396,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:6"},"scope":856,"src":"1779:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1107],"body":{"id":410,"nodeType":"Block","src":"2043:31:6","statements":[{"expression":{"id":408,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2060:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":407,"id":409,"nodeType":"Return","src":"2053:14:6"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"1874:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":411,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:6","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"1996:2:6"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"2028:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":405,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:6"},"scope":856,"src":"1981:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1113],"body":{"id":419,"nodeType":"Block","src":"2763:26:6","statements":[{"expression":{"hexValue":"3138","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":416,"id":418,"nodeType":"Return","src":"2773:9:6"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"2080:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":420,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:6","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"2724:2:6"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"2756:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":414,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:6"},"scope":856,"src":"2707:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[883],"body":{"id":428,"nodeType":"Block","src":"2910:36:6","statements":[{"expression":{"id":426,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2927:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":425,"id":427,"nodeType":"Return","src":"2920:19:6"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"2795:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:6","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"2869:2:6"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"2901:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:6"},"scope":856,"src":"2849:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[891],"body":{"id":441,"nodeType":"Block","src":"3078:42:6","statements":[{"expression":{"baseExpression":{"id":437,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"3095:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":439,"indexExpression":{"id":438,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"3105:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":436,"id":440,"nodeType":"Return","src":"3088:25:6"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"2952:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":442,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:6","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"account","nameLocation":"3031:7:6","nodeType":"VariableDeclaration","scope":442,"src":"3023:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:6"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"3069:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:6"},"scope":856,"src":"3004:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":465,"nodeType":"Block","src":"3390:103:6","statements":[{"assignments":[453],"declarations":[{"constant":false,"id":453,"mutability":"mutable","name":"owner","nameLocation":"3408:5:6","nodeType":"VariableDeclaration","scope":465,"src":"3400:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":456,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":454,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3416:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:6"},{"expression":{"arguments":[{"id":458,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"3448:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":459,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"3455:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"3459:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"3438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"3438:27:6"},{"expression":{"hexValue":"74727565","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":451,"id":464,"nodeType":"Return","src":"3475:11:6"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"3126:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":466,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:6","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"to","nameLocation":"3341:2:6","nodeType":"VariableDeclaration","scope":466,"src":"3333:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"value","nameLocation":"3353:5:6","nodeType":"VariableDeclaration","scope":466,"src":"3345:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:6"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":466,"src":"3384:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":449,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:6"},"scope":856,"src":"3315:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[911],"body":{"id":482,"nodeType":"Block","src":"3640:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":476,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3657:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":478,"indexExpression":{"id":477,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3669:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":480,"indexExpression":{"id":479,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3676:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":475,"id":481,"nodeType":"Return","src":"3650:34:6"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"3499:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":483,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:6","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"owner","nameLocation":"3578:5:6","nodeType":"VariableDeclaration","scope":483,"src":"3570:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"spender","nameLocation":"3593:7:6","nodeType":"VariableDeclaration","scope":483,"src":"3585:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:6"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"3631:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:6"},"scope":856,"src":"3551:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[921],"body":{"id":506,"nodeType":"Block","src":"4077:107:6","statements":[{"assignments":[494],"declarations":[{"constant":false,"id":494,"mutability":"mutable","name":"owner","nameLocation":"4095:5:6","nodeType":"VariableDeclaration","scope":506,"src":"4087:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":497,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":495,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4103:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:6"},{"expression":{"arguments":[{"id":499,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"4134:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"4141:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4150:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[747,807],"referencedDeclaration":747,"src":"4125:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"4125:31:6"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":492,"id":505,"nodeType":"Return","src":"4166:11:6"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"3697:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:6","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"spender","nameLocation":"4023:7:6","nodeType":"VariableDeclaration","scope":507,"src":"4015:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"value","nameLocation":"4040:5:6","nodeType":"VariableDeclaration","scope":507,"src":"4032:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:6"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4071:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":490,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:6"},"scope":856,"src":"3998:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[933],"body":{"id":538,"nodeType":"Block","src":"4869:151:6","statements":[{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"spender","nameLocation":"4887:7:6","nodeType":"VariableDeclaration","scope":538,"src":"4879:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":523,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":521,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4897:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:6"},{"expression":{"arguments":[{"id":525,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4935:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4941:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4950:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":524,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"4919:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"ExpressionStatement","src":"4919:37:6"},{"expression":{"arguments":[{"id":531,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4976:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"4982:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4986:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":530,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4966:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"4966:26:6"},{"expression":{"hexValue":"74727565","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":518,"id":537,"nodeType":"Return","src":"5002:11:6"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"4190:581:6","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":539,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:6","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"4806:4:6","nodeType":"VariableDeclaration","scope":539,"src":"4798:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"4820:2:6","nodeType":"VariableDeclaration","scope":539,"src":"4812:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"4832:5:6","nodeType":"VariableDeclaration","scope":539,"src":"4824:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:6"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":539,"src":"4863:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":516,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:6"},"scope":856,"src":"4776:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":585,"nodeType":"Block","src":"5462:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":549,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"5476:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:6","typeDescriptions":{}}},"id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":563,"nodeType":"IfStatement","src":"5472:86:6","trueBody":{"id":562,"nodeType":"Block","src":"5496:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:6","typeDescriptions":{}}},"id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":555,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"5517:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":561,"nodeType":"RevertStatement","src":"5510:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5571:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:6","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":578,"nodeType":"IfStatement","src":"5567:86:6","trueBody":{"id":577,"nodeType":"Block","src":"5589:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:6","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":570,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"5610:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":576,"nodeType":"RevertStatement","src":"5603:39:6"}]}},{"expression":{"arguments":[{"id":580,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"5670:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5676:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5680:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5662:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"5662:24:6"}]},"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"5026:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:6","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"from","nameLocation":"5420:4:6","nodeType":"VariableDeclaration","scope":586,"src":"5412:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"to","nameLocation":"5434:2:6","nodeType":"VariableDeclaration","scope":586,"src":"5426:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"value","nameLocation":"5446:5:6","nodeType":"VariableDeclaration","scope":586,"src":"5438:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:6"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"5462:0:6"},"scope":856,"src":"5393:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":662,"nodeType":"Block","src":"6083:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":596,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6097:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:6","typeDescriptions":{}}},"id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":633,"nodeType":"Block","src":"6271:362:6","statements":[{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:6","nodeType":"VariableDeclaration","scope":633,"src":"6285:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":612,"initialValue":{"baseExpression":{"id":609,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"6307:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":611,"indexExpression":{"id":610,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6317:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6340:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6354:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"6336:115:6","trueBody":{"id":622,"nodeType":"Block","src":"6361:90:6","statements":[{"errorCall":{"arguments":[{"id":617,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6411:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6417:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6430:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6386:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":621,"nodeType":"RevertStatement","src":"6379:57:6"}]}},{"id":632,"nodeType":"UncheckedBlock","src":"6464:159:6","statements":[{"expression":{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":624,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"6571:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":626,"indexExpression":{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6581:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":627,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6589:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6603:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":631,"nodeType":"ExpressionStatement","src":"6571:37:6"}]}]},"id":634,"nodeType":"IfStatement","src":"6093:540:6","trueBody":{"id":606,"nodeType":"Block","src":"6117:148:6","statements":[{"expression":{"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":602,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"6233:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6249:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":605,"nodeType":"ExpressionStatement","src":"6233:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"6647:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:6","typeDescriptions":{}}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":654,"nodeType":"Block","src":"6862:206:6","statements":[{"id":653,"nodeType":"UncheckedBlock","src":"6876:182:6","statements":[{"expression":{"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":647,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"7021:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":649,"indexExpression":{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7031:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7038:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":652,"nodeType":"ExpressionStatement","src":"7021:22:6"}]}]},"id":655,"nodeType":"IfStatement","src":"6643:425:6","trueBody":{"id":646,"nodeType":"Block","src":"6665:191:6","statements":[{"id":645,"nodeType":"UncheckedBlock","src":"6679:167:6","statements":[{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":641,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"6810:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6826:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":644,"nodeType":"ExpressionStatement","src":"6810:21:6"}]}]}},{"eventCall":{"arguments":[{"id":657,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7092:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7098:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7102:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7083:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"EmitStatement","src":"7078:30:6"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"5699:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:6","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"from","nameLocation":"6033:4:6","nodeType":"VariableDeclaration","scope":663,"src":"6025:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"to","nameLocation":"6047:2:6","nodeType":"VariableDeclaration","scope":663,"src":"6039:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"value","nameLocation":"6059:5:6","nodeType":"VariableDeclaration","scope":663,"src":"6051:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:6"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"6083:0:6"},"scope":856,"src":"6008:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"7514:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"7528:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:6","typeDescriptions":{}}},"id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":685,"nodeType":"IfStatement","src":"7524:91:6","trueBody":{"id":684,"nodeType":"Block","src":"7551:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:6","typeDescriptions":{}}},"id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":677,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7572:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":683,"nodeType":"RevertStatement","src":"7565:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:6","typeDescriptions":{}}},"id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"7644:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7653:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":686,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7624:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"7624:35:6"}]},"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"7121:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:6","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"account","nameLocation":"7481:7:6","nodeType":"VariableDeclaration","scope":696,"src":"7473:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"value","nameLocation":"7498:5:6","nodeType":"VariableDeclaration","scope":696,"src":"7490:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:6"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"7514:0:6"},"scope":856,"src":"7458:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"8040:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"8054:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:6","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"8050:89:6","trueBody":{"id":717,"nodeType":"Block","src":"8077:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:6","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":710,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"8098:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":716,"nodeType":"RevertStatement","src":"8091:37:6"}]}},{"expression":{"arguments":[{"id":720,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"8156:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:6","typeDescriptions":{}}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"8177:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8148:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"8148:35:6"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7672:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:6","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"account","nameLocation":"8007:7:6","nodeType":"VariableDeclaration","scope":729,"src":"7999:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"value","nameLocation":"8024:5:6","nodeType":"VariableDeclaration","scope":729,"src":"8016:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:6"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"8040:0:6"},"scope":856,"src":"7984:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":746,"nodeType":"Block","src":"8800:54:6","statements":[{"expression":{"arguments":[{"id":740,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8819:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8826:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"8835:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":739,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[747,807],"referencedDeclaration":807,"src":"8810:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"8810:37:6"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"8196:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:6","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"8752:5:6","nodeType":"VariableDeclaration","scope":747,"src":"8744:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"spender","nameLocation":"8767:7:6","nodeType":"VariableDeclaration","scope":747,"src":"8759:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"value","nameLocation":"8784:5:6","nodeType":"VariableDeclaration","scope":747,"src":"8776:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:6"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"8800:0:6"},"scope":856,"src":"8726:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"9799:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9813:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:6","typeDescriptions":{}}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"9809:89:6","trueBody":{"id":772,"nodeType":"Block","src":"9834:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:6","typeDescriptions":{}}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":765,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"9855:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":771,"nodeType":"RevertStatement","src":"9848:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9911:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:6","typeDescriptions":{}}},"id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":788,"nodeType":"IfStatement","src":"9907:90:6","trueBody":{"id":787,"nodeType":"Block","src":"9934:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:6","typeDescriptions":{}}},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":780,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"9955:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":786,"nodeType":"RevertStatement","src":"9948:38:6"}]}},{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":789,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"10006:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":792,"indexExpression":{"id":790,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10018:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":793,"indexExpression":{"id":791,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10025:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10036:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"nodeType":"ExpressionStatement","src":"10006:35:6"},{"condition":{"id":797,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10055:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":805,"nodeType":"IfStatement","src":"10051:76:6","trueBody":{"id":804,"nodeType":"Block","src":"10066:61:6","statements":[{"eventCall":{"arguments":[{"id":799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10094:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10101:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10110:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"10085:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"EmitStatement","src":"10080:36:6"}]}}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"8860:836:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:6","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"owner","nameLocation":"9727:5:6","nodeType":"VariableDeclaration","scope":807,"src":"9719:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"spender","nameLocation":"9742:7:6","nodeType":"VariableDeclaration","scope":807,"src":"9734:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"value","nameLocation":"9759:5:6","nodeType":"VariableDeclaration","scope":807,"src":"9751:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:6","nodeType":"VariableDeclaration","scope":807,"src":"9766:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":755,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:6"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"9799:0:6"},"scope":856,"src":"9701:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":854,"nodeType":"Block","src":"10504:387:6","statements":[{"assignments":[818],"declarations":[{"constant":false,"id":818,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:6","nodeType":"VariableDeclaration","scope":854,"src":"10514:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":823,"initialValue":{"arguments":[{"id":820,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10551:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10558:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":819,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"10541:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"10580:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:6","memberName":"max","nodeType":"MemberAccess","src":"10599:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":853,"nodeType":"IfStatement","src":"10576:309:6","trueBody":{"id":852,"nodeType":"Block","src":"10618:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"10636:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"10655:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":841,"nodeType":"IfStatement","src":"10632:130:6","trueBody":{"id":840,"nodeType":"Block","src":"10662:100:6","statements":[{"errorCall":{"arguments":[{"id":835,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10714:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"10723:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"10741:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"10687:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":839,"nodeType":"RevertStatement","src":"10680:67:6"}]}},{"id":851,"nodeType":"UncheckedBlock","src":"10775:100:6","statements":[{"expression":{"arguments":[{"id":843,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10812:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10819:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"10828:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"10847:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":842,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[747,807],"referencedDeclaration":807,"src":"10803:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"ExpressionStatement","src":"10803:57:6"}]}]}}]},"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"10139:271:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":855,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:6","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"owner","nameLocation":"10448:5:6","nodeType":"VariableDeclaration","scope":855,"src":"10440:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"spender","nameLocation":"10463:7:6","nodeType":"VariableDeclaration","scope":855,"src":"10455:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"value","nameLocation":"10480:5:6","nodeType":"VariableDeclaration","scope":855,"src":"10472:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:6"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"10504:0:6"},"scope":856,"src":"10415:476:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":857,"src":"1106:9787:6","usedErrors":[216,221,226,235,240,245],"usedEvents":[868,877]}],"src":"105:10789:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[934]},"id":935,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"132:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":934,"linearizedBaseContracts":[934],"name":"IERC20","nameLocation":"214:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"227:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":868,"name":"Transfer","nameLocation":"396:8:7","nodeType":"EventDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:7","nodeType":"VariableDeclaration","scope":868,"src":"405:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:7","nodeType":"VariableDeclaration","scope":868,"src":"427:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:7","nodeType":"VariableDeclaration","scope":868,"src":"447:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:7"},"src":"390:72:7"},{"anonymous":false,"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"468:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":877,"name":"Approval","nameLocation":"627:8:7","nodeType":"EventDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:7","nodeType":"VariableDeclaration","scope":877,"src":"636:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":877,"src":"659:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:7","nodeType":"VariableDeclaration","scope":877,"src":"684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:7"},"src":"621:78:7"},{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"705:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":883,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:7","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"795:2:7"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":883,"src":"821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:7"},"scope":934,"src":"775:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"836:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":891,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":891,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":934,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"986:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":901,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"1242:5:7","nodeType":"VariableDeclaration","scope":901,"src":"1234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:7"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"1267:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:7"},"scope":934,"src":"1204:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"1279:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":911,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:7","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"owner","nameLocation":"1575:5:7","nodeType":"VariableDeclaration","scope":911,"src":"1567:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"spender","nameLocation":"1590:7:7","nodeType":"VariableDeclaration","scope":911,"src":"1582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:7"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"1622:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:7"},"scope":934,"src":"1548:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"1637:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":921,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:7","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"spender","nameLocation":"2334:7:7","nodeType":"VariableDeclaration","scope":921,"src":"2326:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"value","nameLocation":"2351:5:7","nodeType":"VariableDeclaration","scope":921,"src":"2343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:7"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"2376:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":918,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:7"},"scope":934,"src":"2309:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"2388:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":933,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:7","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":933,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"to","nameLocation":"2734:2:7","nodeType":"VariableDeclaration","scope":933,"src":"2726:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"value","nameLocation":"2746:5:7","nodeType":"VariableDeclaration","scope":933,"src":"2738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:7"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"2771:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":930,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:7"},"scope":934,"src":"2690:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":935,"src":"204:2575:7","usedErrors":[],"usedEvents":[868,877]}],"src":"106:2674:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4608],"EIP712":[4835],"ERC20":[856],"ERC20Permit":[1088],"IERC20Permit":[1150],"Nonces":[2598]},"id":1089,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":936,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":1151,"src":"148:48:8","symbolAliases":[{"foreign":{"id":937,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":857,"src":"197:35:8","symbolAliases":[{"foreign":{"id":939,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":4609,"src":"233:60:8","symbolAliases":[{"foreign":{"id":941,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":4836,"src":"294:62:8","symbolAliases":[{"foreign":{"id":943,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":2599,"src":"357:49:8","symbolAliases":[{"foreign":{"id":945,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":948,"name":"ERC20","nameLocations":["931:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"931:5:8"},"id":949,"nodeType":"InheritanceSpecifier","src":"931:5:8"},{"baseName":{"id":950,"name":"IERC20Permit","nameLocations":["938:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1150,"src":"938:12:8"},"id":951,"nodeType":"InheritanceSpecifier","src":"938:12:8"},{"baseName":{"id":952,"name":"EIP712","nameLocations":["952:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4835,"src":"952:6:8"},"id":953,"nodeType":"InheritanceSpecifier","src":"952:6:8"},{"baseName":{"id":954,"name":"Nonces","nameLocations":["960:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2598,"src":"960:6:8"},"id":955,"nodeType":"InheritanceSpecifier","src":"960:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"408:489:8","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1088,"linearizedBaseContracts":[1088,2598,4835,200,1150,856,246,1114,934,2530],"name":"ERC20Permit","nameLocation":"916:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":960,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:8","nodeType":"VariableDeclaration","scope":1088,"src":"973:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"1126:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":965,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:8","nodeType":"ErrorDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:8","nodeType":"VariableDeclaration","scope":965,"src":"1213:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:8"},"src":"1183:48:8"},{"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"1237:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":972,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:8","nodeType":"ErrorDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"signer","nameLocation":"1322:6:8","nodeType":"VariableDeclaration","scope":972,"src":"1314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"owner","nameLocation":"1338:5:8","nodeType":"VariableDeclaration","scope":972,"src":"1330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:8"},"src":"1287:58:8"},{"body":{"id":982,"nodeType":"Block","src":"1627:2:8","statements":[]},"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"1351:221:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":983,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":978,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":980,"kind":"baseConstructorSpecifier","modifierName":{"id":977,"name":"EIP712","nameLocations":["1609:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4835,"src":"1609:6:8"},"nodeType":"ModifierInvocation","src":"1609:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"name","nameLocation":"1603:4:8","nodeType":"VariableDeclaration","scope":983,"src":"1589:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":974,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:8"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"1627:0:8"},"scope":1088,"src":"1577:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1135],"body":{"id":1059,"nodeType":"Block","src":"1872:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1001,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1003,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"1904:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1010,"nodeType":"IfStatement","src":"1882:97:8","trueBody":{"id":1009,"nodeType":"Block","src":"1914:65:8","statements":[{"errorCall":{"arguments":[{"id":1006,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"1959:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1005,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"1935:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1008,"nodeType":"RevertStatement","src":"1928:40:8"}]}},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:8","nodeType":"VariableDeclaration","scope":1059,"src":"1989:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[{"arguments":[{"id":1016,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2031:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1017,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2048:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2055:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2064:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2081:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1020,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"2071:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1023,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2089:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1014,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1013,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:8"},{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"hash","nameLocation":"2118:4:8","nodeType":"VariableDeclaration","scope":1059,"src":"2110:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1032,"initialValue":{"arguments":[{"id":1030,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2142:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1029,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"2125:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:8"},{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"signer","nameLocation":"2172:6:8","nodeType":"VariableDeclaration","scope":1059,"src":"2164:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1042,"initialValue":{"arguments":[{"id":1037,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2195:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1038,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2201:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1039,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2204:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1040,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2207:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1035,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"2181:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4608_$","typeString":"type(library ECDSA)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4558,"src":"2181:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2223:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1044,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2233:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"2219:88:8","trueBody":{"id":1051,"nodeType":"Block","src":"2240:67:8","statements":[{"errorCall":{"arguments":[{"id":1047,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2282:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2290:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1046,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"2261:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1050,"nodeType":"RevertStatement","src":"2254:42:8"}]}},{"expression":{"arguments":[{"id":1054,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2326:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2333:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2342:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1053,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[747,807],"referencedDeclaration":747,"src":"2317:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"2317:31:8"}]},"documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"1635:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:8","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"owner","nameLocation":"1716:5:8","nodeType":"VariableDeclaration","scope":1060,"src":"1708:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"spender","nameLocation":"1739:7:8","nodeType":"VariableDeclaration","scope":1060,"src":"1731:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"value","nameLocation":"1764:5:8","nodeType":"VariableDeclaration","scope":1060,"src":"1756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:8","nodeType":"VariableDeclaration","scope":1060,"src":"1779:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"v","nameLocation":"1811:1:8","nodeType":"VariableDeclaration","scope":1060,"src":"1805:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":993,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"r","nameLocation":"1830:1:8","nodeType":"VariableDeclaration","scope":1060,"src":"1822:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"s","nameLocation":"1849:1:8","nodeType":"VariableDeclaration","scope":1060,"src":"1841:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:8"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"1872:0:8"},"scope":1088,"src":"1683:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1143,2557],"body":{"id":1076,"nodeType":"Block","src":"2509:43:8","statements":[{"expression":{"arguments":[{"id":1073,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2539:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1071,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1088_$","typeString":"type(contract super ERC20Permit)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2557,"src":"2526:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1070,"id":1075,"nodeType":"Return","src":"2519:26:8"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"2361:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:8","nodeType":"FunctionDefinition","overrides":{"id":1067,"nodeType":"OverrideSpecifier","overrides":[{"id":1065,"name":"IERC20Permit","nameLocations":["2469:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1150,"src":"2469:12:8"},{"id":1066,"name":"Nonces","nameLocations":["2483:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2598,"src":"2483:6:8"}],"src":"2460:30:8"},"parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"owner","nameLocation":"2433:5:8","nodeType":"VariableDeclaration","scope":1077,"src":"2425:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:8"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"2500:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:8"},"scope":1088,"src":"2409:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1149],"body":{"id":1086,"nodeType":"Block","src":"2727:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1083,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"2744:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1082,"id":1085,"nodeType":"Return","src":"2737:27:8"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"2558:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:8","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"2684:2:8"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"2718:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:8"},"scope":1088,"src":"2659:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1089,"src":"898:1875:8","usedErrors":[216,221,226,235,240,245,965,972,2540,2733,2735,4271,4276,4281],"usedEvents":[180,868,877]}],"src":"122:2652:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[934],"IERC20Metadata":[1114]},"id":1115,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1090,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1092,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1115,"sourceUnit":935,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1091,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1094,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":934,"src":"306:6:9"},"id":1095,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1114,"linearizedBaseContracts":[1114,934],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1101,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1101,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1098,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1114,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1107,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1104,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1114,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1113,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1110,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1114,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1115,"src":"278:405:9","usedErrors":[],"usedEvents":[868,877]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1150]},"id":1151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1116,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"149:1965:10","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1150,"linearizedBaseContracts":[1150],"name":"IERC20Permit","nameLocation":"2125:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"2144:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:10","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"owner","nameLocation":"3032:5:10","nodeType":"VariableDeclaration","scope":1135,"src":"3024:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"spender","nameLocation":"3055:7:10","nodeType":"VariableDeclaration","scope":1135,"src":"3047:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"value","nameLocation":"3080:5:10","nodeType":"VariableDeclaration","scope":1135,"src":"3072:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:10","nodeType":"VariableDeclaration","scope":1135,"src":"3095:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"v","nameLocation":"3127:1:10","nodeType":"VariableDeclaration","scope":1135,"src":"3121:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1127,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"r","nameLocation":"3146:1:10","nodeType":"VariableDeclaration","scope":1135,"src":"3138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"s","nameLocation":"3165:1:10","nodeType":"VariableDeclaration","scope":1135,"src":"3157:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:10"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"3181:0:10"},"scope":1150,"src":"2999:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"3188:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:10","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"owner","nameLocation":"3511:5:10","nodeType":"VariableDeclaration","scope":1143,"src":"3503:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:10"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"3541:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:10"},"scope":1150,"src":"3487:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"3556:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1149,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:10","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"3767:2:10"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"3793:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:10"},"scope":1150,"src":"3742:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1151,"src":"2115:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3682:10"},"id":10},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2530],"ERC165":[4933],"ERC721":[2107],"ERC721Utils":[2500],"IERC165":[4945],"IERC721":[2224],"IERC721Errors":[294],"IERC721Metadata":[2396],"Strings":[4260]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1152,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":2225,"src":"133:38:11","symbolAliases":[{"foreign":{"id":1153,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"141:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":2397,"src":"172:65:11","symbolAliases":[{"foreign":{"id":1155,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"180:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":1158,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":2501,"src":"238:52:11","symbolAliases":[{"foreign":{"id":1157,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"246:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":2531,"src":"291:48:11","symbolAliases":[{"foreign":{"id":1159,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"299:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":4261,"src":"340:48:11","symbolAliases":[{"foreign":{"id":1161,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"348:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":4934,"src":"389:69:11","symbolAliases":[{"foreign":{"id":1163,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"397:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1164,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"406:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":342,"src":"459:66:11","symbolAliases":[{"foreign":{"id":1166,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"467:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1169,"name":"Context","nameLocations":["803:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"803:7:11"},"id":1170,"nodeType":"InheritanceSpecifier","src":"803:7:11"},{"baseName":{"id":1171,"name":"ERC165","nameLocations":["812:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4933,"src":"812:6:11"},"id":1172,"nodeType":"InheritanceSpecifier","src":"812:6:11"},{"baseName":{"id":1173,"name":"IERC721","nameLocations":["820:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2224,"src":"820:7:11"},"id":1174,"nodeType":"InheritanceSpecifier","src":"820:7:11"},{"baseName":{"id":1175,"name":"IERC721Metadata","nameLocations":["829:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2396,"src":"829:15:11"},"id":1176,"nodeType":"InheritanceSpecifier","src":"829:15:11"},{"baseName":{"id":1177,"name":"IERC721Errors","nameLocations":["846:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":294,"src":"846:13:11"},"id":1178,"nodeType":"InheritanceSpecifier","src":"846:13:11"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"527:247:11","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107,294,2396,2224,4933,4945,2530],"name":"ERC721","nameLocation":"793:6:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1181,"libraryName":{"id":1179,"name":"Strings","nameLocations":["872:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4260,"src":"872:7:11"},"nodeType":"UsingForDirective","src":"866:26:11","typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1183,"mutability":"mutable","name":"_name","nameLocation":"931:5:11","nodeType":"VariableDeclaration","scope":2107,"src":"916:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1182,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1185,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:11","nodeType":"VariableDeclaration","scope":2107,"src":"963:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1184,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1189,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:11","nodeType":"VariableDeclaration","scope":2107,"src":"992:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1188,"keyName":"tokenId","keyNameLocation":"1008:7:11","keyType":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1193,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:11","nodeType":"VariableDeclaration","scope":2107,"src":"1050:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1192,"keyName":"owner","keyNameLocation":"1066:5:11","keyType":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1197,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:11","nodeType":"VariableDeclaration","scope":2107,"src":"1108:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1196,"keyName":"tokenId","keyNameLocation":"1124:7:11","keyType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1203,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:11","nodeType":"VariableDeclaration","scope":2107,"src":"1174:86:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1202,"keyName":"owner","keyNameLocation":"1190:5:11","keyType":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1201,"keyName":"operator","keyNameLocation":"1215:8:11","keyType":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1219,"nodeType":"Block","src":"1436:57:11","statements":[{"expression":{"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1211,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"1446:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1212,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"1454:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1214,"nodeType":"ExpressionStatement","src":"1446:13:11"},{"expression":{"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1215,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"1469:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1216,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1479:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1218,"nodeType":"ExpressionStatement","src":"1469:17:11"}]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"1267:108:11","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1220,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"name_","nameLocation":"1406:5:11","nodeType":"VariableDeclaration","scope":1220,"src":"1392:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1205,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:11","nodeType":"VariableDeclaration","scope":1220,"src":"1413:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1207,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:11"},"returnParameters":{"id":1210,"nodeType":"ParameterList","parameters":[],"src":"1436:0:11"},"scope":2107,"src":"1380:113:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4932,4944],"body":{"id":1250,"nodeType":"Block","src":"1668:192:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1697:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1233,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1717:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2224_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2224_$","typeString":"type(contract IERC721)"}],"id":1232,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2224","typeString":"type(contract IERC721)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1753:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1239,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"1773:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2396_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2396_$","typeString":"type(contract IERC721Metadata)"}],"id":1238,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2396","typeString":"type(contract IERC721Metadata)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1246,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1841:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1244,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2107_$","typeString":"type(contract super ERC721)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4932,"src":"1817:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1230,"id":1249,"nodeType":"Return","src":"1678:175:11"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"1499:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:11","nodeType":"FunctionDefinition","overrides":{"id":1227,"nodeType":"OverrideSpecifier","overrides":[{"id":1225,"name":"ERC165","nameLocations":["1636:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4933,"src":"1636:6:11"},{"id":1226,"name":"IERC165","nameLocations":["1644:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4945,"src":"1644:7:11"}],"src":"1627:25:11"},"parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:11","nodeType":"VariableDeclaration","scope":1251,"src":"1587:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1222,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:11"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1251,"src":"1662:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1228,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:11"},"scope":2107,"src":"1560:300:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2149],"body":{"id":1278,"nodeType":"Block","src":"1991:136:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2005:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:11","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"nodeType":"IfStatement","src":"2001:87:11","trueBody":{"id":1272,"nodeType":"Block","src":"2026:62:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:11","typeDescriptions":{}}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1265,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2047:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1271,"nodeType":"RevertStatement","src":"2040:37:11"}]}},{"expression":{"baseExpression":{"id":1274,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"2104:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1276,"indexExpression":{"id":1275,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2114:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1258,"id":1277,"nodeType":"Return","src":"2097:23:11"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1866:48:11","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:11","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"owner","nameLocation":"1946:5:11","nodeType":"VariableDeclaration","scope":1279,"src":"1938:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:11"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"1982:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:11"},"scope":2107,"src":"1919:208:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2157],"body":{"id":1291,"nodeType":"Block","src":"2256:46:11","statements":[{"expression":{"arguments":[{"id":1288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2287:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1287,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2273:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1286,"id":1290,"nodeType":"Return","src":"2266:29:11"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"2133:46:11","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:11","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:11","nodeType":"VariableDeclaration","scope":1292,"src":"2201:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:11"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"2247:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:11"},"scope":2107,"src":"2184:118:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2381],"body":{"id":1300,"nodeType":"Block","src":"2424:29:11","statements":[{"expression":{"id":1298,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"2441:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1297,"id":1299,"nodeType":"Return","src":"2434:12:11"}]},"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"2308:51:11","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:11","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"2377:2:11"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1301,"src":"2409:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1295,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:11"},"scope":2107,"src":"2364:89:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2387],"body":{"id":1309,"nodeType":"Block","src":"2579:31:11","statements":[{"expression":{"id":1307,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2596:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1306,"id":1308,"nodeType":"Return","src":"2589:14:11"}]},"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"2459:53:11","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:11","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[],"src":"2532:2:11"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"2564:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1304,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:11"},"scope":2107,"src":"2517:93:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2395],"body":{"id":1345,"nodeType":"Block","src":"2755:176:11","statements":[{"expression":{"arguments":[{"id":1319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2779:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1318,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2765:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1321,"nodeType":"ExpressionStatement","src":"2765:22:11"},{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:11","nodeType":"VariableDeclaration","scope":1345,"src":"2798:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1322,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1324,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2822:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:11"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1329,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2855:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:11","typeDescriptions":{}}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:11","memberName":"length","nodeType":"MemberAccess","src":"2849:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:11","trueExpression":{"arguments":[{"id":1337,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2891:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1338,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2900:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"2900:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1334,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:11","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1317,"id":1344,"nodeType":"Return","src":"2842:82:11"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"2616:55:11","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:11","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:11","nodeType":"VariableDeclaration","scope":1346,"src":"2694:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:11"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1346,"src":"2740:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1315,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:11"},"scope":2107,"src":"2676:255:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1354,"nodeType":"Block","src":"3239:26:11","statements":[{"expression":{"hexValue":"","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1351,"id":1353,"nodeType":"Return","src":"3249:9:11"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"2937:231:11","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:11","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[],"src":"3190:2:11"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1355,"src":"3224:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1349,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:11"},"scope":2107,"src":"3173:92:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2197],"body":{"id":1370,"nodeType":"Block","src":"3383:52:11","statements":[{"expression":{"arguments":[{"id":1364,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"3402:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1365,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3406:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1366,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3415:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1974,2040],"referencedDeclaration":1974,"src":"3393:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"ExpressionStatement","src":"3393:35:11"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"3271:46:11","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1371,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:11","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"to","nameLocation":"3347:2:11","nodeType":"VariableDeclaration","scope":1371,"src":"3339:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:11","nodeType":"VariableDeclaration","scope":1371,"src":"3351:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:11"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"3383:0:11"},"scope":2107,"src":"3322:113:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2213],"body":{"id":1387,"nodeType":"Block","src":"3572:78:11","statements":[{"expression":{"arguments":[{"id":1380,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"3596:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1379,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"3582:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1382,"nodeType":"ExpressionStatement","src":"3582:22:11"},{"expression":{"arguments":[{"id":1384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"3635:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1383,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3622:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1378,"id":1386,"nodeType":"Return","src":"3615:28:11"}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"3441:50:11","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1388,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:11","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:11","nodeType":"VariableDeclaration","scope":1388,"src":"3517:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:11"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"3563:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:11"},"scope":2107,"src":"3496:154:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2205],"body":{"id":1403,"nodeType":"Block","src":"3792:69:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3821:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1399,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"3835:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1400,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"3845:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1396,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"3802:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1402,"nodeType":"ExpressionStatement","src":"3802:52:11"}]},"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"3656:56:11","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:11","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"operator","nameLocation":"3752:8:11","nodeType":"VariableDeclaration","scope":1404,"src":"3744:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"approved","nameLocation":"3767:8:11","nodeType":"VariableDeclaration","scope":1404,"src":"3762:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:11"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"3792:0:11"},"scope":2107,"src":"3717:144:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2223],"body":{"id":1420,"nodeType":"Block","src":"4021:59:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1414,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4038:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1416,"indexExpression":{"id":1415,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"4057:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1418,"indexExpression":{"id":1417,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"4064:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1413,"id":1419,"nodeType":"Return","src":"4031:42:11"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"3867:55:11","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:11","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"owner","nameLocation":"3961:5:11","nodeType":"VariableDeclaration","scope":1421,"src":"3953:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"operator","nameLocation":"3976:8:11","nodeType":"VariableDeclaration","scope":1421,"src":"3968:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:11"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"4015:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1411,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:11"},"scope":2107,"src":"3927:153:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2189],"body":{"id":1466,"nodeType":"Block","src":"4222:498:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4236:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:11","typeDescriptions":{}}},"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1445,"nodeType":"IfStatement","src":"4232:87:11","trueBody":{"id":1444,"nodeType":"Block","src":"4254:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:11","typeDescriptions":{}}},"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1437,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4275:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1443,"nodeType":"RevertStatement","src":"4268:40:11"}]}},{"assignments":[1447],"declarations":[{"constant":false,"id":1447,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:11","nodeType":"VariableDeclaration","scope":1466,"src":"4537:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1454,"initialValue":{"arguments":[{"id":1449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4569:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1450,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4573:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1451,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4582:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1448,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"4561:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1455,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4609:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1456,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4626:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1465,"nodeType":"IfStatement","src":"4605:109:11","trueBody":{"id":1464,"nodeType":"Block","src":"4632:82:11","statements":[{"errorCall":{"arguments":[{"id":1459,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4674:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4680:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1461,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4689:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1458,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4653:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1463,"nodeType":"RevertStatement","src":"4646:57:11"}]}}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"4086:51:11","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:11","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"from","nameLocation":"4172:4:11","nodeType":"VariableDeclaration","scope":1467,"src":"4164:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"to","nameLocation":"4186:2:11","nodeType":"VariableDeclaration","scope":1467,"src":"4178:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:11","nodeType":"VariableDeclaration","scope":1467,"src":"4190:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:11"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[],"src":"4222:0:11"},"scope":2107,"src":"4142:578:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2179],"body":{"id":1484,"nodeType":"Block","src":"4862:56:11","statements":[{"expression":{"arguments":[{"id":1478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"4889:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"4895:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1480,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"4899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1477,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1485,1515],"referencedDeclaration":1515,"src":"4872:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"ExpressionStatement","src":"4872:39:11"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"4726:55:11","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:11","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"from","nameLocation":"4820:4:11","nodeType":"VariableDeclaration","scope":1485,"src":"4812:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"to","nameLocation":"4834:2:11","nodeType":"VariableDeclaration","scope":1485,"src":"4826:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:11","nodeType":"VariableDeclaration","scope":1485,"src":"4838:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:11"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"4862:0:11"},"scope":2107,"src":"4786:132:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2169],"body":{"id":1514,"nodeType":"Block","src":"5087:130:11","statements":[{"expression":{"arguments":[{"id":1498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"5110:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"5116:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"5120:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1497,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5097:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"5097:31:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1506,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5172:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1508,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"5186:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"5192:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"5196:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1511,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"5205:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1503,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5138:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2500_$","typeString":"type(library ERC721Utils)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"5138:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1513,"nodeType":"ExpressionStatement","src":"5138:72:11"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"4924:55:11","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1515,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:11","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"from","nameLocation":"5018:4:11","nodeType":"VariableDeclaration","scope":1515,"src":"5010:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"to","nameLocation":"5032:2:11","nodeType":"VariableDeclaration","scope":1515,"src":"5024:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:11","nodeType":"VariableDeclaration","scope":1515,"src":"5036:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"data","nameLocation":"5066:4:11","nodeType":"VariableDeclaration","scope":1515,"src":"5053:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1493,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:11"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"5087:0:11"},"scope":2107,"src":"4984:233:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1527,"nodeType":"Block","src":"5807:40:11","statements":[{"expression":{"baseExpression":{"id":1523,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"5824:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1525,"indexExpression":{"id":1524,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"5832:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1522,"id":1526,"nodeType":"Return","src":"5817:23:11"}]},"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"5223:504:11","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:11","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:11","nodeType":"VariableDeclaration","scope":1528,"src":"5750:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:11"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1528,"src":"5798:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:11"},"scope":2107,"src":"5732:115:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1540,"nodeType":"Block","src":"6042:48:11","statements":[{"expression":{"baseExpression":{"id":1536,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6059:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1538,"indexExpression":{"id":1537,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"6075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1535,"id":1539,"nodeType":"Return","src":"6052:31:11"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"5853:105:11","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:11","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:11","nodeType":"VariableDeclaration","scope":1541,"src":"5985:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:11"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"6033:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:11"},"scope":2107,"src":"5963:127:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"6510:163:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6539:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:11","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6577:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1560,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6586:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1563,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6614:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1564,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6621:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1562,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"6597:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1568,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"6646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"6633:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1570,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6658:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1552,"id":1575,"nodeType":"Return","src":"6520:146:11"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"6096:300:11","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:11","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"owner","nameLocation":"6432:5:11","nodeType":"VariableDeclaration","scope":1577,"src":"6424:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"spender","nameLocation":"6447:7:11","nodeType":"VariableDeclaration","scope":1577,"src":"6439:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:11","nodeType":"VariableDeclaration","scope":1577,"src":"6456:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:11"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1577,"src":"6504:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:11"},"scope":2107,"src":"6401:272:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1613,"nodeType":"Block","src":"7202:271:11","statements":[{"condition":{"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:11","subExpression":{"arguments":[{"id":1588,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"7231:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"7238:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1590,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1587,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"7217:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1612,"nodeType":"IfStatement","src":"7212:255:11","trueBody":{"id":1611,"nodeType":"Block","src":"7257:210:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1593,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"7275:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:11","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1609,"nodeType":"Block","src":"7373:84:11","statements":[{"errorCall":{"arguments":[{"id":1605,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"7425:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1606,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7434:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7398:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1608,"nodeType":"RevertStatement","src":"7391:51:11"}]},"id":1610,"nodeType":"IfStatement","src":"7271:186:11","trueBody":{"id":1603,"nodeType":"Block","src":"7296:71:11","statements":[{"errorCall":{"arguments":[{"id":1600,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"7321:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1602,"nodeType":"RevertStatement","src":"7314:38:11"}]}}]}}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"6679:421:11","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:11","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"owner","nameLocation":"7139:5:11","nodeType":"VariableDeclaration","scope":1614,"src":"7131:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"spender","nameLocation":"7154:7:11","nodeType":"VariableDeclaration","scope":1614,"src":"7146:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:11","nodeType":"VariableDeclaration","scope":1614,"src":"7163:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:11"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"7202:0:11"},"scope":2107,"src":"7105:368:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"8190:78:11","statements":[{"id":1628,"nodeType":"UncheckedBlock","src":"8200:62:11","statements":[{"expression":{"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1622,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"8224:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1624,"indexExpression":{"id":1623,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"8234:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"8246:5:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1627,"nodeType":"ExpressionStatement","src":"8224:27:11"}]}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"7479:631:11","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:11","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"account","nameLocation":"8149:7:11","nodeType":"VariableDeclaration","scope":1630,"src":"8141:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"value","nameLocation":"8166:5:11","nodeType":"VariableDeclaration","scope":1630,"src":"8158:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1618,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:11"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"8190:0:11"},"scope":2107,"src":"8115:153:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1719,"nodeType":"Block","src":"8956:700:11","statements":[{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"from","nameLocation":"8974:4:11","nodeType":"VariableDeclaration","scope":1719,"src":"8966:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1647,"initialValue":{"arguments":[{"id":1645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1644,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"8981:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"9058:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:11","typeDescriptions":{}}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"9054:86:11","trueBody":{"id":1660,"nodeType":"Block","src":"9078:62:11","statements":[{"expression":{"arguments":[{"id":1655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9109:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"9115:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1657,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9121:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1654,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"9092:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"9092:37:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9184:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:11","typeDescriptions":{}}},"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1689,"nodeType":"IfStatement","src":"9180:256:11","trueBody":{"id":1688,"nodeType":"Block","src":"9204:232:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:11","typeDescriptions":{}}},"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:11","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1668,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1974,2040],"referencedDeclaration":2040,"src":"9300:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"9300:48:11"},{"id":1687,"nodeType":"UncheckedBlock","src":"9363:63:11","statements":[{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"9391:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1683,"indexExpression":{"id":1682,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9401:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"nodeType":"ExpressionStatement","src":"9391:20:11"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"9450:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:11","typeDescriptions":{}}},"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1704,"nodeType":"IfStatement","src":"9446:107:11","trueBody":{"id":1703,"nodeType":"Block","src":"9468:85:11","statements":[{"id":1702,"nodeType":"UncheckedBlock","src":"9482:61:11","statements":[{"expression":{"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1696,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"9510:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1698,"indexExpression":{"id":1697,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"9520:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1701,"nodeType":"ExpressionStatement","src":"9510:18:11"}]}]}},{"expression":{"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1705,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9563:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1707,"indexExpression":{"id":1706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9571:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1708,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"9582:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1710,"nodeType":"ExpressionStatement","src":"9563:21:11"},{"eventCall":{"arguments":[{"id":1712,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9609:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1713,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"9615:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9619:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"9600:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"EmitStatement","src":"9595:32:11"},{"expression":{"id":1717,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9645:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1641,"id":1718,"nodeType":"Return","src":"9638:11:11"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"8274:582:11","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:11","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"to","nameLocation":"8886:2:11","nodeType":"VariableDeclaration","scope":1720,"src":"8878:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:11","nodeType":"VariableDeclaration","scope":1720,"src":"8890:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"auth","nameLocation":"8915:4:11","nodeType":"VariableDeclaration","scope":1720,"src":"8907:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:11"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1720,"src":"8947:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:11"},"scope":2107,"src":"8861:795:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1769,"nodeType":"Block","src":"10031:274:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1728,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10045:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:11","typeDescriptions":{}}},"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"10041:87:11","trueBody":{"id":1741,"nodeType":"Block","src":"10063:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:11","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1734,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"10084:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1740,"nodeType":"RevertStatement","src":"10077:40:11"}]}},{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:11","nodeType":"VariableDeclaration","scope":1769,"src":"10137:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1753,"initialValue":{"arguments":[{"id":1746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10169:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"10173:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:11","typeDescriptions":{}}},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1745,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"10161:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"10207:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:11","typeDescriptions":{}}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1768,"nodeType":"IfStatement","src":"10203:96:11","trueBody":{"id":1767,"nodeType":"Block","src":"10236:63:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:11","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1760,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"10257:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1766,"nodeType":"RevertStatement","src":"10250:38:11"}]}}]},"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"9662:311:11","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:11","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"to","nameLocation":"10001:2:11","nodeType":"VariableDeclaration","scope":1770,"src":"9993:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:11","nodeType":"VariableDeclaration","scope":1770,"src":"10005:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:11"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[],"src":"10031:0:11"},"scope":2107,"src":"9978:327:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1784,"nodeType":"Block","src":"10713:43:11","statements":[{"expression":{"arguments":[{"id":1779,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"10733:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1780,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"10737:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1778,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1785,1815],"referencedDeclaration":1815,"src":"10723:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1783,"nodeType":"ExpressionStatement","src":"10723:26:11"}]},"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"10311:340:11","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:11","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"to","nameLocation":"10683:2:11","nodeType":"VariableDeclaration","scope":1785,"src":"10675:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:11","nodeType":"VariableDeclaration","scope":1785,"src":"10687:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:11"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"10713:0:11"},"scope":2107,"src":"10656:100:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1814,"nodeType":"Block","src":"11061:123:11","statements":[{"expression":{"arguments":[{"id":1796,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"11077:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"11081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1795,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"11071:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1799,"nodeType":"ExpressionStatement","src":"11071:18:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1803,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"11133:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:11","typeDescriptions":{}}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"11159:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1810,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"11163:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1811,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"11172:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1800,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"11099:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2500_$","typeString":"type(library ERC721Utils)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"11099:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1813,"nodeType":"ExpressionStatement","src":"11099:78:11"}]},"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"10762:210:11","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1815,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:11","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"to","nameLocation":"11004:2:11","nodeType":"VariableDeclaration","scope":1815,"src":"10996:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:11","nodeType":"VariableDeclaration","scope":1815,"src":"11008:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"data","nameLocation":"11038:4:11","nodeType":"VariableDeclaration","scope":1815,"src":"11025:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1791,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:11"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[],"src":"11061:0:11"},"scope":2107,"src":"10977:207:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1847,"nodeType":"Block","src":"11551:186:11","statements":[{"assignments":[1822],"declarations":[{"constant":false,"id":1822,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:11","nodeType":"VariableDeclaration","scope":1847,"src":"11561:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1834,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:11","typeDescriptions":{}}},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"11605:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:11","typeDescriptions":{}}},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1823,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"11585:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"11639:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:11","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1846,"nodeType":"IfStatement","src":"11635:96:11","trueBody":{"id":1845,"nodeType":"Block","src":"11668:63:11","statements":[{"errorCall":{"arguments":[{"id":1842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"11712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1841,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"11689:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1844,"nodeType":"RevertStatement","src":"11682:38:11"}]}}]},"documentation":{"id":1816,"nodeType":"StructuredDocumentation","src":"11190:315:11","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1848,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:11","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:11","nodeType":"VariableDeclaration","scope":1848,"src":"11525:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:11"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"11551:0:11"},"scope":2107,"src":"11510:227:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"12132:389:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"12146:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:11","typeDescriptions":{}}},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"IfStatement","src":"12142:87:11","trueBody":{"id":1871,"nodeType":"Block","src":"12164:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:11","typeDescriptions":{}}},"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1864,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"12185:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1870,"nodeType":"RevertStatement","src":"12178:40:11"}]}},{"assignments":[1874],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:11","nodeType":"VariableDeclaration","scope":1907,"src":"12238:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1883,"initialValue":{"arguments":[{"id":1876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"12270:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1877,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"12274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:11","typeDescriptions":{}}},"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1875,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"12262:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1884,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12308:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:11","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12410:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"12427:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1905,"nodeType":"IfStatement","src":"12406:109:11","trueBody":{"id":1904,"nodeType":"Block","src":"12433:82:11","statements":[{"errorCall":{"arguments":[{"id":1899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"12475:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1900,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"12481:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1901,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12490:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1898,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"12454:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1903,"nodeType":"RevertStatement","src":"12447:57:11"}]}},"id":1906,"nodeType":"IfStatement","src":"12304:211:11","trueBody":{"id":1894,"nodeType":"Block","src":"12337:63:11","statements":[{"errorCall":{"arguments":[{"id":1891,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"12381:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1890,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"12358:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1893,"nodeType":"RevertStatement","src":"12351:38:11"}]}}]},"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"11743:313:11","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:11","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"from","nameLocation":"12088:4:11","nodeType":"VariableDeclaration","scope":1908,"src":"12080:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"to","nameLocation":"12102:2:11","nodeType":"VariableDeclaration","scope":1908,"src":"12094:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:11","nodeType":"VariableDeclaration","scope":1908,"src":"12106:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:11"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"12132:0:11"},"scope":2107,"src":"12061:460:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1925,"nodeType":"Block","src":"13530:53:11","statements":[{"expression":{"arguments":[{"id":1919,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"13554:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1920,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"13560:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"13564:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1918,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1926,1956],"referencedDeclaration":1956,"src":"13540:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1924,"nodeType":"ExpressionStatement","src":"13540:36:11"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"12527:923:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:11","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"from","nameLocation":"13486:4:11","nodeType":"VariableDeclaration","scope":1926,"src":"13478:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"to","nameLocation":"13500:2:11","nodeType":"VariableDeclaration","scope":1926,"src":"13492:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"13504:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:11"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[],"src":"13530:0:11"},"scope":2107,"src":"13455:128:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"13922:127:11","statements":[{"expression":{"arguments":[{"id":1939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"13942:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1940,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"13948:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1941,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"13952:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1938,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"13932:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1943,"nodeType":"ExpressionStatement","src":"13932:28:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1947,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"14004:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1949,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"14018:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"14024:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1951,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"14028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1952,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"14037:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1944,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13970:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2500_$","typeString":"type(library ERC721Utils)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"13970:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1954,"nodeType":"ExpressionStatement","src":"13970:72:11"}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"13589:226:11","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:11","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"from","nameLocation":"13851:4:11","nodeType":"VariableDeclaration","scope":1956,"src":"13843:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"to","nameLocation":"13865:2:11","nodeType":"VariableDeclaration","scope":1956,"src":"13857:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:11","nodeType":"VariableDeclaration","scope":1956,"src":"13869:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"data","nameLocation":"13899:4:11","nodeType":"VariableDeclaration","scope":1956,"src":"13886:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1934,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:11"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"13922:0:11"},"scope":2107,"src":"13820:229:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1973,"nodeType":"Block","src":"14562:50:11","statements":[{"expression":{"arguments":[{"id":1967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"14581:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"14585:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1969,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"14594:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1966,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1974,2040],"referencedDeclaration":2040,"src":"14572:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"ExpressionStatement","src":"14572:33:11"}]},"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"14055:432:11","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1974,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:11","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"to","nameLocation":"14518:2:11","nodeType":"VariableDeclaration","scope":1974,"src":"14510:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:11","nodeType":"VariableDeclaration","scope":1974,"src":"14522:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"auth","nameLocation":"14547:4:11","nodeType":"VariableDeclaration","scope":1974,"src":"14539:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:11"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"14562:0:11"},"scope":2107,"src":"14492:120:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2039,"nodeType":"Block","src":"14888:568:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"14954:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"14967:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1988,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:11","typeDescriptions":{}}},"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2032,"nodeType":"IfStatement","src":"14950:460:11","trueBody":{"id":2031,"nodeType":"Block","src":"14987:423:11","statements":[{"assignments":[1995],"declarations":[{"constant":false,"id":1995,"mutability":"mutable","name":"owner","nameLocation":"15009:5:11","nodeType":"VariableDeclaration","scope":2031,"src":"15001:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1999,"initialValue":{"arguments":[{"id":1997,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"15031:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1996,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"15017:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"15167:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:11","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"15189:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2007,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"15198:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:11","subExpression":{"arguments":[{"id":2011,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"15224:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2012,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"15231:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2010,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"15207:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"15163:142:11","trueBody":{"id":2020,"nodeType":"Block","src":"15238:67:11","statements":[{"errorCall":{"arguments":[{"id":2017,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"15285:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2016,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"15263:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2019,"nodeType":"RevertStatement","src":"15256:34:11"}]}},{"condition":{"id":2022,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"15323:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2030,"nodeType":"IfStatement","src":"15319:81:11","trueBody":{"id":2029,"nodeType":"Block","src":"15334:66:11","statements":[{"eventCall":{"arguments":[{"id":2024,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"15366:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"15373:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2026,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"15377:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2023,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"15357:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"EmitStatement","src":"15352:33:11"}]}}]}},{"expression":{"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2033,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"15420:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2035,"indexExpression":{"id":2034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"15436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2036,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"15447:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2038,"nodeType":"ExpressionStatement","src":"15420:29:11"}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"14618:171:11","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2040,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:11","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"to","nameLocation":"14820:2:11","nodeType":"VariableDeclaration","scope":2040,"src":"14812:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:11","nodeType":"VariableDeclaration","scope":2040,"src":"14824:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1981,"mutability":"mutable","name":"auth","nameLocation":"14849:4:11","nodeType":"VariableDeclaration","scope":2040,"src":"14841:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:11","nodeType":"VariableDeclaration","scope":2040,"src":"14855:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1982,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:11"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[],"src":"14888:0:11"},"scope":2107,"src":"14794:662:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2076,"nodeType":"Block","src":"15758:219:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"15772:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:11","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"15768:91:11","trueBody":{"id":2060,"nodeType":"Block","src":"15796:63:11","statements":[{"errorCall":{"arguments":[{"id":2057,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"15839:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2056,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"15817:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2059,"nodeType":"RevertStatement","src":"15810:38:11"}]}},{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2062,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"15868:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2065,"indexExpression":{"id":2063,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"15887:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2066,"indexExpression":{"id":2064,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"15894:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2067,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"15906:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"ExpressionStatement","src":"15868:46:11"},{"eventCall":{"arguments":[{"id":2071,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"15944:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2072,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"15951:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2073,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"15961:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2070,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"15929:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2075,"nodeType":"EmitStatement","src":"15924:46:11"}]},"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"15462:198:11","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2077,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:11","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"owner","nameLocation":"15701:5:11","nodeType":"VariableDeclaration","scope":2077,"src":"15693:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"operator","nameLocation":"15716:8:11","nodeType":"VariableDeclaration","scope":2077,"src":"15708:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"approved","nameLocation":"15731:8:11","nodeType":"VariableDeclaration","scope":2077,"src":"15726:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2046,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:11"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[],"src":"15758:0:11"},"scope":2107,"src":"15665:312:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"16284:169:11","statements":[{"assignments":[2086],"declarations":[{"constant":false,"id":2086,"mutability":"mutable","name":"owner","nameLocation":"16302:5:11","nodeType":"VariableDeclaration","scope":2105,"src":"16294:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2090,"initialValue":{"arguments":[{"id":2088,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"16319:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2087,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"16310:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"16341:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:11","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"16337:88:11","trueBody":{"id":2101,"nodeType":"Block","src":"16362:63:11","statements":[{"errorCall":{"arguments":[{"id":2098,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"16406:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2097,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"16383:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2100,"nodeType":"RevertStatement","src":"16376:38:11"}]}},{"expression":{"id":2103,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"16441:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2084,"id":2104,"nodeType":"Return","src":"16434:12:11"}]},"documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"15983:224:11","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:11","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:11","nodeType":"VariableDeclaration","scope":2106,"src":"16235:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2079,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:11"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"16275:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:11"},"scope":2107,"src":"16212:241:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2108,"src":"775:15680:11","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[2123,2132,2141]}],"src":"107:16349:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4945],"IERC721":[2224]},"id":2225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2225,"sourceUnit":4946,"src":"134:62:12","symbolAliases":[{"foreign":{"id":2110,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"142:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2113,"name":"IERC165","nameLocations":["288:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4945,"src":"288:7:12"},"id":2114,"nodeType":"InheritanceSpecifier","src":"288:7:12"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"198:68:12","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2224,"linearizedBaseContracts":[2224,4945],"name":"IERC721","nameLocation":"277:7:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"302:88:12","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2123,"name":"Transfer","nameLocation":"401:8:12","nodeType":"EventDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:12","nodeType":"VariableDeclaration","scope":2123,"src":"410:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2119,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:12","nodeType":"VariableDeclaration","scope":2123,"src":"432:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2121,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:12","nodeType":"VariableDeclaration","scope":2123,"src":"452:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:12"},"src":"395:82:12"},{"anonymous":false,"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"483:94:12","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2132,"name":"Approval","nameLocation":"588:8:12","nodeType":"EventDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:12","nodeType":"VariableDeclaration","scope":2132,"src":"597:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2128,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:12","nodeType":"VariableDeclaration","scope":2132,"src":"620:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2130,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:12","nodeType":"VariableDeclaration","scope":2132,"src":"646:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:12"},"src":"582:89:12"},{"anonymous":false,"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"677:117:12","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2141,"name":"ApprovalForAll","nameLocation":"805:14:12","nodeType":"EventDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:12","nodeType":"VariableDeclaration","scope":2141,"src":"820:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2137,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:12","nodeType":"VariableDeclaration","scope":2141,"src":"843:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2139,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:12","nodeType":"VariableDeclaration","scope":2141,"src":"869:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2138,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:12"},"src":"799:85:12"},{"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"890:76:12","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2149,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:12","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"owner","nameLocation":"998:5:12","nodeType":"VariableDeclaration","scope":2149,"src":"990:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:12"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"balance","nameLocation":"1036:7:12","nodeType":"VariableDeclaration","scope":2149,"src":"1028:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:12"},"scope":2224,"src":"971:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"1051:131:12","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2157,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:12","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:12","nodeType":"VariableDeclaration","scope":2157,"src":"1204:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:12"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"owner","nameLocation":"1252:5:12","nodeType":"VariableDeclaration","scope":2157,"src":"1244:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:12"},"scope":2224,"src":"1187:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"1265:565:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2169,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:12","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"from","nameLocation":"1869:4:12","nodeType":"VariableDeclaration","scope":2169,"src":"1861:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"to","nameLocation":"1883:2:12","nodeType":"VariableDeclaration","scope":2169,"src":"1875:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:12","nodeType":"VariableDeclaration","scope":2169,"src":"1887:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"data","nameLocation":"1919:4:12","nodeType":"VariableDeclaration","scope":2169,"src":"1904:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2165,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:12"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[],"src":"1933:0:12"},"scope":2224,"src":"1835:99:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"1940:706:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2179,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:12","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"from","nameLocation":"2685:4:12","nodeType":"VariableDeclaration","scope":2179,"src":"2677:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"to","nameLocation":"2699:2:12","nodeType":"VariableDeclaration","scope":2179,"src":"2691:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:12","nodeType":"VariableDeclaration","scope":2179,"src":"2703:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:12"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[],"src":"2728:0:12"},"scope":2224,"src":"2651:78:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"2735:733:12","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:12","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"from","nameLocation":"3503:4:12","nodeType":"VariableDeclaration","scope":2189,"src":"3495:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"to","nameLocation":"3517:2:12","nodeType":"VariableDeclaration","scope":2189,"src":"3509:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:12","nodeType":"VariableDeclaration","scope":2189,"src":"3521:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:12"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[],"src":"3546:0:12"},"scope":2224,"src":"3473:74:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"3553:452:12","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2197,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:12","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"to","nameLocation":"4035:2:12","nodeType":"VariableDeclaration","scope":2197,"src":"4027:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:12","nodeType":"VariableDeclaration","scope":2197,"src":"4039:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:12"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[],"src":"4064:0:12"},"scope":2224,"src":"4010:55:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"4071:315:12","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2205,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:12","nodeType":"FunctionDefinition","parameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"operator","nameLocation":"4426:8:12","nodeType":"VariableDeclaration","scope":2205,"src":"4418:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"approved","nameLocation":"4441:8:12","nodeType":"VariableDeclaration","scope":2205,"src":"4436:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2201,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:12"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[],"src":"4459:0:12"},"scope":2224,"src":"4391:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"4466:139:12","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2213,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:12","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:12","nodeType":"VariableDeclaration","scope":2213,"src":"4631:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:12"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"operator","nameLocation":"4679:8:12","nodeType":"VariableDeclaration","scope":2213,"src":"4671:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:12"},"scope":2224,"src":"4610:79:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"4695:138:12","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2223,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:12","nodeType":"FunctionDefinition","parameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"owner","nameLocation":"4872:5:12","nodeType":"VariableDeclaration","scope":2223,"src":"4864:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"operator","nameLocation":"4887:8:12","nodeType":"VariableDeclaration","scope":2223,"src":"4879:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:12"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2223,"src":"4920:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2220,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:12"},"scope":2224,"src":"4838:88:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2225,"src":"267:4661:12","usedErrors":[],"usedEvents":[2123,2132,2141]}],"src":"108:4821:12"},"id":12},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2242]},"id":2243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2226,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"142:154:13","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2242,"linearizedBaseContracts":[2242],"name":"IERC721Receiver","nameLocation":"307:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"329:500:13","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2241,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:13","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"operator","nameLocation":"877:8:13","nodeType":"VariableDeclaration","scope":2241,"src":"869:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"from","nameLocation":"903:4:13","nodeType":"VariableDeclaration","scope":2241,"src":"895:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:13","nodeType":"VariableDeclaration","scope":2241,"src":"917:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"data","nameLocation":"957:4:13","nodeType":"VariableDeclaration","scope":2241,"src":"942:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2235,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:13"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2241,"src":"986:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2238,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:13"},"scope":2242,"src":"834:160:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2243,"src":"297:699:13","usedErrors":[],"usedEvents":[]}],"src":"116:881:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[2107],"ERC721URIStorage":[2368],"IERC165":[4945],"IERC4906":[175],"Strings":[4260]},"id":2369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":2108,"src":"154:37:14","symbolAliases":[{"foreign":{"id":2245,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"162:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":2248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":4261,"src":"192:51:14","symbolAliases":[{"foreign":{"id":2247,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"200:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":176,"src":"244:58:14","symbolAliases":[{"foreign":{"id":2249,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"252:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":2252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":152,"src":"303:56:14","symbolAliases":[{"foreign":{"id":2251,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"311:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2254,"name":"IERC4906","nameLocations":["470:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"470:8:14"},"id":2255,"nodeType":"InheritanceSpecifier","src":"470:8:14"},{"baseName":{"id":2256,"name":"ERC721","nameLocations":["480:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"480:6:14"},"id":2257,"nodeType":"InheritanceSpecifier","src":"480:6:14"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"361:70:14","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":2368,"linearizedBaseContracts":[2368,2107,294,2396,175,2224,4933,4945,2530],"name":"ERC721URIStorage","nameLocation":"450:16:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2260,"libraryName":{"id":2258,"name":"Strings","nameLocations":["499:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":4260,"src":"499:7:14"},"nodeType":"UsingForDirective","src":"493:26:14","typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2266,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:14","nodeType":"VariableDeclaration","scope":2368,"src":"707:65:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2261,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:14","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2262,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:14","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":2270,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:14","nodeType":"VariableDeclaration","scope":2368,"src":"818:53:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2269,"keyName":"tokenId","keyNameLocation":"834:7:14","keyType":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2268,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1251,4944],"body":{"id":2290,"nodeType":"Block","src":"1046:99:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1063:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2282,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"1078:20:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2286,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1126:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2284,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2368_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:14","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"1102:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2280,"id":2289,"nodeType":"Return","src":"1056:82:14"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"878:55:14","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2291,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:14","nodeType":"FunctionDefinition","overrides":{"id":2277,"nodeType":"OverrideSpecifier","overrides":[{"id":2275,"name":"ERC721","nameLocations":["1014:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1014:6:14"},{"id":2276,"name":"IERC165","nameLocations":["1022:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":4945,"src":"1022:7:14"}],"src":"1005:25:14"},"parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:14","nodeType":"VariableDeclaration","scope":2291,"src":"965:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2272,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:14"},"returnParameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"1040:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2278,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:14"},"scope":2368,"src":"938:207:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1346],"body":{"id":2347,"nodeType":"Block","src":"1299:505:14","statements":[{"expression":{"arguments":[{"id":2301,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"1323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2300,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1309:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2303,"nodeType":"ExpressionStatement","src":"1309:22:14"},{"assignments":[2305],"declarations":[{"constant":false,"id":2305,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:14","nodeType":"VariableDeclaration","scope":2347,"src":"1342:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2304,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2309,"initialValue":{"baseExpression":{"id":2306,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1368:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2308,"indexExpression":{"id":2307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"1379:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:14"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"base","nameLocation":"1411:4:14","nodeType":"VariableDeclaration","scope":2347,"src":"1397:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2310,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2314,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2312,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"1418:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2317,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"1507:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2315,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:14","typeDescriptions":{}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:14","memberName":"length","nodeType":"MemberAccess","src":"1501:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2325,"nodeType":"IfStatement","src":"1497:70:14","trueBody":{"id":2324,"nodeType":"Block","src":"1526:41:14","statements":[{"expression":{"id":2322,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1547:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2299,"id":2323,"nodeType":"Return","src":"1540:16:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2328,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1672:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2326,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:14","typeDescriptions":{}}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:14","memberName":"length","nodeType":"MemberAccess","src":"1666:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2341,"nodeType":"IfStatement","src":"1662:95:14","trueBody":{"id":2340,"nodeType":"Block","src":"1695:62:14","statements":[{"expression":{"arguments":[{"id":2336,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"1730:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2337,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1736:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2333,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:14","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:14","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2299,"id":2339,"nodeType":"Return","src":"1709:37:14"}]}},{"expression":{"arguments":[{"id":2344,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"1789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2342,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2368_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:14","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"1774:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2299,"id":2346,"nodeType":"Return","src":"1767:30:14"}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"1151:55:14","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:14","nodeType":"FunctionDefinition","overrides":{"id":2296,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:14"},"parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:14","nodeType":"VariableDeclaration","scope":2348,"src":"1229:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:14"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2348,"src":"1284:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2297,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:14"},"scope":2368,"src":"1211:593:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2366,"nodeType":"Block","src":"2004:86:14","statements":[{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2356,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2014:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2358,"indexExpression":{"id":2357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"2025:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2359,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2036:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2361,"nodeType":"ExpressionStatement","src":"2014:31:14"},{"eventCall":{"arguments":[{"id":2363,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"2075:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2362,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2060:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2365,"nodeType":"EmitStatement","src":"2055:28:14"}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"1810:108:14","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:14","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:14","nodeType":"VariableDeclaration","scope":2367,"src":"1945:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:14","nodeType":"VariableDeclaration","scope":2367,"src":"1962:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2352,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:14"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"2004:0:14"},"scope":2368,"src":"1923:167:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2369,"src":"432:1660:14","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[167,174,2123,2132,2141]}],"src":"128:1965:14"},"id":14},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2224],"IERC721Metadata":[2396]},"id":2397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2370,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":2225,"src":"153:39:15","symbolAliases":[{"foreign":{"id":2371,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"161:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2374,"name":"IERC721","nameLocations":["357:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2224,"src":"357:7:15"},"id":2375,"nodeType":"InheritanceSpecifier","src":"357:7:15"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"194:133:15","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2396,"linearizedBaseContracts":[2396,2224,4945],"name":"IERC721Metadata","nameLocation":"338:15:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"371:58:15","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2381,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:15","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[],"src":"447:2:15"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"473:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2378,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:15"},"scope":2396,"src":"434:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"494:60:15","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2387,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:15","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"574:2:15"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2387,"src":"600:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2384,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:15"},"scope":2396,"src":"559:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"621:90:15","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2395,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:15","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:15","nodeType":"VariableDeclaration","scope":2395,"src":"734:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:15"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"774:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2392,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:15"},"scope":2396,"src":"716:73:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2397,"src":"328:463:15","usedErrors":[],"usedEvents":[2123,2132,2141]}],"src":"127:665:15"},"id":15},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","exportedSymbols":{"ERC721Holder":[2423],"IERC721Receiver":[2242]},"id":2424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2398,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"119:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2424,"sourceUnit":2243,"src":"145:55:16","symbolAliases":[{"foreign":{"id":2399,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"153:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2402,"name":"IERC721Receiver","nameLocations":["475:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":2242,"src":"475:15:16"},"id":2403,"nodeType":"InheritanceSpecifier","src":"475:15:16"}],"canonicalName":"ERC721Holder","contractDependencies":[],"contractKind":"contract","documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"202:238:16","text":" @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n {IERC721-setApprovalForAll}."},"fullyImplemented":true,"id":2423,"linearizedBaseContracts":[2423,2242],"name":"ERC721Holder","nameLocation":"459:12:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2241],"body":{"id":2421,"nodeType":"Block","src":"738:54:16","statements":[{"expression":{"expression":{"expression":{"id":2417,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"755:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Holder_$2423","typeString":"contract ERC721Holder"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"760:16:16","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2422,"src":"755:21:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"777:8:16","memberName":"selector","nodeType":"MemberAccess","src":"755:30:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2416,"id":2420,"nodeType":"Return","src":"748:37:16"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"497:137:16","text":" @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"648:16:16","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"665:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"674:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"683:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"692:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2411,"name":"bytes","nodeType":"ElementaryTypeName","src":"692:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"664:41:16"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"730:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2414,"name":"bytes4","nodeType":"ElementaryTypeName","src":"730:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"729:8:16"},"scope":2423,"src":"639:153:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2424,"src":"441:353:16","usedErrors":[],"usedEvents":[]}],"src":"119:676:16"},"id":16},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2500],"IERC721Errors":[294],"IERC721Receiver":[2242]},"id":2501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2425,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2427,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":2243,"src":"144:55:17","symbolAliases":[{"foreign":{"id":2426,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"152:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":342,"src":"200:69:17","symbolAliases":[{"foreign":{"id":2428,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"208:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"271:159:17","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2500,"linearizedBaseContracts":[2500],"name":"ERC721Utils","nameLocation":"439:11:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2498,"nodeType":"Block","src":"1151:758:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2444,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1165:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:17","memberName":"code","nodeType":"MemberAccess","src":"1165:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:17","memberName":"length","nodeType":"MemberAccess","src":"1165:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2497,"nodeType":"IfStatement","src":"1161:742:17","trueBody":{"id":2496,"nodeType":"Block","src":"1185:718:17","statements":[{"clauses":[{"block":{"id":2474,"nodeType":"Block","src":"1295:214:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"1317:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2462,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1327:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2242_$","typeString":"type(contract IERC721Receiver)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2241,"src":"1327:32:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:17","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2473,"nodeType":"IfStatement","src":"1313:182:17","trueBody":{"id":2472,"nodeType":"Block","src":"1370:125:17","statements":[{"errorCall":{"arguments":[{"id":2469,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1473:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2466,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1437:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$294_$","typeString":"type(contract IERC721Errors)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:17","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":276,"src":"1437:35:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2471,"nodeType":"RevertStatement","src":"1430:46:17"}]}}]},"errorName":"","id":2475,"nodeType":"TryCatchClause","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"retval","nameLocation":"1287:6:17","nodeType":"VariableDeclaration","scope":2475,"src":"1280:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2458,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:17"},"src":"1271:238:17"},{"block":{"id":2493,"nodeType":"Block","src":"1538:355:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2479,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1560:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:17","memberName":"length","nodeType":"MemberAccess","src":"1560:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2491,"nodeType":"Block","src":"1728:151:17","statements":[{"AST":{"nativeSrc":"1775:86:17","nodeType":"YulBlock","src":"1775:86:17","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:17","nodeType":"YulLiteral","src":"1812:2:17","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:17","nodeType":"YulIdentifier","src":"1816:6:17"}],"functionName":{"name":"add","nativeSrc":"1808:3:17","nodeType":"YulIdentifier","src":"1808:3:17"},"nativeSrc":"1808:15:17","nodeType":"YulFunctionCall","src":"1808:15:17"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:17","nodeType":"YulIdentifier","src":"1831:6:17"}],"functionName":{"name":"mload","nativeSrc":"1825:5:17","nodeType":"YulIdentifier","src":"1825:5:17"},"nativeSrc":"1825:13:17","nodeType":"YulFunctionCall","src":"1825:13:17"}],"functionName":{"name":"revert","nativeSrc":"1801:6:17","nodeType":"YulIdentifier","src":"1801:6:17"},"nativeSrc":"1801:38:17","nodeType":"YulFunctionCall","src":"1801:38:17"},"nativeSrc":"1801:38:17","nodeType":"YulExpressionStatement","src":"1801:38:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2477,"isOffset":false,"isSlot":false,"src":"1816:6:17","valueSize":1},{"declaration":2477,"isOffset":false,"isSlot":false,"src":"1831:6:17","valueSize":1}],"flags":["memory-safe"],"id":2490,"nodeType":"InlineAssembly","src":"1750:111:17"}]},"id":2492,"nodeType":"IfStatement","src":"1556:323:17","trueBody":{"id":2489,"nodeType":"Block","src":"1580:142:17","statements":[{"errorCall":{"arguments":[{"id":2486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1700:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2483,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1664:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$294_$","typeString":"type(contract IERC721Errors)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:17","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":276,"src":"1664:35:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2488,"nodeType":"RevertStatement","src":"1657:46:17"}]}}]},"errorName":"","id":2494,"nodeType":"TryCatchClause","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"reason","nameLocation":"1530:6:17","nodeType":"VariableDeclaration","scope":2494,"src":"1517:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2476,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:17"},"src":"1510:383:17"}],"externalCall":{"arguments":[{"id":2453,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"1240:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2454,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"1250:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1256:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2456,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"1265:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1219:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2449,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1203:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2242_$","typeString":"type(contract IERC721Receiver)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2242","typeString":"contract IERC721Receiver"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2241,"src":"1203:36:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2495,"nodeType":"TryStatement","src":"1199:694:17"}]}}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"457:523:17","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:17","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"operator","nameLocation":"1033:8:17","nodeType":"VariableDeclaration","scope":2499,"src":"1025:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"from","nameLocation":"1059:4:17","nodeType":"VariableDeclaration","scope":2499,"src":"1051:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"to","nameLocation":"1081:2:17","nodeType":"VariableDeclaration","scope":2499,"src":"1073:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:17","nodeType":"VariableDeclaration","scope":2499,"src":"1093:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"data","nameLocation":"1131:4:17","nodeType":"VariableDeclaration","scope":2499,"src":"1118:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:17"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[],"src":"1151:0:17"},"scope":2500,"src":"985:924:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2501,"src":"431:1480:17","usedErrors":[],"usedEvents":[]}],"src":"118:1794:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2530]},"id":2531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"127:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2530,"linearizedBaseContracts":[2530],"name":"Context","nameLocation":"642:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2511,"nodeType":"Block","src":"718:34:18","statements":[{"expression":{"expression":{"id":2508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:18","memberName":"sender","nodeType":"MemberAccess","src":"735:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2507,"id":2510,"nodeType":"Return","src":"728:17:18"}]},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:18","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[],"src":"675:2:18"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"709:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:18"},"scope":2530,"src":"656:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"825:32:18","statements":[{"expression":{"expression":{"id":2517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:18","memberName":"data","nodeType":"MemberAccess","src":"842:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2516,"id":2519,"nodeType":"Return","src":"835:15:18"}]},"id":2521,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:18","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"775:2:18"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2521,"src":"809:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2514,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:18"},"scope":2530,"src":"758:99:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2528,"nodeType":"Block","src":"935:25:18","statements":[{"expression":{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2525,"id":2527,"nodeType":"Return","src":"945:8:18"}]},"id":2529,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:18","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[],"src":"892:2:18"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2529,"src":"926:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:18"},"scope":2530,"src":"863:97:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2531,"src":"624:338:18","usedErrors":[],"usedEvents":[]}],"src":"101:862:18"},"id":18},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2598]},"id":2599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2532,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:19"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"125:83:19","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2598,"linearizedBaseContracts":[2598],"name":"Nonces","nameLocation":"227:6:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"240:90:19","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2540,"name":"InvalidAccountNonce","nameLocation":"341:19:19","nodeType":"ErrorDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"account","nameLocation":"369:7:19","nodeType":"VariableDeclaration","scope":2540,"src":"361:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:19","nodeType":"VariableDeclaration","scope":2540,"src":"378:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:19"},"src":"335:65:19"},{"constant":false,"id":2544,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:19","nodeType":"VariableDeclaration","scope":2598,"src":"406:51:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2543,"keyName":"account","keyNameLocation":"422:7:19","keyType":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2556,"nodeType":"Block","src":"607:38:19","statements":[{"expression":{"baseExpression":{"id":2552,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"624:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2554,"indexExpression":{"id":2553,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"632:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2551,"id":2555,"nodeType":"Return","src":"617:21:19"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"464:69:19","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2557,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:19","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"owner","nameLocation":"562:5:19","nodeType":"VariableDeclaration","scope":2557,"src":"554:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:19"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2557,"src":"598:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:19"},"scope":2598,"src":"538:107:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2571,"nodeType":"Block","src":"828:326:19","statements":[{"id":2570,"nodeType":"UncheckedBlock","src":"1031:117:19","statements":[{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:19","subExpression":{"baseExpression":{"id":2565,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"1121:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2567,"indexExpression":{"id":2566,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"1129:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2564,"id":2569,"nodeType":"Return","src":"1114:23:19"}]}]},"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"651:103:19","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:19","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"owner","nameLocation":"786:5:19","nodeType":"VariableDeclaration","scope":2572,"src":"778:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:19"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2572,"src":"819:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:19"},"scope":2598,"src":"759:395:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"1338:149:19","statements":[{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"current","nameLocation":"1356:7:19","nodeType":"VariableDeclaration","scope":2596,"src":"1348:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2585,"initialValue":{"arguments":[{"id":2583,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"1376:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2582,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"1366:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2586,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"1396:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2587,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"1405:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2595,"nodeType":"IfStatement","src":"1392:89:19","trueBody":{"id":2594,"nodeType":"Block","src":"1414:67:19","statements":[{"errorCall":{"arguments":[{"id":2590,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"1455:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2591,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"1462:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2589,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"1435:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2593,"nodeType":"RevertStatement","src":"1428:42:19"}]}}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"1160:100:19","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:19","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"owner","nameLocation":"1299:5:19","nodeType":"VariableDeclaration","scope":2597,"src":"1291:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:19","nodeType":"VariableDeclaration","scope":2597,"src":"1306:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:19"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[],"src":"1338:0:19"},"scope":2598,"src":"1265:222:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2599,"src":"209:1280:19","usedErrors":[2540],"usedEvents":[]}],"src":"99:1391:19"},"id":19},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2650]},"id":2651,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2601,"nodeType":"StructuredDocumentation","src":"125:489:20","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2650,"linearizedBaseContracts":[2650],"name":"Panic","nameLocation":"665:5:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"677:36:20","text":"@dev generic / unspecified error"},"id":2605,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:20","nodeType":"VariableDeclaration","scope":2650,"src":"718:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"764:37:20","text":"@dev used by the assert() builtin"},"id":2609,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:20","nodeType":"VariableDeclaration","scope":2650,"src":"806:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"851:41:20","text":"@dev arithmetic underflow or overflow"},"id":2613,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:20","nodeType":"VariableDeclaration","scope":2650,"src":"897:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:20","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"950:35:20","text":"@dev division or modulo by zero"},"id":2617,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:20","nodeType":"VariableDeclaration","scope":2650,"src":"990:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"1045:30:20","text":"@dev enum conversion error"},"id":2621,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:20","nodeType":"VariableDeclaration","scope":2650,"src":"1080:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:20","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"1140:36:20","text":"@dev invalid encoding in storage"},"id":2625,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:20","nodeType":"VariableDeclaration","scope":2650,"src":"1181:55:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:20","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"1242:24:20","text":"@dev empty array pop"},"id":2629,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:20","nodeType":"VariableDeclaration","scope":2650,"src":"1271:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:20","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"1325:35:20","text":"@dev array out of bounds access"},"id":2633,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:20","nodeType":"VariableDeclaration","scope":2650,"src":"1365:52:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"1423:65:20","text":"@dev resource error (too large allocation or too large array)"},"id":2637,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:20","nodeType":"VariableDeclaration","scope":2650,"src":"1493:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"1546:42:20","text":"@dev calling invalid internal function"},"id":2641,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:20","nodeType":"VariableDeclaration","scope":2650,"src":"1593:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:20","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2648,"nodeType":"Block","src":"1819:151:20","statements":[{"AST":{"nativeSrc":"1854:110:20","nodeType":"YulBlock","src":"1854:110:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:20","nodeType":"YulLiteral","src":"1875:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:20","nodeType":"YulLiteral","src":"1881:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:20","nodeType":"YulIdentifier","src":"1868:6:20"},"nativeSrc":"1868:24:20","nodeType":"YulFunctionCall","src":"1868:24:20"},"nativeSrc":"1868:24:20","nodeType":"YulExpressionStatement","src":"1868:24:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:20","nodeType":"YulLiteral","src":"1912:4:20","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:20","nodeType":"YulIdentifier","src":"1918:4:20"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:20","nodeType":"YulIdentifier","src":"1905:6:20"},"nativeSrc":"1905:18:20","nodeType":"YulFunctionCall","src":"1905:18:20"},"nativeSrc":"1905:18:20","nodeType":"YulExpressionStatement","src":"1905:18:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:20","nodeType":"YulLiteral","src":"1943:4:20","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:20","nodeType":"YulLiteral","src":"1949:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:20","nodeType":"YulIdentifier","src":"1936:6:20"},"nativeSrc":"1936:18:20","nodeType":"YulFunctionCall","src":"1936:18:20"},"nativeSrc":"1936:18:20","nodeType":"YulExpressionStatement","src":"1936:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":2644,"isOffset":false,"isSlot":false,"src":"1918:4:20","valueSize":1}],"flags":["memory-safe"],"id":2647,"nodeType":"InlineAssembly","src":"1829:135:20"}]},"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"1658:113:20","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2649,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:20","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"code","nameLocation":"1799:4:20","nodeType":"VariableDeclaration","scope":2649,"src":"1791:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:20"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[],"src":"1819:0:20"},"scope":2650,"src":"1776:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2651,"src":"657:1315:20","usedErrors":[],"usedEvents":[]}],"src":"99:1874:20"},"id":20},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2719]},"id":2720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2652,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"135:894:21","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2719,"linearizedBaseContracts":[2719],"name":"ReentrancyGuard","nameLocation":"1048:15:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2656,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:21","nodeType":"VariableDeclaration","scope":2719,"src":"1818:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2659,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:21","nodeType":"VariableDeclaration","scope":2719,"src":"1864:36:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2661,"mutability":"mutable","name":"_status","nameLocation":"1923:7:21","nodeType":"VariableDeclaration","scope":2719,"src":"1907:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"1937:52:21","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2664,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:21","nodeType":"ErrorDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[],"src":"2028:2:21"},"src":"1994:37:21"},{"body":{"id":2671,"nodeType":"Block","src":"2051:38:21","statements":[{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"2061:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2668,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2071:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2670,"nodeType":"ExpressionStatement","src":"2061:21:21"}]},"id":2672,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[],"src":"2048:2:21"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[],"src":"2051:0:21"},"scope":2719,"src":"2037:52:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2682,"nodeType":"Block","src":"2490:79:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2675,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2500:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2677,"nodeType":"ExpressionStatement","src":"2500:21:21"},{"id":2678,"nodeType":"PlaceholderStatement","src":"2531:1:21"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2679,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"2542:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2681,"nodeType":"ExpressionStatement","src":"2542:20:21"}]},"documentation":{"id":2673,"nodeType":"StructuredDocumentation","src":"2095:366:21","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2683,"name":"nonReentrant","nameLocation":"2475:12:21","nodeType":"ModifierDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[],"src":"2487:2:21"},"src":"2466:103:21","virtual":false,"visibility":"internal"},{"body":{"id":2698,"nodeType":"Block","src":"2614:268:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"2702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2687,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"2713:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2693,"nodeType":"IfStatement","src":"2698:86:21","trueBody":{"id":2692,"nodeType":"Block","src":"2722:62:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2689,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"2743:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2691,"nodeType":"RevertStatement","src":"2736:37:21"}]}},{"expression":{"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2694,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"2858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2695,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"2868:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2697,"nodeType":"ExpressionStatement","src":"2858:17:21"}]},"id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:21","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"2603:2:21"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[],"src":"2614:0:21"},"scope":2719,"src":"2575:307:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2706,"nodeType":"Block","src":"2926:170:21","statements":[{"expression":{"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2702,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3068:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2703,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"3078:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2705,"nodeType":"ExpressionStatement","src":"3068:21:21"}]},"id":2707,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:21","nodeType":"FunctionDefinition","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[],"src":"2915:2:21"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[],"src":"2926:0:21"},"scope":2719,"src":"2888:208:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2717,"nodeType":"Block","src":"3339:42:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3356:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2714,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"3367:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2712,"id":2716,"nodeType":"Return","src":"3349:25:21"}]},"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"3102:168:21","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:21","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[],"src":"3307:2:21"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"3333:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2710,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:21"},"scope":2719,"src":"3275:106:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2720,"src":"1030:2353:21","usedErrors":[2664],"usedEvents":[]}],"src":"109:3275:21"},"id":21},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2725],"ShortStrings":[2936],"StorageSlot":[3060]},"id":2937,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2721,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2937,"sourceUnit":3061,"src":"132:46:22","symbolAliases":[{"foreign":{"id":2722,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"140:11:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2725,"name":"ShortString","nameLocation":"353:11:22","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:22","underlyingType":{"id":2724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"378:876:22","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2936,"linearizedBaseContracts":[2936],"name":"ShortStrings","nameLocation":"1263:12:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2729,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:22","nodeType":"VariableDeclaration","scope":2936,"src":"1345:111:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2733,"name":"StringTooLong","nameLocation":"1469:13:22","nodeType":"ErrorDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"str","nameLocation":"1490:3:22","nodeType":"VariableDeclaration","scope":2733,"src":"1483:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2730,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:22"},"src":"1463:32:22"},{"errorSelector":"b3512b0c","id":2735,"name":"InvalidShortString","nameLocation":"1506:18:22","nodeType":"ErrorDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[],"src":"1524:2:22"},"src":"1500:27:22"},{"body":{"id":2778,"nodeType":"Block","src":"1786:208:22","statements":[{"assignments":[2745],"declarations":[{"constant":false,"id":2745,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:22","nodeType":"VariableDeclaration","scope":2778,"src":"1796:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2744,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2750,"initialValue":{"arguments":[{"id":2748,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"1822:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2746,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:22","typeDescriptions":{}}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2751,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"1840:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:22","memberName":"length","nodeType":"MemberAccess","src":"1840:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:22","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2760,"nodeType":"IfStatement","src":"1836:72:22","trueBody":{"id":2759,"nodeType":"Block","src":"1858:50:22","statements":[{"errorCall":{"arguments":[{"id":2756,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"1893:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2755,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1879:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2758,"nodeType":"RevertStatement","src":"1872:25:22"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2769,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"1965:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:22","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:22","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2772,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"1974:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:22","memberName":"length","nodeType":"MemberAccess","src":"1974:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:22","typeDescriptions":{}}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2761,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"1924:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"type(ShortString)"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:22","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:22","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"functionReturnParameters":2743,"id":2777,"nodeType":"Return","src":"1917:70:22"}]},"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"1533:170:22","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:22","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"str","nameLocation":"1745:3:22","nodeType":"VariableDeclaration","scope":2779,"src":"1731:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2737,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:22"},"returnParameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"1773:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":2741,"nodeType":"UserDefinedTypeName","pathNode":{"id":2740,"name":"ShortString","nameLocations":["1773:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"1773:11:22"},"referencedDeclaration":2725,"src":"1773:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:22"},"scope":2936,"src":"1708:286:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2804,"nodeType":"Block","src":"2152:304:22","statements":[{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"len","nameLocation":"2170:3:22","nodeType":"VariableDeclaration","scope":2804,"src":"2162:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2793,"initialValue":{"arguments":[{"id":2791,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2187:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}],"id":2790,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"2176:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2725_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:22"},{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"str","nameLocation":"2294:3:22","nodeType":"VariableDeclaration","scope":2804,"src":"2280:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2794,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2800,"initialValue":{"arguments":[{"hexValue":"3332","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:22"},{"AST":{"nativeSrc":"2349:81:22","nodeType":"YulBlock","src":"2349:81:22","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:22","nodeType":"YulIdentifier","src":"2370:3:22"},{"name":"len","nativeSrc":"2375:3:22","nodeType":"YulIdentifier","src":"2375:3:22"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:22","nodeType":"YulIdentifier","src":"2363:6:22"},"nativeSrc":"2363:16:22","nodeType":"YulFunctionCall","src":"2363:16:22"},"nativeSrc":"2363:16:22","nodeType":"YulExpressionStatement","src":"2363:16:22"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:22","nodeType":"YulIdentifier","src":"2403:3:22"},{"kind":"number","nativeSrc":"2408:4:22","nodeType":"YulLiteral","src":"2408:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:22","nodeType":"YulIdentifier","src":"2399:3:22"},"nativeSrc":"2399:14:22","nodeType":"YulFunctionCall","src":"2399:14:22"},{"name":"sstr","nativeSrc":"2415:4:22","nodeType":"YulIdentifier","src":"2415:4:22"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:22","nodeType":"YulIdentifier","src":"2392:6:22"},"nativeSrc":"2392:28:22","nodeType":"YulFunctionCall","src":"2392:28:22"},"nativeSrc":"2392:28:22","nodeType":"YulExpressionStatement","src":"2392:28:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":2789,"isOffset":false,"isSlot":false,"src":"2375:3:22","valueSize":1},{"declaration":2783,"isOffset":false,"isSlot":false,"src":"2415:4:22","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"2370:3:22","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"2403:3:22","valueSize":1}],"flags":["memory-safe"],"id":2801,"nodeType":"InlineAssembly","src":"2324:106:22"},{"expression":{"id":2802,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2446:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2787,"id":2803,"nodeType":"Return","src":"2439:10:22"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"2000:73:22","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2805,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:22","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:22","nodeType":"VariableDeclaration","scope":2805,"src":"2096:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":2782,"nodeType":"UserDefinedTypeName","pathNode":{"id":2781,"name":"ShortString","nameLocations":["2096:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"2096:11:22"},"referencedDeclaration":2725,"src":"2096:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:22"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2805,"src":"2137:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2785,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:22"},"scope":2936,"src":"2078:378:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2836,"nodeType":"Block","src":"2598:175:22","statements":[{"assignments":[2815],"declarations":[{"constant":false,"id":2815,"mutability":"mutable","name":"result","nameLocation":"2616:6:22","nodeType":"VariableDeclaration","scope":2836,"src":"2608:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2825,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2820,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2652:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}],"expression":{"id":2818,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"2633:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"type(ShortString)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:22","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:22","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2725_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:22","typeDescriptions":{}}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2679:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:22","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2833,"nodeType":"IfStatement","src":"2675:69:22","trueBody":{"id":2832,"nodeType":"Block","src":"2692:52:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2829,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"2713:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2831,"nodeType":"RevertStatement","src":"2706:27:22"}]}},{"expression":{"id":2834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2760:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2813,"id":2835,"nodeType":"Return","src":"2753:13:22"}]},"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"2462:61:22","text":" @dev Return the length of a `ShortString`."},"id":2837,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:22","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:22","nodeType":"VariableDeclaration","scope":2837,"src":"2548:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":2808,"nodeType":"UserDefinedTypeName","pathNode":{"id":2807,"name":"ShortString","nameLocations":["2548:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"2548:11:22"},"referencedDeclaration":2725,"src":"2548:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:22"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2837,"src":"2589:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:22"},"scope":2936,"src":"2528:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"2996:231:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"3016:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2848,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:22","typeDescriptions":{}}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:22","memberName":"length","nodeType":"MemberAccess","src":"3010:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2874,"nodeType":"Block","src":"3094:127:22","statements":[{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2863,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"3134:5:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2860,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3108:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3060_$","typeString":"type(library StorageSlot)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:22","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3037,"src":"3108:25:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2957_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2957_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:22","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"3108:38:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"3149:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2868,"nodeType":"ExpressionStatement","src":"3108:46:22"},{"expression":{"arguments":[{"id":2871,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"3192:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2869,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"3175:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"type(ShortString)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:22","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:22","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"functionReturnParameters":2847,"id":2873,"nodeType":"Return","src":"3168:42:22"}]},"id":2875,"nodeType":"IfStatement","src":"3006:215:22","trueBody":{"id":2859,"nodeType":"Block","src":"3036:52:22","statements":[{"expression":{"arguments":[{"id":2856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"3071:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2855,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"3057:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"functionReturnParameters":2847,"id":2858,"nodeType":"Return","src":"3050:27:22"}]}}]},"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"2779:103:22","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:22","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"value","nameLocation":"2936:5:22","nodeType":"VariableDeclaration","scope":2877,"src":"2922:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2839,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"store","nameLocation":"2958:5:22","nodeType":"VariableDeclaration","scope":2877,"src":"2943:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2841,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:22"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"2983:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":2845,"nodeType":"UserDefinedTypeName","pathNode":{"id":2844,"name":"ShortString","nameLocations":["2983:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"2983:11:22"},"referencedDeclaration":2725,"src":"2983:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:22"},"scope":2936,"src":"2887:340:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2903,"nodeType":"Block","src":"3467:158:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"3500:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}],"expression":{"id":2888,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"3481:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"type(ShortString)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:22","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:22","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2725_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2892,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"3510:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2901,"nodeType":"Block","src":"3582:37:22","statements":[{"expression":{"id":2899,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"3603:5:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2887,"id":2900,"nodeType":"Return","src":"3596:12:22"}]},"id":2902,"nodeType":"IfStatement","src":"3477:142:22","trueBody":{"id":2898,"nodeType":"Block","src":"3529:47:22","statements":[{"expression":{"arguments":[{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"3559:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}],"id":2894,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"3550:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2725_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2887,"id":2897,"nodeType":"Return","src":"3543:22:22"}]}}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"3233:120:22","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2904,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:22","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"value","nameLocation":"3400:5:22","nodeType":"VariableDeclaration","scope":2904,"src":"3388:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":2880,"nodeType":"UserDefinedTypeName","pathNode":{"id":2879,"name":"ShortString","nameLocations":["3388:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"3388:11:22"},"referencedDeclaration":2725,"src":"3388:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"store","nameLocation":"3422:5:22","nodeType":"VariableDeclaration","scope":2904,"src":"3407:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2882,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:22"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2904,"src":"3452:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2885,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:22"},"scope":2936,"src":"3358:267:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2934,"nodeType":"Block","src":"4105:174:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"4138:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}],"expression":{"id":2915,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"4119:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"type(ShortString)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:22","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:22","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2725_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2919,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"4148:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2932,"nodeType":"Block","src":"4222:51:22","statements":[{"expression":{"expression":{"arguments":[{"id":2928,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"4249:5:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2926,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:22","typeDescriptions":{}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:22","memberName":"length","nodeType":"MemberAccess","src":"4243:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2914,"id":2931,"nodeType":"Return","src":"4236:26:22"}]},"id":2933,"nodeType":"IfStatement","src":"4115:158:22","trueBody":{"id":2925,"nodeType":"Block","src":"4167:49:22","statements":[{"expression":{"arguments":[{"id":2922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"4199:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}],"id":2921,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"4188:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2725_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2914,"id":2924,"nodeType":"Return","src":"4181:24:22"}]}}]},"documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"3631:364:22","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2935,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:22","nodeType":"FunctionDefinition","parameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"value","nameLocation":"4044:5:22","nodeType":"VariableDeclaration","scope":2935,"src":"4032:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":2907,"nodeType":"UserDefinedTypeName","pathNode":{"id":2906,"name":"ShortString","nameLocations":["4032:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"4032:11:22"},"referencedDeclaration":2725,"src":"4032:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2910,"mutability":"mutable","name":"store","nameLocation":"4066:5:22","nodeType":"VariableDeclaration","scope":2935,"src":"4051:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2909,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:22"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2935,"src":"4096:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:22"},"scope":2936,"src":"4000:279:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2937,"src":"1255:3026:22","usedErrors":[2733,2735],"usedEvents":[]}],"src":"106:4176:22"},"id":22},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3060]},"id":3061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2938,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"219:1187:23","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3060,"linearizedBaseContracts":[3060],"name":"StorageSlot","nameLocation":"1415:11:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2942,"members":[{"constant":false,"id":2941,"mutability":"mutable","name":"value","nameLocation":"1470:5:23","nodeType":"VariableDeclaration","scope":2942,"src":"1462:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:23","nodeType":"StructDefinition","scope":3060,"src":"1433:49:23","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2945,"members":[{"constant":false,"id":2944,"mutability":"mutable","name":"value","nameLocation":"1522:5:23","nodeType":"VariableDeclaration","scope":2945,"src":"1517:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2943,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:23","nodeType":"StructDefinition","scope":3060,"src":"1488:46:23","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2948,"members":[{"constant":false,"id":2947,"mutability":"mutable","name":"value","nameLocation":"1577:5:23","nodeType":"VariableDeclaration","scope":2948,"src":"1569:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:23","nodeType":"StructDefinition","scope":3060,"src":"1540:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2951,"members":[{"constant":false,"id":2950,"mutability":"mutable","name":"value","nameLocation":"1632:5:23","nodeType":"VariableDeclaration","scope":2951,"src":"1624:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:23","nodeType":"StructDefinition","scope":3060,"src":"1595:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2954,"members":[{"constant":false,"id":2953,"mutability":"mutable","name":"value","nameLocation":"1685:5:23","nodeType":"VariableDeclaration","scope":2954,"src":"1678:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2952,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:23","nodeType":"StructDefinition","scope":3060,"src":"1650:47:23","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2957,"members":[{"constant":false,"id":2956,"mutability":"mutable","name":"value","nameLocation":"1738:5:23","nodeType":"VariableDeclaration","scope":2957,"src":"1731:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2955,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:23","nodeType":"StructDefinition","scope":3060,"src":"1703:47:23","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2960,"members":[{"constant":false,"id":2959,"mutability":"mutable","name":"value","nameLocation":"1789:5:23","nodeType":"VariableDeclaration","scope":2960,"src":"1783:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2958,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:23","nodeType":"StructDefinition","scope":3060,"src":"1756:45:23","visibility":"public"},{"body":{"id":2970,"nodeType":"Block","src":"1983:79:23","statements":[{"AST":{"nativeSrc":"2018:38:23","nodeType":"YulBlock","src":"2018:38:23","statements":[{"nativeSrc":"2032:14:23","nodeType":"YulAssignment","src":"2032:14:23","value":{"name":"slot","nativeSrc":"2042:4:23","nodeType":"YulIdentifier","src":"2042:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:23","nodeType":"YulIdentifier","src":"2032:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2967,"isOffset":false,"isSlot":true,"src":"2032:6:23","suffix":"slot","valueSize":1},{"declaration":2963,"isOffset":false,"isSlot":false,"src":"2042:4:23","valueSize":1}],"flags":["memory-safe"],"id":2969,"nodeType":"InlineAssembly","src":"1993:63:23"}]},"documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"1807:87:23","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:23","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"slot","nameLocation":"1931:4:23","nodeType":"VariableDeclaration","scope":2971,"src":"1923:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:23"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"r","nameLocation":"1980:1:23","nodeType":"VariableDeclaration","scope":2971,"src":"1960:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2942_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2966,"nodeType":"UserDefinedTypeName","pathNode":{"id":2965,"name":"AddressSlot","nameLocations":["1960:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"1960:11:23"},"referencedDeclaration":2942,"src":"1960:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2942_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:23"},"scope":3060,"src":"1899:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2981,"nodeType":"Block","src":"2243:79:23","statements":[{"AST":{"nativeSrc":"2278:38:23","nodeType":"YulBlock","src":"2278:38:23","statements":[{"nativeSrc":"2292:14:23","nodeType":"YulAssignment","src":"2292:14:23","value":{"name":"slot","nativeSrc":"2302:4:23","nodeType":"YulIdentifier","src":"2302:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:23","nodeType":"YulIdentifier","src":"2292:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2978,"isOffset":false,"isSlot":true,"src":"2292:6:23","suffix":"slot","valueSize":1},{"declaration":2974,"isOffset":false,"isSlot":false,"src":"2302:4:23","valueSize":1}],"flags":["memory-safe"],"id":2980,"nodeType":"InlineAssembly","src":"2253:63:23"}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"2068:86:23","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2982,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:23","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"slot","nameLocation":"2191:4:23","nodeType":"VariableDeclaration","scope":2982,"src":"2183:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:23"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"r","nameLocation":"2240:1:23","nodeType":"VariableDeclaration","scope":2982,"src":"2220:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2945_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2977,"nodeType":"UserDefinedTypeName","pathNode":{"id":2976,"name":"BooleanSlot","nameLocations":["2220:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2945,"src":"2220:11:23"},"referencedDeclaration":2945,"src":"2220:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2945_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:23"},"scope":3060,"src":"2159:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2992,"nodeType":"Block","src":"2503:79:23","statements":[{"AST":{"nativeSrc":"2538:38:23","nodeType":"YulBlock","src":"2538:38:23","statements":[{"nativeSrc":"2552:14:23","nodeType":"YulAssignment","src":"2552:14:23","value":{"name":"slot","nativeSrc":"2562:4:23","nodeType":"YulIdentifier","src":"2562:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:23","nodeType":"YulIdentifier","src":"2552:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2989,"isOffset":false,"isSlot":true,"src":"2552:6:23","suffix":"slot","valueSize":1},{"declaration":2985,"isOffset":false,"isSlot":false,"src":"2562:4:23","valueSize":1}],"flags":["memory-safe"],"id":2991,"nodeType":"InlineAssembly","src":"2513:63:23"}]},"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"2328:86:23","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:23","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"slot","nameLocation":"2451:4:23","nodeType":"VariableDeclaration","scope":2993,"src":"2443:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:23"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"r","nameLocation":"2500:1:23","nodeType":"VariableDeclaration","scope":2993,"src":"2480:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2948_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2988,"nodeType":"UserDefinedTypeName","pathNode":{"id":2987,"name":"Bytes32Slot","nameLocations":["2480:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2948,"src":"2480:11:23"},"referencedDeclaration":2948,"src":"2480:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2948_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:23"},"scope":3060,"src":"2419:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"2763:79:23","statements":[{"AST":{"nativeSrc":"2798:38:23","nodeType":"YulBlock","src":"2798:38:23","statements":[{"nativeSrc":"2812:14:23","nodeType":"YulAssignment","src":"2812:14:23","value":{"name":"slot","nativeSrc":"2822:4:23","nodeType":"YulIdentifier","src":"2822:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:23","nodeType":"YulIdentifier","src":"2812:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3000,"isOffset":false,"isSlot":true,"src":"2812:6:23","suffix":"slot","valueSize":1},{"declaration":2996,"isOffset":false,"isSlot":false,"src":"2822:4:23","valueSize":1}],"flags":["memory-safe"],"id":3002,"nodeType":"InlineAssembly","src":"2773:63:23"}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"2588:86:23","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:23","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"slot","nameLocation":"2711:4:23","nodeType":"VariableDeclaration","scope":3004,"src":"2703:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:23"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"r","nameLocation":"2760:1:23","nodeType":"VariableDeclaration","scope":3004,"src":"2740:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2951_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2999,"nodeType":"UserDefinedTypeName","pathNode":{"id":2998,"name":"Uint256Slot","nameLocations":["2740:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"2740:11:23"},"referencedDeclaration":2951,"src":"2740:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2951_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:23"},"scope":3060,"src":"2679:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3014,"nodeType":"Block","src":"3020:79:23","statements":[{"AST":{"nativeSrc":"3055:38:23","nodeType":"YulBlock","src":"3055:38:23","statements":[{"nativeSrc":"3069:14:23","nodeType":"YulAssignment","src":"3069:14:23","value":{"name":"slot","nativeSrc":"3079:4:23","nodeType":"YulIdentifier","src":"3079:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:23","nodeType":"YulIdentifier","src":"3069:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3011,"isOffset":false,"isSlot":true,"src":"3069:6:23","suffix":"slot","valueSize":1},{"declaration":3007,"isOffset":false,"isSlot":false,"src":"3079:4:23","valueSize":1}],"flags":["memory-safe"],"id":3013,"nodeType":"InlineAssembly","src":"3030:63:23"}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"2848:85:23","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:23","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"slot","nameLocation":"2969:4:23","nodeType":"VariableDeclaration","scope":3015,"src":"2961:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:23"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"r","nameLocation":"3017:1:23","nodeType":"VariableDeclaration","scope":3015,"src":"2998:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2954_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3010,"nodeType":"UserDefinedTypeName","pathNode":{"id":3009,"name":"Int256Slot","nameLocations":["2998:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"2998:10:23"},"referencedDeclaration":2954,"src":"2998:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2954_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:23"},"scope":3060,"src":"2938:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3025,"nodeType":"Block","src":"3277:79:23","statements":[{"AST":{"nativeSrc":"3312:38:23","nodeType":"YulBlock","src":"3312:38:23","statements":[{"nativeSrc":"3326:14:23","nodeType":"YulAssignment","src":"3326:14:23","value":{"name":"slot","nativeSrc":"3336:4:23","nodeType":"YulIdentifier","src":"3336:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:23","nodeType":"YulIdentifier","src":"3326:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3022,"isOffset":false,"isSlot":true,"src":"3326:6:23","suffix":"slot","valueSize":1},{"declaration":3018,"isOffset":false,"isSlot":false,"src":"3336:4:23","valueSize":1}],"flags":["memory-safe"],"id":3024,"nodeType":"InlineAssembly","src":"3287:63:23"}]},"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"3105:85:23","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:23","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"slot","nameLocation":"3226:4:23","nodeType":"VariableDeclaration","scope":3026,"src":"3218:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:23"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"r","nameLocation":"3274:1:23","nodeType":"VariableDeclaration","scope":3026,"src":"3255:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2957_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3021,"nodeType":"UserDefinedTypeName","pathNode":{"id":3020,"name":"StringSlot","nameLocations":["3255:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2957,"src":"3255:10:23"},"referencedDeclaration":2957,"src":"3255:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2957_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:23"},"scope":3060,"src":"3195:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3036,"nodeType":"Block","src":"3558:85:23","statements":[{"AST":{"nativeSrc":"3593:44:23","nodeType":"YulBlock","src":"3593:44:23","statements":[{"nativeSrc":"3607:20:23","nodeType":"YulAssignment","src":"3607:20:23","value":{"name":"store.slot","nativeSrc":"3617:10:23","nodeType":"YulIdentifier","src":"3617:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:23","nodeType":"YulIdentifier","src":"3607:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3033,"isOffset":false,"isSlot":true,"src":"3607:6:23","suffix":"slot","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":true,"src":"3617:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3035,"nodeType":"InlineAssembly","src":"3568:69:23"}]},"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"3362:101:23","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:23","nodeType":"FunctionDefinition","parameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"store","nameLocation":"3506:5:23","nodeType":"VariableDeclaration","scope":3037,"src":"3491:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3028,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:23"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"r","nameLocation":"3555:1:23","nodeType":"VariableDeclaration","scope":3037,"src":"3536:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2957_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3032,"nodeType":"UserDefinedTypeName","pathNode":{"id":3031,"name":"StringSlot","nameLocations":["3536:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2957,"src":"3536:10:23"},"referencedDeclaration":2957,"src":"3536:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2957_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:23"},"scope":3060,"src":"3468:175:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"3818:79:23","statements":[{"AST":{"nativeSrc":"3853:38:23","nodeType":"YulBlock","src":"3853:38:23","statements":[{"nativeSrc":"3867:14:23","nodeType":"YulAssignment","src":"3867:14:23","value":{"name":"slot","nativeSrc":"3877:4:23","nodeType":"YulIdentifier","src":"3877:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:23","nodeType":"YulIdentifier","src":"3867:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3044,"isOffset":false,"isSlot":true,"src":"3867:6:23","suffix":"slot","valueSize":1},{"declaration":3040,"isOffset":false,"isSlot":false,"src":"3877:4:23","valueSize":1}],"flags":["memory-safe"],"id":3046,"nodeType":"InlineAssembly","src":"3828:63:23"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"3649:84:23","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:23","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"slot","nameLocation":"3768:4:23","nodeType":"VariableDeclaration","scope":3048,"src":"3760:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:23"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"r","nameLocation":"3815:1:23","nodeType":"VariableDeclaration","scope":3048,"src":"3797:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2960_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3043,"nodeType":"UserDefinedTypeName","pathNode":{"id":3042,"name":"BytesSlot","nameLocations":["3797:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"3797:9:23"},"referencedDeclaration":2960,"src":"3797:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2960_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:23"},"scope":3060,"src":"3738:159:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3058,"nodeType":"Block","src":"4094:85:23","statements":[{"AST":{"nativeSrc":"4129:44:23","nodeType":"YulBlock","src":"4129:44:23","statements":[{"nativeSrc":"4143:20:23","nodeType":"YulAssignment","src":"4143:20:23","value":{"name":"store.slot","nativeSrc":"4153:10:23","nodeType":"YulIdentifier","src":"4153:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:23","nodeType":"YulIdentifier","src":"4143:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3055,"isOffset":false,"isSlot":true,"src":"4143:6:23","suffix":"slot","valueSize":1},{"declaration":3051,"isOffset":false,"isSlot":true,"src":"4153:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3057,"nodeType":"InlineAssembly","src":"4104:69:23"}]},"documentation":{"id":3049,"nodeType":"StructuredDocumentation","src":"3903:99:23","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3059,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:23","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"store","nameLocation":"4043:5:23","nodeType":"VariableDeclaration","scope":3059,"src":"4029:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3050,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:23"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"r","nameLocation":"4091:1:23","nodeType":"VariableDeclaration","scope":3059,"src":"4073:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2960_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3054,"nodeType":"UserDefinedTypeName","pathNode":{"id":3053,"name":"BytesSlot","nameLocations":["4073:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"4073:9:23"},"referencedDeclaration":2960,"src":"4073:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2960_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:23"},"scope":3060,"src":"4007:172:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3061,"src":"1407:2774:23","usedErrors":[],"usedEvents":[]}],"src":"193:3989:23"},"id":23},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6551],"SafeCast":[8316],"SignedMath":[8460],"Strings":[4260]},"id":4261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3062,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3064,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4261,"sourceUnit":6552,"src":"127:37:24","symbolAliases":[{"foreign":{"id":3063,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"135:4:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3066,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4261,"sourceUnit":8317,"src":"165:45:24","symbolAliases":[{"foreign":{"id":3065,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3068,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4261,"sourceUnit":8461,"src":"211:49:24","symbolAliases":[{"foreign":{"id":3067,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"219:10:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"262:34:24","text":" @dev String operations."},"fullyImplemented":true,"id":4260,"linearizedBaseContracts":[4260],"name":"Strings","nameLocation":"305:7:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3071,"libraryName":{"id":3070,"name":"SafeCast","nameLocations":["325:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8316,"src":"325:8:24"},"nodeType":"UsingForDirective","src":"319:21:24"},{"constant":true,"id":3074,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:24","nodeType":"VariableDeclaration","scope":4260,"src":"346:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3072,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3077,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:24","nodeType":"VariableDeclaration","scope":4260,"src":"408:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3075,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:24","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"457:81:24","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3084,"name":"StringsInsufficientHexLength","nameLocation":"549:28:24","nodeType":"ErrorDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"value","nameLocation":"586:5:24","nodeType":"VariableDeclaration","scope":3084,"src":"578:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"length","nameLocation":"601:6:24","nodeType":"VariableDeclaration","scope":3084,"src":"593:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:24"},"src":"543:66:24"},{"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"615:108:24","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3087,"name":"StringsInvalidChar","nameLocation":"734:18:24","nodeType":"ErrorDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[],"src":"752:2:24"},"src":"728:27:24"},{"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"761:84:24","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3090,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:24","nodeType":"ErrorDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[],"src":"883:2:24"},"src":"850:36:24"},{"body":{"id":3137,"nodeType":"Block","src":"1058:561:24","statements":[{"id":3136,"nodeType":"UncheckedBlock","src":"1068:545:24","statements":[{"assignments":[3099],"declarations":[{"constant":false,"id":3099,"mutability":"mutable","name":"length","nameLocation":"1100:6:24","nodeType":"VariableDeclaration","scope":3136,"src":"1092:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"1120:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3100,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"1109:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6551_$","typeString":"type(library Math)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:24","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6323,"src":"1109:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:24"},{"assignments":[3108],"declarations":[{"constant":false,"id":3108,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:24","nodeType":"VariableDeclaration","scope":3136,"src":"1144:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3107,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3113,"initialValue":{"arguments":[{"id":3111,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"1178:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3109,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:24"},{"assignments":[3115],"declarations":[{"constant":false,"id":3115,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:24","nodeType":"VariableDeclaration","scope":3136,"src":"1199:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3116,"nodeType":"VariableDeclarationStatement","src":"1199:11:24"},{"AST":{"nativeSrc":"1249:67:24","nodeType":"YulBlock","src":"1249:67:24","statements":[{"nativeSrc":"1267:35:24","nodeType":"YulAssignment","src":"1267:35:24","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:24","nodeType":"YulIdentifier","src":"1278:6:24"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:24","nodeType":"YulLiteral","src":"1290:2:24","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:24","nodeType":"YulIdentifier","src":"1294:6:24"}],"functionName":{"name":"add","nativeSrc":"1286:3:24","nodeType":"YulIdentifier","src":"1286:3:24"},"nativeSrc":"1286:15:24","nodeType":"YulFunctionCall","src":"1286:15:24"}],"functionName":{"name":"add","nativeSrc":"1274:3:24","nodeType":"YulIdentifier","src":"1274:3:24"},"nativeSrc":"1274:28:24","nodeType":"YulFunctionCall","src":"1274:28:24"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:24","nodeType":"YulIdentifier","src":"1267:3:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3108,"isOffset":false,"isSlot":false,"src":"1278:6:24","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"1294:6:24","valueSize":1},{"declaration":3115,"isOffset":false,"isSlot":false,"src":"1267:3:24","valueSize":1}],"flags":["memory-safe"],"id":3117,"nodeType":"InlineAssembly","src":"1224:92:24"},{"body":{"id":3132,"nodeType":"Block","src":"1342:234:24","statements":[{"expression":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:24","subExpression":{"id":3119,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"1360:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3121,"nodeType":"ExpressionStatement","src":"1360:5:24"},{"AST":{"nativeSrc":"1408:86:24","nodeType":"YulBlock","src":"1408:86:24","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:24","nodeType":"YulIdentifier","src":"1438:3:24"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:24","nodeType":"YulIdentifier","src":"1452:5:24"},{"kind":"number","nativeSrc":"1459:2:24","nodeType":"YulLiteral","src":"1459:2:24","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:24","nodeType":"YulIdentifier","src":"1448:3:24"},"nativeSrc":"1448:14:24","nodeType":"YulFunctionCall","src":"1448:14:24"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:24","nodeType":"YulIdentifier","src":"1464:10:24"}],"functionName":{"name":"byte","nativeSrc":"1443:4:24","nodeType":"YulIdentifier","src":"1443:4:24"},"nativeSrc":"1443:32:24","nodeType":"YulFunctionCall","src":"1443:32:24"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:24","nodeType":"YulIdentifier","src":"1430:7:24"},"nativeSrc":"1430:46:24","nodeType":"YulFunctionCall","src":"1430:46:24"},"nativeSrc":"1430:46:24","nodeType":"YulExpressionStatement","src":"1430:46:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3074,"isOffset":false,"isSlot":false,"src":"1464:10:24","valueSize":1},{"declaration":3115,"isOffset":false,"isSlot":false,"src":"1438:3:24","valueSize":1},{"declaration":3093,"isOffset":false,"isSlot":false,"src":"1452:5:24","valueSize":1}],"flags":["memory-safe"],"id":3122,"nodeType":"InlineAssembly","src":"1383:111:24"},{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"1511:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ExpressionStatement","src":"1511:11:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"1544:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"IfStatement","src":"1540:21:24","trueBody":{"id":3130,"nodeType":"Break","src":"1556:5:24"}}]},"condition":{"hexValue":"74727565","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3133,"nodeType":"WhileStatement","src":"1329:247:24"},{"expression":{"id":3134,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"1596:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3097,"id":3135,"nodeType":"Return","src":"1589:13:24"}]}]},"documentation":{"id":3091,"nodeType":"StructuredDocumentation","src":"892:90:24","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3138,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:24","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"value","nameLocation":"1013:5:24","nodeType":"VariableDeclaration","scope":3138,"src":"1005:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:24"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3138,"src":"1043:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3095,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:24"},"scope":4260,"src":"987:632:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"1795:92:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"1826:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:24","trueExpression":{"hexValue":"2d","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"1872:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3156,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"1857:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8460_$","typeString":"type(library SignedMath)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:24","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8459,"src":"1857:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3155,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"1848:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3146,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:24","typeDescriptions":{}}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:24","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:24","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3145,"id":3162,"nodeType":"Return","src":"1805:75:24"}]},"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"1625:89:24","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:24","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"value","nameLocation":"1750:5:24","nodeType":"VariableDeclaration","scope":3164,"src":"1743:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3140,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:24"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"1780:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3143,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:24"},"scope":4260,"src":"1719:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3183,"nodeType":"Block","src":"2066:100:24","statements":[{"id":3182,"nodeType":"UncheckedBlock","src":"2076:84:24","statements":[{"expression":{"arguments":[{"id":3173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"2119:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"2138:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3174,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2126:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6551_$","typeString":"type(library Math)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:24","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6494,"src":"2126:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3172,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3184,3267,3287],"referencedDeclaration":3267,"src":"2107:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3171,"id":3181,"nodeType":"Return","src":"2100:49:24"}]}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"1893:94:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:24","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"value","nameLocation":"2021:5:24","nodeType":"VariableDeclaration","scope":3184,"src":"2013:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:24"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3184,"src":"2051:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3169,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:24"},"scope":4260,"src":"1992:174:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3266,"nodeType":"Block","src":"2379:435:24","statements":[{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:24","nodeType":"VariableDeclaration","scope":3266,"src":"2389:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3197,"initialValue":{"id":3196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"2410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:24"},{"assignments":[3199],"declarations":[{"constant":false,"id":3199,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:24","nodeType":"VariableDeclaration","scope":3266,"src":"2425:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3198,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3208,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3203,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"2461:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3200,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:24"},{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3209,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"2482:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3211,"indexExpression":{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3214,"nodeType":"ExpressionStatement","src":"2482:15:24"},{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3215,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"2507:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3217,"indexExpression":{"hexValue":"31","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3220,"nodeType":"ExpressionStatement","src":"2507:15:24"},{"body":{"id":3249,"nodeType":"Block","src":"2577:95:24","statements":[{"expression":{"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3235,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"2591:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3237,"indexExpression":{"id":3236,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2598:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3238,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"2603:10:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3242,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"2614:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3244,"nodeType":"ExpressionStatement","src":"2591:40:24"},{"expression":{"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3245,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"2645:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3248,"nodeType":"ExpressionStatement","src":"2645:16:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2565:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3250,"initializationExpression":{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"i","nameLocation":"2545:1:24","nodeType":"VariableDeclaration","scope":3250,"src":"2537:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3228,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3224,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"2553:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:24","subExpression":{"id":3232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2574:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"2572:3:24"},"nodeType":"ForStatement","src":"2532:140:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"2685:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3260,"nodeType":"IfStatement","src":"2681:96:24","trueBody":{"id":3259,"nodeType":"Block","src":"2702:75:24","statements":[{"errorCall":{"arguments":[{"id":3255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"2752:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3256,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"2759:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3254,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"2723:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3258,"nodeType":"RevertStatement","src":"2716:50:24"}]}},{"expression":{"arguments":[{"id":3263,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"2800:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3261,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:24","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3193,"id":3265,"nodeType":"Return","src":"2786:21:24"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"2172:112:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:24","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"value","nameLocation":"2318:5:24","nodeType":"VariableDeclaration","scope":3267,"src":"2310:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"length","nameLocation":"2333:6:24","nodeType":"VariableDeclaration","scope":3267,"src":"2325:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:24"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"2364:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3191,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:24"},"scope":4260,"src":"2289:525:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"3046:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3280,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"3091:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3278,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:24","typeDescriptions":{}}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:24","typeDescriptions":{}}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3283,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3099:14:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3275,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3184,3267,3287],"referencedDeclaration":3267,"src":"3063:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3274,"id":3285,"nodeType":"Return","src":"3056:58:24"}]},"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"2820:148:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:24","nodeType":"FunctionDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"addr","nameLocation":"3002:4:24","nodeType":"VariableDeclaration","scope":3287,"src":"2994:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:24"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"3031:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3272,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:24"},"scope":4260,"src":"2973:148:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3351,"nodeType":"Block","src":"3378:642:24","statements":[{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:24","nodeType":"VariableDeclaration","scope":3351,"src":"3388:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3295,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3303,"initialValue":{"arguments":[{"arguments":[{"id":3300,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"3428:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3299,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3184,3267,3287],"referencedDeclaration":3287,"src":"3416:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3297,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:24","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:24"},{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:24","nodeType":"VariableDeclaration","scope":3351,"src":"3519:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3306,"nodeType":"VariableDeclarationStatement","src":"3519:17:24"},{"AST":{"nativeSrc":"3571:78:24","nodeType":"YulBlock","src":"3571:78:24","statements":[{"nativeSrc":"3585:54:24","nodeType":"YulAssignment","src":"3585:54:24","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:24","nodeType":"YulLiteral","src":"3602:2:24","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:24","nodeType":"YulIdentifier","src":"3620:6:24"},{"kind":"number","nativeSrc":"3628:4:24","nodeType":"YulLiteral","src":"3628:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:24","nodeType":"YulIdentifier","src":"3616:3:24"},"nativeSrc":"3616:17:24","nodeType":"YulFunctionCall","src":"3616:17:24"},{"kind":"number","nativeSrc":"3635:2:24","nodeType":"YulLiteral","src":"3635:2:24","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:24","nodeType":"YulIdentifier","src":"3606:9:24"},"nativeSrc":"3606:32:24","nodeType":"YulFunctionCall","src":"3606:32:24"}],"functionName":{"name":"shr","nativeSrc":"3598:3:24","nodeType":"YulIdentifier","src":"3598:3:24"},"nativeSrc":"3598:41:24","nodeType":"YulFunctionCall","src":"3598:41:24"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:24","nodeType":"YulIdentifier","src":"3585:9:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3296,"isOffset":false,"isSlot":false,"src":"3620:6:24","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"3585:9:24","valueSize":1}],"flags":["memory-safe"],"id":3307,"nodeType":"InlineAssembly","src":"3546:103:24"},{"body":{"id":3344,"nodeType":"Block","src":"3692:291:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3798:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3325,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"3827:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3327,"indexExpression":{"id":3326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"3834:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3323,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:24","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"IfStatement","src":"3794:150:24","trueBody":{"id":3338,"nodeType":"Block","src":"3844:100:24","statements":[{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3332,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"3912:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3334,"indexExpression":{"id":3333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"3919:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3337,"nodeType":"ExpressionStatement","src":"3912:17:24"}]}},{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3340,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3957:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"3957:15:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"3680:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3345,"initializationExpression":{"assignments":[3309],"declarations":[{"constant":false,"id":3309,"mutability":"mutable","name":"i","nameLocation":"3672:1:24","nodeType":"VariableDeclaration","scope":3345,"src":"3664:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3311,"initialValue":{"hexValue":"3431","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:24","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:24","subExpression":{"id":3315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"3689:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3317,"nodeType":"ExpressionStatement","src":"3687:3:24"},"nodeType":"ForStatement","src":"3659:324:24"},{"expression":{"arguments":[{"id":3348,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"4006:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3346,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:24","typeDescriptions":{}}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3294,"id":3350,"nodeType":"Return","src":"3992:21:24"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"3127:165:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3352,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:24","nodeType":"FunctionDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"addr","nameLocation":"3334:4:24","nodeType":"VariableDeclaration","scope":3352,"src":"3326:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3289,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:24"},"returnParameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3352,"src":"3363:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3292,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:24"},"scope":4260,"src":"3297:723:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3388,"nodeType":"Block","src":"4175:104:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4198:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3362,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:24","typeDescriptions":{}}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:24","memberName":"length","nodeType":"MemberAccess","src":"4192:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"4217:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:24","typeDescriptions":{}}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:24","memberName":"length","nodeType":"MemberAccess","src":"4211:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4246:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3374,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:24","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3373,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"4269:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3380,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:24","typeDescriptions":{}}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3379,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3361,"id":3387,"nodeType":"Return","src":"4185:87:24"}]},"documentation":{"id":3353,"nodeType":"StructuredDocumentation","src":"4026:66:24","text":" @dev Returns true if the two strings are equal."},"id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:24","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"a","nameLocation":"4126:1:24","nodeType":"VariableDeclaration","scope":3389,"src":"4112:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3354,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"b","nameLocation":"4143:1:24","nodeType":"VariableDeclaration","scope":3389,"src":"4129:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3356,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:24"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3389,"src":"4169:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3359,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:24"},"scope":4260,"src":"4097:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"4576:64:24","statements":[{"expression":{"arguments":[{"id":3398,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"4603:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3402,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"4619:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3400,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:24","typeDescriptions":{}}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:24","memberName":"length","nodeType":"MemberAccess","src":"4613:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3397,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3408,3439],"referencedDeclaration":3439,"src":"4593:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3396,"id":3406,"nodeType":"Return","src":"4586:47:24"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"4285:214:24","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:24","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"input","nameLocation":"4537:5:24","nodeType":"VariableDeclaration","scope":3408,"src":"4523:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3391,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:24"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"4567:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:24"},"scope":4260,"src":"4504:136:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"5038:153:24","statements":[{"assignments":[3421,3423],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"success","nameLocation":"5054:7:24","nodeType":"VariableDeclaration","scope":3438,"src":"5049:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3420,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3423,"mutability":"mutable","name":"value","nameLocation":"5071:5:24","nodeType":"VariableDeclaration","scope":3438,"src":"5063:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3429,"initialValue":{"arguments":[{"id":3425,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"5093:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3426,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"5100:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3427,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"5107:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3424,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3460,3497],"referencedDeclaration":3497,"src":"5080:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:24"},{"condition":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:24","subExpression":{"id":3430,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5126:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3435,"nodeType":"IfStatement","src":"5121:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3432,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5142:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3434,"nodeType":"RevertStatement","src":"5135:27:24"}},{"expression":{"id":3436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5179:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3419,"id":3437,"nodeType":"Return","src":"5172:12:24"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"4646:287:24","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:24","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"input","nameLocation":"4971:5:24","nodeType":"VariableDeclaration","scope":3439,"src":"4957:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3410,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"begin","nameLocation":"4986:5:24","nodeType":"VariableDeclaration","scope":3439,"src":"4978:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"end","nameLocation":"5001:3:24","nodeType":"VariableDeclaration","scope":3439,"src":"4993:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:24"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"5029:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:24"},"scope":4260,"src":"4938:253:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"5512:83:24","statements":[{"expression":{"arguments":[{"id":3450,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"5558:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3454,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"5574:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3452,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:24","typeDescriptions":{}}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:24","memberName":"length","nodeType":"MemberAccess","src":"5568:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3449,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"5529:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3448,"id":3458,"nodeType":"Return","src":"5522:66:24"}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"5197:215:24","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:24","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"input","nameLocation":"5453:5:24","nodeType":"VariableDeclaration","scope":3460,"src":"5439:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3441,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:24"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"success","nameLocation":"5488:7:24","nodeType":"VariableDeclaration","scope":3460,"src":"5483:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3444,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"value","nameLocation":"5505:5:24","nodeType":"VariableDeclaration","scope":3460,"src":"5497:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:24"},"scope":4260,"src":"5417:178:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3496,"nodeType":"Block","src":"5997:144:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"6011:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3477,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"6023:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3475,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:24","typeDescriptions":{}}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:24","memberName":"length","nodeType":"MemberAccess","src":"6017:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"6040:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3482,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"6048:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3489,"nodeType":"IfStatement","src":"6007:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3473,"id":3488,"nodeType":"Return","src":"6053:17:24"}},{"expression":{"arguments":[{"id":3491,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"6116:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3492,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"6123:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3493,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"6130:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3490,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"6087:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3473,"id":3495,"nodeType":"Return","src":"6080:54:24"}]},"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"5601:238:24","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3497,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:24","nodeType":"FunctionDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"input","nameLocation":"5889:5:24","nodeType":"VariableDeclaration","scope":3497,"src":"5875:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3462,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"begin","nameLocation":"5912:5:24","nodeType":"VariableDeclaration","scope":3497,"src":"5904:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3467,"mutability":"mutable","name":"end","nameLocation":"5935:3:24","nodeType":"VariableDeclaration","scope":3497,"src":"5927:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3466,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:24"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"success","nameLocation":"5973:7:24","nodeType":"VariableDeclaration","scope":3497,"src":"5968:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3469,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"value","nameLocation":"5990:5:24","nodeType":"VariableDeclaration","scope":3497,"src":"5982:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:24"},"scope":4260,"src":"5844:297:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3566,"nodeType":"Block","src":"6521:347:24","statements":[{"assignments":[3512],"declarations":[{"constant":false,"id":3512,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:24","nodeType":"VariableDeclaration","scope":3566,"src":"6531:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3511,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3517,"initialValue":{"arguments":[{"id":3515,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"6559:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3513,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:24","typeDescriptions":{}}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:24"},{"assignments":[3519],"declarations":[{"constant":false,"id":3519,"mutability":"mutable","name":"result","nameLocation":"6584:6:24","nodeType":"VariableDeclaration","scope":3566,"src":"6576:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3521,"initialValue":{"hexValue":"30","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:24"},{"body":{"id":3560,"nodeType":"Block","src":"6642:189:24","statements":[{"assignments":[3533],"declarations":[{"constant":false,"id":3533,"mutability":"mutable","name":"chr","nameLocation":"6662:3:24","nodeType":"VariableDeclaration","scope":3560,"src":"6656:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3532,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3543,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3538,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"6711:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"6719:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3537,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"6688:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3535,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:24","typeDescriptions":{}}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3534,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"6668:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"6741:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:24","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3551,"nodeType":"IfStatement","src":"6737:30:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3510,"id":3550,"nodeType":"Return","src":"6750:17:24"}},{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"6781:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ExpressionStatement","src":"6781:12:24"},{"expression":{"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"6807:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3557,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"6817:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3559,"nodeType":"ExpressionStatement","src":"6807:13:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"6628:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3527,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"6632:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3561,"initializationExpression":{"assignments":[3523],"declarations":[{"constant":false,"id":3523,"mutability":"mutable","name":"i","nameLocation":"6617:1:24","nodeType":"VariableDeclaration","scope":3561,"src":"6609:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3525,"initialValue":{"id":3524,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"6621:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:24","subExpression":{"id":3529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"6639:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3531,"nodeType":"ExpressionStatement","src":"6637:3:24"},"nodeType":"ForStatement","src":"6604:227:24"},{"expression":{"components":[{"hexValue":"74727565","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"6854:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3510,"id":3565,"nodeType":"Return","src":"6840:21:24"}]},"documentation":{"id":3498,"nodeType":"StructuredDocumentation","src":"6147:201:24","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3567,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:24","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"input","nameLocation":"6414:5:24","nodeType":"VariableDeclaration","scope":3567,"src":"6400:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3499,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"begin","nameLocation":"6437:5:24","nodeType":"VariableDeclaration","scope":3567,"src":"6429:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"end","nameLocation":"6460:3:24","nodeType":"VariableDeclaration","scope":3567,"src":"6452:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:24"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"success","nameLocation":"6497:7:24","nodeType":"VariableDeclaration","scope":3567,"src":"6492:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3506,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"value","nameLocation":"6514:5:24","nodeType":"VariableDeclaration","scope":3567,"src":"6506:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:24"},"scope":4260,"src":"6353:515:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3585,"nodeType":"Block","src":"7165:63:24","statements":[{"expression":{"arguments":[{"id":3576,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7191:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3580,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7207:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3578,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:24","typeDescriptions":{}}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:24","memberName":"length","nodeType":"MemberAccess","src":"7201:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3575,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3586,3617],"referencedDeclaration":3617,"src":"7182:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3574,"id":3584,"nodeType":"Return","src":"7175:46:24"}]},"documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"6874:216:24","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3586,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:24","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"input","nameLocation":"7127:5:24","nodeType":"VariableDeclaration","scope":3586,"src":"7113:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3569,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:24"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3586,"src":"7157:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3572,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:24"},"scope":4260,"src":"7095:133:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3616,"nodeType":"Block","src":"7633:151:24","statements":[{"assignments":[3599,3601],"declarations":[{"constant":false,"id":3599,"mutability":"mutable","name":"success","nameLocation":"7649:7:24","nodeType":"VariableDeclaration","scope":3616,"src":"7644:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3598,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"value","nameLocation":"7665:5:24","nodeType":"VariableDeclaration","scope":3616,"src":"7658:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3600,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3607,"initialValue":{"arguments":[{"id":3603,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"7686:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3604,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"7693:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3605,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"7700:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3602,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3638,3680],"referencedDeclaration":3680,"src":"7674:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:24"},{"condition":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:24","subExpression":{"id":3608,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"7719:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3613,"nodeType":"IfStatement","src":"7714:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3610,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"7735:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3612,"nodeType":"RevertStatement","src":"7728:27:24"}},{"expression":{"id":3614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"7772:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3597,"id":3615,"nodeType":"Return","src":"7765:12:24"}]},"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"7234:296:24","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3617,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:24","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"input","nameLocation":"7567:5:24","nodeType":"VariableDeclaration","scope":3617,"src":"7553:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3588,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"begin","nameLocation":"7582:5:24","nodeType":"VariableDeclaration","scope":3617,"src":"7574:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"end","nameLocation":"7597:3:24","nodeType":"VariableDeclaration","scope":3617,"src":"7589:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:24"},"returnParameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3617,"src":"7625:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3595,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:24"},"scope":4260,"src":"7535:249:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3637,"nodeType":"Block","src":"8175:82:24","statements":[{"expression":{"arguments":[{"id":3628,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"8220:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3632,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"8236:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3630,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:24","typeDescriptions":{}}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:24","memberName":"length","nodeType":"MemberAccess","src":"8230:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3627,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"8192:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3626,"id":3636,"nodeType":"Return","src":"8185:65:24"}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"7790:287:24","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:24","nodeType":"FunctionDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"input","nameLocation":"8117:5:24","nodeType":"VariableDeclaration","scope":3638,"src":"8103:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3619,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:24"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"success","nameLocation":"8152:7:24","nodeType":"VariableDeclaration","scope":3638,"src":"8147:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3622,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"value","nameLocation":"8168:5:24","nodeType":"VariableDeclaration","scope":3638,"src":"8161:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3624,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:24"},"scope":4260,"src":"8082:175:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3643,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:24","nodeType":"VariableDeclaration","scope":4260,"src":"8263:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3679,"nodeType":"Block","src":"8779:143:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"8793:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3660,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8805:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3658,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:24","typeDescriptions":{}}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:24","memberName":"length","nodeType":"MemberAccess","src":"8799:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8822:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3665,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"8830:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3672,"nodeType":"IfStatement","src":"8789:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3656,"id":3671,"nodeType":"Return","src":"8835:17:24"}},{"expression":{"arguments":[{"id":3674,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8897:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3675,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8904:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3676,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"8911:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3673,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"8869:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3656,"id":3678,"nodeType":"Return","src":"8862:53:24"}]},"documentation":{"id":3644,"nodeType":"StructuredDocumentation","src":"8320:303:24","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3680,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:24","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"input","nameLocation":"8672:5:24","nodeType":"VariableDeclaration","scope":3680,"src":"8658:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3645,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"begin","nameLocation":"8695:5:24","nodeType":"VariableDeclaration","scope":3680,"src":"8687:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3650,"mutability":"mutable","name":"end","nameLocation":"8718:3:24","nodeType":"VariableDeclaration","scope":3680,"src":"8710:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:24"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"success","nameLocation":"8756:7:24","nodeType":"VariableDeclaration","scope":3680,"src":"8751:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3652,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"value","nameLocation":"8772:5:24","nodeType":"VariableDeclaration","scope":3680,"src":"8765:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3654,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:24"},"scope":4260,"src":"8628:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3800,"nodeType":"Block","src":"9299:812:24","statements":[{"assignments":[3695],"declarations":[{"constant":false,"id":3695,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:24","nodeType":"VariableDeclaration","scope":3800,"src":"9309:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3694,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3700,"initialValue":{"arguments":[{"id":3698,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"9337:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3696,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:24","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:24"},{"assignments":[3702],"declarations":[{"constant":false,"id":3702,"mutability":"mutable","name":"sign","nameLocation":"9407:4:24","nodeType":"VariableDeclaration","scope":3800,"src":"9400:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3701,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3718,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"9414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3704,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"9423:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3713,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"9471:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3714,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"9479:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3712,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"9448:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3710,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:24","typeDescriptions":{}}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:24","trueExpression":{"arguments":[{"hexValue":"30","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3706,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:24","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:24"},{"assignments":[3720],"declarations":[{"constant":false,"id":3720,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:24","nodeType":"VariableDeclaration","scope":3800,"src":"9567:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3719,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3727,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9587:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3722,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:24","typeDescriptions":{}}},"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:24"},{"assignments":[3729],"declarations":[{"constant":false,"id":3729,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:24","nodeType":"VariableDeclaration","scope":3800,"src":"9616:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3728,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3736,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9636:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3731,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:24","typeDescriptions":{}}},"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:24"},{"assignments":[3738],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"offset","nameLocation":"9673:6:24","nodeType":"VariableDeclaration","scope":3800,"src":"9665:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3745,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"9683:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3740,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"9699:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"9682:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:24"},{"assignments":[3747,3749],"declarations":[{"constant":false,"id":3747,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:24","nodeType":"VariableDeclaration","scope":3800,"src":"9733:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3746,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:24","nodeType":"VariableDeclaration","scope":3800,"src":"9750:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3757,"initialValue":{"arguments":[{"id":3751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"9783:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"9790:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3753,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"9798:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3755,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"9806:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3750,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3460,3497],"referencedDeclaration":3497,"src":"9770:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9825:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"9839:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3760,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"9850:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9967:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3779,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"9981:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"9997:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3782,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"10009:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3693,"id":3797,"nodeType":"Return","src":"10087:17:24"},"id":3798,"nodeType":"IfStatement","src":"9963:141:24","trueBody":{"id":3793,"nodeType":"Block","src":"10025:56:24","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3787,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3786,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:24","memberName":"min","nodeType":"MemberAccess","src":"10053:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3693,"id":3792,"nodeType":"Return","src":"10039:31:24"}]}},"id":3799,"nodeType":"IfStatement","src":"9821:283:24","trueBody":{"id":3777,"nodeType":"Block","src":"9866:91:24","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3764,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"9894:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3772,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"9936:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3770,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:24","typeDescriptions":{}}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:24","trueExpression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:24","subExpression":{"arguments":[{"id":3767,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"9917:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3765,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:24","typeDescriptions":{}}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3693,"id":3776,"nodeType":"Return","src":"9880:66:24"}]}}]},"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"8928:200:24","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3801,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:24","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"input","nameLocation":"9193:5:24","nodeType":"VariableDeclaration","scope":3801,"src":"9179:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3682,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3685,"mutability":"mutable","name":"begin","nameLocation":"9216:5:24","nodeType":"VariableDeclaration","scope":3801,"src":"9208:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"end","nameLocation":"9239:3:24","nodeType":"VariableDeclaration","scope":3801,"src":"9231:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:24"},"returnParameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"success","nameLocation":"9276:7:24","nodeType":"VariableDeclaration","scope":3801,"src":"9271:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3689,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"value","nameLocation":"9292:5:24","nodeType":"VariableDeclaration","scope":3801,"src":"9285:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3691,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:24"},"scope":4260,"src":"9133:978:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3819,"nodeType":"Block","src":"10456:67:24","statements":[{"expression":{"arguments":[{"id":3810,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"10486:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3814,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"10502:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3812,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:24","typeDescriptions":{}}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:24","memberName":"length","nodeType":"MemberAccess","src":"10496:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3809,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3820,3851],"referencedDeclaration":3851,"src":"10473:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3808,"id":3818,"nodeType":"Return","src":"10466:50:24"}]},"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"10117:259:24","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3820,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:24","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"input","nameLocation":"10417:5:24","nodeType":"VariableDeclaration","scope":3820,"src":"10403:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3803,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:24"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3820,"src":"10447:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:24"},"scope":4260,"src":"10381:142:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3850,"nodeType":"Block","src":"10937:156:24","statements":[{"assignments":[3833,3835],"declarations":[{"constant":false,"id":3833,"mutability":"mutable","name":"success","nameLocation":"10953:7:24","nodeType":"VariableDeclaration","scope":3850,"src":"10948:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3832,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"value","nameLocation":"10970:5:24","nodeType":"VariableDeclaration","scope":3850,"src":"10962:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3841,"initialValue":{"arguments":[{"id":3837,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"10995:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3838,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"11002:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3839,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11009:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3836,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3872,3909],"referencedDeclaration":3909,"src":"10979:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:24"},{"condition":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:24","subExpression":{"id":3842,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"11028:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3847,"nodeType":"IfStatement","src":"11023:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3844,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"11044:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3846,"nodeType":"RevertStatement","src":"11037:27:24"}},{"expression":{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"11081:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3831,"id":3849,"nodeType":"Return","src":"11074:12:24"}]},"documentation":{"id":3821,"nodeType":"StructuredDocumentation","src":"10529:300:24","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:24","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"input","nameLocation":"10870:5:24","nodeType":"VariableDeclaration","scope":3851,"src":"10856:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3822,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"begin","nameLocation":"10885:5:24","nodeType":"VariableDeclaration","scope":3851,"src":"10877:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"end","nameLocation":"10900:3:24","nodeType":"VariableDeclaration","scope":3851,"src":"10892:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:24"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3851,"src":"10928:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:24"},"scope":4260,"src":"10834:259:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3871,"nodeType":"Block","src":"11420:86:24","statements":[{"expression":{"arguments":[{"id":3862,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"11469:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3866,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"11485:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3864,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:24","typeDescriptions":{}}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:24","memberName":"length","nodeType":"MemberAccess","src":"11479:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3861,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"11437:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3860,"id":3870,"nodeType":"Return","src":"11430:69:24"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"11099:218:24","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3872,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:24","nodeType":"FunctionDefinition","parameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"input","nameLocation":"11361:5:24","nodeType":"VariableDeclaration","scope":3872,"src":"11347:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3853,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:24"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"success","nameLocation":"11396:7:24","nodeType":"VariableDeclaration","scope":3872,"src":"11391:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3856,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3859,"mutability":"mutable","name":"value","nameLocation":"11413:5:24","nodeType":"VariableDeclaration","scope":3872,"src":"11405:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:24"},"scope":4260,"src":"11322:184:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3908,"nodeType":"Block","src":"11914:147:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"11928:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3889,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"11940:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3887,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:24","typeDescriptions":{}}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:24","memberName":"length","nodeType":"MemberAccess","src":"11934:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3893,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"11957:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3894,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"11965:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3901,"nodeType":"IfStatement","src":"11924:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3885,"id":3900,"nodeType":"Return","src":"11970:17:24"}},{"expression":{"arguments":[{"id":3903,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"12036:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3904,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"12043:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3905,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"12050:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3902,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"12004:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3885,"id":3907,"nodeType":"Return","src":"11997:57:24"}]},"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"11512:241:24","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3909,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:24","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"input","nameLocation":"11806:5:24","nodeType":"VariableDeclaration","scope":3909,"src":"11792:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3874,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"begin","nameLocation":"11829:5:24","nodeType":"VariableDeclaration","scope":3909,"src":"11821:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"end","nameLocation":"11852:3:24","nodeType":"VariableDeclaration","scope":3909,"src":"11844:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:24"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"success","nameLocation":"11890:7:24","nodeType":"VariableDeclaration","scope":3909,"src":"11885:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3881,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"value","nameLocation":"11907:5:24","nodeType":"VariableDeclaration","scope":3909,"src":"11899:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:24"},"scope":4260,"src":"11758:303:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4011,"nodeType":"Block","src":"12447:880:24","statements":[{"assignments":[3924],"declarations":[{"constant":false,"id":3924,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:24","nodeType":"VariableDeclaration","scope":4011,"src":"12457:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3923,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3929,"initialValue":{"arguments":[{"id":3927,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"12485:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3925,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:24","typeDescriptions":{}}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:24"},{"assignments":[3931],"declarations":[{"constant":false,"id":3931,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:24","nodeType":"VariableDeclaration","scope":4011,"src":"12539:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3930,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3951,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"12557:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"12563:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3941,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"12607:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3942,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"12615:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"12584:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3938,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:24","typeDescriptions":{}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3945,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:24","typeDescriptions":{}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:24"},{"assignments":[3953],"declarations":[{"constant":false,"id":3953,"mutability":"mutable","name":"offset","nameLocation":"12727:6:24","nodeType":"VariableDeclaration","scope":4011,"src":"12719:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3959,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3954,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"12736:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"12736:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:24"},{"assignments":[3961],"declarations":[{"constant":false,"id":3961,"mutability":"mutable","name":"result","nameLocation":"12777:6:24","nodeType":"VariableDeclaration","scope":4011,"src":"12769:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3963,"initialValue":{"hexValue":"30","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:24"},{"body":{"id":4005,"nodeType":"Block","src":"12844:446:24","statements":[{"assignments":[3977],"declarations":[{"constant":false,"id":3977,"mutability":"mutable","name":"chr","nameLocation":"12864:3:24","nodeType":"VariableDeclaration","scope":4005,"src":"12858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3976,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3987,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3982,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"12913:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12921:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3981,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"12890:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3979,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:24","typeDescriptions":{}}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3978,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"12870:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"12943:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"IfStatement","src":"12939:31:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3922,"id":3994,"nodeType":"Return","src":"12953:17:24"}},{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"12984:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"12984:12:24"},{"id":4004,"nodeType":"UncheckedBlock","src":"13010:270:24","statements":[{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"13252:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4001,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"13262:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4003,"nodeType":"ExpressionStatement","src":"13252:13:24"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12830:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3971,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"12834:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4006,"initializationExpression":{"assignments":[3965],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"i","nameLocation":"12810:1:24","nodeType":"VariableDeclaration","scope":4006,"src":"12802:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3969,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"12814:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3967,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"12822:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:24","subExpression":{"id":3973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12841:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3975,"nodeType":"ExpressionStatement","src":"12839:3:24"},"nodeType":"ForStatement","src":"12797:493:24"},{"expression":{"components":[{"hexValue":"74727565","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"13313:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3922,"id":4010,"nodeType":"Return","src":"13299:21:24"}]},"documentation":{"id":3910,"nodeType":"StructuredDocumentation","src":"12067:204:24","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:24","nodeType":"FunctionDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"input","nameLocation":"12340:5:24","nodeType":"VariableDeclaration","scope":4012,"src":"12326:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3911,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3914,"mutability":"mutable","name":"begin","nameLocation":"12363:5:24","nodeType":"VariableDeclaration","scope":4012,"src":"12355:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"end","nameLocation":"12386:3:24","nodeType":"VariableDeclaration","scope":4012,"src":"12378:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:24"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"success","nameLocation":"12423:7:24","nodeType":"VariableDeclaration","scope":4012,"src":"12418:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3918,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"value","nameLocation":"12440:5:24","nodeType":"VariableDeclaration","scope":4012,"src":"12432:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:24"},"scope":4260,"src":"12276:1051:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4030,"nodeType":"Block","src":"13625:67:24","statements":[{"expression":{"arguments":[{"id":4021,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"13655:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4025,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"13671:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4023,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:24","typeDescriptions":{}}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:24","memberName":"length","nodeType":"MemberAccess","src":"13665:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4020,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4031,4062],"referencedDeclaration":4062,"src":"13642:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4019,"id":4029,"nodeType":"Return","src":"13635:50:24"}]},"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"13333:212:24","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4031,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:24","nodeType":"FunctionDefinition","parameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"input","nameLocation":"13586:5:24","nodeType":"VariableDeclaration","scope":4031,"src":"13572:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4014,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:24"},"returnParameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"13616:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4017,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:24"},"scope":4260,"src":"13550:142:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4061,"nodeType":"Block","src":"14058:165:24","statements":[{"assignments":[4044,4046],"declarations":[{"constant":false,"id":4044,"mutability":"mutable","name":"success","nameLocation":"14074:7:24","nodeType":"VariableDeclaration","scope":4061,"src":"14069:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4043,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"value","nameLocation":"14091:5:24","nodeType":"VariableDeclaration","scope":4061,"src":"14083:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4045,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4052,"initialValue":{"arguments":[{"id":4048,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"14116:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4049,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"14123:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4050,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"14130:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4047,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4083,4187],"referencedDeclaration":4187,"src":"14100:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:24"},{"condition":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:24","subExpression":{"id":4053,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"14149:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4058,"nodeType":"IfStatement","src":"14144:50:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4055,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"14165:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4057,"nodeType":"RevertStatement","src":"14158:36:24"}},{"expression":{"id":4059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"14211:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4042,"id":4060,"nodeType":"Return","src":"14204:12:24"}]},"documentation":{"id":4032,"nodeType":"StructuredDocumentation","src":"13698:252:24","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:24","nodeType":"FunctionDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"input","nameLocation":"13991:5:24","nodeType":"VariableDeclaration","scope":4062,"src":"13977:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4033,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4036,"mutability":"mutable","name":"begin","nameLocation":"14006:5:24","nodeType":"VariableDeclaration","scope":4062,"src":"13998:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4038,"mutability":"mutable","name":"end","nameLocation":"14021:3:24","nodeType":"VariableDeclaration","scope":4062,"src":"14013:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:24"},"returnParameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4062,"src":"14049:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:24"},"scope":4260,"src":"13955:268:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4082,"nodeType":"Block","src":"14523:70:24","statements":[{"expression":{"arguments":[{"id":4073,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"14556:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4077,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"14572:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4075,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:24","typeDescriptions":{}}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:24","memberName":"length","nodeType":"MemberAccess","src":"14566:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4072,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4083,4187],"referencedDeclaration":4187,"src":"14540:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4071,"id":4081,"nodeType":"Return","src":"14533:53:24"}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"14229:191:24","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":4083,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:24","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"input","nameLocation":"14464:5:24","nodeType":"VariableDeclaration","scope":4083,"src":"14450:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4064,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:24"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"success","nameLocation":"14499:7:24","nodeType":"VariableDeclaration","scope":4083,"src":"14494:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4067,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"value","nameLocation":"14516:5:24","nodeType":"VariableDeclaration","scope":4083,"src":"14508:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:24"},"scope":4260,"src":"14425:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4186,"nodeType":"Block","src":"14963:733:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"14977:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4100,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"14989:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4098,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:24","typeDescriptions":{}}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:24","memberName":"length","nodeType":"MemberAccess","src":"14983:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"15006:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4105,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"15014:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4115,"nodeType":"IfStatement","src":"14973:72:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:24","typeDescriptions":{}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4096,"id":4114,"nodeType":"Return","src":"15019:26:24"}},{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:24","nodeType":"VariableDeclaration","scope":4186,"src":"15056:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4116,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4140,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"15074:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"15080:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4129,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"15130:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4127,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:24","typeDescriptions":{}}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4131,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"15138:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4126,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"15101:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4124,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:24","typeDescriptions":{}}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4134,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:24","typeDescriptions":{}}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:24"},{"assignments":[4142],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:24","nodeType":"VariableDeclaration","scope":4186,"src":"15242:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4150,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4144,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"15272:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"15272:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"15359:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4152,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"15365:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4154,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"15374:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4184,"nodeType":"Block","src":"15639:51:24","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4178,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:24","typeDescriptions":{}}},"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4096,"id":4183,"nodeType":"Return","src":"15653:26:24"}]},"id":4185,"nodeType":"IfStatement","src":"15355:335:24","trueBody":{"id":4176,"nodeType":"Block","src":"15390:243:24","statements":[{"assignments":[4157,4159],"declarations":[{"constant":false,"id":4157,"mutability":"mutable","name":"s","nameLocation":"15511:1:24","nodeType":"VariableDeclaration","scope":4176,"src":"15506:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4156,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"v","nameLocation":"15522:1:24","nodeType":"VariableDeclaration","scope":4176,"src":"15514:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4165,"initialValue":{"arguments":[{"id":4161,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"15559:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4162,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"15566:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4163,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"15573:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4160,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"15527:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:24"},{"expression":{"components":[{"id":4166,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"15599:1:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4171,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"15618:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4169,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:24","typeDescriptions":{}}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4167,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:24","typeDescriptions":{}}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4096,"id":4175,"nodeType":"Return","src":"15591:31:24"}]}}]},"documentation":{"id":4084,"nodeType":"StructuredDocumentation","src":"14599:203:24","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:24","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"input","nameLocation":"14855:5:24","nodeType":"VariableDeclaration","scope":4187,"src":"14841:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4085,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"begin","nameLocation":"14878:5:24","nodeType":"VariableDeclaration","scope":4187,"src":"14870:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"end","nameLocation":"14901:3:24","nodeType":"VariableDeclaration","scope":4187,"src":"14893:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:24"},"returnParameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"success","nameLocation":"14939:7:24","nodeType":"VariableDeclaration","scope":4187,"src":"14934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4092,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"value","nameLocation":"14956:5:24","nodeType":"VariableDeclaration","scope":4187,"src":"14948:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4094,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:24"},"scope":4260,"src":"14807:889:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4246,"nodeType":"Block","src":"15765:461:24","statements":[{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"value","nameLocation":"15781:5:24","nodeType":"VariableDeclaration","scope":4246,"src":"15775:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4194,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4200,"initialValue":{"arguments":[{"id":4198,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"15795:3:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4196,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:24","typeDescriptions":{}}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:24"},{"id":4243,"nodeType":"UncheckedBlock","src":"15959:238:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"15987:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:24","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16001:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:24","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16047:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16061:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:24","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16108:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16122:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:24","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4235,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4234,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:24","memberName":"max","nodeType":"MemberAccess","src":"16171:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4193,"id":4239,"nodeType":"Return","src":"16164:22:24"},"id":4240,"nodeType":"IfStatement","src":"16104:82:24","trueBody":{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16134:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:24","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4233,"nodeType":"ExpressionStatement","src":"16134:11:24"}},"id":4241,"nodeType":"IfStatement","src":"16043:143:24","trueBody":{"expression":{"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16074:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:24","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4222,"nodeType":"ExpressionStatement","src":"16074:11:24"}},"id":4242,"nodeType":"IfStatement","src":"15983:203:24","trueBody":{"expression":{"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16013:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4211,"nodeType":"ExpressionStatement","src":"16013:11:24"}}]},{"expression":{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"16214:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4193,"id":4245,"nodeType":"Return","src":"16207:12:24"}]},"id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:24","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"chr","nameLocation":"15731:3:24","nodeType":"VariableDeclaration","scope":4247,"src":"15724:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4188,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:24"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"15758:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4191,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:24"},"scope":4260,"src":"15702:524:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4258,"nodeType":"Block","src":"16611:225:24","statements":[{"AST":{"nativeSrc":"16760:70:24","nodeType":"YulBlock","src":"16760:70:24","statements":[{"nativeSrc":"16774:46:24","nodeType":"YulAssignment","src":"16774:46:24","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:24","nodeType":"YulIdentifier","src":"16793:6:24"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:24","nodeType":"YulLiteral","src":"16805:4:24","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:24","nodeType":"YulIdentifier","src":"16811:6:24"}],"functionName":{"name":"add","nativeSrc":"16801:3:24","nodeType":"YulIdentifier","src":"16801:3:24"},"nativeSrc":"16801:17:24","nodeType":"YulFunctionCall","src":"16801:17:24"}],"functionName":{"name":"add","nativeSrc":"16789:3:24","nodeType":"YulIdentifier","src":"16789:3:24"},"nativeSrc":"16789:30:24","nodeType":"YulFunctionCall","src":"16789:30:24"}],"functionName":{"name":"mload","nativeSrc":"16783:5:24","nodeType":"YulIdentifier","src":"16783:5:24"},"nativeSrc":"16783:37:24","nodeType":"YulFunctionCall","src":"16783:37:24"},"variableNames":[{"name":"value","nativeSrc":"16774:5:24","nodeType":"YulIdentifier","src":"16774:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4250,"isOffset":false,"isSlot":false,"src":"16793:6:24","valueSize":1},{"declaration":4252,"isOffset":false,"isSlot":false,"src":"16811:6:24","valueSize":1},{"declaration":4255,"isOffset":false,"isSlot":false,"src":"16774:5:24","valueSize":1}],"flags":["memory-safe"],"id":4257,"nodeType":"InlineAssembly","src":"16735:95:24"}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"16232:268:24","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4259,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:24","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:24","nodeType":"VariableDeclaration","scope":4259,"src":"16537:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4249,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"offset","nameLocation":"16566:6:24","nodeType":"VariableDeclaration","scope":4259,"src":"16558:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:24"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"value","nameLocation":"16604:5:24","nodeType":"VariableDeclaration","scope":4259,"src":"16596:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:24"},"scope":4260,"src":"16505:331:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4261,"src":"297:16541:24","usedErrors":[3084,3087,3090],"usedEvents":[]}],"src":"101:16738:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4608]},"id":4609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4262,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4263,"nodeType":"StructuredDocumentation","src":"138:205:25","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4608,"linearizedBaseContracts":[4608],"name":"ECDSA","nameLocation":"352:5:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4268,"members":[{"id":4264,"name":"NoError","nameLocation":"392:7:25","nodeType":"EnumValue","src":"392:7:25"},{"id":4265,"name":"InvalidSignature","nameLocation":"409:16:25","nodeType":"EnumValue","src":"409:16:25"},{"id":4266,"name":"InvalidSignatureLength","nameLocation":"435:22:25","nodeType":"EnumValue","src":"435:22:25"},{"id":4267,"name":"InvalidSignatureS","nameLocation":"467:17:25","nodeType":"EnumValue","src":"467:17:25"}],"name":"RecoverError","nameLocation":"369:12:25","nodeType":"EnumDefinition","src":"364:126:25"},{"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"496:63:25","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4271,"name":"ECDSAInvalidSignature","nameLocation":"570:21:25","nodeType":"ErrorDefinition","parameters":{"id":4270,"nodeType":"ParameterList","parameters":[],"src":"591:2:25"},"src":"564:30:25"},{"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"600:60:25","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4276,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:25","nodeType":"ErrorDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"length","nameLocation":"707:6:25","nodeType":"VariableDeclaration","scope":4276,"src":"699:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:25"},"src":"665:50:25"},{"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"721:85:25","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4281,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:25","nodeType":"ErrorDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"s","nameLocation":"848:1:25","nodeType":"VariableDeclaration","scope":4281,"src":"840:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:25"},"src":"811:40:25"},{"body":{"id":4333,"nodeType":"Block","src":"2285:622:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4296,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"2299:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:25","memberName":"length","nodeType":"MemberAccess","src":"2299:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:25","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4331,"nodeType":"Block","src":"2793:108:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4318,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:25","typeDescriptions":{}}},"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4322,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"2827:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:25","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"2827:35:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4326,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"2872:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:25","memberName":"length","nodeType":"MemberAccess","src":"2872:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:25","typeDescriptions":{}}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4295,"id":4330,"nodeType":"Return","src":"2807:83:25"}]},"id":4332,"nodeType":"IfStatement","src":"2295:606:25","trueBody":{"id":4317,"nodeType":"Block","src":"2323:464:25","statements":[{"assignments":[4301],"declarations":[{"constant":false,"id":4301,"mutability":"mutable","name":"r","nameLocation":"2345:1:25","nodeType":"VariableDeclaration","scope":4317,"src":"2337:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4302,"nodeType":"VariableDeclarationStatement","src":"2337:9:25"},{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"s","nameLocation":"2368:1:25","nodeType":"VariableDeclaration","scope":4317,"src":"2360:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4305,"nodeType":"VariableDeclarationStatement","src":"2360:9:25"},{"assignments":[4307],"declarations":[{"constant":false,"id":4307,"mutability":"mutable","name":"v","nameLocation":"2389:1:25","nodeType":"VariableDeclaration","scope":4317,"src":"2383:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4306,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4308,"nodeType":"VariableDeclarationStatement","src":"2383:7:25"},{"AST":{"nativeSrc":"2560:171:25","nodeType":"YulBlock","src":"2560:171:25","statements":[{"nativeSrc":"2578:32:25","nodeType":"YulAssignment","src":"2578:32:25","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:25","nodeType":"YulIdentifier","src":"2593:9:25"},{"kind":"number","nativeSrc":"2604:4:25","nodeType":"YulLiteral","src":"2604:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:25","nodeType":"YulIdentifier","src":"2589:3:25"},"nativeSrc":"2589:20:25","nodeType":"YulFunctionCall","src":"2589:20:25"}],"functionName":{"name":"mload","nativeSrc":"2583:5:25","nodeType":"YulIdentifier","src":"2583:5:25"},"nativeSrc":"2583:27:25","nodeType":"YulFunctionCall","src":"2583:27:25"},"variableNames":[{"name":"r","nativeSrc":"2578:1:25","nodeType":"YulIdentifier","src":"2578:1:25"}]},{"nativeSrc":"2627:32:25","nodeType":"YulAssignment","src":"2627:32:25","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:25","nodeType":"YulIdentifier","src":"2642:9:25"},{"kind":"number","nativeSrc":"2653:4:25","nodeType":"YulLiteral","src":"2653:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:25","nodeType":"YulIdentifier","src":"2638:3:25"},"nativeSrc":"2638:20:25","nodeType":"YulFunctionCall","src":"2638:20:25"}],"functionName":{"name":"mload","nativeSrc":"2632:5:25","nodeType":"YulIdentifier","src":"2632:5:25"},"nativeSrc":"2632:27:25","nodeType":"YulFunctionCall","src":"2632:27:25"},"variableNames":[{"name":"s","nativeSrc":"2627:1:25","nodeType":"YulIdentifier","src":"2627:1:25"}]},{"nativeSrc":"2676:41:25","nodeType":"YulAssignment","src":"2676:41:25","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:25","nodeType":"YulLiteral","src":"2686:1:25","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:25","nodeType":"YulIdentifier","src":"2699:9:25"},{"kind":"number","nativeSrc":"2710:4:25","nodeType":"YulLiteral","src":"2710:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:25","nodeType":"YulIdentifier","src":"2695:3:25"},"nativeSrc":"2695:20:25","nodeType":"YulFunctionCall","src":"2695:20:25"}],"functionName":{"name":"mload","nativeSrc":"2689:5:25","nodeType":"YulIdentifier","src":"2689:5:25"},"nativeSrc":"2689:27:25","nodeType":"YulFunctionCall","src":"2689:27:25"}],"functionName":{"name":"byte","nativeSrc":"2681:4:25","nodeType":"YulIdentifier","src":"2681:4:25"},"nativeSrc":"2681:36:25","nodeType":"YulFunctionCall","src":"2681:36:25"},"variableNames":[{"name":"v","nativeSrc":"2676:1:25","nodeType":"YulIdentifier","src":"2676:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4301,"isOffset":false,"isSlot":false,"src":"2578:1:25","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"2627:1:25","valueSize":1},{"declaration":4286,"isOffset":false,"isSlot":false,"src":"2593:9:25","valueSize":1},{"declaration":4286,"isOffset":false,"isSlot":false,"src":"2642:9:25","valueSize":1},{"declaration":4286,"isOffset":false,"isSlot":false,"src":"2699:9:25","valueSize":1},{"declaration":4307,"isOffset":false,"isSlot":false,"src":"2676:1:25","valueSize":1}],"flags":["memory-safe"],"id":4309,"nodeType":"InlineAssembly","src":"2535:196:25"},{"expression":{"arguments":[{"id":4311,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"2762:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4312,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"2768:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4313,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"2771:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4314,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"2774:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4310,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4334,4414,4522],"referencedDeclaration":4522,"src":"2751:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4295,"id":4316,"nodeType":"Return","src":"2744:32:25"}]}}]},"documentation":{"id":4282,"nodeType":"StructuredDocumentation","src":"857:1267:25","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4334,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:25","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"hash","nameLocation":"2166:4:25","nodeType":"VariableDeclaration","scope":4334,"src":"2158:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"signature","nameLocation":"2193:9:25","nodeType":"VariableDeclaration","scope":4334,"src":"2180:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4285,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:25"},"returnParameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:25","nodeType":"VariableDeclaration","scope":4334,"src":"2232:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4288,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"err","nameLocation":"2264:3:25","nodeType":"VariableDeclaration","scope":4334,"src":"2251:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4291,"nodeType":"UserDefinedTypeName","pathNode":{"id":4290,"name":"RecoverError","nameLocations":["2251:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"2251:12:25"},"referencedDeclaration":4268,"src":"2251:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:25","nodeType":"VariableDeclaration","scope":4334,"src":"2269:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:25"},"scope":4608,"src":"2129:778:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"3801:168:25","statements":[{"assignments":[4345,4348,4350],"declarations":[{"constant":false,"id":4345,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:25","nodeType":"VariableDeclaration","scope":4363,"src":"3812:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4344,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"error","nameLocation":"3844:5:25","nodeType":"VariableDeclaration","scope":4363,"src":"3831:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4347,"nodeType":"UserDefinedTypeName","pathNode":{"id":4346,"name":"RecoverError","nameLocations":["3831:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"3831:12:25"},"referencedDeclaration":4268,"src":"3831:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4350,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:25","nodeType":"VariableDeclaration","scope":4363,"src":"3851:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4355,"initialValue":{"arguments":[{"id":4352,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"3882:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4353,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"3888:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4351,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4334,4414,4522],"referencedDeclaration":4334,"src":"3871:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:25"},{"expression":{"arguments":[{"id":4357,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"3920:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},{"id":4358,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"3927:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4356,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"3908:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4268_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4360,"nodeType":"ExpressionStatement","src":"3908:28:25"},{"expression":{"id":4361,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"3953:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4343,"id":4362,"nodeType":"Return","src":"3946:16:25"}]},"documentation":{"id":4335,"nodeType":"StructuredDocumentation","src":"2913:796:25","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:25","nodeType":"FunctionDefinition","parameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"hash","nameLocation":"3739:4:25","nodeType":"VariableDeclaration","scope":4364,"src":"3731:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"signature","nameLocation":"3758:9:25","nodeType":"VariableDeclaration","scope":4364,"src":"3745:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4338,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:25"},"returnParameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4364,"src":"3792:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4341,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:25"},"scope":4608,"src":"3714:255:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"4348:342:25","statements":[{"id":4412,"nodeType":"UncheckedBlock","src":"4358:326:25","statements":[{"assignments":[4382],"declarations":[{"constant":false,"id":4382,"mutability":"mutable","name":"s","nameLocation":"4390:1:25","nodeType":"VariableDeclaration","scope":4412,"src":"4382:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4389,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"4394:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:25","typeDescriptions":{}}},"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:25"},{"assignments":[4391],"declarations":[{"constant":false,"id":4391,"mutability":"mutable","name":"v","nameLocation":"4591:1:25","nodeType":"VariableDeclaration","scope":4412,"src":"4585:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4390,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4404,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4396,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"4610:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:25","typeDescriptions":{}}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:25","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4392,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:25","typeDescriptions":{}}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:25"},{"expression":{"arguments":[{"id":4406,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"4659:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4407,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"4665:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4408,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"4668:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4409,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"4671:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4405,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4334,4414,4522],"referencedDeclaration":4522,"src":"4648:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4380,"id":4411,"nodeType":"Return","src":"4641:32:25"}]}]},"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"3975:205:25","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:25","nodeType":"FunctionDefinition","parameters":{"id":4372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"hash","nameLocation":"4222:4:25","nodeType":"VariableDeclaration","scope":4414,"src":"4214:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4369,"mutability":"mutable","name":"r","nameLocation":"4244:1:25","nodeType":"VariableDeclaration","scope":4414,"src":"4236:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4371,"mutability":"mutable","name":"vs","nameLocation":"4263:2:25","nodeType":"VariableDeclaration","scope":4414,"src":"4255:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:25"},"returnParameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:25","nodeType":"VariableDeclaration","scope":4414,"src":"4295:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4373,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"err","nameLocation":"4327:3:25","nodeType":"VariableDeclaration","scope":4414,"src":"4314:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4376,"nodeType":"UserDefinedTypeName","pathNode":{"id":4375,"name":"RecoverError","nameLocations":["4314:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"4314:12:25"},"referencedDeclaration":4268,"src":"4314:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4379,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:25","nodeType":"VariableDeclaration","scope":4414,"src":"4332:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:25"},"scope":4608,"src":"4185:505:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4446,"nodeType":"Block","src":"4903:164:25","statements":[{"assignments":[4427,4430,4432],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:25","nodeType":"VariableDeclaration","scope":4446,"src":"4914:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4426,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"error","nameLocation":"4946:5:25","nodeType":"VariableDeclaration","scope":4446,"src":"4933:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4429,"nodeType":"UserDefinedTypeName","pathNode":{"id":4428,"name":"RecoverError","nameLocations":["4933:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"4933:12:25"},"referencedDeclaration":4268,"src":"4933:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:25","nodeType":"VariableDeclaration","scope":4446,"src":"4953:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4438,"initialValue":{"arguments":[{"id":4434,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"4984:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4435,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"4990:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4436,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"4993:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4433,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4334,4414,4522],"referencedDeclaration":4414,"src":"4973:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:25"},{"expression":{"arguments":[{"id":4440,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"5018:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},{"id":4441,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"5025:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4439,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"5006:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4268_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4443,"nodeType":"ExpressionStatement","src":"5006:28:25"},{"expression":{"id":4444,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"5051:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4425,"id":4445,"nodeType":"Return","src":"5044:16:25"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"4696:116:25","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4447,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:25","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"hash","nameLocation":"4842:4:25","nodeType":"VariableDeclaration","scope":4447,"src":"4834:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4419,"mutability":"mutable","name":"r","nameLocation":"4856:1:25","nodeType":"VariableDeclaration","scope":4447,"src":"4848:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"vs","nameLocation":"4867:2:25","nodeType":"VariableDeclaration","scope":4447,"src":"4859:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:25"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4447,"src":"4894:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4423,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:25"},"scope":4608,"src":"4817:250:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"5382:1372:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4468,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"6278:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:25","typeDescriptions":{}}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4482,"nodeType":"IfStatement","src":"6266:164:25","trueBody":{"id":4481,"nodeType":"Block","src":"6351:79:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4472,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:25","typeDescriptions":{}}},"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4476,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"6385:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:25","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"6385:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},{"id":4478,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"6417:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4465,"id":4480,"nodeType":"Return","src":"6365:54:25"}]}},{"assignments":[4484],"declarations":[{"constant":false,"id":4484,"mutability":"mutable","name":"signer","nameLocation":"6532:6:25","nodeType":"VariableDeclaration","scope":4521,"src":"6524:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4483,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4491,"initialValue":{"arguments":[{"id":4486,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"6551:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4487,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"6557:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4488,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"6560:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4489,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"6563:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4485,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:25","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"6579:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4493,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:25","typeDescriptions":{}}},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4511,"nodeType":"IfStatement","src":"6575:113:25","trueBody":{"id":4510,"nodeType":"Block","src":"6601:87:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4498,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:25","typeDescriptions":{}}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4502,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"6635:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:25","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4265,"src":"6635:29:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:25","typeDescriptions":{}}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4465,"id":4509,"nodeType":"Return","src":"6615:62:25"}]}},{"expression":{"components":[{"id":4512,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"6706:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4513,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"6714:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:25","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4264,"src":"6714:20:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:25","typeDescriptions":{}}},"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4465,"id":4520,"nodeType":"Return","src":"6698:49:25"}]},"documentation":{"id":4448,"nodeType":"StructuredDocumentation","src":"5073:125:25","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:25","nodeType":"FunctionDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"hash","nameLocation":"5240:4:25","nodeType":"VariableDeclaration","scope":4522,"src":"5232:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"v","nameLocation":"5260:1:25","nodeType":"VariableDeclaration","scope":4522,"src":"5254:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4451,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"r","nameLocation":"5279:1:25","nodeType":"VariableDeclaration","scope":4522,"src":"5271:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"s","nameLocation":"5298:1:25","nodeType":"VariableDeclaration","scope":4522,"src":"5290:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:25"},"returnParameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:25","nodeType":"VariableDeclaration","scope":4522,"src":"5329:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4458,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4462,"mutability":"mutable","name":"err","nameLocation":"5361:3:25","nodeType":"VariableDeclaration","scope":4522,"src":"5348:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4461,"nodeType":"UserDefinedTypeName","pathNode":{"id":4460,"name":"RecoverError","nameLocations":["5348:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"5348:12:25"},"referencedDeclaration":4268,"src":"5348:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:25","nodeType":"VariableDeclaration","scope":4522,"src":"5366:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:25"},"scope":4608,"src":"5203:1551:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4557,"nodeType":"Block","src":"6981:166:25","statements":[{"assignments":[4537,4540,4542],"declarations":[{"constant":false,"id":4537,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:25","nodeType":"VariableDeclaration","scope":4557,"src":"6992:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4536,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"error","nameLocation":"7024:5:25","nodeType":"VariableDeclaration","scope":4557,"src":"7011:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4539,"nodeType":"UserDefinedTypeName","pathNode":{"id":4538,"name":"RecoverError","nameLocations":["7011:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"7011:12:25"},"referencedDeclaration":4268,"src":"7011:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:25","nodeType":"VariableDeclaration","scope":4557,"src":"7031:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4549,"initialValue":{"arguments":[{"id":4544,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"7062:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4545,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"7068:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4546,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"7071:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4547,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7074:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4543,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4334,4414,4522],"referencedDeclaration":4522,"src":"7051:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4268_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:25"},{"expression":{"arguments":[{"id":4551,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"7098:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},{"id":4552,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"7105:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4550,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"7086:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4268_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4554,"nodeType":"ExpressionStatement","src":"7086:28:25"},{"expression":{"id":4555,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"7131:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4535,"id":4556,"nodeType":"Return","src":"7124:16:25"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"6760:122:25","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4558,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:25","nodeType":"FunctionDefinition","parameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"hash","nameLocation":"6912:4:25","nodeType":"VariableDeclaration","scope":4558,"src":"6904:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"v","nameLocation":"6924:1:25","nodeType":"VariableDeclaration","scope":4558,"src":"6918:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4526,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"r","nameLocation":"6935:1:25","nodeType":"VariableDeclaration","scope":4558,"src":"6927:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"s","nameLocation":"6946:1:25","nodeType":"VariableDeclaration","scope":4558,"src":"6938:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:25"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4558,"src":"6972:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4533,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:25"},"scope":4608,"src":"6887:260:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4606,"nodeType":"Block","src":"7352:460:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4567,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"7366:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4568,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"7375:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:25","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4264,"src":"7375:20:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"7462:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4574,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"7471:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:25","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4265,"src":"7471:29:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"7567:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4582,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"7576:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:25","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"7576:35:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"7701:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4594,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"7710:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4268_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:25","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"7710:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4602,"nodeType":"IfStatement","src":"7697:109:25","trueBody":{"id":4601,"nodeType":"Block","src":"7742:64:25","statements":[{"errorCall":{"arguments":[{"id":4598,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"7786:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4597,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"7763:22:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4600,"nodeType":"RevertStatement","src":"7756:39:25"}]}},"id":4603,"nodeType":"IfStatement","src":"7563:243:25","trueBody":{"id":4592,"nodeType":"Block","src":"7613:78:25","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4588,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"7670:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:25","typeDescriptions":{}}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4585,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"7634:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4591,"nodeType":"RevertStatement","src":"7627:53:25"}]}},"id":4604,"nodeType":"IfStatement","src":"7458:348:25","trueBody":{"id":4580,"nodeType":"Block","src":"7502:55:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4577,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"7523:21:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4579,"nodeType":"RevertStatement","src":"7516:30:25"}]}},"id":4605,"nodeType":"IfStatement","src":"7362:444:25","trueBody":{"id":4572,"nodeType":"Block","src":"7397:55:25","statements":[{"functionReturnParameters":4566,"id":4571,"nodeType":"Return","src":"7411:7:25"}]}}]},"documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"7153:122:25","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:25","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"error","nameLocation":"7314:5:25","nodeType":"VariableDeclaration","scope":4607,"src":"7301:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4561,"nodeType":"UserDefinedTypeName","pathNode":{"id":4560,"name":"RecoverError","nameLocations":["7301:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"7301:12:25"},"referencedDeclaration":4268,"src":"7301:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4268","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:25","nodeType":"VariableDeclaration","scope":4607,"src":"7321:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:25"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[],"src":"7352:0:25"},"scope":4608,"src":"7280:532:25","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4609,"src":"344:7470:25","usedErrors":[4271,4276,4281],"usedEvents":[]}],"src":"112:7703:25"},"id":25},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4835],"IERC5267":[200],"MessageHashUtils":[4909],"ShortString":[2725],"ShortStrings":[2936]},"id":4836,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4610,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4836,"sourceUnit":4910,"src":"139:56:26","symbolAliases":[{"foreign":{"id":4611,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"147:16:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4836,"sourceUnit":2937,"src":"196:62:26","symbolAliases":[{"foreign":{"id":4613,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"204:12:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4614,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"218:11:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4836,"sourceUnit":201,"src":"259:55:26","symbolAliases":[{"foreign":{"id":4616,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"267:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4619,"name":"IERC5267","nameLocations":["1988:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":200,"src":"1988:8:26"},"id":4620,"nodeType":"InheritanceSpecifier","src":"1988:8:26"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4618,"nodeType":"StructuredDocumentation","src":"316:1643:26","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4835,"linearizedBaseContracts":[4835,200],"name":"EIP712","nameLocation":"1978:6:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4622,"libraryName":{"id":4621,"name":"ShortStrings","nameLocations":["2009:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":2936,"src":"2009:12:26"},"nodeType":"UsingForDirective","src":"2003:25:26"},{"constant":true,"id":4627,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:26","nodeType":"VariableDeclaration","scope":4835,"src":"2034:140:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4624,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4629,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:26","nodeType":"VariableDeclaration","scope":4835,"src":"2373:48:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4631,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:26","nodeType":"VariableDeclaration","scope":4835,"src":"2427:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4633,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:26","nodeType":"VariableDeclaration","scope":4835,"src":"2473:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4632,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4635,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:26","nodeType":"VariableDeclaration","scope":4835,"src":"2517:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4637,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:26","nodeType":"VariableDeclaration","scope":4835,"src":"2560:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4640,"mutability":"immutable","name":"_name","nameLocation":"2637:5:26","nodeType":"VariableDeclaration","scope":4835,"src":"2607:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":4639,"nodeType":"UserDefinedTypeName","pathNode":{"id":4638,"name":"ShortString","nameLocations":["2607:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"2607:11:26"},"referencedDeclaration":2725,"src":"2607:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4643,"mutability":"immutable","name":"_version","nameLocation":"2678:8:26","nodeType":"VariableDeclaration","scope":4835,"src":"2648:38:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"},"typeName":{"id":4642,"nodeType":"UserDefinedTypeName","pathNode":{"id":4641,"name":"ShortString","nameLocations":["2648:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"2648:11:26"},"referencedDeclaration":2725,"src":"2648:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4645,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:26","nodeType":"VariableDeclaration","scope":4835,"src":"2692:28:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4644,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4647,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:26","nodeType":"VariableDeclaration","scope":4835,"src":"2726:31:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4646,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4704,"nodeType":"Block","src":"3383:376:26","statements":[{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4655,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"3393:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4658,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"3432:13:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4656,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"3401:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:26","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"3401:30:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2725_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"src":"3393:53:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"id":4661,"nodeType":"ExpressionStatement","src":"3393:53:26"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4662,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"3456:8:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4665,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"3501:16:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4663,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"3467:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:26","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"3467:33:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2725_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"src":"3456:62:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"id":4668,"nodeType":"ExpressionStatement","src":"3456:62:26"},{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4669,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"3528:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4673,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"3558:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4671,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:26","typeDescriptions":{}}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4670,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4677,"nodeType":"ExpressionStatement","src":"3528:36:26"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"3574:14:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4682,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"3607:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:26","typeDescriptions":{}}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4679,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4686,"nodeType":"ExpressionStatement","src":"3574:42:26"},{"expression":{"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3627:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4688,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4691,"nodeType":"ExpressionStatement","src":"3627:30:26"},{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4692,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"3667:22:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4693,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"3692:21:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4696,"nodeType":"ExpressionStatement","src":"3667:48:26"},{"expression":{"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4697,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"3725:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4700,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}],"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4698,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:26","typeDescriptions":{}}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4703,"nodeType":"ExpressionStatement","src":"3725:27:26"}]},"documentation":{"id":4648,"nodeType":"StructuredDocumentation","src":"2764:559:26","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4705,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"name","nameLocation":"3354:4:26","nodeType":"VariableDeclaration","scope":4705,"src":"3340:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4649,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"version","nameLocation":"3374:7:26","nodeType":"VariableDeclaration","scope":4705,"src":"3360:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4651,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:26"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[],"src":"3383:0:26"},"scope":4835,"src":"3328:431:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4730,"nodeType":"Block","src":"3907:200:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4713,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}],"id":4712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4711,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:26","typeDescriptions":{}}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4715,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"3938:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4717,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4719,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3970:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4728,"nodeType":"Block","src":"4046:55:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4725,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"4067:21:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4710,"id":4727,"nodeType":"Return","src":"4060:30:26"}]},"id":4729,"nodeType":"IfStatement","src":"3917:184:26","trueBody":{"id":4724,"nodeType":"Block","src":"3986:54:26","statements":[{"expression":{"id":4722,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"4007:22:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4710,"id":4723,"nodeType":"Return","src":"4000:29:26"}]}}]},"documentation":{"id":4706,"nodeType":"StructuredDocumentation","src":"3765:75:26","text":" @dev Returns the domain separator for the current chain."},"id":4731,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:26","nodeType":"FunctionDefinition","parameters":{"id":4707,"nodeType":"ParameterList","parameters":[],"src":"3872:2:26"},"returnParameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4731,"src":"3898:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:26"},"scope":4835,"src":"3845:262:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4751,"nodeType":"Block","src":"4177:115:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":4739,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"4215:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4740,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"4226:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4741,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"4239:14:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4742,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4746,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4744,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:26","typeDescriptions":{}}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4737,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:26","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4736,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4735,"id":4750,"nodeType":"Return","src":"4187:98:26"}]},"id":4752,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:26","nodeType":"FunctionDefinition","parameters":{"id":4732,"nodeType":"ParameterList","parameters":[],"src":"4143:2:26"},"returnParameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4752,"src":"4168:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:26"},"scope":4835,"src":"4113:179:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4767,"nodeType":"Block","src":"5003:90:26","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4762,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5053:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4764,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5075:10:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4760,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"5020:16:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4909_$","typeString":"type(library MessageHashUtils)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:26","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4908,"src":"5020:32:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4759,"id":4766,"nodeType":"Return","src":"5013:73:26"}]},"documentation":{"id":4753,"nodeType":"StructuredDocumentation","src":"4298:614:26","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4768,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:26","nodeType":"FunctionDefinition","parameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:26","nodeType":"VariableDeclaration","scope":4768,"src":"4943:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:26"},"returnParameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4768,"src":"4994:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:26"},"scope":4835,"src":"4917:176:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[199],"body":{"id":4809,"nodeType":"Block","src":"5472:229:26","statements":[{"expression":{"components":[{"hexValue":"0f","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4788,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"5533:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4790,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"5560:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4792,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4796,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4835","typeString":"contract EIP712"}],"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4794,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:26","typeDescriptions":{}}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:26","typeDescriptions":{}}},"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4803,"nodeType":"ArrayTypeName","src":"5672:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4786,"id":4808,"nodeType":"Return","src":"5482:212:26"}]},"documentation":{"id":4769,"nodeType":"StructuredDocumentation","src":"5099:40:26","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":4810,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:26","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[],"src":"5165:2:26"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"fields","nameLocation":"5249:6:26","nodeType":"VariableDeclaration","scope":4810,"src":"5242:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4771,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4774,"mutability":"mutable","name":"name","nameLocation":"5283:4:26","nodeType":"VariableDeclaration","scope":4810,"src":"5269:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4773,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4776,"mutability":"mutable","name":"version","nameLocation":"5315:7:26","nodeType":"VariableDeclaration","scope":4810,"src":"5301:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4775,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4778,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:26","nodeType":"VariableDeclaration","scope":4810,"src":"5336:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4780,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:26","nodeType":"VariableDeclaration","scope":4810,"src":"5365:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4779,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4782,"mutability":"mutable","name":"salt","nameLocation":"5412:4:26","nodeType":"VariableDeclaration","scope":4810,"src":"5404:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4785,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:26","nodeType":"VariableDeclaration","scope":4810,"src":"5430:27:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4784,"nodeType":"ArrayTypeName","src":"5430:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:26"},"scope":4835,"src":"5144:557:26","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4821,"nodeType":"Block","src":"6082:65:26","statements":[{"expression":{"arguments":[{"id":4818,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"6126:13:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4816,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"6099:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:26","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"6099:26:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2725_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4815,"id":4820,"nodeType":"Return","src":"6092:48:26"}]},"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"5707:256:26","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4822,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:26","nodeType":"FunctionDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[],"src":"6041:2:26"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4822,"src":"6067:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4813,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:26"},"scope":4835,"src":"6021:126:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4833,"nodeType":"Block","src":"6537:71:26","statements":[{"expression":{"arguments":[{"id":4830,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"6584:16:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4828,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"6554:8:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2725","typeString":"ShortString"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:26","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"6554:29:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2725_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2725_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4827,"id":4832,"nodeType":"Return","src":"6547:54:26"}]},"documentation":{"id":4823,"nodeType":"StructuredDocumentation","src":"6153:262:26","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4834,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:26","nodeType":"FunctionDefinition","parameters":{"id":4824,"nodeType":"ParameterList","parameters":[],"src":"6496:2:26"},"returnParameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4834,"src":"6522:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4825,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:26"},"scope":4835,"src":"6473:135:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4836,"src":"1960:4650:26","usedErrors":[2733,2735],"usedEvents":[180]}],"src":"113:6498:26"},"id":26},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4909],"Strings":[4260]},"id":4910,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4837,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4910,"sourceUnit":4261,"src":"149:39:27","symbolAliases":[{"foreign":{"id":4838,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"157:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4840,"nodeType":"StructuredDocumentation","src":"190:330:27","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4909,"linearizedBaseContracts":[4909],"name":"MessageHashUtils","nameLocation":"529:16:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":4849,"nodeType":"Block","src":"1314:341:27","statements":[{"AST":{"nativeSrc":"1349:300:27","nodeType":"YulBlock","src":"1349:300:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:27","nodeType":"YulLiteral","src":"1370:4:27","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:27","nodeType":"YulLiteral","src":"1376:34:27","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:27","nodeType":"YulIdentifier","src":"1363:6:27"},"nativeSrc":"1363:48:27","nodeType":"YulFunctionCall","src":"1363:48:27"},"nativeSrc":"1363:48:27","nodeType":"YulExpressionStatement","src":"1363:48:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:27","nodeType":"YulLiteral","src":"1472:4:27","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:27","nodeType":"YulIdentifier","src":"1478:11:27"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:27","nodeType":"YulIdentifier","src":"1465:6:27"},"nativeSrc":"1465:25:27","nodeType":"YulFunctionCall","src":"1465:25:27"},"nativeSrc":"1465:25:27","nodeType":"YulExpressionStatement","src":"1465:25:27"},{"nativeSrc":"1544:31:27","nodeType":"YulAssignment","src":"1544:31:27","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:27","nodeType":"YulLiteral","src":"1564:4:27","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:27","nodeType":"YulLiteral","src":"1570:4:27","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:27","nodeType":"YulIdentifier","src":"1554:9:27"},"nativeSrc":"1554:21:27","nodeType":"YulFunctionCall","src":"1554:21:27"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:27","nodeType":"YulIdentifier","src":"1544:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4846,"isOffset":false,"isSlot":false,"src":"1544:6:27","valueSize":1},{"declaration":4843,"isOffset":false,"isSlot":false,"src":"1478:11:27","valueSize":1}],"flags":["memory-safe"],"id":4848,"nodeType":"InlineAssembly","src":"1324:325:27"}]},"documentation":{"id":4841,"nodeType":"StructuredDocumentation","src":"552:665:27","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4850,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:27","nodeType":"FunctionDefinition","parameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:27","nodeType":"VariableDeclaration","scope":4850,"src":"1254:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:27"},"returnParameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4846,"mutability":"mutable","name":"digest","nameLocation":"1306:6:27","nodeType":"VariableDeclaration","scope":4850,"src":"1298:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:27"},"scope":4909,"src":"1222:433:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4875,"nodeType":"Block","src":"2207:143:27","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4867,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"2316:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:27","memberName":"length","nodeType":"MemberAccess","src":"2316:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4865,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"2299:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4260_$","typeString":"type(library Strings)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:27","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"2299:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4863,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:27","typeDescriptions":{}}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4871,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"2334:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4859,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:27","typeDescriptions":{}}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:27","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:27","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4858,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4857,"id":4874,"nodeType":"Return","src":"2217:126:27"}]},"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"1661:455:27","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4876,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:27","nodeType":"FunctionDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"message","nameLocation":"2166:7:27","nodeType":"VariableDeclaration","scope":4876,"src":"2153:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4852,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:27"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4876,"src":"2198:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:27"},"scope":4909,"src":"2121:229:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4895,"nodeType":"Block","src":"2804:80:27","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4890,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"2860:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"2871:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4887,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:27","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4886,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4885,"id":4894,"nodeType":"Return","src":"2814:63:27"}]},"documentation":{"id":4877,"nodeType":"StructuredDocumentation","src":"2356:332:27","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4896,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:27","nodeType":"FunctionDefinition","parameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"validator","nameLocation":"2742:9:27","nodeType":"VariableDeclaration","scope":4896,"src":"2734:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4878,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4881,"mutability":"mutable","name":"data","nameLocation":"2766:4:27","nodeType":"VariableDeclaration","scope":4896,"src":"2753:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4880,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:27"},"returnParameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4896,"src":"2795:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:27"},"scope":4909,"src":"2693:191:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4907,"nodeType":"Block","src":"3435:265:27","statements":[{"AST":{"nativeSrc":"3470:224:27","nodeType":"YulBlock","src":"3470:224:27","statements":[{"nativeSrc":"3484:22:27","nodeType":"YulVariableDeclaration","src":"3484:22:27","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:27","nodeType":"YulLiteral","src":"3501:4:27","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:27","nodeType":"YulIdentifier","src":"3495:5:27"},"nativeSrc":"3495:11:27","nodeType":"YulFunctionCall","src":"3495:11:27"},"variables":[{"name":"ptr","nativeSrc":"3488:3:27","nodeType":"YulTypedName","src":"3488:3:27","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:27","nodeType":"YulIdentifier","src":"3526:3:27"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:27","nodeType":"YulLiteral","src":"3531:10:27","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:27","nodeType":"YulIdentifier","src":"3519:6:27"},"nativeSrc":"3519:23:27","nodeType":"YulFunctionCall","src":"3519:23:27"},"nativeSrc":"3519:23:27","nodeType":"YulExpressionStatement","src":"3519:23:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:27","nodeType":"YulIdentifier","src":"3566:3:27"},{"kind":"number","nativeSrc":"3571:4:27","nodeType":"YulLiteral","src":"3571:4:27","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:27","nodeType":"YulIdentifier","src":"3562:3:27"},"nativeSrc":"3562:14:27","nodeType":"YulFunctionCall","src":"3562:14:27"},{"name":"domainSeparator","nativeSrc":"3578:15:27","nodeType":"YulIdentifier","src":"3578:15:27"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:27","nodeType":"YulIdentifier","src":"3555:6:27"},"nativeSrc":"3555:39:27","nodeType":"YulFunctionCall","src":"3555:39:27"},"nativeSrc":"3555:39:27","nodeType":"YulExpressionStatement","src":"3555:39:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:27","nodeType":"YulIdentifier","src":"3618:3:27"},{"kind":"number","nativeSrc":"3623:4:27","nodeType":"YulLiteral","src":"3623:4:27","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:27","nodeType":"YulIdentifier","src":"3614:3:27"},"nativeSrc":"3614:14:27","nodeType":"YulFunctionCall","src":"3614:14:27"},{"name":"structHash","nativeSrc":"3630:10:27","nodeType":"YulIdentifier","src":"3630:10:27"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:27","nodeType":"YulIdentifier","src":"3607:6:27"},"nativeSrc":"3607:34:27","nodeType":"YulFunctionCall","src":"3607:34:27"},"nativeSrc":"3607:34:27","nodeType":"YulExpressionStatement","src":"3607:34:27"},{"nativeSrc":"3654:30:27","nodeType":"YulAssignment","src":"3654:30:27","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:27","nodeType":"YulIdentifier","src":"3674:3:27"},{"kind":"number","nativeSrc":"3679:4:27","nodeType":"YulLiteral","src":"3679:4:27","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:27","nodeType":"YulIdentifier","src":"3664:9:27"},"nativeSrc":"3664:20:27","nodeType":"YulFunctionCall","src":"3664:20:27"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:27","nodeType":"YulIdentifier","src":"3654:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4904,"isOffset":false,"isSlot":false,"src":"3654:6:27","valueSize":1},{"declaration":4899,"isOffset":false,"isSlot":false,"src":"3578:15:27","valueSize":1},{"declaration":4901,"isOffset":false,"isSlot":false,"src":"3630:10:27","valueSize":1}],"flags":["memory-safe"],"id":4906,"nodeType":"InlineAssembly","src":"3445:249:27"}]},"documentation":{"id":4897,"nodeType":"StructuredDocumentation","src":"2890:431:27","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:27","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:27","nodeType":"VariableDeclaration","scope":4908,"src":"3351:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4901,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:27","nodeType":"VariableDeclaration","scope":4908,"src":"3376:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:27"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"digest","nameLocation":"3427:6:27","nodeType":"VariableDeclaration","scope":4908,"src":"3419:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:27"},"scope":4909,"src":"3326:374:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4910,"src":"521:3181:27","usedErrors":[],"usedEvents":[]}],"src":"123:3580:27"},"id":27},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4933],"IERC165":[4945]},"id":4934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4911,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4934,"sourceUnit":4946,"src":"140:38:28","symbolAliases":[{"foreign":{"id":4912,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"148:7:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4915,"name":"IERC165","nameLocations":["688:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":4945,"src":"688:7:28"},"id":4916,"nodeType":"InheritanceSpecifier","src":"688:7:28"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4914,"nodeType":"StructuredDocumentation","src":"180:479:28","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4933,"linearizedBaseContracts":[4933,4945],"name":"ERC165","nameLocation":"678:6:28","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4944],"body":{"id":4931,"nodeType":"Block","src":"845:64:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4924,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"862:11:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4926,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"882:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4945_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4945_$","typeString":"type(contract IERC165)"}],"id":4925,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4945","typeString":"type(contract IERC165)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:28","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4923,"id":4930,"nodeType":"Return","src":"855:47:28"}]},"documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"702:56:28","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4932,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:28","nodeType":"FunctionDefinition","parameters":{"id":4920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:28","nodeType":"VariableDeclaration","scope":4932,"src":"790:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4918,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:28"},"returnParameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4932,"src":"839:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4921,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:28"},"scope":4933,"src":"763:146:28","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4934,"src":"660:251:28","usedErrors":[],"usedEvents":[]}],"src":"114:798:28"},"id":28},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4945]},"id":4946,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4936,"nodeType":"StructuredDocumentation","src":"141:280:29","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4945,"linearizedBaseContracts":[4945],"name":"IERC165","nameLocation":"432:7:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"446:340:29","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4944,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:29","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:29","nodeType":"VariableDeclaration","scope":4944,"src":"818:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4938,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:29"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4944,"src":"861:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4941,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:29"},"scope":4945,"src":"791:76:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4946,"src":"422:447:29","usedErrors":[],"usedEvents":[]}],"src":"115:755:29"},"id":29},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6551],"Panic":[2650],"SafeCast":[8316]},"id":6552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4947,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6552,"sourceUnit":2651,"src":"129:35:30","symbolAliases":[{"foreign":{"id":4948,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"137:5:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6552,"sourceUnit":8317,"src":"165:40:30","symbolAliases":[{"foreign":{"id":4950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"173:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4952,"nodeType":"StructuredDocumentation","src":"207:73:30","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6551,"linearizedBaseContracts":[6551],"name":"Math","nameLocation":"289:4:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4957,"members":[{"id":4953,"name":"Floor","nameLocation":"324:5:30","nodeType":"EnumValue","src":"324:5:30"},{"id":4954,"name":"Ceil","nameLocation":"367:4:30","nodeType":"EnumValue","src":"367:4:30"},{"id":4955,"name":"Trunc","nameLocation":"409:5:30","nodeType":"EnumValue","src":"409:5:30"},{"id":4956,"name":"Expand","nameLocation":"439:6:30","nodeType":"EnumValue","src":"439:6:30"}],"name":"Rounding","nameLocation":"305:8:30","nodeType":"EnumDefinition","src":"300:169:30"},{"body":{"id":4988,"nodeType":"Block","src":"677:140:30","statements":[{"id":4987,"nodeType":"UncheckedBlock","src":"687:124:30","statements":[{"assignments":[4970],"declarations":[{"constant":false,"id":4970,"mutability":"mutable","name":"c","nameLocation":"719:1:30","nodeType":"VariableDeclaration","scope":4987,"src":"711:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4974,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"723:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4972,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"727:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"746:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"750:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4982,"nodeType":"IfStatement","src":"742:28:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4968,"id":4981,"nodeType":"Return","src":"753:17:30"}},{"expression":{"components":[{"hexValue":"74727565","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4984,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"798:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4968,"id":4986,"nodeType":"Return","src":"784:16:30"}]}]},"documentation":{"id":4958,"nodeType":"StructuredDocumentation","src":"475:106:30","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:30","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"a","nameLocation":"610:1:30","nodeType":"VariableDeclaration","scope":4989,"src":"602:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4962,"mutability":"mutable","name":"b","nameLocation":"621:1:30","nodeType":"VariableDeclaration","scope":4989,"src":"613:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:30"},"returnParameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"success","nameLocation":"652:7:30","nodeType":"VariableDeclaration","scope":4989,"src":"647:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4964,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4967,"mutability":"mutable","name":"result","nameLocation":"669:6:30","nodeType":"VariableDeclaration","scope":4989,"src":"661:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:30"},"scope":6551,"src":"586:231:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5016,"nodeType":"Block","src":"1028:113:30","statements":[{"id":5015,"nodeType":"UncheckedBlock","src":"1038:97:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"1066:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5002,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"1070:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5008,"nodeType":"IfStatement","src":"1062:28:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5000,"id":5007,"nodeType":"Return","src":"1073:17:30"}},{"expression":{"components":[{"hexValue":"74727565","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"1118:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"1122:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5013,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5000,"id":5014,"nodeType":"Return","src":"1104:20:30"}]}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"823:109:30","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":5017,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:30","nodeType":"FunctionDefinition","parameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"a","nameLocation":"961:1:30","nodeType":"VariableDeclaration","scope":5017,"src":"953:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"b","nameLocation":"972:1:30","nodeType":"VariableDeclaration","scope":5017,"src":"964:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:30"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"success","nameLocation":"1003:7:30","nodeType":"VariableDeclaration","scope":5017,"src":"998:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4996,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4999,"mutability":"mutable","name":"result","nameLocation":"1020:6:30","nodeType":"VariableDeclaration","scope":5017,"src":"1012:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:30"},"scope":6551,"src":"937:204:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5058,"nodeType":"Block","src":"1355:417:30","statements":[{"id":5057,"nodeType":"UncheckedBlock","src":"1365:401:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"1623:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5036,"nodeType":"IfStatement","src":"1619:28:30","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5028,"id":5035,"nodeType":"Return","src":"1631:16:30"}},{"assignments":[5038],"declarations":[{"constant":false,"id":5038,"mutability":"mutable","name":"c","nameLocation":"1669:1:30","nodeType":"VariableDeclaration","scope":5057,"src":"1661:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5042,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"1673:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5040,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"1677:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5043,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"1696:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"1700:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"1705:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5052,"nodeType":"IfStatement","src":"1692:33:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5028,"id":5051,"nodeType":"Return","src":"1708:17:30"}},{"expression":{"components":[{"hexValue":"74727565","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5054,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"1753:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5028,"id":5056,"nodeType":"Return","src":"1739:16:30"}]}]},"documentation":{"id":5018,"nodeType":"StructuredDocumentation","src":"1147:112:30","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":5059,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:30","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"a","nameLocation":"1288:1:30","nodeType":"VariableDeclaration","scope":5059,"src":"1280:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5022,"mutability":"mutable","name":"b","nameLocation":"1299:1:30","nodeType":"VariableDeclaration","scope":5059,"src":"1291:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:30"},"returnParameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"success","nameLocation":"1330:7:30","nodeType":"VariableDeclaration","scope":5059,"src":"1325:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5024,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5027,"mutability":"mutable","name":"result","nameLocation":"1347:6:30","nodeType":"VariableDeclaration","scope":5059,"src":"1339:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:30"},"scope":6551,"src":"1264:508:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5086,"nodeType":"Block","src":"1987:114:30","statements":[{"id":5085,"nodeType":"UncheckedBlock","src":"1997:98:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2025:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5078,"nodeType":"IfStatement","src":"2021:29:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5070,"id":5077,"nodeType":"Return","src":"2033:17:30"}},{"expression":{"components":[{"hexValue":"74727565","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"2078:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2082:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5070,"id":5084,"nodeType":"Return","src":"2064:20:30"}]}]},"documentation":{"id":5060,"nodeType":"StructuredDocumentation","src":"1778:113:30","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5087,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:30","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5062,"mutability":"mutable","name":"a","nameLocation":"1920:1:30","nodeType":"VariableDeclaration","scope":5087,"src":"1912:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5064,"mutability":"mutable","name":"b","nameLocation":"1931:1:30","nodeType":"VariableDeclaration","scope":5087,"src":"1923:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:30"},"returnParameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"success","nameLocation":"1962:7:30","nodeType":"VariableDeclaration","scope":5087,"src":"1957:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5066,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"result","nameLocation":"1979:6:30","nodeType":"VariableDeclaration","scope":5087,"src":"1971:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:30"},"scope":6551,"src":"1896:205:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5114,"nodeType":"Block","src":"2326:114:30","statements":[{"id":5113,"nodeType":"UncheckedBlock","src":"2336:98:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5099,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"2364:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5106,"nodeType":"IfStatement","src":"2360:29:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5098,"id":5105,"nodeType":"Return","src":"2372:17:30"}},{"expression":{"components":[{"hexValue":"74727565","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"2417:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5109,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"2421:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5098,"id":5112,"nodeType":"Return","src":"2403:20:30"}]}]},"documentation":{"id":5088,"nodeType":"StructuredDocumentation","src":"2107:123:30","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5115,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:30","nodeType":"FunctionDefinition","parameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"a","nameLocation":"2259:1:30","nodeType":"VariableDeclaration","scope":5115,"src":"2251:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5092,"mutability":"mutable","name":"b","nameLocation":"2270:1:30","nodeType":"VariableDeclaration","scope":5115,"src":"2262:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:30"},"returnParameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"success","nameLocation":"2301:7:30","nodeType":"VariableDeclaration","scope":5115,"src":"2296:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5094,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5097,"mutability":"mutable","name":"result","nameLocation":"2318:6:30","nodeType":"VariableDeclaration","scope":5115,"src":"2310:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:30"},"scope":6551,"src":"2235:205:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5141,"nodeType":"Block","src":"2912:207:30","statements":[{"id":5140,"nodeType":"UncheckedBlock","src":"2922:191:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"3060:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"3066:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"3070:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5134,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"3091:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5132,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"3075:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"3075:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5126,"id":5139,"nodeType":"Return","src":"3053:49:30"}]}]},"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"2446:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:30","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"condition","nameLocation":"2847:9:30","nodeType":"VariableDeclaration","scope":5142,"src":"2842:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5117,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5120,"mutability":"mutable","name":"a","nameLocation":"2866:1:30","nodeType":"VariableDeclaration","scope":5142,"src":"2858:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5122,"mutability":"mutable","name":"b","nameLocation":"2877:1:30","nodeType":"VariableDeclaration","scope":5142,"src":"2869:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:30"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5142,"src":"2903:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:30"},"scope":6551,"src":"2825:294:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5160,"nodeType":"Block","src":"3256:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"3281:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"3285:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"3288:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"3291:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5152,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"3273:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5151,"id":5159,"nodeType":"Return","src":"3266:27:30"}]},"documentation":{"id":5143,"nodeType":"StructuredDocumentation","src":"3125:59:30","text":" @dev Returns the largest of two numbers."},"id":5161,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:30","nodeType":"FunctionDefinition","parameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"a","nameLocation":"3210:1:30","nodeType":"VariableDeclaration","scope":5161,"src":"3202:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"b","nameLocation":"3221:1:30","nodeType":"VariableDeclaration","scope":5161,"src":"3213:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:30"},"returnParameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5161,"src":"3247:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5149,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:30"},"scope":6551,"src":"3189:111:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5179,"nodeType":"Block","src":"3438:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"3463:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"3467:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"3470:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"3473:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5171,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"3455:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5170,"id":5178,"nodeType":"Return","src":"3448:27:30"}]},"documentation":{"id":5162,"nodeType":"StructuredDocumentation","src":"3306:60:30","text":" @dev Returns the smallest of two numbers."},"id":5180,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:30","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"a","nameLocation":"3392:1:30","nodeType":"VariableDeclaration","scope":5180,"src":"3384:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5166,"mutability":"mutable","name":"b","nameLocation":"3403:1:30","nodeType":"VariableDeclaration","scope":5180,"src":"3395:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:30"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5180,"src":"3429:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:30"},"scope":6551,"src":"3371:111:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"3666:82:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"3721:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"3725:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"3731:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"3735:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5189,"id":5201,"nodeType":"Return","src":"3713:28:30"}]},"documentation":{"id":5181,"nodeType":"StructuredDocumentation","src":"3488:102:30","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:30","nodeType":"FunctionDefinition","parameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"a","nameLocation":"3620:1:30","nodeType":"VariableDeclaration","scope":5203,"src":"3612:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5185,"mutability":"mutable","name":"b","nameLocation":"3631:1:30","nodeType":"VariableDeclaration","scope":5203,"src":"3623:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:30"},"returnParameters":{"id":5189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"3657:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5187,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:30"},"scope":6551,"src":"3595:153:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5243,"nodeType":"Block","src":"4040:633:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"4054:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5224,"nodeType":"IfStatement","src":"4050:150:30","trueBody":{"id":5223,"nodeType":"Block","src":"4062:138:30","statements":[{"expression":{"arguments":[{"expression":{"id":5219,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4166:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"4166:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5216,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4154:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2649,"src":"4154:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5222,"nodeType":"ExpressionStatement","src":"4154:35:30"}]}},{"id":5242,"nodeType":"UncheckedBlock","src":"4583:84:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"4630:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5225,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"4614:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"4614:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"4641:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5235,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"4650:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5212,"id":5241,"nodeType":"Return","src":"4607:49:30"}]}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"3754:210:30","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:30","nodeType":"FunctionDefinition","parameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"a","nameLocation":"3994:1:30","nodeType":"VariableDeclaration","scope":5244,"src":"3986:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5208,"mutability":"mutable","name":"b","nameLocation":"4005:1:30","nodeType":"VariableDeclaration","scope":5244,"src":"3997:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:30"},"returnParameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5244,"src":"4031:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5210,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:30"},"scope":6551,"src":"3969:704:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5380,"nodeType":"Block","src":"5094:4128:30","statements":[{"id":5379,"nodeType":"UncheckedBlock","src":"5104:4112:30","statements":[{"assignments":[5257],"declarations":[{"constant":false,"id":5257,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:30","nodeType":"VariableDeclaration","scope":5379,"src":"5433:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5261,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"5449:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5259,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"5453:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:30"},{"assignments":[5263],"declarations":[{"constant":false,"id":5263,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:30","nodeType":"VariableDeclaration","scope":5379,"src":"5513:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5264,"nodeType":"VariableDeclarationStatement","src":"5513:13:30"},{"AST":{"nativeSrc":"5593:122:30","nodeType":"YulBlock","src":"5593:122:30","statements":[{"nativeSrc":"5611:30:30","nodeType":"YulVariableDeclaration","src":"5611:30:30","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:30","nodeType":"YulIdentifier","src":"5628:1:30"},{"name":"y","nativeSrc":"5631:1:30","nodeType":"YulIdentifier","src":"5631:1:30"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:30","nodeType":"YulLiteral","src":"5638:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:30","nodeType":"YulIdentifier","src":"5634:3:30"},"nativeSrc":"5634:6:30","nodeType":"YulFunctionCall","src":"5634:6:30"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:30","nodeType":"YulIdentifier","src":"5621:6:30"},"nativeSrc":"5621:20:30","nodeType":"YulFunctionCall","src":"5621:20:30"},"variables":[{"name":"mm","nativeSrc":"5615:2:30","nodeType":"YulTypedName","src":"5615:2:30","type":""}]},{"nativeSrc":"5658:43:30","nodeType":"YulAssignment","src":"5658:43:30","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:30","nodeType":"YulIdentifier","src":"5675:2:30"},{"name":"prod0","nativeSrc":"5679:5:30","nodeType":"YulIdentifier","src":"5679:5:30"}],"functionName":{"name":"sub","nativeSrc":"5671:3:30","nodeType":"YulIdentifier","src":"5671:3:30"},"nativeSrc":"5671:14:30","nodeType":"YulFunctionCall","src":"5671:14:30"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:30","nodeType":"YulIdentifier","src":"5690:2:30"},{"name":"prod0","nativeSrc":"5694:5:30","nodeType":"YulIdentifier","src":"5694:5:30"}],"functionName":{"name":"lt","nativeSrc":"5687:2:30","nodeType":"YulIdentifier","src":"5687:2:30"},"nativeSrc":"5687:13:30","nodeType":"YulFunctionCall","src":"5687:13:30"}],"functionName":{"name":"sub","nativeSrc":"5667:3:30","nodeType":"YulIdentifier","src":"5667:3:30"},"nativeSrc":"5667:34:30","nodeType":"YulFunctionCall","src":"5667:34:30"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:30","nodeType":"YulIdentifier","src":"5658:5:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5257,"isOffset":false,"isSlot":false,"src":"5679:5:30","valueSize":1},{"declaration":5257,"isOffset":false,"isSlot":false,"src":"5694:5:30","valueSize":1},{"declaration":5263,"isOffset":false,"isSlot":false,"src":"5658:5:30","valueSize":1},{"declaration":5247,"isOffset":false,"isSlot":false,"src":"5628:1:30","valueSize":1},{"declaration":5249,"isOffset":false,"isSlot":false,"src":"5631:1:30","valueSize":1}],"id":5265,"nodeType":"InlineAssembly","src":"5584:131:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5266,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5796:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5274,"nodeType":"IfStatement","src":"5792:368:30","trueBody":{"id":5273,"nodeType":"Block","src":"5808:352:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"6126:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5270,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"6134:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5255,"id":5272,"nodeType":"Return","src":"6119:26:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5275,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"6270:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5276,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"6285:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5293,"nodeType":"IfStatement","src":"6266:143:30","trueBody":{"id":5292,"nodeType":"Block","src":"6292:117:30","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"6330:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5285,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6348:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"6348:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5287,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6372:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:30","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"6372:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5281,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"6322:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5278,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6310:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2649,"src":"6310:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5291,"nodeType":"ExpressionStatement","src":"6310:84:30"}]}},{"assignments":[5295],"declarations":[{"constant":false,"id":5295,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:30","nodeType":"VariableDeclaration","scope":5379,"src":"6664:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5296,"nodeType":"VariableDeclarationStatement","src":"6664:17:30"},{"AST":{"nativeSrc":"6704:291:30","nodeType":"YulBlock","src":"6704:291:30","statements":[{"nativeSrc":"6773:38:30","nodeType":"YulAssignment","src":"6773:38:30","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:30","nodeType":"YulIdentifier","src":"6793:1:30"},{"name":"y","nativeSrc":"6796:1:30","nodeType":"YulIdentifier","src":"6796:1:30"},{"name":"denominator","nativeSrc":"6799:11:30","nodeType":"YulIdentifier","src":"6799:11:30"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:30","nodeType":"YulIdentifier","src":"6786:6:30"},"nativeSrc":"6786:25:30","nodeType":"YulFunctionCall","src":"6786:25:30"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:30","nodeType":"YulIdentifier","src":"6773:9:30"}]},{"nativeSrc":"6893:41:30","nodeType":"YulAssignment","src":"6893:41:30","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:30","nodeType":"YulIdentifier","src":"6906:5:30"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:30","nodeType":"YulIdentifier","src":"6916:9:30"},{"name":"prod0","nativeSrc":"6927:5:30","nodeType":"YulIdentifier","src":"6927:5:30"}],"functionName":{"name":"gt","nativeSrc":"6913:2:30","nodeType":"YulIdentifier","src":"6913:2:30"},"nativeSrc":"6913:20:30","nodeType":"YulFunctionCall","src":"6913:20:30"}],"functionName":{"name":"sub","nativeSrc":"6902:3:30","nodeType":"YulIdentifier","src":"6902:3:30"},"nativeSrc":"6902:32:30","nodeType":"YulFunctionCall","src":"6902:32:30"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:30","nodeType":"YulIdentifier","src":"6893:5:30"}]},{"nativeSrc":"6951:30:30","nodeType":"YulAssignment","src":"6951:30:30","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:30","nodeType":"YulIdentifier","src":"6964:5:30"},{"name":"remainder","nativeSrc":"6971:9:30","nodeType":"YulIdentifier","src":"6971:9:30"}],"functionName":{"name":"sub","nativeSrc":"6960:3:30","nodeType":"YulIdentifier","src":"6960:3:30"},"nativeSrc":"6960:21:30","nodeType":"YulFunctionCall","src":"6960:21:30"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:30","nodeType":"YulIdentifier","src":"6951:5:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5251,"isOffset":false,"isSlot":false,"src":"6799:11:30","valueSize":1},{"declaration":5257,"isOffset":false,"isSlot":false,"src":"6927:5:30","valueSize":1},{"declaration":5257,"isOffset":false,"isSlot":false,"src":"6951:5:30","valueSize":1},{"declaration":5257,"isOffset":false,"isSlot":false,"src":"6964:5:30","valueSize":1},{"declaration":5263,"isOffset":false,"isSlot":false,"src":"6893:5:30","valueSize":1},{"declaration":5263,"isOffset":false,"isSlot":false,"src":"6906:5:30","valueSize":1},{"declaration":5295,"isOffset":false,"isSlot":false,"src":"6773:9:30","valueSize":1},{"declaration":5295,"isOffset":false,"isSlot":false,"src":"6916:9:30","valueSize":1},{"declaration":5295,"isOffset":false,"isSlot":false,"src":"6971:9:30","valueSize":1},{"declaration":5247,"isOffset":false,"isSlot":false,"src":"6793:1:30","valueSize":1},{"declaration":5249,"isOffset":false,"isSlot":false,"src":"6796:1:30","valueSize":1}],"id":5297,"nodeType":"InlineAssembly","src":"6695:300:30"},{"assignments":[5299],"declarations":[{"constant":false,"id":5299,"mutability":"mutable","name":"twos","nameLocation":"7207:4:30","nodeType":"VariableDeclaration","scope":5379,"src":"7199:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5306,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"7214:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5302,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"7233:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:30"},{"AST":{"nativeSrc":"7268:366:30","nodeType":"YulBlock","src":"7268:366:30","statements":[{"nativeSrc":"7333:37:30","nodeType":"YulAssignment","src":"7333:37:30","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:30","nodeType":"YulIdentifier","src":"7352:11:30"},{"name":"twos","nativeSrc":"7365:4:30","nodeType":"YulIdentifier","src":"7365:4:30"}],"functionName":{"name":"div","nativeSrc":"7348:3:30","nodeType":"YulIdentifier","src":"7348:3:30"},"nativeSrc":"7348:22:30","nodeType":"YulFunctionCall","src":"7348:22:30"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:30","nodeType":"YulIdentifier","src":"7333:11:30"}]},{"nativeSrc":"7437:25:30","nodeType":"YulAssignment","src":"7437:25:30","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:30","nodeType":"YulIdentifier","src":"7450:5:30"},{"name":"twos","nativeSrc":"7457:4:30","nodeType":"YulIdentifier","src":"7457:4:30"}],"functionName":{"name":"div","nativeSrc":"7446:3:30","nodeType":"YulIdentifier","src":"7446:3:30"},"nativeSrc":"7446:16:30","nodeType":"YulFunctionCall","src":"7446:16:30"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:30","nodeType":"YulIdentifier","src":"7437:5:30"}]},{"nativeSrc":"7581:39:30","nodeType":"YulAssignment","src":"7581:39:30","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:30","nodeType":"YulLiteral","src":"7601:1:30","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:30","nodeType":"YulIdentifier","src":"7604:4:30"}],"functionName":{"name":"sub","nativeSrc":"7597:3:30","nodeType":"YulIdentifier","src":"7597:3:30"},"nativeSrc":"7597:12:30","nodeType":"YulFunctionCall","src":"7597:12:30"},{"name":"twos","nativeSrc":"7611:4:30","nodeType":"YulIdentifier","src":"7611:4:30"}],"functionName":{"name":"div","nativeSrc":"7593:3:30","nodeType":"YulIdentifier","src":"7593:3:30"},"nativeSrc":"7593:23:30","nodeType":"YulFunctionCall","src":"7593:23:30"},{"kind":"number","nativeSrc":"7618:1:30","nodeType":"YulLiteral","src":"7618:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:30","nodeType":"YulIdentifier","src":"7589:3:30"},"nativeSrc":"7589:31:30","nodeType":"YulFunctionCall","src":"7589:31:30"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:30","nodeType":"YulIdentifier","src":"7581:4:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5251,"isOffset":false,"isSlot":false,"src":"7333:11:30","valueSize":1},{"declaration":5251,"isOffset":false,"isSlot":false,"src":"7352:11:30","valueSize":1},{"declaration":5257,"isOffset":false,"isSlot":false,"src":"7437:5:30","valueSize":1},{"declaration":5257,"isOffset":false,"isSlot":false,"src":"7450:5:30","valueSize":1},{"declaration":5299,"isOffset":false,"isSlot":false,"src":"7365:4:30","valueSize":1},{"declaration":5299,"isOffset":false,"isSlot":false,"src":"7457:4:30","valueSize":1},{"declaration":5299,"isOffset":false,"isSlot":false,"src":"7581:4:30","valueSize":1},{"declaration":5299,"isOffset":false,"isSlot":false,"src":"7604:4:30","valueSize":1},{"declaration":5299,"isOffset":false,"isSlot":false,"src":"7611:4:30","valueSize":1}],"id":5307,"nodeType":"InlineAssembly","src":"7259:375:30"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5308,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"7700:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"7709:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5310,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"7717:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5313,"nodeType":"ExpressionStatement","src":"7700:21:30"},{"assignments":[5315],"declarations":[{"constant":false,"id":5315,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:30","nodeType":"VariableDeclaration","scope":5379,"src":"8056:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5322,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5317,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8079:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:30"},{"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5323,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8312:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5325,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8327:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5326,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8341:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5330,"nodeType":"ExpressionStatement","src":"8312:36:30"},{"expression":{"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5331,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8382:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5333,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8397:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5334,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8411:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5338,"nodeType":"ExpressionStatement","src":"8382:36:30"},{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8454:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5341,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8469:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5342,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8483:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"8454:36:30"},{"expression":{"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5347,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8525:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8540:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5350,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8554:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5354,"nodeType":"ExpressionStatement","src":"8525:36:30"},{"expression":{"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5355,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8598:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8613:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5358,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8627:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5362,"nodeType":"ExpressionStatement","src":"8598:36:30"},{"expression":{"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5363,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8672:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8687:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5366,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"8701:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5370,"nodeType":"ExpressionStatement","src":"8672:36:30"},{"expression":{"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"9154:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"9163:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5373,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"9171:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5376,"nodeType":"ExpressionStatement","src":"9154:24:30"},{"expression":{"id":5377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"9199:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5255,"id":5378,"nodeType":"Return","src":"9192:13:30"}]}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"4679:312:30","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5381,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:30","nodeType":"FunctionDefinition","parameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"x","nameLocation":"5020:1:30","nodeType":"VariableDeclaration","scope":5381,"src":"5012:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5249,"mutability":"mutable","name":"y","nameLocation":"5031:1:30","nodeType":"VariableDeclaration","scope":5381,"src":"5023:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:30","nodeType":"VariableDeclaration","scope":5381,"src":"5034:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:30"},"returnParameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"result","nameLocation":"5086:6:30","nodeType":"VariableDeclaration","scope":5381,"src":"5078:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:30"},"scope":6551,"src":"4996:4226:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"9461:128:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5397,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"9485:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5398,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"9488:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5399,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"9491:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5396,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5381,5418],"referencedDeclaration":5381,"src":"9478:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5404,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"9539:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}],"id":5403,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"9522:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4957_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5407,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"9559:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5408,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"9562:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5409,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"9565:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5406,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:30","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5401,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"9506:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"9506:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5395,"id":5416,"nodeType":"Return","src":"9471:111:30"}]},"documentation":{"id":5382,"nodeType":"StructuredDocumentation","src":"9228:118:30","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:30","nodeType":"FunctionDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"x","nameLocation":"9375:1:30","nodeType":"VariableDeclaration","scope":5418,"src":"9367:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5386,"mutability":"mutable","name":"y","nameLocation":"9386:1:30","nodeType":"VariableDeclaration","scope":5418,"src":"9378:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5388,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:30","nodeType":"VariableDeclaration","scope":5418,"src":"9389:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5391,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:30","nodeType":"VariableDeclaration","scope":5418,"src":"9410:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"},"typeName":{"id":5390,"nodeType":"UserDefinedTypeName","pathNode":{"id":5389,"name":"Rounding","nameLocations":["9410:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"9410:8:30"},"referencedDeclaration":4957,"src":"9410:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:30"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5418,"src":"9452:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:30"},"scope":6551,"src":"9351:238:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5514,"nodeType":"Block","src":"10223:1849:30","statements":[{"id":5513,"nodeType":"UncheckedBlock","src":"10233:1833:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5428,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"10261:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"10257:20:30","trueBody":{"expression":{"hexValue":"30","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5427,"id":5432,"nodeType":"Return","src":"10269:8:30"}},{"assignments":[5435],"declarations":[{"constant":false,"id":5435,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:30","nodeType":"VariableDeclaration","scope":5513,"src":"10748:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5434,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5439,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"10768:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5437,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"10772:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:30"},{"assignments":[5441],"declarations":[{"constant":false,"id":5441,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:30","nodeType":"VariableDeclaration","scope":5513,"src":"10787:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5443,"initialValue":{"id":5442,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"10801:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:30"},{"assignments":[5445],"declarations":[{"constant":false,"id":5445,"mutability":"mutable","name":"x","nameLocation":"10945:1:30","nodeType":"VariableDeclaration","scope":5513,"src":"10938:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5444,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5447,"initialValue":{"hexValue":"30","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:30"},{"assignments":[5449],"declarations":[{"constant":false,"id":5449,"mutability":"mutable","name":"y","nameLocation":"10971:1:30","nodeType":"VariableDeclaration","scope":5513,"src":"10964:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5448,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5451,"initialValue":{"hexValue":"31","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:30"},{"body":{"id":5488,"nodeType":"Block","src":"11014:882:30","statements":[{"assignments":[5456],"declarations":[{"constant":false,"id":5456,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:30","nodeType":"VariableDeclaration","scope":5488,"src":"11032:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5455,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5460,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"11051:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5458,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"11057:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:30"},{"expression":{"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5461,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"11086:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5462,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"11091:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5463,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5464,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"11191:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"11436:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5466,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"11442:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5467,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"11454:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:30","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5472,"nodeType":"ExpressionStatement","src":"11085:395:30"},{"expression":{"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5473,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"11500:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5474,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"11503:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5475,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5476,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"11585:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"11839:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5478,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"11843:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5481,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"11854:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5479,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:30","typeDescriptions":{}}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:30","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5487,"nodeType":"ExpressionStatement","src":"11499:382:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5452,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"10998:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5489,"nodeType":"WhileStatement","src":"10991:905:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5490,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"11914:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5495,"nodeType":"IfStatement","src":"11910:22:30","trueBody":{"expression":{"hexValue":"30","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5427,"id":5494,"nodeType":"Return","src":"11924:8:30"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"11983:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5500,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"11990:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:30","subExpression":{"id":5503,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"12003:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:30","typeDescriptions":{}}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5509,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"12015:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:30","typeDescriptions":{}}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5496,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"11975:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5427,"id":5512,"nodeType":"Return","src":"11968:50:30"}]}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"9595:553:30","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5515,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:30","nodeType":"FunctionDefinition","parameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"a","nameLocation":"10177:1:30","nodeType":"VariableDeclaration","scope":5515,"src":"10169:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5423,"mutability":"mutable","name":"n","nameLocation":"10188:1:30","nodeType":"VariableDeclaration","scope":5515,"src":"10180:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:30"},"returnParameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5515,"src":"10214:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:30"},"scope":6551,"src":"10153:1919:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5535,"nodeType":"Block","src":"12672:82:30","statements":[{"id":5534,"nodeType":"UncheckedBlock","src":"12682:66:30","statements":[{"expression":{"arguments":[{"id":5527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"12725:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"12728:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5531,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"12735:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5525,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"12713:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6551_$","typeString":"type(library Math)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:30","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5572,"src":"12713:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5524,"id":5533,"nodeType":"Return","src":"12706:31:30"}]}]},"documentation":{"id":5516,"nodeType":"StructuredDocumentation","src":"12078:514:30","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:30","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"a","nameLocation":"12626:1:30","nodeType":"VariableDeclaration","scope":5536,"src":"12618:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5520,"mutability":"mutable","name":"p","nameLocation":"12637:1:30","nodeType":"VariableDeclaration","scope":5536,"src":"12629:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:30"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5536,"src":"12663:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:30"},"scope":6551,"src":"12597:157:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5571,"nodeType":"Block","src":"13524:174:30","statements":[{"assignments":[5549,5551],"declarations":[{"constant":false,"id":5549,"mutability":"mutable","name":"success","nameLocation":"13540:7:30","nodeType":"VariableDeclaration","scope":5571,"src":"13535:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5548,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"result","nameLocation":"13557:6:30","nodeType":"VariableDeclaration","scope":5571,"src":"13549:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5550,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5557,"initialValue":{"arguments":[{"id":5553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"13577:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5554,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"13580:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5555,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"13583:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5552,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5596,5678],"referencedDeclaration":5596,"src":"13567:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:30"},{"condition":{"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:30","subExpression":{"id":5558,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"13600:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5568,"nodeType":"IfStatement","src":"13595:74:30","trueBody":{"id":5567,"nodeType":"Block","src":"13609:60:30","statements":[{"expression":{"arguments":[{"expression":{"id":5563,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"13635:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"13635:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5560,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"13623:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2649,"src":"13623:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5566,"nodeType":"ExpressionStatement","src":"13623:35:30"}]}},{"expression":{"id":5569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"13685:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5547,"id":5570,"nodeType":"Return","src":"13678:13:30"}]},"documentation":{"id":5537,"nodeType":"StructuredDocumentation","src":"12760:678:30","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5572,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:30","nodeType":"FunctionDefinition","parameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"b","nameLocation":"13467:1:30","nodeType":"VariableDeclaration","scope":5572,"src":"13459:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5541,"mutability":"mutable","name":"e","nameLocation":"13478:1:30","nodeType":"VariableDeclaration","scope":5572,"src":"13470:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5543,"mutability":"mutable","name":"m","nameLocation":"13489:1:30","nodeType":"VariableDeclaration","scope":5572,"src":"13481:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5542,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:30"},"returnParameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5572,"src":"13515:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5545,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:30"},"scope":6551,"src":"13443:255:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5595,"nodeType":"Block","src":"14552:1493:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5586,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"14566:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"IfStatement","src":"14562:29:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5585,"id":5592,"nodeType":"Return","src":"14574:17:30"}},{"AST":{"nativeSrc":"14626:1413:30","nodeType":"YulBlock","src":"14626:1413:30","statements":[{"nativeSrc":"14640:22:30","nodeType":"YulVariableDeclaration","src":"14640:22:30","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:30","nodeType":"YulLiteral","src":"14657:4:30","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:30","nodeType":"YulIdentifier","src":"14651:5:30"},"nativeSrc":"14651:11:30","nodeType":"YulFunctionCall","src":"14651:11:30"},"variables":[{"name":"ptr","nativeSrc":"14644:3:30","nodeType":"YulTypedName","src":"14644:3:30","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:30","nodeType":"YulIdentifier","src":"15570:3:30"},{"kind":"number","nativeSrc":"15575:4:30","nodeType":"YulLiteral","src":"15575:4:30","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:30","nodeType":"YulIdentifier","src":"15563:6:30"},"nativeSrc":"15563:17:30","nodeType":"YulFunctionCall","src":"15563:17:30"},"nativeSrc":"15563:17:30","nodeType":"YulExpressionStatement","src":"15563:17:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:30","nodeType":"YulIdentifier","src":"15604:3:30"},{"kind":"number","nativeSrc":"15609:4:30","nodeType":"YulLiteral","src":"15609:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:30","nodeType":"YulIdentifier","src":"15600:3:30"},"nativeSrc":"15600:14:30","nodeType":"YulFunctionCall","src":"15600:14:30"},{"kind":"number","nativeSrc":"15616:4:30","nodeType":"YulLiteral","src":"15616:4:30","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:30","nodeType":"YulIdentifier","src":"15593:6:30"},"nativeSrc":"15593:28:30","nodeType":"YulFunctionCall","src":"15593:28:30"},"nativeSrc":"15593:28:30","nodeType":"YulExpressionStatement","src":"15593:28:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:30","nodeType":"YulIdentifier","src":"15645:3:30"},{"kind":"number","nativeSrc":"15650:4:30","nodeType":"YulLiteral","src":"15650:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:30","nodeType":"YulIdentifier","src":"15641:3:30"},"nativeSrc":"15641:14:30","nodeType":"YulFunctionCall","src":"15641:14:30"},{"kind":"number","nativeSrc":"15657:4:30","nodeType":"YulLiteral","src":"15657:4:30","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:30","nodeType":"YulIdentifier","src":"15634:6:30"},"nativeSrc":"15634:28:30","nodeType":"YulFunctionCall","src":"15634:28:30"},"nativeSrc":"15634:28:30","nodeType":"YulExpressionStatement","src":"15634:28:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:30","nodeType":"YulIdentifier","src":"15686:3:30"},{"kind":"number","nativeSrc":"15691:4:30","nodeType":"YulLiteral","src":"15691:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:30","nodeType":"YulIdentifier","src":"15682:3:30"},"nativeSrc":"15682:14:30","nodeType":"YulFunctionCall","src":"15682:14:30"},{"name":"b","nativeSrc":"15698:1:30","nodeType":"YulIdentifier","src":"15698:1:30"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:30","nodeType":"YulIdentifier","src":"15675:6:30"},"nativeSrc":"15675:25:30","nodeType":"YulFunctionCall","src":"15675:25:30"},"nativeSrc":"15675:25:30","nodeType":"YulExpressionStatement","src":"15675:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:30","nodeType":"YulIdentifier","src":"15724:3:30"},{"kind":"number","nativeSrc":"15729:4:30","nodeType":"YulLiteral","src":"15729:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:30","nodeType":"YulIdentifier","src":"15720:3:30"},"nativeSrc":"15720:14:30","nodeType":"YulFunctionCall","src":"15720:14:30"},{"name":"e","nativeSrc":"15736:1:30","nodeType":"YulIdentifier","src":"15736:1:30"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:30","nodeType":"YulIdentifier","src":"15713:6:30"},"nativeSrc":"15713:25:30","nodeType":"YulFunctionCall","src":"15713:25:30"},"nativeSrc":"15713:25:30","nodeType":"YulExpressionStatement","src":"15713:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:30","nodeType":"YulIdentifier","src":"15762:3:30"},{"kind":"number","nativeSrc":"15767:4:30","nodeType":"YulLiteral","src":"15767:4:30","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:30","nodeType":"YulIdentifier","src":"15758:3:30"},"nativeSrc":"15758:14:30","nodeType":"YulFunctionCall","src":"15758:14:30"},{"name":"m","nativeSrc":"15774:1:30","nodeType":"YulIdentifier","src":"15774:1:30"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:30","nodeType":"YulIdentifier","src":"15751:6:30"},"nativeSrc":"15751:25:30","nodeType":"YulFunctionCall","src":"15751:25:30"},"nativeSrc":"15751:25:30","nodeType":"YulExpressionStatement","src":"15751:25:30"},{"nativeSrc":"15938:57:30","nodeType":"YulAssignment","src":"15938:57:30","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:30","nodeType":"YulIdentifier","src":"15960:3:30"},"nativeSrc":"15960:5:30","nodeType":"YulFunctionCall","src":"15960:5:30"},{"kind":"number","nativeSrc":"15967:4:30","nodeType":"YulLiteral","src":"15967:4:30","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:30","nodeType":"YulIdentifier","src":"15973:3:30"},{"kind":"number","nativeSrc":"15978:4:30","nodeType":"YulLiteral","src":"15978:4:30","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:30","nodeType":"YulLiteral","src":"15984:4:30","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:30","nodeType":"YulLiteral","src":"15990:4:30","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:30","nodeType":"YulIdentifier","src":"15949:10:30"},"nativeSrc":"15949:46:30","nodeType":"YulFunctionCall","src":"15949:46:30"},"variableNames":[{"name":"success","nativeSrc":"15938:7:30","nodeType":"YulIdentifier","src":"15938:7:30"}]},{"nativeSrc":"16008:21:30","nodeType":"YulAssignment","src":"16008:21:30","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:30","nodeType":"YulLiteral","src":"16024:4:30","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:30","nodeType":"YulIdentifier","src":"16018:5:30"},"nativeSrc":"16018:11:30","nodeType":"YulFunctionCall","src":"16018:11:30"},"variableNames":[{"name":"result","nativeSrc":"16008:6:30","nodeType":"YulIdentifier","src":"16008:6:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5575,"isOffset":false,"isSlot":false,"src":"15698:1:30","valueSize":1},{"declaration":5577,"isOffset":false,"isSlot":false,"src":"15736:1:30","valueSize":1},{"declaration":5579,"isOffset":false,"isSlot":false,"src":"15774:1:30","valueSize":1},{"declaration":5584,"isOffset":false,"isSlot":false,"src":"16008:6:30","valueSize":1},{"declaration":5582,"isOffset":false,"isSlot":false,"src":"15938:7:30","valueSize":1}],"flags":["memory-safe"],"id":5594,"nodeType":"InlineAssembly","src":"14601:1438:30"}]},"documentation":{"id":5573,"nodeType":"StructuredDocumentation","src":"13704:738:30","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5596,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:30","nodeType":"FunctionDefinition","parameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"b","nameLocation":"14474:1:30","nodeType":"VariableDeclaration","scope":5596,"src":"14466:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5577,"mutability":"mutable","name":"e","nameLocation":"14485:1:30","nodeType":"VariableDeclaration","scope":5596,"src":"14477:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5579,"mutability":"mutable","name":"m","nameLocation":"14496:1:30","nodeType":"VariableDeclaration","scope":5596,"src":"14488:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5578,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:30"},"returnParameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"success","nameLocation":"14527:7:30","nodeType":"VariableDeclaration","scope":5596,"src":"14522:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5581,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5584,"mutability":"mutable","name":"result","nameLocation":"14544:6:30","nodeType":"VariableDeclaration","scope":5596,"src":"14536:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:30"},"scope":6551,"src":"14447:1598:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5631,"nodeType":"Block","src":"16242:179:30","statements":[{"assignments":[5609,5611],"declarations":[{"constant":false,"id":5609,"mutability":"mutable","name":"success","nameLocation":"16258:7:30","nodeType":"VariableDeclaration","scope":5631,"src":"16253:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5608,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5611,"mutability":"mutable","name":"result","nameLocation":"16280:6:30","nodeType":"VariableDeclaration","scope":5631,"src":"16267:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5610,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5617,"initialValue":{"arguments":[{"id":5613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"16300:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5614,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"16303:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5615,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"16306:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5612,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5596,5678],"referencedDeclaration":5678,"src":"16290:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:30"},{"condition":{"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:30","subExpression":{"id":5618,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"16323:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5628,"nodeType":"IfStatement","src":"16318:74:30","trueBody":{"id":5627,"nodeType":"Block","src":"16332:60:30","statements":[{"expression":{"arguments":[{"expression":{"id":5623,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"16358:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:30","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"16358:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5620,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"16346:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2650_$","typeString":"type(library Panic)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:30","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2649,"src":"16346:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"ExpressionStatement","src":"16346:35:30"}]}},{"expression":{"id":5629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"16408:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5607,"id":5630,"nodeType":"Return","src":"16401:13:30"}]},"documentation":{"id":5597,"nodeType":"StructuredDocumentation","src":"16051:85:30","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5632,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:30","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"b","nameLocation":"16170:1:30","nodeType":"VariableDeclaration","scope":5632,"src":"16157:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5598,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5601,"mutability":"mutable","name":"e","nameLocation":"16186:1:30","nodeType":"VariableDeclaration","scope":5632,"src":"16173:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5600,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5603,"mutability":"mutable","name":"m","nameLocation":"16202:1:30","nodeType":"VariableDeclaration","scope":5632,"src":"16189:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5602,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:30"},"returnParameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5632,"src":"16228:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5605,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:30"},"scope":6551,"src":"16141:280:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5677,"nodeType":"Block","src":"16675:771:30","statements":[{"condition":{"arguments":[{"id":5647,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"16700:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5646,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"16689:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5656,"nodeType":"IfStatement","src":"16685:47:30","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5650,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5645,"id":5655,"nodeType":"Return","src":"16704:28:30"}},{"assignments":[5658],"declarations":[{"constant":false,"id":5658,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:30","nodeType":"VariableDeclaration","scope":5677,"src":"16743:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5657,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5661,"initialValue":{"expression":{"id":5659,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"16758:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:30","memberName":"length","nodeType":"MemberAccess","src":"16758:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:30"},{"expression":{"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"16848:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"16874:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:30","memberName":"length","nodeType":"MemberAccess","src":"16874:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5667,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"16884:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:30","memberName":"length","nodeType":"MemberAccess","src":"16884:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5669,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"16894:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5670,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"16900:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5671,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"16903:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5672,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"16906:1:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5663,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5675,"nodeType":"ExpressionStatement","src":"16848:60:30"},{"AST":{"nativeSrc":"16944:496:30","nodeType":"YulBlock","src":"16944:496:30","statements":[{"nativeSrc":"16958:32:30","nodeType":"YulVariableDeclaration","src":"16958:32:30","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:30","nodeType":"YulIdentifier","src":"16977:6:30"},{"kind":"number","nativeSrc":"16985:4:30","nodeType":"YulLiteral","src":"16985:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:30","nodeType":"YulIdentifier","src":"16973:3:30"},"nativeSrc":"16973:17:30","nodeType":"YulFunctionCall","src":"16973:17:30"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:30","nodeType":"YulTypedName","src":"16962:7:30","type":""}]},{"nativeSrc":"17080:73:30","nodeType":"YulAssignment","src":"17080:73:30","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:30","nodeType":"YulIdentifier","src":"17102:3:30"},"nativeSrc":"17102:5:30","nodeType":"YulFunctionCall","src":"17102:5:30"},{"kind":"number","nativeSrc":"17109:4:30","nodeType":"YulLiteral","src":"17109:4:30","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:30","nodeType":"YulIdentifier","src":"17115:7:30"},{"arguments":[{"name":"result","nativeSrc":"17130:6:30","nodeType":"YulIdentifier","src":"17130:6:30"}],"functionName":{"name":"mload","nativeSrc":"17124:5:30","nodeType":"YulIdentifier","src":"17124:5:30"},"nativeSrc":"17124:13:30","nodeType":"YulFunctionCall","src":"17124:13:30"},{"name":"dataPtr","nativeSrc":"17139:7:30","nodeType":"YulIdentifier","src":"17139:7:30"},{"name":"mLen","nativeSrc":"17148:4:30","nodeType":"YulIdentifier","src":"17148:4:30"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:30","nodeType":"YulIdentifier","src":"17091:10:30"},"nativeSrc":"17091:62:30","nodeType":"YulFunctionCall","src":"17091:62:30"},"variableNames":[{"name":"success","nativeSrc":"17080:7:30","nodeType":"YulIdentifier","src":"17080:7:30"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:30","nodeType":"YulIdentifier","src":"17309:6:30"},{"name":"mLen","nativeSrc":"17317:4:30","nodeType":"YulIdentifier","src":"17317:4:30"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:30","nodeType":"YulIdentifier","src":"17302:6:30"},"nativeSrc":"17302:20:30","nodeType":"YulFunctionCall","src":"17302:20:30"},"nativeSrc":"17302:20:30","nodeType":"YulExpressionStatement","src":"17302:20:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:30","nodeType":"YulLiteral","src":"17405:4:30","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:30","nodeType":"YulIdentifier","src":"17415:7:30"},{"name":"mLen","nativeSrc":"17424:4:30","nodeType":"YulIdentifier","src":"17424:4:30"}],"functionName":{"name":"add","nativeSrc":"17411:3:30","nodeType":"YulIdentifier","src":"17411:3:30"},"nativeSrc":"17411:18:30","nodeType":"YulFunctionCall","src":"17411:18:30"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:30","nodeType":"YulIdentifier","src":"17398:6:30"},"nativeSrc":"17398:32:30","nodeType":"YulFunctionCall","src":"17398:32:30"},"nativeSrc":"17398:32:30","nodeType":"YulExpressionStatement","src":"17398:32:30"}]},"evmVersion":"paris","externalReferences":[{"declaration":5658,"isOffset":false,"isSlot":false,"src":"17148:4:30","valueSize":1},{"declaration":5658,"isOffset":false,"isSlot":false,"src":"17317:4:30","valueSize":1},{"declaration":5658,"isOffset":false,"isSlot":false,"src":"17424:4:30","valueSize":1},{"declaration":5644,"isOffset":false,"isSlot":false,"src":"16977:6:30","valueSize":1},{"declaration":5644,"isOffset":false,"isSlot":false,"src":"17130:6:30","valueSize":1},{"declaration":5644,"isOffset":false,"isSlot":false,"src":"17309:6:30","valueSize":1},{"declaration":5642,"isOffset":false,"isSlot":false,"src":"17080:7:30","valueSize":1}],"flags":["memory-safe"],"id":5676,"nodeType":"InlineAssembly","src":"16919:521:30"}]},"documentation":{"id":5633,"nodeType":"StructuredDocumentation","src":"16427:88:30","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5678,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:30","nodeType":"FunctionDefinition","parameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"b","nameLocation":"16561:1:30","nodeType":"VariableDeclaration","scope":5678,"src":"16548:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5634,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5637,"mutability":"mutable","name":"e","nameLocation":"16585:1:30","nodeType":"VariableDeclaration","scope":5678,"src":"16572:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5636,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5639,"mutability":"mutable","name":"m","nameLocation":"16609:1:30","nodeType":"VariableDeclaration","scope":5678,"src":"16596:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5638,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:30"},"returnParameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"success","nameLocation":"16645:7:30","nodeType":"VariableDeclaration","scope":5678,"src":"16640:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5641,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5644,"mutability":"mutable","name":"result","nameLocation":"16667:6:30","nodeType":"VariableDeclaration","scope":5678,"src":"16654:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5643,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:30"},"scope":6551,"src":"16520:926:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5710,"nodeType":"Block","src":"17601:176:30","statements":[{"body":{"id":5706,"nodeType":"Block","src":"17658:92:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5697,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"17676:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5699,"indexExpression":{"id":5698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"17686:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5705,"nodeType":"IfStatement","src":"17672:68:30","trueBody":{"id":5704,"nodeType":"Block","src":"17695:45:30","statements":[{"expression":{"hexValue":"66616c7365","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5685,"id":5703,"nodeType":"Return","src":"17713:12:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"17631:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5691,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"17635:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:30","memberName":"length","nodeType":"MemberAccess","src":"17635:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5707,"initializationExpression":{"assignments":[5687],"declarations":[{"constant":false,"id":5687,"mutability":"mutable","name":"i","nameLocation":"17624:1:30","nodeType":"VariableDeclaration","scope":5707,"src":"17616:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5686,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5689,"initialValue":{"hexValue":"30","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:30"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:30","subExpression":{"id":5694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"17655:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5696,"nodeType":"ExpressionStatement","src":"17653:3:30"},"nodeType":"ForStatement","src":"17611:139:30"},{"expression":{"hexValue":"74727565","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5685,"id":5709,"nodeType":"Return","src":"17759:11:30"}]},"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"17452:72:30","text":" @dev Returns whether the provided byte array is zero."},"id":5711,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:30","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:30","nodeType":"VariableDeclaration","scope":5711,"src":"17549:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5680,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:30"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5711,"src":"17595:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5683,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:30"},"scope":6551,"src":"17529:248:30","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5929,"nodeType":"Block","src":"18137:5124:30","statements":[{"id":5928,"nodeType":"UncheckedBlock","src":"18147:5108:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"18241:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5725,"nodeType":"IfStatement","src":"18237:53:30","trueBody":{"id":5724,"nodeType":"Block","src":"18249:41:30","statements":[{"expression":{"id":5722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"18274:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5718,"id":5723,"nodeType":"Return","src":"18267:8:30"}]}},{"assignments":[5727],"declarations":[{"constant":false,"id":5727,"mutability":"mutable","name":"aa","nameLocation":"19225:2:30","nodeType":"VariableDeclaration","scope":5928,"src":"19217:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5729,"initialValue":{"id":5728,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"19230:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:30"},{"assignments":[5731],"declarations":[{"constant":false,"id":5731,"mutability":"mutable","name":"xn","nameLocation":"19253:2:30","nodeType":"VariableDeclaration","scope":5928,"src":"19245:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5733,"initialValue":{"hexValue":"31","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19278:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5749,"nodeType":"IfStatement","src":"19274:92:30","trueBody":{"id":5748,"nodeType":"Block","src":"19296:70:30","statements":[{"expression":{"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5740,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19314:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5743,"nodeType":"ExpressionStatement","src":"19314:10:30"},{"expression":{"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5744,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19342:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5747,"nodeType":"ExpressionStatement","src":"19342:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5750,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19383:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5765,"nodeType":"IfStatement","src":"19379:90:30","trueBody":{"id":5764,"nodeType":"Block","src":"19400:69:30","statements":[{"expression":{"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5756,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19418:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5759,"nodeType":"ExpressionStatement","src":"19418:9:30"},{"expression":{"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5760,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19445:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5763,"nodeType":"ExpressionStatement","src":"19445:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19486:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5781,"nodeType":"IfStatement","src":"19482:90:30","trueBody":{"id":5780,"nodeType":"Block","src":"19503:69:30","statements":[{"expression":{"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5772,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19521:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5775,"nodeType":"ExpressionStatement","src":"19521:9:30"},{"expression":{"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5776,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19548:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5779,"nodeType":"ExpressionStatement","src":"19548:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5782,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19589:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5797,"nodeType":"IfStatement","src":"19585:89:30","trueBody":{"id":5796,"nodeType":"Block","src":"19606:68:30","statements":[{"expression":{"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5788,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19624:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5791,"nodeType":"ExpressionStatement","src":"19624:9:30"},{"expression":{"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5792,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19651:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5795,"nodeType":"ExpressionStatement","src":"19651:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19691:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5813,"nodeType":"IfStatement","src":"19687:87:30","trueBody":{"id":5812,"nodeType":"Block","src":"19707:67:30","statements":[{"expression":{"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5804,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19725:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5807,"nodeType":"ExpressionStatement","src":"19725:8:30"},{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5808,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19751:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5811,"nodeType":"ExpressionStatement","src":"19751:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5814,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19791:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5829,"nodeType":"IfStatement","src":"19787:87:30","trueBody":{"id":5828,"nodeType":"Block","src":"19807:67:30","statements":[{"expression":{"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5820,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19825:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5823,"nodeType":"ExpressionStatement","src":"19825:8:30"},{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19851:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5827,"nodeType":"ExpressionStatement","src":"19851:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5830,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"19891:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5841,"nodeType":"IfStatement","src":"19887:61:30","trueBody":{"id":5840,"nodeType":"Block","src":"19907:41:30","statements":[{"expression":{"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5836,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19925:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5839,"nodeType":"ExpressionStatement","src":"19925:8:30"}]}},{"expression":{"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5842,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"20368:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5844,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"20378:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5850,"nodeType":"ExpressionStatement","src":"20368:18:30"},{"expression":{"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5851,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22273:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5852,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22279:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22284:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5854,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22288:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5861,"nodeType":"ExpressionStatement","src":"22273:23:30"},{"expression":{"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5862,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22382:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22388:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22393:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5865,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22397:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5872,"nodeType":"ExpressionStatement","src":"22382:23:30"},{"expression":{"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5873,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22493:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5874,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22499:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22504:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5876,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22508:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5883,"nodeType":"ExpressionStatement","src":"22493:23:30"},{"expression":{"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5884,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22602:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22608:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22613:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5887,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22617:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5894,"nodeType":"ExpressionStatement","src":"22602:23:30"},{"expression":{"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5895,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22712:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22718:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22723:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5898,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22727:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5905,"nodeType":"ExpressionStatement","src":"22712:23:30"},{"expression":{"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5906,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22822:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5907,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22828:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22833:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5909,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22837:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5916,"nodeType":"ExpressionStatement","src":"22822:23:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"23211:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5920,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"23232:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"23237:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5922,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"23241:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5918,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"23216:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"23216:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5718,"id":5927,"nodeType":"Return","src":"23204:40:30"}]}]},"documentation":{"id":5712,"nodeType":"StructuredDocumentation","src":"17783:292:30","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5930,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:30","nodeType":"FunctionDefinition","parameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"a","nameLocation":"18102:1:30","nodeType":"VariableDeclaration","scope":5930,"src":"18094:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:30"},"returnParameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5930,"src":"18128:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:30"},"scope":6551,"src":"18080:5181:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"23434:171:30","statements":[{"id":5962,"nodeType":"UncheckedBlock","src":"23444:155:30","statements":[{"assignments":[5942],"declarations":[{"constant":false,"id":5942,"mutability":"mutable","name":"result","nameLocation":"23476:6:30","nodeType":"VariableDeclaration","scope":5962,"src":"23468:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5946,"initialValue":{"arguments":[{"id":5944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"23490:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5943,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5930,5964],"referencedDeclaration":5930,"src":"23485:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23513:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5951,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"23555:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}],"id":5950,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"23538:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4957_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23568:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23577:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"23586:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5948,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"23522:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"23522:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5940,"id":5961,"nodeType":"Return","src":"23506:82:30"}]}]},"documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"23267:86:30","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:30","nodeType":"FunctionDefinition","parameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"a","nameLocation":"23380:1:30","nodeType":"VariableDeclaration","scope":5964,"src":"23372:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5932,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:30","nodeType":"VariableDeclaration","scope":5964,"src":"23383:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"},"typeName":{"id":5935,"nodeType":"UserDefinedTypeName","pathNode":{"id":5934,"name":"Rounding","nameLocations":["23383:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"23383:8:30"},"referencedDeclaration":4957,"src":"23383:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:30"},"returnParameters":{"id":5940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5964,"src":"23425:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5938,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:30"},"scope":6551,"src":"23358:247:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6159,"nodeType":"Block","src":"23796:981:30","statements":[{"assignments":[5973],"declarations":[{"constant":false,"id":5973,"mutability":"mutable","name":"result","nameLocation":"23814:6:30","nodeType":"VariableDeclaration","scope":6159,"src":"23806:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5972,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5975,"initialValue":{"hexValue":"30","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:30"},{"assignments":[5977],"declarations":[{"constant":false,"id":5977,"mutability":"mutable","name":"exp","nameLocation":"23842:3:30","nodeType":"VariableDeclaration","scope":6159,"src":"23834:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5978,"nodeType":"VariableDeclarationStatement","src":"23834:11:30"},{"id":6156,"nodeType":"UncheckedBlock","src":"23855:893:30","statements":[{"expression":{"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5979,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23879:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"23907:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5981,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"23891:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"23891:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5994,"nodeType":"ExpressionStatement","src":"23879:51:30"},{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"23944:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5996,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23954:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5998,"nodeType":"ExpressionStatement","src":"23944:13:30"},{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"23971:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6000,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23981:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ExpressionStatement","src":"23971:13:30"},{"expression":{"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6003,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23999:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24026:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6005,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"24010:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"24010:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6018,"nodeType":"ExpressionStatement","src":"23999:49:30"},{"expression":{"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24062:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6020,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24072:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6022,"nodeType":"ExpressionStatement","src":"24062:13:30"},{"expression":{"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24089:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6024,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24099:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6026,"nodeType":"ExpressionStatement","src":"24089:13:30"},{"expression":{"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6027,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24117:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24144:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6029,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"24128:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"24128:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6042,"nodeType":"ExpressionStatement","src":"24117:49:30"},{"expression":{"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24180:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6044,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24190:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6046,"nodeType":"ExpressionStatement","src":"24180:13:30"},{"expression":{"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24207:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6048,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24217:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6050,"nodeType":"ExpressionStatement","src":"24207:13:30"},{"expression":{"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6051,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24235:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24262:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:30","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6053,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"24246:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"24246:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6066,"nodeType":"ExpressionStatement","src":"24235:49:30"},{"expression":{"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24298:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6068,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24308:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6070,"nodeType":"ExpressionStatement","src":"24298:13:30"},{"expression":{"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24325:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6072,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24335:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6074,"nodeType":"ExpressionStatement","src":"24325:13:30"},{"expression":{"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6075,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24353:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":6076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24379:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6077,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"24363:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"24363:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6090,"nodeType":"ExpressionStatement","src":"24353:47:30"},{"expression":{"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24414:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6092,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24424:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6094,"nodeType":"ExpressionStatement","src":"24414:13:30"},{"expression":{"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24441:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6096,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24451:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6098,"nodeType":"ExpressionStatement","src":"24441:13:30"},{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6099,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24469:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":6100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24495:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6101,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"24479:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"24479:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6114,"nodeType":"ExpressionStatement","src":"24469:47:30"},{"expression":{"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24530:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6116,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24540:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6118,"nodeType":"ExpressionStatement","src":"24530:13:30"},{"expression":{"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24557:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6120,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24567:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6122,"nodeType":"ExpressionStatement","src":"24557:13:30"},{"expression":{"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6123,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24585:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24611:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6125,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"24595:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"24595:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6138,"nodeType":"ExpressionStatement","src":"24585:47:30"},{"expression":{"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24646:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6140,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24656:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6142,"nodeType":"ExpressionStatement","src":"24646:13:30"},{"expression":{"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24673:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6144,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"24683:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6146,"nodeType":"ExpressionStatement","src":"24673:13:30"},{"expression":{"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24701:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"24727:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6148,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"24711:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"24711:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6155,"nodeType":"ExpressionStatement","src":"24701:36:30"}]},{"expression":{"id":6157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24764:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5971,"id":6158,"nodeType":"Return","src":"24757:13:30"}]},"documentation":{"id":5965,"nodeType":"StructuredDocumentation","src":"23611:119:30","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6160,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:30","nodeType":"FunctionDefinition","parameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"value","nameLocation":"23757:5:30","nodeType":"VariableDeclaration","scope":6160,"src":"23749:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5966,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:30"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6160,"src":"23787:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5969,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:30"},"scope":6551,"src":"23735:1042:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6193,"nodeType":"Block","src":"25010:175:30","statements":[{"id":6192,"nodeType":"UncheckedBlock","src":"25020:159:30","statements":[{"assignments":[6172],"declarations":[{"constant":false,"id":6172,"mutability":"mutable","name":"result","nameLocation":"25052:6:30","nodeType":"VariableDeclaration","scope":6192,"src":"25044:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6176,"initialValue":{"arguments":[{"id":6174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"25066:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6173,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6160,6194],"referencedDeclaration":6160,"src":"25061:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"25093:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6181,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"25135:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}],"id":6180,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"25118:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4957_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"25153:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"25162:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6178,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"25102:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"25102:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6170,"id":6191,"nodeType":"Return","src":"25086:82:30"}]}]},"documentation":{"id":6161,"nodeType":"StructuredDocumentation","src":"24783:142:30","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6194,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:30","nodeType":"FunctionDefinition","parameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"mutability":"mutable","name":"value","nameLocation":"24952:5:30","nodeType":"VariableDeclaration","scope":6194,"src":"24944:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6162,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6166,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:30","nodeType":"VariableDeclaration","scope":6194,"src":"24959:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"},"typeName":{"id":6165,"nodeType":"UserDefinedTypeName","pathNode":{"id":6164,"name":"Rounding","nameLocations":["24959:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"24959:8:30"},"referencedDeclaration":4957,"src":"24959:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:30"},"returnParameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6194,"src":"25001:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6168,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:30"},"scope":6551,"src":"24930:255:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"25378:854:30","statements":[{"assignments":[6203],"declarations":[{"constant":false,"id":6203,"mutability":"mutable","name":"result","nameLocation":"25396:6:30","nodeType":"VariableDeclaration","scope":6322,"src":"25388:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6202,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6205,"initialValue":{"hexValue":"30","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:30"},{"id":6319,"nodeType":"UncheckedBlock","src":"25416:787:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25444:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6222,"nodeType":"IfStatement","src":"25440:103:30","trueBody":{"id":6221,"nodeType":"Block","src":"25463:80:30","statements":[{"expression":{"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25481:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6216,"nodeType":"ExpressionStatement","src":"25481:17:30"},{"expression":{"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"25516:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6220,"nodeType":"ExpressionStatement","src":"25516:12:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25560:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6239,"nodeType":"IfStatement","src":"25556:103:30","trueBody":{"id":6238,"nodeType":"Block","src":"25579:80:30","statements":[{"expression":{"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25597:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6233,"nodeType":"ExpressionStatement","src":"25597:17:30"},{"expression":{"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"25632:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6237,"nodeType":"ExpressionStatement","src":"25632:12:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25676:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6256,"nodeType":"IfStatement","src":"25672:103:30","trueBody":{"id":6255,"nodeType":"Block","src":"25695:80:30","statements":[{"expression":{"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25713:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:30","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6250,"nodeType":"ExpressionStatement","src":"25713:17:30"},{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"25748:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6254,"nodeType":"ExpressionStatement","src":"25748:12:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25792:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6273,"nodeType":"IfStatement","src":"25788:100:30","trueBody":{"id":6272,"nodeType":"Block","src":"25810:78:30","statements":[{"expression":{"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25828:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6267,"nodeType":"ExpressionStatement","src":"25828:16:30"},{"expression":{"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"25862:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6271,"nodeType":"ExpressionStatement","src":"25862:11:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25905:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:30","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6290,"nodeType":"IfStatement","src":"25901:100:30","trueBody":{"id":6289,"nodeType":"Block","src":"25923:78:30","statements":[{"expression":{"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"25941:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:30","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6284,"nodeType":"ExpressionStatement","src":"25941:16:30"},{"expression":{"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"25975:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6288,"nodeType":"ExpressionStatement","src":"25975:11:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"26018:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6307,"nodeType":"IfStatement","src":"26014:100:30","trueBody":{"id":6306,"nodeType":"Block","src":"26036:78:30","statements":[{"expression":{"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"26054:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6301,"nodeType":"ExpressionStatement","src":"26054:16:30"},{"expression":{"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"26088:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6305,"nodeType":"ExpressionStatement","src":"26088:11:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"26131:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6318,"nodeType":"IfStatement","src":"26127:66:30","trueBody":{"id":6317,"nodeType":"Block","src":"26149:44:30","statements":[{"expression":{"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"26167:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6316,"nodeType":"ExpressionStatement","src":"26167:11:30"}]}}]},{"expression":{"id":6320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"26219:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6201,"id":6321,"nodeType":"Return","src":"26212:13:30"}]},"documentation":{"id":6195,"nodeType":"StructuredDocumentation","src":"25191:120:30","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:30","nodeType":"FunctionDefinition","parameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"value","nameLocation":"25339:5:30","nodeType":"VariableDeclaration","scope":6323,"src":"25331:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:30"},"returnParameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6323,"src":"25369:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:30"},"scope":6551,"src":"25316:916:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6356,"nodeType":"Block","src":"26467:177:30","statements":[{"id":6355,"nodeType":"UncheckedBlock","src":"26477:161:30","statements":[{"assignments":[6335],"declarations":[{"constant":false,"id":6335,"mutability":"mutable","name":"result","nameLocation":"26509:6:30","nodeType":"VariableDeclaration","scope":6355,"src":"26501:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6339,"initialValue":{"arguments":[{"id":6337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"26524:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6336,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6323,6357],"referencedDeclaration":6323,"src":"26518:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"26551:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6344,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"26593:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}],"id":6343,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"26576:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4957_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"26612:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"26621:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6341,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"26560:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"26560:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6333,"id":6354,"nodeType":"Return","src":"26544:83:30"}]}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"26238:143:30","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6357,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:30","nodeType":"FunctionDefinition","parameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"value","nameLocation":"26409:5:30","nodeType":"VariableDeclaration","scope":6357,"src":"26401:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6329,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:30","nodeType":"VariableDeclaration","scope":6357,"src":"26416:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"},"typeName":{"id":6328,"nodeType":"UserDefinedTypeName","pathNode":{"id":6327,"name":"Rounding","nameLocations":["26416:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"26416:8:30"},"referencedDeclaration":4957,"src":"26416:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:30"},"returnParameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6357,"src":"26458:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6331,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:30"},"scope":6551,"src":"26386:258:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6493,"nodeType":"Block","src":"26964:674:30","statements":[{"assignments":[6366],"declarations":[{"constant":false,"id":6366,"mutability":"mutable","name":"result","nameLocation":"26982:6:30","nodeType":"VariableDeclaration","scope":6493,"src":"26974:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6365,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6368,"initialValue":{"hexValue":"30","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:30"},{"assignments":[6370],"declarations":[{"constant":false,"id":6370,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:30","nodeType":"VariableDeclaration","scope":6493,"src":"27002:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6371,"nodeType":"VariableDeclarationStatement","src":"27002:12:30"},{"id":6490,"nodeType":"UncheckedBlock","src":"27024:585:30","statements":[{"expression":{"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6372,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27048:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27071:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6373,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"27055:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"27055:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6385,"nodeType":"ExpressionStatement","src":"27048:46:30"},{"expression":{"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27108:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27118:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6391,"nodeType":"ExpressionStatement","src":"27108:20:30"},{"expression":{"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"27142:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6393,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27152:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6397,"nodeType":"ExpressionStatement","src":"27142:19:30"},{"expression":{"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27176:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27199:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6399,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"27183:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"27183:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6411,"nodeType":"ExpressionStatement","src":"27176:45:30"},{"expression":{"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27235:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6413,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27245:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":6414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6417,"nodeType":"ExpressionStatement","src":"27235:19:30"},{"expression":{"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"27268:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6419,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27278:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6423,"nodeType":"ExpressionStatement","src":"27268:18:30"},{"expression":{"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6424,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27301:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27324:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6425,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"27308:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"27308:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6437,"nodeType":"ExpressionStatement","src":"27301:45:30"},{"expression":{"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27360:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6439,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27370:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":6440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6443,"nodeType":"ExpressionStatement","src":"27360:19:30"},{"expression":{"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"27393:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6445,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27403:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6449,"nodeType":"ExpressionStatement","src":"27393:18:30"},{"expression":{"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6450,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27426:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27449:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:30","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6451,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"27433:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"27433:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6463,"nodeType":"ExpressionStatement","src":"27426:45:30"},{"expression":{"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27485:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6465,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27495:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6469,"nodeType":"ExpressionStatement","src":"27485:19:30"},{"expression":{"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"27518:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6471,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27528:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6475,"nodeType":"ExpressionStatement","src":"27518:18:30"},{"expression":{"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"27551:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"27577:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"27561:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"27561:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6489,"nodeType":"ExpressionStatement","src":"27551:47:30"}]},{"expression":{"id":6491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"27625:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6364,"id":6492,"nodeType":"Return","src":"27618:13:30"}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"26650:246:30","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6494,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:30","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"value","nameLocation":"26925:5:30","nodeType":"VariableDeclaration","scope":6494,"src":"26917:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6359,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:30"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6494,"src":"26955:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6362,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:30"},"scope":6551,"src":"26901:737:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6530,"nodeType":"Block","src":"27875:184:30","statements":[{"id":6529,"nodeType":"UncheckedBlock","src":"27885:168:30","statements":[{"assignments":[6506],"declarations":[{"constant":false,"id":6506,"mutability":"mutable","name":"result","nameLocation":"27917:6:30","nodeType":"VariableDeclaration","scope":6529,"src":"27909:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6505,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6510,"initialValue":{"arguments":[{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"27933:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6507,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6494,6531],"referencedDeclaration":6494,"src":"27926:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"27960:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6515,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"28002:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}],"id":6514,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"27985:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4957_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"28021:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"28036:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6512,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"27969:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"27969:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6504,"id":6528,"nodeType":"Return","src":"27953:89:30"}]}]},"documentation":{"id":6495,"nodeType":"StructuredDocumentation","src":"27644:144:30","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6531,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:30","nodeType":"FunctionDefinition","parameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"value","nameLocation":"27817:5:30","nodeType":"VariableDeclaration","scope":6531,"src":"27809:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6496,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6500,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:30","nodeType":"VariableDeclaration","scope":6531,"src":"27824:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"},"typeName":{"id":6499,"nodeType":"UserDefinedTypeName","pathNode":{"id":6498,"name":"Rounding","nameLocations":["27824:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"27824:8:30"},"referencedDeclaration":4957,"src":"27824:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:30"},"returnParameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6531,"src":"27866:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:30"},"scope":6551,"src":"27793:266:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6549,"nodeType":"Block","src":"28257:48:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6542,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"28280:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}],"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6540,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:30","typeDescriptions":{}}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6539,"id":6548,"nodeType":"Return","src":"28267:31:30"}]},"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"28065:113:30","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6550,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:30","nodeType":"FunctionDefinition","parameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:30","nodeType":"VariableDeclaration","scope":6550,"src":"28209:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"},"typeName":{"id":6534,"nodeType":"UserDefinedTypeName","pathNode":{"id":6533,"name":"Rounding","nameLocations":["28209:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"28209:8:30"},"referencedDeclaration":4957,"src":"28209:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4957","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:30"},"returnParameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6550,"src":"28251:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6537,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:30"},"scope":6551,"src":"28183:122:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6552,"src":"281:28026:30","usedErrors":[],"usedEvents":[]}],"src":"103:28205:30"},"id":30},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8316]},"id":8317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6553,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:31"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6554,"nodeType":"StructuredDocumentation","src":"218:550:31","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8316,"linearizedBaseContracts":[8316],"name":"SafeCast","nameLocation":"777:8:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6555,"nodeType":"StructuredDocumentation","src":"792:68:31","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6561,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:31","nodeType":"ErrorDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"bits","nameLocation":"908:4:31","nodeType":"VariableDeclaration","scope":6561,"src":"902:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6556,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6559,"mutability":"mutable","name":"value","nameLocation":"922:5:31","nodeType":"VariableDeclaration","scope":6561,"src":"914:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6558,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:31"},"src":"865:64:31"},{"documentation":{"id":6562,"nodeType":"StructuredDocumentation","src":"935:75:31","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6566,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:31","nodeType":"ErrorDefinition","parameters":{"id":6565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"mutability":"mutable","name":"value","nameLocation":"1056:5:31","nodeType":"VariableDeclaration","scope":6566,"src":"1049:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6563,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:31"},"src":"1015:48:31"},{"documentation":{"id":6567,"nodeType":"StructuredDocumentation","src":"1069:67:31","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6573,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:31","nodeType":"ErrorDefinition","parameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"bits","nameLocation":"1183:4:31","nodeType":"VariableDeclaration","scope":6573,"src":"1177:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6568,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6571,"mutability":"mutable","name":"value","nameLocation":"1196:5:31","nodeType":"VariableDeclaration","scope":6573,"src":"1189:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6570,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:31"},"src":"1141:62:31"},{"documentation":{"id":6574,"nodeType":"StructuredDocumentation","src":"1209:75:31","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6578,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:31","nodeType":"ErrorDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"value","nameLocation":"1331:5:31","nodeType":"VariableDeclaration","scope":6578,"src":"1323:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:31"},"src":"1289:49:31"},{"body":{"id":6605,"nodeType":"Block","src":"1695:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"1709:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6588,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:31","memberName":"max","nodeType":"MemberAccess","src":"1717:17:31","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6599,"nodeType":"IfStatement","src":"1705:105:31","trueBody":{"id":6598,"nodeType":"Block","src":"1736:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:31","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"1793:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6593,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"1757:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6597,"nodeType":"RevertStatement","src":"1750:49:31"}]}},{"expression":{"arguments":[{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"1834:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6600,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:31","typeDescriptions":{}}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6585,"id":6604,"nodeType":"Return","src":"1819:21:31"}]},"documentation":{"id":6579,"nodeType":"StructuredDocumentation","src":"1344:280:31","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6606,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:31","nodeType":"FunctionDefinition","parameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"value","nameLocation":"1656:5:31","nodeType":"VariableDeclaration","scope":6606,"src":"1648:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:31"},"returnParameters":{"id":6585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6606,"src":"1686:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6583,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:31","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:31"},"scope":8316,"src":"1629:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6633,"nodeType":"Block","src":"2204:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"2218:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6616,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:31","memberName":"max","nodeType":"MemberAccess","src":"2226:17:31","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6627,"nodeType":"IfStatement","src":"2214:105:31","trueBody":{"id":6626,"nodeType":"Block","src":"2245:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:31","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"2302:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6621,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2266:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6625,"nodeType":"RevertStatement","src":"2259:49:31"}]}},{"expression":{"arguments":[{"id":6630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"2343:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6628,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:31","typeDescriptions":{}}},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6613,"id":6632,"nodeType":"Return","src":"2328:21:31"}]},"documentation":{"id":6607,"nodeType":"StructuredDocumentation","src":"1853:280:31","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6634,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:31","nodeType":"FunctionDefinition","parameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"value","nameLocation":"2165:5:31","nodeType":"VariableDeclaration","scope":6634,"src":"2157:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:31"},"returnParameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6634,"src":"2195:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6611,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:31","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:31"},"scope":8316,"src":"2138:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6661,"nodeType":"Block","src":"2713:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"2727:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6644,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:31","memberName":"max","nodeType":"MemberAccess","src":"2735:17:31","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6655,"nodeType":"IfStatement","src":"2723:105:31","trueBody":{"id":6654,"nodeType":"Block","src":"2754:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:31","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"2811:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6649,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2775:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6653,"nodeType":"RevertStatement","src":"2768:49:31"}]}},{"expression":{"arguments":[{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"2852:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6656,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:31","typeDescriptions":{}}},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6641,"id":6660,"nodeType":"Return","src":"2837:21:31"}]},"documentation":{"id":6635,"nodeType":"StructuredDocumentation","src":"2362:280:31","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:31","nodeType":"FunctionDefinition","parameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6637,"mutability":"mutable","name":"value","nameLocation":"2674:5:31","nodeType":"VariableDeclaration","scope":6662,"src":"2666:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:31"},"returnParameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6662,"src":"2704:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6639,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:31","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:31"},"scope":8316,"src":"2647:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6689,"nodeType":"Block","src":"3222:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"3236:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6672,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:31","memberName":"max","nodeType":"MemberAccess","src":"3244:17:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6683,"nodeType":"IfStatement","src":"3232:105:31","trueBody":{"id":6682,"nodeType":"Block","src":"3263:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:31","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"3320:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3284:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6681,"nodeType":"RevertStatement","src":"3277:49:31"}]}},{"expression":{"arguments":[{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"3361:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6684,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:31","typeDescriptions":{}}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6669,"id":6688,"nodeType":"Return","src":"3346:21:31"}]},"documentation":{"id":6663,"nodeType":"StructuredDocumentation","src":"2871:280:31","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:31","nodeType":"FunctionDefinition","parameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"value","nameLocation":"3183:5:31","nodeType":"VariableDeclaration","scope":6690,"src":"3175:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:31"},"returnParameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6690,"src":"3213:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6667,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:31"},"scope":8316,"src":"3156:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6717,"nodeType":"Block","src":"3731:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"3745:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6700,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:31","memberName":"max","nodeType":"MemberAccess","src":"3753:17:31","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6711,"nodeType":"IfStatement","src":"3741:105:31","trueBody":{"id":6710,"nodeType":"Block","src":"3772:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:31","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"3829:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3793:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6709,"nodeType":"RevertStatement","src":"3786:49:31"}]}},{"expression":{"arguments":[{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"3870:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6712,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:31","typeDescriptions":{}}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6697,"id":6716,"nodeType":"Return","src":"3855:21:31"}]},"documentation":{"id":6691,"nodeType":"StructuredDocumentation","src":"3380:280:31","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:31","nodeType":"FunctionDefinition","parameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"value","nameLocation":"3692:5:31","nodeType":"VariableDeclaration","scope":6718,"src":"3684:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:31"},"returnParameters":{"id":6697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6718,"src":"3722:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6695,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:31","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:31"},"scope":8316,"src":"3665:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6745,"nodeType":"Block","src":"4240:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4254:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6728,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:31","memberName":"max","nodeType":"MemberAccess","src":"4262:17:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6739,"nodeType":"IfStatement","src":"4250:105:31","trueBody":{"id":6738,"nodeType":"Block","src":"4281:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:31","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4338:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"4302:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6737,"nodeType":"RevertStatement","src":"4295:49:31"}]}},{"expression":{"arguments":[{"id":6742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4379:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6740,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:31","typeDescriptions":{}}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6725,"id":6744,"nodeType":"Return","src":"4364:21:31"}]},"documentation":{"id":6719,"nodeType":"StructuredDocumentation","src":"3889:280:31","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:31","nodeType":"FunctionDefinition","parameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6721,"mutability":"mutable","name":"value","nameLocation":"4201:5:31","nodeType":"VariableDeclaration","scope":6746,"src":"4193:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:31"},"returnParameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6746,"src":"4231:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6723,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:31"},"scope":8316,"src":"4174:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6773,"nodeType":"Block","src":"4749:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4763:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6756,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:31","memberName":"max","nodeType":"MemberAccess","src":"4771:17:31","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6767,"nodeType":"IfStatement","src":"4759:105:31","trueBody":{"id":6766,"nodeType":"Block","src":"4790:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:31","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4847:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"4811:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6765,"nodeType":"RevertStatement","src":"4804:49:31"}]}},{"expression":{"arguments":[{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4888:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6768,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:31","typeDescriptions":{}}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6753,"id":6772,"nodeType":"Return","src":"4873:21:31"}]},"documentation":{"id":6747,"nodeType":"StructuredDocumentation","src":"4398:280:31","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:31","nodeType":"FunctionDefinition","parameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"value","nameLocation":"4710:5:31","nodeType":"VariableDeclaration","scope":6774,"src":"4702:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6748,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:31"},"returnParameters":{"id":6753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6774,"src":"4740:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6751,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:31","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:31"},"scope":8316,"src":"4683:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6801,"nodeType":"Block","src":"5258:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"5272:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6784,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:31","memberName":"max","nodeType":"MemberAccess","src":"5280:17:31","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6795,"nodeType":"IfStatement","src":"5268:105:31","trueBody":{"id":6794,"nodeType":"Block","src":"5299:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:31","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"5356:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"5320:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6793,"nodeType":"RevertStatement","src":"5313:49:31"}]}},{"expression":{"arguments":[{"id":6798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"5397:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6796,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:31","typeDescriptions":{}}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6781,"id":6800,"nodeType":"Return","src":"5382:21:31"}]},"documentation":{"id":6775,"nodeType":"StructuredDocumentation","src":"4907:280:31","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:31","nodeType":"FunctionDefinition","parameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"value","nameLocation":"5219:5:31","nodeType":"VariableDeclaration","scope":6802,"src":"5211:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6776,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:31"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6802,"src":"5249:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6779,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:31","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:31"},"scope":8316,"src":"5192:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6829,"nodeType":"Block","src":"5767:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"5781:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6812,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:31","memberName":"max","nodeType":"MemberAccess","src":"5789:17:31","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6823,"nodeType":"IfStatement","src":"5777:105:31","trueBody":{"id":6822,"nodeType":"Block","src":"5808:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:31","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"5865:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"5829:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6821,"nodeType":"RevertStatement","src":"5822:49:31"}]}},{"expression":{"arguments":[{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"5906:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6824,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:31","typeDescriptions":{}}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6809,"id":6828,"nodeType":"Return","src":"5891:21:31"}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"5416:280:31","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:31","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"value","nameLocation":"5728:5:31","nodeType":"VariableDeclaration","scope":6830,"src":"5720:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6804,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:31"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6830,"src":"5758:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6807,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:31","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:31"},"scope":8316,"src":"5701:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6857,"nodeType":"Block","src":"6276:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"6290:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6840,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:31","memberName":"max","nodeType":"MemberAccess","src":"6298:17:31","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6851,"nodeType":"IfStatement","src":"6286:105:31","trueBody":{"id":6850,"nodeType":"Block","src":"6317:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:31","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"6374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"6338:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6849,"nodeType":"RevertStatement","src":"6331:49:31"}]}},{"expression":{"arguments":[{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"6415:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6852,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:31","typeDescriptions":{}}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6837,"id":6856,"nodeType":"Return","src":"6400:21:31"}]},"documentation":{"id":6831,"nodeType":"StructuredDocumentation","src":"5925:280:31","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:31","nodeType":"FunctionDefinition","parameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6833,"mutability":"mutable","name":"value","nameLocation":"6237:5:31","nodeType":"VariableDeclaration","scope":6858,"src":"6229:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:31"},"returnParameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6858,"src":"6267:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6835,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:31","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:31"},"scope":8316,"src":"6210:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6885,"nodeType":"Block","src":"6785:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"6799:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6868,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:31","memberName":"max","nodeType":"MemberAccess","src":"6807:17:31","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6879,"nodeType":"IfStatement","src":"6795:105:31","trueBody":{"id":6878,"nodeType":"Block","src":"6826:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:31","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"6883:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"6847:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6877,"nodeType":"RevertStatement","src":"6840:49:31"}]}},{"expression":{"arguments":[{"id":6882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"6924:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6880,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:31","typeDescriptions":{}}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6865,"id":6884,"nodeType":"Return","src":"6909:21:31"}]},"documentation":{"id":6859,"nodeType":"StructuredDocumentation","src":"6434:280:31","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:31","nodeType":"FunctionDefinition","parameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"value","nameLocation":"6746:5:31","nodeType":"VariableDeclaration","scope":6886,"src":"6738:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6860,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:31"},"returnParameters":{"id":6865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6886,"src":"6776:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6863,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:31","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:31"},"scope":8316,"src":"6719:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6913,"nodeType":"Block","src":"7294:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"7308:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6896,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:31","memberName":"max","nodeType":"MemberAccess","src":"7316:17:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6907,"nodeType":"IfStatement","src":"7304:105:31","trueBody":{"id":6906,"nodeType":"Block","src":"7335:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:31","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"7392:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"7356:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6905,"nodeType":"RevertStatement","src":"7349:49:31"}]}},{"expression":{"arguments":[{"id":6910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"7433:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6908,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:31","typeDescriptions":{}}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6893,"id":6912,"nodeType":"Return","src":"7418:21:31"}]},"documentation":{"id":6887,"nodeType":"StructuredDocumentation","src":"6943:280:31","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:31","nodeType":"FunctionDefinition","parameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"value","nameLocation":"7255:5:31","nodeType":"VariableDeclaration","scope":6914,"src":"7247:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:31"},"returnParameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6914,"src":"7285:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6891,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:31"},"scope":8316,"src":"7228:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6941,"nodeType":"Block","src":"7803:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"7817:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6924,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:31","memberName":"max","nodeType":"MemberAccess","src":"7825:17:31","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6935,"nodeType":"IfStatement","src":"7813:105:31","trueBody":{"id":6934,"nodeType":"Block","src":"7844:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:31","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"7901:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6929,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"7865:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6933,"nodeType":"RevertStatement","src":"7858:49:31"}]}},{"expression":{"arguments":[{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"7942:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6936,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:31","typeDescriptions":{}}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6921,"id":6940,"nodeType":"Return","src":"7927:21:31"}]},"documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"7452:280:31","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:31","nodeType":"FunctionDefinition","parameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"value","nameLocation":"7764:5:31","nodeType":"VariableDeclaration","scope":6942,"src":"7756:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6916,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:31"},"returnParameters":{"id":6921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6942,"src":"7794:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6919,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:31","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:31"},"scope":8316,"src":"7737:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6969,"nodeType":"Block","src":"8312:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"8326:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6952,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:31","memberName":"max","nodeType":"MemberAccess","src":"8334:17:31","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6963,"nodeType":"IfStatement","src":"8322:105:31","trueBody":{"id":6962,"nodeType":"Block","src":"8353:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:31","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"8410:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6957,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"8374:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6961,"nodeType":"RevertStatement","src":"8367:49:31"}]}},{"expression":{"arguments":[{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"8451:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6964,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:31","typeDescriptions":{}}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6949,"id":6968,"nodeType":"Return","src":"8436:21:31"}]},"documentation":{"id":6943,"nodeType":"StructuredDocumentation","src":"7961:280:31","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6970,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:31","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"value","nameLocation":"8273:5:31","nodeType":"VariableDeclaration","scope":6970,"src":"8265:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6944,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:31"},"returnParameters":{"id":6949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6970,"src":"8303:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6947,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:31","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:31"},"scope":8316,"src":"8246:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6997,"nodeType":"Block","src":"8821:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"8835:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6980,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:31","memberName":"max","nodeType":"MemberAccess","src":"8843:17:31","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6991,"nodeType":"IfStatement","src":"8831:105:31","trueBody":{"id":6990,"nodeType":"Block","src":"8862:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:31","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"8919:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6985,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"8883:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6989,"nodeType":"RevertStatement","src":"8876:49:31"}]}},{"expression":{"arguments":[{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"8960:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6992,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:31","typeDescriptions":{}}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6977,"id":6996,"nodeType":"Return","src":"8945:21:31"}]},"documentation":{"id":6971,"nodeType":"StructuredDocumentation","src":"8470:280:31","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:31","nodeType":"FunctionDefinition","parameters":{"id":6974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6973,"mutability":"mutable","name":"value","nameLocation":"8782:5:31","nodeType":"VariableDeclaration","scope":6998,"src":"8774:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6972,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:31"},"returnParameters":{"id":6977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6998,"src":"8812:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6975,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:31","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:31"},"scope":8316,"src":"8755:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7025,"nodeType":"Block","src":"9330:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"9344:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7008,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:31","memberName":"max","nodeType":"MemberAccess","src":"9352:17:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7019,"nodeType":"IfStatement","src":"9340:105:31","trueBody":{"id":7018,"nodeType":"Block","src":"9371:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"9428:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7013,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"9392:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7017,"nodeType":"RevertStatement","src":"9385:49:31"}]}},{"expression":{"arguments":[{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"9469:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7020,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:31","typeDescriptions":{}}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7005,"id":7024,"nodeType":"Return","src":"9454:21:31"}]},"documentation":{"id":6999,"nodeType":"StructuredDocumentation","src":"8979:280:31","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7026,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:31","nodeType":"FunctionDefinition","parameters":{"id":7002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7001,"mutability":"mutable","name":"value","nameLocation":"9291:5:31","nodeType":"VariableDeclaration","scope":7026,"src":"9283:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7000,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:31"},"returnParameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7026,"src":"9321:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7003,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:31"},"scope":8316,"src":"9264:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"9839:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"9853:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7036,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:31","memberName":"max","nodeType":"MemberAccess","src":"9861:17:31","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7047,"nodeType":"IfStatement","src":"9849:105:31","trueBody":{"id":7046,"nodeType":"Block","src":"9880:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:31","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"9937:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7041,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"9901:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7045,"nodeType":"RevertStatement","src":"9894:49:31"}]}},{"expression":{"arguments":[{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"9978:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7048,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:31","typeDescriptions":{}}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7033,"id":7052,"nodeType":"Return","src":"9963:21:31"}]},"documentation":{"id":7027,"nodeType":"StructuredDocumentation","src":"9488:280:31","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:31","nodeType":"FunctionDefinition","parameters":{"id":7030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7029,"mutability":"mutable","name":"value","nameLocation":"9800:5:31","nodeType":"VariableDeclaration","scope":7054,"src":"9792:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:31"},"returnParameters":{"id":7033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7054,"src":"9830:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7031,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:31","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:31"},"scope":8316,"src":"9773:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7081,"nodeType":"Block","src":"10348:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"10362:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7064,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7063,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:31","memberName":"max","nodeType":"MemberAccess","src":"10370:17:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7075,"nodeType":"IfStatement","src":"10358:105:31","trueBody":{"id":7074,"nodeType":"Block","src":"10389:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:31","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"10446:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7069,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"10410:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7073,"nodeType":"RevertStatement","src":"10403:49:31"}]}},{"expression":{"arguments":[{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"10487:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7076,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:31","typeDescriptions":{}}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7061,"id":7080,"nodeType":"Return","src":"10472:21:31"}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"9997:280:31","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:31","nodeType":"FunctionDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"value","nameLocation":"10309:5:31","nodeType":"VariableDeclaration","scope":7082,"src":"10301:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7056,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:31"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7082,"src":"10339:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7059,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:31","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:31"},"scope":8316,"src":"10282:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7109,"nodeType":"Block","src":"10857:152:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"10871:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7092,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7091,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:31","memberName":"max","nodeType":"MemberAccess","src":"10879:17:31","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7103,"nodeType":"IfStatement","src":"10867:105:31","trueBody":{"id":7102,"nodeType":"Block","src":"10898:74:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:31","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"10955:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7097,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"10919:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7101,"nodeType":"RevertStatement","src":"10912:49:31"}]}},{"expression":{"arguments":[{"id":7106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"10996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7104,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:31","typeDescriptions":{}}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7089,"id":7108,"nodeType":"Return","src":"10981:21:31"}]},"documentation":{"id":7083,"nodeType":"StructuredDocumentation","src":"10506:280:31","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:31","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"value","nameLocation":"10818:5:31","nodeType":"VariableDeclaration","scope":7110,"src":"10810:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7084,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:31"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7110,"src":"10848:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7087,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:31","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:31"},"scope":8316,"src":"10791:218:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7137,"nodeType":"Block","src":"11360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"11374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7120,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7119,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:31","memberName":"max","nodeType":"MemberAccess","src":"11382:16:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7131,"nodeType":"IfStatement","src":"11370:103:31","trueBody":{"id":7130,"nodeType":"Block","src":"11400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"11456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7125,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"11421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7129,"nodeType":"RevertStatement","src":"11414:48:31"}]}},{"expression":{"arguments":[{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"11496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7132,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:31","typeDescriptions":{}}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7117,"id":7136,"nodeType":"Return","src":"11482:20:31"}]},"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"11015:276:31","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7138,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"value","nameLocation":"11322:5:31","nodeType":"VariableDeclaration","scope":7138,"src":"11314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:31"},"returnParameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7138,"src":"11352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7115,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:31"},"scope":8316,"src":"11296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7165,"nodeType":"Block","src":"11860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"11874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7148,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:31","memberName":"max","nodeType":"MemberAccess","src":"11882:16:31","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7159,"nodeType":"IfStatement","src":"11870:103:31","trueBody":{"id":7158,"nodeType":"Block","src":"11900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"11956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7153,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"11921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7157,"nodeType":"RevertStatement","src":"11914:48:31"}]}},{"expression":{"arguments":[{"id":7162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"11996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7160,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:31","typeDescriptions":{}}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7145,"id":7164,"nodeType":"Return","src":"11982:20:31"}]},"documentation":{"id":7139,"nodeType":"StructuredDocumentation","src":"11515:276:31","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7166,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"value","nameLocation":"11822:5:31","nodeType":"VariableDeclaration","scope":7166,"src":"11814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:31"},"returnParameters":{"id":7145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7166,"src":"11852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7143,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:31","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:31"},"scope":8316,"src":"11796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7193,"nodeType":"Block","src":"12360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"12374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7176,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:31","memberName":"max","nodeType":"MemberAccess","src":"12382:16:31","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7187,"nodeType":"IfStatement","src":"12370:103:31","trueBody":{"id":7186,"nodeType":"Block","src":"12400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"12456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7181,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"12421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7185,"nodeType":"RevertStatement","src":"12414:48:31"}]}},{"expression":{"arguments":[{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"12496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7188,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:31","typeDescriptions":{}}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7173,"id":7192,"nodeType":"Return","src":"12482:20:31"}]},"documentation":{"id":7167,"nodeType":"StructuredDocumentation","src":"12015:276:31","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7194,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7169,"mutability":"mutable","name":"value","nameLocation":"12322:5:31","nodeType":"VariableDeclaration","scope":7194,"src":"12314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7168,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:31"},"returnParameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7194,"src":"12352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7171,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:31","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:31"},"scope":8316,"src":"12296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7221,"nodeType":"Block","src":"12860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"12874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7204,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7203,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:31","memberName":"max","nodeType":"MemberAccess","src":"12882:16:31","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7215,"nodeType":"IfStatement","src":"12870:103:31","trueBody":{"id":7214,"nodeType":"Block","src":"12900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"12956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7209,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"12921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7213,"nodeType":"RevertStatement","src":"12914:48:31"}]}},{"expression":{"arguments":[{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"12996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7216,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:31","typeDescriptions":{}}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7201,"id":7220,"nodeType":"Return","src":"12982:20:31"}]},"documentation":{"id":7195,"nodeType":"StructuredDocumentation","src":"12515:276:31","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7222,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"value","nameLocation":"12822:5:31","nodeType":"VariableDeclaration","scope":7222,"src":"12814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:31"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7222,"src":"12852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7199,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:31","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:31"},"scope":8316,"src":"12796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7249,"nodeType":"Block","src":"13360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"13374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7232,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7231,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:31","memberName":"max","nodeType":"MemberAccess","src":"13382:16:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7243,"nodeType":"IfStatement","src":"13370:103:31","trueBody":{"id":7242,"nodeType":"Block","src":"13400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"13456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7237,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"13421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7241,"nodeType":"RevertStatement","src":"13414:48:31"}]}},{"expression":{"arguments":[{"id":7246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"13496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7244,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:31","typeDescriptions":{}}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7229,"id":7248,"nodeType":"Return","src":"13482:20:31"}]},"documentation":{"id":7223,"nodeType":"StructuredDocumentation","src":"13015:276:31","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7250,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"value","nameLocation":"13322:5:31","nodeType":"VariableDeclaration","scope":7250,"src":"13314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:31"},"returnParameters":{"id":7229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7250,"src":"13352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7227,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:31"},"scope":8316,"src":"13296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7277,"nodeType":"Block","src":"13860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"13874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7260,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:31","memberName":"max","nodeType":"MemberAccess","src":"13882:16:31","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7271,"nodeType":"IfStatement","src":"13870:103:31","trueBody":{"id":7270,"nodeType":"Block","src":"13900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"13956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7265,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"13921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7269,"nodeType":"RevertStatement","src":"13914:48:31"}]}},{"expression":{"arguments":[{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"13996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7272,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:31","typeDescriptions":{}}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7257,"id":7276,"nodeType":"Return","src":"13982:20:31"}]},"documentation":{"id":7251,"nodeType":"StructuredDocumentation","src":"13515:276:31","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7278,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7253,"mutability":"mutable","name":"value","nameLocation":"13822:5:31","nodeType":"VariableDeclaration","scope":7278,"src":"13814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7252,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:31"},"returnParameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7278,"src":"13852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7255,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:31","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:31"},"scope":8316,"src":"13796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7305,"nodeType":"Block","src":"14360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"14374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7288,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:31","memberName":"max","nodeType":"MemberAccess","src":"14382:16:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7299,"nodeType":"IfStatement","src":"14370:103:31","trueBody":{"id":7298,"nodeType":"Block","src":"14400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"14456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7293,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"14421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7297,"nodeType":"RevertStatement","src":"14414:48:31"}]}},{"expression":{"arguments":[{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"14496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7300,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:31","typeDescriptions":{}}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7285,"id":7304,"nodeType":"Return","src":"14482:20:31"}]},"documentation":{"id":7279,"nodeType":"StructuredDocumentation","src":"14015:276:31","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7306,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7281,"mutability":"mutable","name":"value","nameLocation":"14322:5:31","nodeType":"VariableDeclaration","scope":7306,"src":"14314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7280,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:31"},"returnParameters":{"id":7285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7306,"src":"14352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7283,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:31"},"scope":8316,"src":"14296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7333,"nodeType":"Block","src":"14860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"14874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7316,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7315,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:31","memberName":"max","nodeType":"MemberAccess","src":"14882:16:31","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7327,"nodeType":"IfStatement","src":"14870:103:31","trueBody":{"id":7326,"nodeType":"Block","src":"14900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"14956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7321,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"14921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7325,"nodeType":"RevertStatement","src":"14914:48:31"}]}},{"expression":{"arguments":[{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"14996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7328,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:31","typeDescriptions":{}}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7313,"id":7332,"nodeType":"Return","src":"14982:20:31"}]},"documentation":{"id":7307,"nodeType":"StructuredDocumentation","src":"14515:276:31","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7334,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"value","nameLocation":"14822:5:31","nodeType":"VariableDeclaration","scope":7334,"src":"14814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7308,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:31"},"returnParameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7334,"src":"14852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7311,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:31","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:31"},"scope":8316,"src":"14796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7361,"nodeType":"Block","src":"15360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"15374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7344,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7343,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:31","memberName":"max","nodeType":"MemberAccess","src":"15382:16:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7355,"nodeType":"IfStatement","src":"15370:103:31","trueBody":{"id":7354,"nodeType":"Block","src":"15400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"15456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7349,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"15421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7353,"nodeType":"RevertStatement","src":"15414:48:31"}]}},{"expression":{"arguments":[{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"15496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7356,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:31","typeDescriptions":{}}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7341,"id":7360,"nodeType":"Return","src":"15482:20:31"}]},"documentation":{"id":7335,"nodeType":"StructuredDocumentation","src":"15015:276:31","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7362,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"value","nameLocation":"15322:5:31","nodeType":"VariableDeclaration","scope":7362,"src":"15314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7336,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:31"},"returnParameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7362,"src":"15352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7339,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:31"},"scope":8316,"src":"15296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7389,"nodeType":"Block","src":"15860:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"15874:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7372,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:31","memberName":"max","nodeType":"MemberAccess","src":"15882:16:31","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7383,"nodeType":"IfStatement","src":"15870:103:31","trueBody":{"id":7382,"nodeType":"Block","src":"15900:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:31","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"15956:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7377,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"15921:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7381,"nodeType":"RevertStatement","src":"15914:48:31"}]}},{"expression":{"arguments":[{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"15996:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7384,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:31","typeDescriptions":{}}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7369,"id":7388,"nodeType":"Return","src":"15982:20:31"}]},"documentation":{"id":7363,"nodeType":"StructuredDocumentation","src":"15515:276:31","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7390,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:31","nodeType":"FunctionDefinition","parameters":{"id":7366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7365,"mutability":"mutable","name":"value","nameLocation":"15822:5:31","nodeType":"VariableDeclaration","scope":7390,"src":"15814:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7364,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:31"},"returnParameters":{"id":7369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7390,"src":"15852:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7367,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:31","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:31"},"scope":8316,"src":"15796:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7417,"nodeType":"Block","src":"16360:149:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"16374:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7400,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:31","memberName":"max","nodeType":"MemberAccess","src":"16382:16:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7411,"nodeType":"IfStatement","src":"16370:103:31","trueBody":{"id":7410,"nodeType":"Block","src":"16400:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"16456:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7405,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"16421:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7409,"nodeType":"RevertStatement","src":"16414:48:31"}]}},{"expression":{"arguments":[{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"16496:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7412,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:31","typeDescriptions":{}}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7397,"id":7416,"nodeType":"Return","src":"16482:20:31"}]},"documentation":{"id":7391,"nodeType":"StructuredDocumentation","src":"16015:276:31","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7418,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:31","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7393,"mutability":"mutable","name":"value","nameLocation":"16322:5:31","nodeType":"VariableDeclaration","scope":7418,"src":"16314:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:31"},"returnParameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7418,"src":"16352:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7395,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:31"},"scope":8316,"src":"16296:213:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7445,"nodeType":"Block","src":"16854:146:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"16868:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7428,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:31","memberName":"max","nodeType":"MemberAccess","src":"16876:15:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7439,"nodeType":"IfStatement","src":"16864:101:31","trueBody":{"id":7438,"nodeType":"Block","src":"16893:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"16948:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7433,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"16914:30:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7437,"nodeType":"RevertStatement","src":"16907:47:31"}]}},{"expression":{"arguments":[{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"16987:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7440,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:31","typeDescriptions":{}}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7425,"id":7444,"nodeType":"Return","src":"16974:19:31"}]},"documentation":{"id":7419,"nodeType":"StructuredDocumentation","src":"16515:272:31","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:31","nodeType":"FunctionDefinition","parameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"value","nameLocation":"16817:5:31","nodeType":"VariableDeclaration","scope":7446,"src":"16809:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7420,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:31"},"returnParameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7446,"src":"16847:5:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7423,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:31"},"scope":8316,"src":"16792:208:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7468,"nodeType":"Block","src":"17236:128:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"17250:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7462,"nodeType":"IfStatement","src":"17246:81:31","trueBody":{"id":7461,"nodeType":"Block","src":"17261:66:31","statements":[{"errorCall":{"arguments":[{"id":7458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"17310:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7457,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"17282:27:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7460,"nodeType":"RevertStatement","src":"17275:41:31"}]}},{"expression":{"arguments":[{"id":7465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"17351:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7463,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:31","typeDescriptions":{}}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7453,"id":7467,"nodeType":"Return","src":"17336:21:31"}]},"documentation":{"id":7447,"nodeType":"StructuredDocumentation","src":"17006:160:31","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7469,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:31","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7449,"mutability":"mutable","name":"value","nameLocation":"17197:5:31","nodeType":"VariableDeclaration","scope":7469,"src":"17190:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7448,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:31"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7469,"src":"17227:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7451,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:31"},"scope":8316,"src":"17171:193:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7494,"nodeType":"Block","src":"17761:150:31","statements":[{"expression":{"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"17771:10:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"17791:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7478,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:31","typeDescriptions":{}}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7483,"nodeType":"ExpressionStatement","src":"17771:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"17811:10:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"17825:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7493,"nodeType":"IfStatement","src":"17807:98:31","trueBody":{"id":7492,"nodeType":"Block","src":"17832:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:31","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"17888:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7487,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"17853:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7491,"nodeType":"RevertStatement","src":"17846:48:31"}]}}]},"documentation":{"id":7470,"nodeType":"StructuredDocumentation","src":"17370:312:31","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7495,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:31","nodeType":"FunctionDefinition","parameters":{"id":7473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7472,"mutability":"mutable","name":"value","nameLocation":"17712:5:31","nodeType":"VariableDeclaration","scope":7495,"src":"17705:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7471,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:31"},"returnParameters":{"id":7476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:31","nodeType":"VariableDeclaration","scope":7495,"src":"17742:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7474,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:31","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:31"},"scope":8316,"src":"17687:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7520,"nodeType":"Block","src":"18308:150:31","statements":[{"expression":{"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"18318:10:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"18338:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7504,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:31","typeDescriptions":{}}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7509,"nodeType":"ExpressionStatement","src":"18318:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7510,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"18358:10:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"18372:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7519,"nodeType":"IfStatement","src":"18354:98:31","trueBody":{"id":7518,"nodeType":"Block","src":"18379:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:31","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"18435:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7513,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"18400:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7517,"nodeType":"RevertStatement","src":"18393:48:31"}]}}]},"documentation":{"id":7496,"nodeType":"StructuredDocumentation","src":"17917:312:31","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7521,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:31","nodeType":"FunctionDefinition","parameters":{"id":7499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7498,"mutability":"mutable","name":"value","nameLocation":"18259:5:31","nodeType":"VariableDeclaration","scope":7521,"src":"18252:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7497,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:31"},"returnParameters":{"id":7502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7501,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:31","nodeType":"VariableDeclaration","scope":7521,"src":"18289:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7500,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:31","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:31"},"scope":8316,"src":"18234:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7546,"nodeType":"Block","src":"18855:150:31","statements":[{"expression":{"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"18865:10:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"18885:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7530,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:31","typeDescriptions":{}}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7535,"nodeType":"ExpressionStatement","src":"18865:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"18905:10:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"18919:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7545,"nodeType":"IfStatement","src":"18901:98:31","trueBody":{"id":7544,"nodeType":"Block","src":"18926:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:31","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"18982:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7539,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"18947:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7543,"nodeType":"RevertStatement","src":"18940:48:31"}]}}]},"documentation":{"id":7522,"nodeType":"StructuredDocumentation","src":"18464:312:31","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7547,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:31","nodeType":"FunctionDefinition","parameters":{"id":7525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7524,"mutability":"mutable","name":"value","nameLocation":"18806:5:31","nodeType":"VariableDeclaration","scope":7547,"src":"18799:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7523,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:31"},"returnParameters":{"id":7528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7527,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:31","nodeType":"VariableDeclaration","scope":7547,"src":"18836:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7526,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:31","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:31"},"scope":8316,"src":"18781:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7572,"nodeType":"Block","src":"19402:150:31","statements":[{"expression":{"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"19412:10:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"19432:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7556,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:31","typeDescriptions":{}}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7561,"nodeType":"ExpressionStatement","src":"19412:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7562,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"19452:10:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"19466:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7571,"nodeType":"IfStatement","src":"19448:98:31","trueBody":{"id":7570,"nodeType":"Block","src":"19473:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:31","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"19529:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7565,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"19494:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7569,"nodeType":"RevertStatement","src":"19487:48:31"}]}}]},"documentation":{"id":7548,"nodeType":"StructuredDocumentation","src":"19011:312:31","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7573,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:31","nodeType":"FunctionDefinition","parameters":{"id":7551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7550,"mutability":"mutable","name":"value","nameLocation":"19353:5:31","nodeType":"VariableDeclaration","scope":7573,"src":"19346:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7549,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:31"},"returnParameters":{"id":7554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7553,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:31","nodeType":"VariableDeclaration","scope":7573,"src":"19383:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7552,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:31","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:31"},"scope":8316,"src":"19328:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7598,"nodeType":"Block","src":"19949:150:31","statements":[{"expression":{"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"19959:10:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"19979:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7582,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:31","typeDescriptions":{}}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7587,"nodeType":"ExpressionStatement","src":"19959:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7588,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"19999:10:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"20013:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7597,"nodeType":"IfStatement","src":"19995:98:31","trueBody":{"id":7596,"nodeType":"Block","src":"20020:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:31","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"20076:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7591,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"20041:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7595,"nodeType":"RevertStatement","src":"20034:48:31"}]}}]},"documentation":{"id":7574,"nodeType":"StructuredDocumentation","src":"19558:312:31","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7599,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:31","nodeType":"FunctionDefinition","parameters":{"id":7577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7576,"mutability":"mutable","name":"value","nameLocation":"19900:5:31","nodeType":"VariableDeclaration","scope":7599,"src":"19893:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7575,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:31"},"returnParameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:31","nodeType":"VariableDeclaration","scope":7599,"src":"19930:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7578,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:31","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:31"},"scope":8316,"src":"19875:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7624,"nodeType":"Block","src":"20496:150:31","statements":[{"expression":{"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"20506:10:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"20526:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7608,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:31","typeDescriptions":{}}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7613,"nodeType":"ExpressionStatement","src":"20506:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7614,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"20546:10:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"20560:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7623,"nodeType":"IfStatement","src":"20542:98:31","trueBody":{"id":7622,"nodeType":"Block","src":"20567:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:31","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"20623:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7617,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"20588:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7621,"nodeType":"RevertStatement","src":"20581:48:31"}]}}]},"documentation":{"id":7600,"nodeType":"StructuredDocumentation","src":"20105:312:31","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7625,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:31","nodeType":"FunctionDefinition","parameters":{"id":7603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7602,"mutability":"mutable","name":"value","nameLocation":"20447:5:31","nodeType":"VariableDeclaration","scope":7625,"src":"20440:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7601,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:31"},"returnParameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:31","nodeType":"VariableDeclaration","scope":7625,"src":"20477:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7604,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:31","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:31"},"scope":8316,"src":"20422:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7650,"nodeType":"Block","src":"21043:150:31","statements":[{"expression":{"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"21053:10:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"21073:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7634,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:31","typeDescriptions":{}}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7639,"nodeType":"ExpressionStatement","src":"21053:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7640,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"21093:10:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"21107:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7649,"nodeType":"IfStatement","src":"21089:98:31","trueBody":{"id":7648,"nodeType":"Block","src":"21114:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:31","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"21170:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7643,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"21135:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7647,"nodeType":"RevertStatement","src":"21128:48:31"}]}}]},"documentation":{"id":7626,"nodeType":"StructuredDocumentation","src":"20652:312:31","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7651,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:31","nodeType":"FunctionDefinition","parameters":{"id":7629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7628,"mutability":"mutable","name":"value","nameLocation":"20994:5:31","nodeType":"VariableDeclaration","scope":7651,"src":"20987:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7627,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:31"},"returnParameters":{"id":7632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7631,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:31","nodeType":"VariableDeclaration","scope":7651,"src":"21024:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7630,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:31","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:31"},"scope":8316,"src":"20969:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7676,"nodeType":"Block","src":"21590:150:31","statements":[{"expression":{"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"21600:10:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"21620:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7660,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:31","typeDescriptions":{}}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7665,"nodeType":"ExpressionStatement","src":"21600:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7666,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"21640:10:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"21654:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7675,"nodeType":"IfStatement","src":"21636:98:31","trueBody":{"id":7674,"nodeType":"Block","src":"21661:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:31","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"21717:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7669,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"21682:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7673,"nodeType":"RevertStatement","src":"21675:48:31"}]}}]},"documentation":{"id":7652,"nodeType":"StructuredDocumentation","src":"21199:312:31","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7677,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:31","nodeType":"FunctionDefinition","parameters":{"id":7655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7654,"mutability":"mutable","name":"value","nameLocation":"21541:5:31","nodeType":"VariableDeclaration","scope":7677,"src":"21534:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7653,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:31"},"returnParameters":{"id":7658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7657,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:31","nodeType":"VariableDeclaration","scope":7677,"src":"21571:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7656,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:31","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:31"},"scope":8316,"src":"21516:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7702,"nodeType":"Block","src":"22137:150:31","statements":[{"expression":{"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"22147:10:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"22167:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7686,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:31","typeDescriptions":{}}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7691,"nodeType":"ExpressionStatement","src":"22147:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7692,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"22187:10:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"22201:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7701,"nodeType":"IfStatement","src":"22183:98:31","trueBody":{"id":7700,"nodeType":"Block","src":"22208:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:31","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"22264:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7695,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"22229:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7699,"nodeType":"RevertStatement","src":"22222:48:31"}]}}]},"documentation":{"id":7678,"nodeType":"StructuredDocumentation","src":"21746:312:31","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7703,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:31","nodeType":"FunctionDefinition","parameters":{"id":7681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"value","nameLocation":"22088:5:31","nodeType":"VariableDeclaration","scope":7703,"src":"22081:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7679,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:31"},"returnParameters":{"id":7684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7683,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:31","nodeType":"VariableDeclaration","scope":7703,"src":"22118:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7682,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:31","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:31"},"scope":8316,"src":"22063:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7728,"nodeType":"Block","src":"22684:150:31","statements":[{"expression":{"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"22694:10:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"22714:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7712,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:31","typeDescriptions":{}}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7717,"nodeType":"ExpressionStatement","src":"22694:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7718,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"22734:10:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"22748:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7727,"nodeType":"IfStatement","src":"22730:98:31","trueBody":{"id":7726,"nodeType":"Block","src":"22755:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:31","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"22811:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7721,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"22776:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7725,"nodeType":"RevertStatement","src":"22769:48:31"}]}}]},"documentation":{"id":7704,"nodeType":"StructuredDocumentation","src":"22293:312:31","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7729,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:31","nodeType":"FunctionDefinition","parameters":{"id":7707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7706,"mutability":"mutable","name":"value","nameLocation":"22635:5:31","nodeType":"VariableDeclaration","scope":7729,"src":"22628:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7705,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:31"},"returnParameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:31","nodeType":"VariableDeclaration","scope":7729,"src":"22665:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7708,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:31","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:31"},"scope":8316,"src":"22610:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7754,"nodeType":"Block","src":"23231:150:31","statements":[{"expression":{"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"23241:10:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"23261:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7738,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:31","typeDescriptions":{}}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7743,"nodeType":"ExpressionStatement","src":"23241:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7744,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"23281:10:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"23295:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7753,"nodeType":"IfStatement","src":"23277:98:31","trueBody":{"id":7752,"nodeType":"Block","src":"23302:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:31","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"23358:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7747,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"23323:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7751,"nodeType":"RevertStatement","src":"23316:48:31"}]}}]},"documentation":{"id":7730,"nodeType":"StructuredDocumentation","src":"22840:312:31","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7755,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:31","nodeType":"FunctionDefinition","parameters":{"id":7733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7732,"mutability":"mutable","name":"value","nameLocation":"23182:5:31","nodeType":"VariableDeclaration","scope":7755,"src":"23175:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7731,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:31"},"returnParameters":{"id":7736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:31","nodeType":"VariableDeclaration","scope":7755,"src":"23212:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7734,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:31","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:31"},"scope":8316,"src":"23157:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7780,"nodeType":"Block","src":"23778:150:31","statements":[{"expression":{"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"23788:10:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"23808:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7764,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:31","typeDescriptions":{}}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7769,"nodeType":"ExpressionStatement","src":"23788:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7770,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"23828:10:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"23842:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7779,"nodeType":"IfStatement","src":"23824:98:31","trueBody":{"id":7778,"nodeType":"Block","src":"23849:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:31","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"23905:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7773,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"23870:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7777,"nodeType":"RevertStatement","src":"23863:48:31"}]}}]},"documentation":{"id":7756,"nodeType":"StructuredDocumentation","src":"23387:312:31","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7781,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:31","nodeType":"FunctionDefinition","parameters":{"id":7759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7758,"mutability":"mutable","name":"value","nameLocation":"23729:5:31","nodeType":"VariableDeclaration","scope":7781,"src":"23722:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7757,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:31"},"returnParameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:31","nodeType":"VariableDeclaration","scope":7781,"src":"23759:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7760,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:31","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:31"},"scope":8316,"src":"23704:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7806,"nodeType":"Block","src":"24325:150:31","statements":[{"expression":{"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"24335:10:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"24355:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7790,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:31","typeDescriptions":{}}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7795,"nodeType":"ExpressionStatement","src":"24335:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7796,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"24375:10:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"24389:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7805,"nodeType":"IfStatement","src":"24371:98:31","trueBody":{"id":7804,"nodeType":"Block","src":"24396:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:31","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"24452:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7799,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"24417:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7803,"nodeType":"RevertStatement","src":"24410:48:31"}]}}]},"documentation":{"id":7782,"nodeType":"StructuredDocumentation","src":"23934:312:31","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7807,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:31","nodeType":"FunctionDefinition","parameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7784,"mutability":"mutable","name":"value","nameLocation":"24276:5:31","nodeType":"VariableDeclaration","scope":7807,"src":"24269:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7783,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:31"},"returnParameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:31","nodeType":"VariableDeclaration","scope":7807,"src":"24306:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7786,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:31","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:31"},"scope":8316,"src":"24251:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7832,"nodeType":"Block","src":"24872:150:31","statements":[{"expression":{"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"24882:10:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24902:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7816,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:31","typeDescriptions":{}}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7821,"nodeType":"ExpressionStatement","src":"24882:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7822,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"24922:10:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24936:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7831,"nodeType":"IfStatement","src":"24918:98:31","trueBody":{"id":7830,"nodeType":"Block","src":"24943:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:31","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24999:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7825,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"24964:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7829,"nodeType":"RevertStatement","src":"24957:48:31"}]}}]},"documentation":{"id":7808,"nodeType":"StructuredDocumentation","src":"24481:312:31","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7833,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:31","nodeType":"FunctionDefinition","parameters":{"id":7811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7810,"mutability":"mutable","name":"value","nameLocation":"24823:5:31","nodeType":"VariableDeclaration","scope":7833,"src":"24816:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7809,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:31"},"returnParameters":{"id":7814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7813,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:31","nodeType":"VariableDeclaration","scope":7833,"src":"24853:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7812,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:31","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:31"},"scope":8316,"src":"24798:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7858,"nodeType":"Block","src":"25419:150:31","statements":[{"expression":{"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"25429:10:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"25449:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7842,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:31","typeDescriptions":{}}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7847,"nodeType":"ExpressionStatement","src":"25429:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7848,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"25469:10:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"25483:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7857,"nodeType":"IfStatement","src":"25465:98:31","trueBody":{"id":7856,"nodeType":"Block","src":"25490:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:31","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"25546:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7851,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"25511:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7855,"nodeType":"RevertStatement","src":"25504:48:31"}]}}]},"documentation":{"id":7834,"nodeType":"StructuredDocumentation","src":"25028:312:31","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7859,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:31","nodeType":"FunctionDefinition","parameters":{"id":7837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7836,"mutability":"mutable","name":"value","nameLocation":"25370:5:31","nodeType":"VariableDeclaration","scope":7859,"src":"25363:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7835,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:31"},"returnParameters":{"id":7840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7839,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:31","nodeType":"VariableDeclaration","scope":7859,"src":"25400:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7838,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:31","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:31"},"scope":8316,"src":"25345:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7884,"nodeType":"Block","src":"25966:150:31","statements":[{"expression":{"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"25976:10:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"25996:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7868,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:31","typeDescriptions":{}}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7873,"nodeType":"ExpressionStatement","src":"25976:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7874,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"26016:10:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"26030:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7883,"nodeType":"IfStatement","src":"26012:98:31","trueBody":{"id":7882,"nodeType":"Block","src":"26037:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"26093:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7877,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"26058:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7881,"nodeType":"RevertStatement","src":"26051:48:31"}]}}]},"documentation":{"id":7860,"nodeType":"StructuredDocumentation","src":"25575:312:31","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7885,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:31","nodeType":"FunctionDefinition","parameters":{"id":7863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7862,"mutability":"mutable","name":"value","nameLocation":"25917:5:31","nodeType":"VariableDeclaration","scope":7885,"src":"25910:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7861,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:31"},"returnParameters":{"id":7866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7865,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:31","nodeType":"VariableDeclaration","scope":7885,"src":"25947:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7864,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:31","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:31"},"scope":8316,"src":"25892:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7910,"nodeType":"Block","src":"26513:150:31","statements":[{"expression":{"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"26523:10:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"26543:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7894,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:31","typeDescriptions":{}}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7899,"nodeType":"ExpressionStatement","src":"26523:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7900,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"26563:10:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"26577:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7909,"nodeType":"IfStatement","src":"26559:98:31","trueBody":{"id":7908,"nodeType":"Block","src":"26584:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:31","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"26640:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7903,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"26605:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7907,"nodeType":"RevertStatement","src":"26598:48:31"}]}}]},"documentation":{"id":7886,"nodeType":"StructuredDocumentation","src":"26122:312:31","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7911,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:31","nodeType":"FunctionDefinition","parameters":{"id":7889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7888,"mutability":"mutable","name":"value","nameLocation":"26464:5:31","nodeType":"VariableDeclaration","scope":7911,"src":"26457:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7887,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:31"},"returnParameters":{"id":7892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7891,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:31","nodeType":"VariableDeclaration","scope":7911,"src":"26494:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7890,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:31","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:31"},"scope":8316,"src":"26439:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7936,"nodeType":"Block","src":"27060:150:31","statements":[{"expression":{"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"27070:10:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"27090:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7920,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:31","typeDescriptions":{}}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7925,"nodeType":"ExpressionStatement","src":"27070:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7926,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"27110:10:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"27124:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7935,"nodeType":"IfStatement","src":"27106:98:31","trueBody":{"id":7934,"nodeType":"Block","src":"27131:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:31","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"27187:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7929,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"27152:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7933,"nodeType":"RevertStatement","src":"27145:48:31"}]}}]},"documentation":{"id":7912,"nodeType":"StructuredDocumentation","src":"26669:312:31","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7937,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:31","nodeType":"FunctionDefinition","parameters":{"id":7915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7914,"mutability":"mutable","name":"value","nameLocation":"27011:5:31","nodeType":"VariableDeclaration","scope":7937,"src":"27004:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7913,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:31"},"returnParameters":{"id":7918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7917,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:31","nodeType":"VariableDeclaration","scope":7937,"src":"27041:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7916,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:31","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:31"},"scope":8316,"src":"26986:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7962,"nodeType":"Block","src":"27607:150:31","statements":[{"expression":{"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"27617:10:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"27637:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7946,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:31","typeDescriptions":{}}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7951,"nodeType":"ExpressionStatement","src":"27617:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7952,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"27657:10:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"27671:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7961,"nodeType":"IfStatement","src":"27653:98:31","trueBody":{"id":7960,"nodeType":"Block","src":"27678:73:31","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:31","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"27734:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7955,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"27699:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7959,"nodeType":"RevertStatement","src":"27692:48:31"}]}}]},"documentation":{"id":7938,"nodeType":"StructuredDocumentation","src":"27216:312:31","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7963,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:31","nodeType":"FunctionDefinition","parameters":{"id":7941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7940,"mutability":"mutable","name":"value","nameLocation":"27558:5:31","nodeType":"VariableDeclaration","scope":7963,"src":"27551:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7939,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:31"},"returnParameters":{"id":7944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7943,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:31","nodeType":"VariableDeclaration","scope":7963,"src":"27588:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7942,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:31","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:31"},"scope":8316,"src":"27533:224:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7988,"nodeType":"Block","src":"28147:148:31","statements":[{"expression":{"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"28157:10:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"28176:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7972,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:31","typeDescriptions":{}}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7977,"nodeType":"ExpressionStatement","src":"28157:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7978,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"28196:10:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"28210:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7987,"nodeType":"IfStatement","src":"28192:97:31","trueBody":{"id":7986,"nodeType":"Block","src":"28217:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:31","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"28272:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7981,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"28238:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7985,"nodeType":"RevertStatement","src":"28231:47:31"}]}}]},"documentation":{"id":7964,"nodeType":"StructuredDocumentation","src":"27763:307:31","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7989,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:31","nodeType":"FunctionDefinition","parameters":{"id":7967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7966,"mutability":"mutable","name":"value","nameLocation":"28099:5:31","nodeType":"VariableDeclaration","scope":7989,"src":"28092:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7965,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:31"},"returnParameters":{"id":7970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7969,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:31","nodeType":"VariableDeclaration","scope":7989,"src":"28129:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7968,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:31","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:31"},"scope":8316,"src":"28075:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8014,"nodeType":"Block","src":"28685:148:31","statements":[{"expression":{"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"28695:10:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"28714:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7998,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:31","typeDescriptions":{}}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8003,"nodeType":"ExpressionStatement","src":"28695:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8004,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"28734:10:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"28748:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8013,"nodeType":"IfStatement","src":"28730:97:31","trueBody":{"id":8012,"nodeType":"Block","src":"28755:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:31","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"28810:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8007,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"28776:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8011,"nodeType":"RevertStatement","src":"28769:47:31"}]}}]},"documentation":{"id":7990,"nodeType":"StructuredDocumentation","src":"28301:307:31","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8015,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:31","nodeType":"FunctionDefinition","parameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7992,"mutability":"mutable","name":"value","nameLocation":"28637:5:31","nodeType":"VariableDeclaration","scope":8015,"src":"28630:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7991,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:31"},"returnParameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7995,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:31","nodeType":"VariableDeclaration","scope":8015,"src":"28667:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7994,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:31","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:31"},"scope":8316,"src":"28613:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8040,"nodeType":"Block","src":"29223:148:31","statements":[{"expression":{"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"29233:10:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"29252:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8024,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:31","typeDescriptions":{}}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8029,"nodeType":"ExpressionStatement","src":"29233:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8030,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"29272:10:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"29286:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8039,"nodeType":"IfStatement","src":"29268:97:31","trueBody":{"id":8038,"nodeType":"Block","src":"29293:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:31","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"29348:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8033,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"29314:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8037,"nodeType":"RevertStatement","src":"29307:47:31"}]}}]},"documentation":{"id":8016,"nodeType":"StructuredDocumentation","src":"28839:307:31","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8041,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:31","nodeType":"FunctionDefinition","parameters":{"id":8019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8018,"mutability":"mutable","name":"value","nameLocation":"29175:5:31","nodeType":"VariableDeclaration","scope":8041,"src":"29168:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8017,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:31"},"returnParameters":{"id":8022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8021,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:31","nodeType":"VariableDeclaration","scope":8041,"src":"29205:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8020,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:31","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:31"},"scope":8316,"src":"29151:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8066,"nodeType":"Block","src":"29761:148:31","statements":[{"expression":{"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"29771:10:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"29790:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8050,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:31","typeDescriptions":{}}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8055,"nodeType":"ExpressionStatement","src":"29771:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8056,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"29810:10:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"29824:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8065,"nodeType":"IfStatement","src":"29806:97:31","trueBody":{"id":8064,"nodeType":"Block","src":"29831:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:31","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"29886:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8059,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"29852:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8063,"nodeType":"RevertStatement","src":"29845:47:31"}]}}]},"documentation":{"id":8042,"nodeType":"StructuredDocumentation","src":"29377:307:31","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8067,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:31","nodeType":"FunctionDefinition","parameters":{"id":8045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8044,"mutability":"mutable","name":"value","nameLocation":"29713:5:31","nodeType":"VariableDeclaration","scope":8067,"src":"29706:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8043,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:31"},"returnParameters":{"id":8048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:31","nodeType":"VariableDeclaration","scope":8067,"src":"29743:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8046,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:31","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:31"},"scope":8316,"src":"29689:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8092,"nodeType":"Block","src":"30299:148:31","statements":[{"expression":{"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"30309:10:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"30328:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8076,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:31","typeDescriptions":{}}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8081,"nodeType":"ExpressionStatement","src":"30309:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8082,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"30348:10:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"30362:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8091,"nodeType":"IfStatement","src":"30344:97:31","trueBody":{"id":8090,"nodeType":"Block","src":"30369:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"30424:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8085,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"30390:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8089,"nodeType":"RevertStatement","src":"30383:47:31"}]}}]},"documentation":{"id":8068,"nodeType":"StructuredDocumentation","src":"29915:307:31","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8093,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:31","nodeType":"FunctionDefinition","parameters":{"id":8071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8070,"mutability":"mutable","name":"value","nameLocation":"30251:5:31","nodeType":"VariableDeclaration","scope":8093,"src":"30244:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8069,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:31"},"returnParameters":{"id":8074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8073,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:31","nodeType":"VariableDeclaration","scope":8093,"src":"30281:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8072,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:31"},"scope":8316,"src":"30227:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8118,"nodeType":"Block","src":"30837:148:31","statements":[{"expression":{"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"30847:10:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8096,"src":"30866:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8102,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:31","typeDescriptions":{}}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8107,"nodeType":"ExpressionStatement","src":"30847:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"30886:10:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8096,"src":"30900:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8117,"nodeType":"IfStatement","src":"30882:97:31","trueBody":{"id":8116,"nodeType":"Block","src":"30907:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:31","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8096,"src":"30962:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8111,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"30928:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8115,"nodeType":"RevertStatement","src":"30921:47:31"}]}}]},"documentation":{"id":8094,"nodeType":"StructuredDocumentation","src":"30453:307:31","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8119,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:31","nodeType":"FunctionDefinition","parameters":{"id":8097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8096,"mutability":"mutable","name":"value","nameLocation":"30789:5:31","nodeType":"VariableDeclaration","scope":8119,"src":"30782:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8095,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:31"},"returnParameters":{"id":8100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8099,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:31","nodeType":"VariableDeclaration","scope":8119,"src":"30819:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8098,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:31","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:31"},"scope":8316,"src":"30765:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8144,"nodeType":"Block","src":"31375:148:31","statements":[{"expression":{"id":8132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"31385:10:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"31404:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8128,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:31","typeDescriptions":{}}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8133,"nodeType":"ExpressionStatement","src":"31385:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"31424:10:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"31438:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8143,"nodeType":"IfStatement","src":"31420:97:31","trueBody":{"id":8142,"nodeType":"Block","src":"31445:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:31","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"31500:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8137,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"31466:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8141,"nodeType":"RevertStatement","src":"31459:47:31"}]}}]},"documentation":{"id":8120,"nodeType":"StructuredDocumentation","src":"30991:307:31","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8145,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:31","nodeType":"FunctionDefinition","parameters":{"id":8123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8122,"mutability":"mutable","name":"value","nameLocation":"31327:5:31","nodeType":"VariableDeclaration","scope":8145,"src":"31320:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8121,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:31"},"returnParameters":{"id":8126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8125,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:31","nodeType":"VariableDeclaration","scope":8145,"src":"31357:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8124,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:31","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:31"},"scope":8316,"src":"31303:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8170,"nodeType":"Block","src":"31913:148:31","statements":[{"expression":{"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"31923:10:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"31942:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8154,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:31","typeDescriptions":{}}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8159,"nodeType":"ExpressionStatement","src":"31923:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"31962:10:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"31976:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8169,"nodeType":"IfStatement","src":"31958:97:31","trueBody":{"id":8168,"nodeType":"Block","src":"31983:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:31","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"32038:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8163,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"32004:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8167,"nodeType":"RevertStatement","src":"31997:47:31"}]}}]},"documentation":{"id":8146,"nodeType":"StructuredDocumentation","src":"31529:307:31","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:31","nodeType":"FunctionDefinition","parameters":{"id":8149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8148,"mutability":"mutable","name":"value","nameLocation":"31865:5:31","nodeType":"VariableDeclaration","scope":8171,"src":"31858:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8147,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:31"},"returnParameters":{"id":8152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8151,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:31","nodeType":"VariableDeclaration","scope":8171,"src":"31895:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8150,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:31","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:31"},"scope":8316,"src":"31841:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8196,"nodeType":"Block","src":"32451:148:31","statements":[{"expression":{"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"32461:10:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"32480:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8180,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:31","typeDescriptions":{}}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8185,"nodeType":"ExpressionStatement","src":"32461:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"32500:10:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"32514:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8195,"nodeType":"IfStatement","src":"32496:97:31","trueBody":{"id":8194,"nodeType":"Block","src":"32521:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"32576:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8189,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"32542:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8193,"nodeType":"RevertStatement","src":"32535:47:31"}]}}]},"documentation":{"id":8172,"nodeType":"StructuredDocumentation","src":"32067:307:31","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8197,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:31","nodeType":"FunctionDefinition","parameters":{"id":8175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8174,"mutability":"mutable","name":"value","nameLocation":"32403:5:31","nodeType":"VariableDeclaration","scope":8197,"src":"32396:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8173,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:31"},"returnParameters":{"id":8178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8177,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:31","nodeType":"VariableDeclaration","scope":8197,"src":"32433:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8176,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:31"},"scope":8316,"src":"32379:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8222,"nodeType":"Block","src":"32989:148:31","statements":[{"expression":{"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"32999:10:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"33018:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8206,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:31","typeDescriptions":{}}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8211,"nodeType":"ExpressionStatement","src":"32999:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"33038:10:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"33052:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8221,"nodeType":"IfStatement","src":"33034:97:31","trueBody":{"id":8220,"nodeType":"Block","src":"33059:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:31","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"33114:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8215,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"33080:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8219,"nodeType":"RevertStatement","src":"33073:47:31"}]}}]},"documentation":{"id":8198,"nodeType":"StructuredDocumentation","src":"32605:307:31","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8223,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:31","nodeType":"FunctionDefinition","parameters":{"id":8201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8200,"mutability":"mutable","name":"value","nameLocation":"32941:5:31","nodeType":"VariableDeclaration","scope":8223,"src":"32934:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8199,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:31"},"returnParameters":{"id":8204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8203,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:31","nodeType":"VariableDeclaration","scope":8223,"src":"32971:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8202,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:31","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:31"},"scope":8316,"src":"32917:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8248,"nodeType":"Block","src":"33527:148:31","statements":[{"expression":{"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"33537:10:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"33556:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8232,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:31","typeDescriptions":{}}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8237,"nodeType":"ExpressionStatement","src":"33537:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"33576:10:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"33590:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8247,"nodeType":"IfStatement","src":"33572:97:31","trueBody":{"id":8246,"nodeType":"Block","src":"33597:72:31","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"33652:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8241,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"33618:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8245,"nodeType":"RevertStatement","src":"33611:47:31"}]}}]},"documentation":{"id":8224,"nodeType":"StructuredDocumentation","src":"33143:307:31","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8249,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:31","nodeType":"FunctionDefinition","parameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8226,"mutability":"mutable","name":"value","nameLocation":"33479:5:31","nodeType":"VariableDeclaration","scope":8249,"src":"33472:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8225,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:31"},"returnParameters":{"id":8230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8229,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:31","nodeType":"VariableDeclaration","scope":8249,"src":"33509:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8228,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:31","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:31"},"scope":8316,"src":"33455:220:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8274,"nodeType":"Block","src":"34058:146:31","statements":[{"expression":{"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"34068:10:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"34086:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8258,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:31","typeDescriptions":{}}},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8263,"nodeType":"ExpressionStatement","src":"34068:24:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"34106:10:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"34120:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8273,"nodeType":"IfStatement","src":"34102:96:31","trueBody":{"id":8272,"nodeType":"Block","src":"34127:71:31","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"34181:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8267,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"34148:29:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8271,"nodeType":"RevertStatement","src":"34141:46:31"}]}}]},"documentation":{"id":8250,"nodeType":"StructuredDocumentation","src":"33681:302:31","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8275,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:31","nodeType":"FunctionDefinition","parameters":{"id":8253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8252,"mutability":"mutable","name":"value","nameLocation":"34011:5:31","nodeType":"VariableDeclaration","scope":8275,"src":"34004:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8251,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:31"},"returnParameters":{"id":8256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8255,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:31","nodeType":"VariableDeclaration","scope":8275,"src":"34041:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8254,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:31","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:31"},"scope":8316,"src":"33988:216:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8304,"nodeType":"Block","src":"34444:250:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"34557:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8287,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:31","memberName":"max","nodeType":"MemberAccess","src":"34573:16:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8284,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:31","typeDescriptions":{}}},"id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8298,"nodeType":"IfStatement","src":"34553:105:31","trueBody":{"id":8297,"nodeType":"Block","src":"34592:66:31","statements":[{"errorCall":{"arguments":[{"id":8294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"34641:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8293,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"34613:27:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8296,"nodeType":"RevertStatement","src":"34606:41:31"}]}},{"expression":{"arguments":[{"id":8301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"34681:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8299,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:31","typeDescriptions":{}}},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8282,"id":8303,"nodeType":"Return","src":"34667:20:31"}]},"documentation":{"id":8276,"nodeType":"StructuredDocumentation","src":"34210:165:31","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:31","nodeType":"FunctionDefinition","parameters":{"id":8279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8278,"mutability":"mutable","name":"value","nameLocation":"34406:5:31","nodeType":"VariableDeclaration","scope":8305,"src":"34398:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8277,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:31"},"returnParameters":{"id":8282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8305,"src":"34436:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8280,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:31"},"scope":8316,"src":"34380:314:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8314,"nodeType":"Block","src":"34853:87:31","statements":[{"AST":{"nativeSrc":"34888:46:31","nodeType":"YulBlock","src":"34888:46:31","statements":[{"nativeSrc":"34902:22:31","nodeType":"YulAssignment","src":"34902:22:31","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:31","nodeType":"YulIdentifier","src":"34921:1:31"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:31","nodeType":"YulIdentifier","src":"34914:6:31"},"nativeSrc":"34914:9:31","nodeType":"YulFunctionCall","src":"34914:9:31"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:31","nodeType":"YulIdentifier","src":"34907:6:31"},"nativeSrc":"34907:17:31","nodeType":"YulFunctionCall","src":"34907:17:31"},"variableNames":[{"name":"u","nativeSrc":"34902:1:31","nodeType":"YulIdentifier","src":"34902:1:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8308,"isOffset":false,"isSlot":false,"src":"34921:1:31","valueSize":1},{"declaration":8311,"isOffset":false,"isSlot":false,"src":"34902:1:31","valueSize":1}],"flags":["memory-safe"],"id":8313,"nodeType":"InlineAssembly","src":"34863:71:31"}]},"documentation":{"id":8306,"nodeType":"StructuredDocumentation","src":"34700:90:31","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8315,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:31","nodeType":"FunctionDefinition","parameters":{"id":8309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8308,"mutability":"mutable","name":"b","nameLocation":"34816:1:31","nodeType":"VariableDeclaration","scope":8315,"src":"34811:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8307,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:31"},"returnParameters":{"id":8312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8311,"mutability":"mutable","name":"u","nameLocation":"34850:1:31","nodeType":"VariableDeclaration","scope":8315,"src":"34842:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8310,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:31"},"scope":8316,"src":"34795:145:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8317,"src":"769:34173:31","usedErrors":[6561,6566,6573,6578],"usedEvents":[]}],"src":"192:34751:31"},"id":31},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8316],"SignedMath":[8460]},"id":8461,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8461,"sourceUnit":8317,"src":"135:40:32","symbolAliases":[{"foreign":{"id":8319,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"143:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8321,"nodeType":"StructuredDocumentation","src":"177:80:32","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8460,"linearizedBaseContracts":[8460],"name":"SignedMath","nameLocation":"266:10:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":8350,"nodeType":"Block","src":"746:215:32","statements":[{"id":8349,"nodeType":"UncheckedBlock","src":"756:199:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8333,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"894:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"900:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"904:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8342,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"932:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8340,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"916:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8316_$","typeString":"type(library SafeCast)"}},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8315,"src":"916:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8338,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:32","typeDescriptions":{}}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8332,"id":8348,"nodeType":"Return","src":"887:57:32"}]}]},"documentation":{"id":8322,"nodeType":"StructuredDocumentation","src":"283:374:32","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8351,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:32","nodeType":"FunctionDefinition","parameters":{"id":8329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8324,"mutability":"mutable","name":"condition","nameLocation":"684:9:32","nodeType":"VariableDeclaration","scope":8351,"src":"679:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8323,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8326,"mutability":"mutable","name":"a","nameLocation":"702:1:32","nodeType":"VariableDeclaration","scope":8351,"src":"695:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8325,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8328,"mutability":"mutable","name":"b","nameLocation":"712:1:32","nodeType":"VariableDeclaration","scope":8351,"src":"705:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8327,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:32"},"returnParameters":{"id":8332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8351,"src":"738:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8330,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:32"},"scope":8460,"src":"662:299:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8369,"nodeType":"Block","src":"1102:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"1127:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"1131:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"1134:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"1137:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8361,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"1119:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8360,"id":8368,"nodeType":"Return","src":"1112:27:32"}]},"documentation":{"id":8352,"nodeType":"StructuredDocumentation","src":"967:66:32","text":" @dev Returns the largest of two signed numbers."},"id":8370,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:32","nodeType":"FunctionDefinition","parameters":{"id":8357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8354,"mutability":"mutable","name":"a","nameLocation":"1058:1:32","nodeType":"VariableDeclaration","scope":8370,"src":"1051:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8353,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8356,"mutability":"mutable","name":"b","nameLocation":"1068:1:32","nodeType":"VariableDeclaration","scope":8370,"src":"1061:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8355,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:32"},"returnParameters":{"id":8360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8370,"src":"1094:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8358,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:32"},"scope":8460,"src":"1038:108:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8388,"nodeType":"Block","src":"1288:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"1313:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"1317:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"1320:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"1323:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8380,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"1305:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8379,"id":8387,"nodeType":"Return","src":"1298:27:32"}]},"documentation":{"id":8371,"nodeType":"StructuredDocumentation","src":"1152:67:32","text":" @dev Returns the smallest of two signed numbers."},"id":8389,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:32","nodeType":"FunctionDefinition","parameters":{"id":8376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8373,"mutability":"mutable","name":"a","nameLocation":"1244:1:32","nodeType":"VariableDeclaration","scope":8389,"src":"1237:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8372,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8375,"mutability":"mutable","name":"b","nameLocation":"1254:1:32","nodeType":"VariableDeclaration","scope":8389,"src":"1247:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8374,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:32"},"returnParameters":{"id":8379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8389,"src":"1280:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8377,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:32"},"scope":8460,"src":"1224:108:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8432,"nodeType":"Block","src":"1537:162:32","statements":[{"assignments":[8400],"declarations":[{"constant":false,"id":8400,"mutability":"mutable","name":"x","nameLocation":"1606:1:32","nodeType":"VariableDeclaration","scope":8432,"src":"1599:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8399,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8413,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"1611:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"1615:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"1622:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"1626:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:32"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8414,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"1651:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8419,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"1671:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:32","typeDescriptions":{}}},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8415,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:32","typeDescriptions":{}}},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"1685:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"1689:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8398,"id":8431,"nodeType":"Return","src":"1644:48:32"}]},"documentation":{"id":8390,"nodeType":"StructuredDocumentation","src":"1338:126:32","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8433,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:32","nodeType":"FunctionDefinition","parameters":{"id":8395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8392,"mutability":"mutable","name":"a","nameLocation":"1493:1:32","nodeType":"VariableDeclaration","scope":8433,"src":"1486:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8391,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8394,"mutability":"mutable","name":"b","nameLocation":"1503:1:32","nodeType":"VariableDeclaration","scope":8433,"src":"1496:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8393,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:32"},"returnParameters":{"id":8398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8433,"src":"1529:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8396,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:32"},"scope":8460,"src":"1469:230:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8458,"nodeType":"Block","src":"1843:767:32","statements":[{"id":8457,"nodeType":"UncheckedBlock","src":"1853:751:32","statements":[{"assignments":[8442],"declarations":[{"constant":false,"id":8442,"mutability":"mutable","name":"mask","nameLocation":"2424:4:32","nodeType":"VariableDeclaration","scope":8457,"src":"2417:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8441,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8446,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8443,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"2431:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8449,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"2576:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8450,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"2580:4:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8453,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"2588:4:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:32","typeDescriptions":{}}},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8440,"id":8456,"nodeType":"Return","src":"2560:33:32"}]}]},"documentation":{"id":8434,"nodeType":"StructuredDocumentation","src":"1705:78:32","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8459,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:32","nodeType":"FunctionDefinition","parameters":{"id":8437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8436,"mutability":"mutable","name":"n","nameLocation":"1808:1:32","nodeType":"VariableDeclaration","scope":8459,"src":"1801:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8435,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:32"},"returnParameters":{"id":8440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8459,"src":"1834:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:32"},"scope":8460,"src":"1788:822:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8461,"src":"258:2354:32","usedErrors":[],"usedEvents":[]}],"src":"109:2504:32"},"id":32},"contracts/FractionalCertificateToken.sol":{"ast":{"absolutePath":"contracts/FractionalCertificateToken.sol","exportedSymbols":{"Context":[2530],"ECDSA":[4608],"EIP712":[4835],"ERC20":[856],"ERC20Permit":[1088],"ERC721Holder":[2423],"FractionalCertificateToken":[8593],"IERC165":[4945],"IERC20":[934],"IERC20Errors":[246],"IERC20Metadata":[1114],"IERC20Permit":[1150],"IERC721":[2224],"IERC721Receiver":[2242],"Nonces":[2598],"Ownable":[147]},"id":8594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8462,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:33"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8594,"sourceUnit":857,"src":"61:55:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":8464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8594,"sourceUnit":2225,"src":"118:58:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8594,"sourceUnit":148,"src":"178:52:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8594,"sourceUnit":1089,"src":"232:72:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","id":8467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8594,"sourceUnit":2424,"src":"306:69:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8468,"name":"ERC20","nameLocations":["420:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"420:5:33"},"id":8469,"nodeType":"InheritanceSpecifier","src":"420:5:33"},{"baseName":{"id":8470,"name":"Ownable","nameLocations":["427:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"427:7:33"},"id":8471,"nodeType":"InheritanceSpecifier","src":"427:7:33"},{"baseName":{"id":8472,"name":"ERC20Permit","nameLocations":["436:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"436:11:33"},"id":8473,"nodeType":"InheritanceSpecifier","src":"436:11:33"},{"baseName":{"id":8474,"name":"ERC721Holder","nameLocations":["449:12:33"],"nodeType":"IdentifierPath","referencedDeclaration":2423,"src":"449:12:33"},"id":8475,"nodeType":"InheritanceSpecifier","src":"449:12:33"}],"canonicalName":"FractionalCertificateToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8593,"linearizedBaseContracts":[8593,2423,2242,1088,2598,4835,200,1150,147,856,246,1114,934,2530],"name":"FractionalCertificateToken","nameLocation":"390:26:33","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b01d6d82","id":8478,"mutability":"immutable","name":"iRecCertificateContract","nameLocation":"547:23:33","nodeType":"VariableDeclaration","scope":8593,"src":"522:48:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"},"typeName":{"id":8477,"nodeType":"UserDefinedTypeName","pathNode":{"id":8476,"name":"IERC721","nameLocations":["522:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":2224,"src":"522:7:33"},"referencedDeclaration":2224,"src":"522:7:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"}},"visibility":"public"},{"constant":false,"functionSelector":"4b24691f","id":8480,"mutability":"immutable","name":"certificateTokenId","nameLocation":"610:18:33","nodeType":"VariableDeclaration","scope":8593,"src":"585:43:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8479,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3fb3ca20","id":8482,"mutability":"mutable","name":"isFractionalized","nameLocation":"647:16:33","nodeType":"VariableDeclaration","scope":8593,"src":"635:28:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8481,"name":"bool","nodeType":"ElementaryTypeName","src":"635:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"467dbdf4e2cf848cda2e91cd4fe12eed702c327975f0ca15fc227e822e72ca5b","id":8490,"name":"CertificateFractionalized","nameLocation":"740:25:33","nodeType":"EventDefinition","parameters":{"id":8489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8484,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"774:7:33","nodeType":"VariableDeclaration","scope":8490,"src":"766:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8483,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8486,"indexed":false,"mutability":"mutable","name":"totalFractions","nameLocation":"791:14:33","nodeType":"VariableDeclaration","scope":8490,"src":"783:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8485,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8488,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"823:9:33","nodeType":"VariableDeclaration","scope":8490,"src":"807:25:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8487,"name":"address","nodeType":"ElementaryTypeName","src":"807:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"765:68:33"},"src":"734:100:33"},{"body":{"id":8530,"nodeType":"Block","src":"1120:177:33","statements":[{"expression":{"id":8518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8514,"name":"iRecCertificateContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"1131:23:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8516,"name":"certificateContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"1165:26:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8515,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1157:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2224_$","typeString":"type(contract IERC721)"}},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1157:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"}},"src":"1131:61:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"}},"id":8519,"nodeType":"ExpressionStatement","src":"1131:61:33"},{"expression":{"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8520,"name":"certificateTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"1203:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8521,"name":"certificateTokenId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"1224:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1203:40:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8523,"nodeType":"ExpressionStatement","src":"1203:40:33"},{"expression":{"arguments":[{"expression":{"id":8525,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1262:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1266:6:33","memberName":"sender","nodeType":"MemberAccess","src":"1262:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8527,"name":"totalFractions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"1274:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8524,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1256:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1256:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8529,"nodeType":"ExpressionStatement","src":"1256:33:33"}]},"id":8531,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8503,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"1053:9:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8504,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"1064:11:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8505,"kind":"baseConstructorSpecifier","modifierName":{"id":8502,"name":"ERC20","nameLocations":["1047:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"1047:5:33"},"nodeType":"ModifierInvocation","src":"1047:29:33"},{"arguments":[{"id":8507,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"1089:9:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8508,"kind":"baseConstructorSpecifier","modifierName":{"id":8506,"name":"ERC20Permit","nameLocations":["1077:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"1077:11:33"},"nodeType":"ModifierInvocation","src":"1077:22:33"},{"arguments":[{"expression":{"id":8510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1108:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1112:6:33","memberName":"sender","nodeType":"MemberAccess","src":"1108:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8512,"kind":"baseConstructorSpecifier","modifierName":{"id":8509,"name":"Ownable","nameLocations":["1100:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1100:7:33"},"nodeType":"ModifierInvocation","src":"1100:19:33"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8492,"mutability":"mutable","name":"totalFractions","nameLocation":"872:14:33","nodeType":"VariableDeclaration","scope":8531,"src":"864:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8491,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8494,"mutability":"mutable","name":"tokenName","nameLocation":"911:9:33","nodeType":"VariableDeclaration","scope":8531,"src":"897:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8493,"name":"string","nodeType":"ElementaryTypeName","src":"897:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8496,"mutability":"mutable","name":"tokenSymbol","nameLocation":"945:11:33","nodeType":"VariableDeclaration","scope":8531,"src":"931:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8495,"name":"string","nodeType":"ElementaryTypeName","src":"931:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8498,"mutability":"mutable","name":"certificateContractAddress","nameLocation":"975:26:33","nodeType":"VariableDeclaration","scope":8531,"src":"967:34:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8497,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8500,"mutability":"mutable","name":"certificateTokenId_","nameLocation":"1020:19:33","nodeType":"VariableDeclaration","scope":8531,"src":"1012:27:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"853:193:33"},"returnParameters":{"id":8513,"nodeType":"ParameterList","parameters":[],"src":"1120:0:33"},"scope":8593,"src":"842:455:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8567,"nodeType":"Block","src":"1474:370:33","statements":[{"expression":{"arguments":[{"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1493:17:33","subExpression":{"id":8538,"name":"isFractionalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"1494:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436572746966696361746520616c7265616479206672616374696f6e616c697a6564","id":8540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1512:36:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4","typeString":"literal_string \"Certificate already fractionalized\""},"value":"Certificate already fractionalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4","typeString":"literal_string \"Certificate already fractionalized\""}],"id":8537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1485:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1485:64:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8542,"nodeType":"ExpressionStatement","src":"1485:64:33"},{"expression":{"arguments":[{"expression":{"id":8546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1664:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1668:6:33","memberName":"sender","nodeType":"MemberAccess","src":"1664:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8550,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1684:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_FractionalCertificateToken_$8593","typeString":"contract FractionalCertificateToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FractionalCertificateToken_$8593","typeString":"contract FractionalCertificateToken"}],"id":8549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1676:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8548,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:33","typeDescriptions":{}}},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1676:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8552,"name":"certificateTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"1691:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8543,"name":"iRecCertificateContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"1623:23:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"}},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1647:16:33","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"1623:40:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:87:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8554,"nodeType":"ExpressionStatement","src":"1623:87:33"},{"expression":{"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8555,"name":"isFractionalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"1723:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1742:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1723:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8558,"nodeType":"ExpressionStatement","src":"1723:23:33"},{"eventCall":{"arguments":[{"id":8560,"name":"certificateTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"1790:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8561,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1810:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1810:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1825:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1829:6:33","memberName":"sender","nodeType":"MemberAccess","src":"1825:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8559,"name":"CertificateFractionalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"1764:25:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:72:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8566,"nodeType":"EmitStatement","src":"1759:77:33"}]},"documentation":{"id":8532,"nodeType":"StructuredDocumentation","src":"1305:108:33","text":" @dev Locks the NFT (green energy certificate) inside this contract to fractionalize it."},"functionSelector":"70be42a6","id":8568,"implemented":true,"kind":"function","modifiers":[{"id":8535,"kind":"modifierInvocation","modifierName":{"id":8534,"name":"onlyOwner","nameLocations":["1464:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1464:9:33"},"nodeType":"ModifierInvocation","src":"1464:9:33"}],"name":"fractionalizeCertificate","nameLocation":"1428:24:33","nodeType":"FunctionDefinition","parameters":{"id":8533,"nodeType":"ParameterList","parameters":[],"src":"1452:2:33"},"returnParameters":{"id":8536,"nodeType":"ParameterList","parameters":[],"src":"1474:0:33"},"scope":8593,"src":"1419:425:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8591,"nodeType":"Block","src":"2116:167:33","statements":[{"expression":{"components":[{"arguments":[{"id":8582,"name":"iRecCertificateContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"2157:23:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC721_$2224","typeString":"contract IERC721"}],"id":8581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2149:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8580,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:33","typeDescriptions":{}}},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8584,"name":"certificateTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"2196:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8585,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2229:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2229:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8587,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2257:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2257:7:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2134:141:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_address_$","typeString":"tuple(address,uint256,uint256,address)"}},"functionReturnParameters":8579,"id":8590,"nodeType":"Return","src":"2127:148:33"}]},"documentation":{"id":8569,"nodeType":"StructuredDocumentation","src":"1852:82:33","text":" @dev Returns information about the fractionalized certificate"},"functionSelector":"fb647cd9","id":8592,"implemented":true,"kind":"function","modifiers":[],"name":"getFractionInfo","nameLocation":"1949:15:33","nodeType":"FunctionDefinition","parameters":{"id":8570,"nodeType":"ParameterList","parameters":[],"src":"1964:2:33"},"returnParameters":{"id":8579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8572,"mutability":"mutable","name":"nftAddress","nameLocation":"2008:10:33","nodeType":"VariableDeclaration","scope":8592,"src":"2000:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8571,"name":"address","nodeType":"ElementaryTypeName","src":"2000:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8574,"mutability":"mutable","name":"tokenId","nameLocation":"2037:7:33","nodeType":"VariableDeclaration","scope":8592,"src":"2029:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8576,"mutability":"mutable","name":"totalFractions","nameLocation":"2063:14:33","nodeType":"VariableDeclaration","scope":8592,"src":"2055:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2055:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8578,"mutability":"mutable","name":"ownerAddress","nameLocation":"2096:12:33","nodeType":"VariableDeclaration","scope":8592,"src":"2088:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8577,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1989:126:33"},"scope":8593,"src":"1940:343:33","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8594,"src":"381:1905:33","usedErrors":[13,18,216,221,226,235,240,245,965,972,2540,2733,2735,4271,4276,4281],"usedEvents":[24,180,868,877,8490]}],"src":"33:2255:33"},"id":33},"contracts/IReCCertificate.sol":{"ast":{"absolutePath":"contracts/IReCCertificate.sol","exportedSymbols":{"Context":[2530],"ERC721":[2107],"ERC721URIStorage":[2368],"IERC165":[4945],"IERC4906":[175],"IReCCertificate":[8842],"Ownable":[147],"Strings":[4260]},"id":8843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8595,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:34"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":8596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8843,"sourceUnit":2369,"src":"57:78:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8843,"sourceUnit":148,"src":"136:52:34","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8599,"name":"ERC721URIStorage","nameLocations":["318:16:34"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"318:16:34"},"id":8600,"nodeType":"InheritanceSpecifier","src":"318:16:34"},{"baseName":{"id":8601,"name":"Ownable","nameLocations":["336:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"336:7:34"},"id":8602,"nodeType":"InheritanceSpecifier","src":"336:7:34"}],"canonicalName":"IReCCertificate","contractDependencies":[],"contractKind":"contract","documentation":{"id":8598,"nodeType":"StructuredDocumentation","src":"189:100:34","text":" @title IReCCertificate\n @dev Contract for creating I-REC certificates as NFTs (ERC-721)"},"fullyImplemented":true,"id":8842,"linearizedBaseContracts":[8842,147,2368,2107,294,2396,175,2224,4933,4945,2530],"name":"IReCCertificate","nameLocation":"299:15:34","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IReCCertificate.CertificateData","id":8613,"members":[{"constant":false,"id":8604,"mutability":"mutable","name":"facilityName","nameLocation":"423:12:34","nodeType":"VariableDeclaration","scope":8613,"src":"416:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8603,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8606,"mutability":"mutable","name":"energySource","nameLocation":"452:12:34","nodeType":"VariableDeclaration","scope":8613,"src":"445:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8605,"name":"string","nodeType":"ElementaryTypeName","src":"445:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8608,"mutability":"mutable","name":"productionDate","nameLocation":"482:14:34","nodeType":"VariableDeclaration","scope":8613,"src":"474:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8607,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8610,"mutability":"mutable","name":"expiryDate","nameLocation":"514:10:34","nodeType":"VariableDeclaration","scope":8613,"src":"506:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8609,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8612,"mutability":"mutable","name":"energyAmount","nameLocation":"542:12:34","nodeType":"VariableDeclaration","scope":8613,"src":"534:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8611,"name":"uint256","nodeType":"ElementaryTypeName","src":"534:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CertificateData","nameLocation":"390:15:34","nodeType":"StructDefinition","scope":8842,"src":"383:210:34","visibility":"public"},{"constant":false,"functionSelector":"663b3e22","id":8618,"mutability":"mutable","name":"certificates","nameLocation":"646:12:34","nodeType":"VariableDeclaration","scope":8842,"src":"603:55:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CertificateData_$8613_storage_$","typeString":"mapping(uint256 => struct IReCCertificate.CertificateData)"},"typeName":{"id":8617,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8614,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"603:35:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CertificateData_$8613_storage_$","typeString":"mapping(uint256 => struct IReCCertificate.CertificateData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8616,"nodeType":"UserDefinedTypeName","pathNode":{"id":8615,"name":"CertificateData","nameLocations":["622:15:34"],"nodeType":"IdentifierPath","referencedDeclaration":8613,"src":"622:15:34"},"referencedDeclaration":8613,"src":"622:15:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_storage_ptr","typeString":"struct IReCCertificate.CertificateData"}}},"visibility":"public"},{"constant":false,"id":8622,"mutability":"mutable","name":"tokenIdOwner","nameLocation":"700:12:34","nodeType":"VariableDeclaration","scope":8842,"src":"664:48:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":8621,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8619,"name":"uint256","nodeType":"ElementaryTypeName","src":"672:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"664:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8620,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"4d660303f3cf5c0e9d967870d281fc77f88bb1d50331ac1af95e18cce14ef1f9","id":8630,"name":"CertificateMinted","nameLocation":"743:17:34","nodeType":"EventDefinition","parameters":{"id":8629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8624,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"769:7:34","nodeType":"VariableDeclaration","scope":8630,"src":"761:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8623,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8626,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"786:5:34","nodeType":"VariableDeclaration","scope":8630,"src":"778:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8625,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8628,"indexed":false,"mutability":"mutable","name":"energyAmount","nameLocation":"801:12:34","nodeType":"VariableDeclaration","scope":8630,"src":"793:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8627,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"760:54:34"},"src":"737:78:34"},{"anonymous":false,"eventSelector":"35f384066bf07b6616bbf730515dc81145006942534dbfaa17eee53f248b532f","id":8638,"name":"CertificateBurned","nameLocation":"826:17:34","nodeType":"EventDefinition","parameters":{"id":8637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8632,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"852:7:34","nodeType":"VariableDeclaration","scope":8638,"src":"844:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8631,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8634,"indexed":false,"mutability":"mutable","name":"burner","nameLocation":"869:6:34","nodeType":"VariableDeclaration","scope":8638,"src":"861:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8633,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8636,"indexed":false,"mutability":"mutable","name":"energyAmount","nameLocation":"885:12:34","nodeType":"VariableDeclaration","scope":8638,"src":"877:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8635,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"843:55:34"},"src":"820:79:34"},{"anonymous":false,"eventSelector":"54ecdedad103945cdc7716e8be300a2b530c296accc2d6abbfd19d671d530ee4","id":8642,"name":"CertificateDetailsUpdated","nameLocation":"910:25:34","nodeType":"EventDefinition","parameters":{"id":8641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8640,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"944:7:34","nodeType":"VariableDeclaration","scope":8642,"src":"936:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8639,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"935:17:34"},"src":"904:49:34"},{"constant":false,"id":8644,"mutability":"mutable","name":"baseURIValue","nameLocation":"985:12:34","nodeType":"VariableDeclaration","scope":8842,"src":"970:27:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8643,"name":"string","nodeType":"ElementaryTypeName","src":"970:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":8665,"nodeType":"Block","src":"1129:46:34","statements":[{"expression":{"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8661,"name":"baseURIValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"1139:12:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8662,"name":"initialBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"1154:14:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1139:29:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8664,"nodeType":"ExpressionStatement","src":"1139:29:34"}]},"id":8666,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8653,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"1095:4:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8654,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"1101:6:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8655,"kind":"baseConstructorSpecifier","modifierName":{"id":8652,"name":"ERC721","nameLocations":["1088:6:34"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1088:6:34"},"nodeType":"ModifierInvocation","src":"1088:20:34"},{"arguments":[{"expression":{"id":8657,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1117:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1121:6:34","memberName":"sender","nodeType":"MemberAccess","src":"1117:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8659,"kind":"baseConstructorSpecifier","modifierName":{"id":8656,"name":"Ownable","nameLocations":["1109:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1109:7:34"},"nodeType":"ModifierInvocation","src":"1109:19:34"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8646,"mutability":"mutable","name":"name","nameLocation":"1030:4:34","nodeType":"VariableDeclaration","scope":8666,"src":"1016:18:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8645,"name":"string","nodeType":"ElementaryTypeName","src":"1016:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8648,"mutability":"mutable","name":"symbol","nameLocation":"1050:6:34","nodeType":"VariableDeclaration","scope":8666,"src":"1036:20:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8647,"name":"string","nodeType":"ElementaryTypeName","src":"1036:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8650,"mutability":"mutable","name":"initialBaseURI","nameLocation":"1072:14:34","nodeType":"VariableDeclaration","scope":8666,"src":"1058:28:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8649,"name":"string","nodeType":"ElementaryTypeName","src":"1058:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1015:72:34"},"returnParameters":{"id":8660,"nodeType":"ParameterList","parameters":[],"src":"1129:0:34"},"scope":8842,"src":"1004:171:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":8675,"nodeType":"Block","src":"1329:36:34","statements":[{"expression":{"id":8673,"name":"baseURIValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"1346:12:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8672,"id":8674,"nodeType":"Return","src":"1339:19:34"}]},"documentation":{"id":8667,"nodeType":"StructuredDocumentation","src":"1181:68:34","text":" @dev Override the _baseURI() function from ERC721"},"id":8676,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"1263:8:34","nodeType":"FunctionDefinition","overrides":{"id":8669,"nodeType":"OverrideSpecifier","overrides":[],"src":"1296:8:34"},"parameters":{"id":8668,"nodeType":"ParameterList","parameters":[],"src":"1271:2:34"},"returnParameters":{"id":8672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8676,"src":"1314:13:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8670,"name":"string","nodeType":"ElementaryTypeName","src":"1314:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1313:15:34"},"scope":8842,"src":"1254:111:34","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8688,"nodeType":"Block","src":"1504:42:34","statements":[{"expression":{"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8684,"name":"baseURIValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"1514:12:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8685,"name":"newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"1529:10:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1514:25:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8687,"nodeType":"ExpressionStatement","src":"1514:25:34"}]},"documentation":{"id":8677,"nodeType":"StructuredDocumentation","src":"1371:65:34","text":" @dev Function to update the base URI if needed"},"functionSelector":"55f804b3","id":8689,"implemented":true,"kind":"function","modifiers":[{"id":8682,"kind":"modifierInvocation","modifierName":{"id":8681,"name":"onlyOwner","nameLocations":["1494:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1494:9:34"},"nodeType":"ModifierInvocation","src":"1494:9:34"}],"name":"setBaseURI","nameLocation":"1450:10:34","nodeType":"FunctionDefinition","parameters":{"id":8680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8679,"mutability":"mutable","name":"newBaseURI","nameLocation":"1475:10:34","nodeType":"VariableDeclaration","scope":8689,"src":"1461:24:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8678,"name":"string","nodeType":"ElementaryTypeName","src":"1461:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1460:26:34"},"returnParameters":{"id":8683,"nodeType":"ParameterList","parameters":[],"src":"1504:0:34"},"scope":8842,"src":"1441:105:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8747,"nodeType":"Block","src":"1905:637:34","statements":[{"expression":{"arguments":[{"id":8712,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8692,"src":"1930:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8713,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"1941:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8711,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1924:5:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:27:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8715,"nodeType":"ExpressionStatement","src":"1924:27:34"},{"expression":{"arguments":[{"id":8717,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"1974:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8718,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"1985:7:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8716,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1961:12:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1961:32:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8720,"nodeType":"ExpressionStatement","src":"1961:32:34"},{"expression":{"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8721,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8618,"src":"2069:12:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CertificateData_$8613_storage_$","typeString":"mapping(uint256 => struct IReCCertificate.CertificateData storage ref)"}},"id":8723,"indexExpression":{"id":8722,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"2082:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2069:23:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_storage","typeString":"struct IReCCertificate.CertificateData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8725,"name":"facilityName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"2139:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8726,"name":"energySource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"2179:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8727,"name":"productionDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8700,"src":"2221:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8728,"name":"expiryDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"2261:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31303030303030","id":8729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2299:7:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"id":8724,"name":"CertificateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"2095:15:34","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CertificateData_$8613_storage_ptr_$","typeString":"type(struct IReCCertificate.CertificateData storage pointer)"}},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2125:12:34","2165:12:34","2205:14:34","2249:10:34","2285:12:34"],"names":["facilityName","energySource","productionDate","expiryDate","energyAmount"],"nodeType":"FunctionCall","src":"2095:237:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_memory_ptr","typeString":"struct IReCCertificate.CertificateData memory"}},"src":"2069:263:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_storage","typeString":"struct IReCCertificate.CertificateData storage ref"}},"id":8732,"nodeType":"ExpressionStatement","src":"2069:263:34"},{"expression":{"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8733,"name":"tokenIdOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"2393:12:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":8735,"indexExpression":{"id":8734,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"2406:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2393:23:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8736,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8692,"src":"2419:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2393:35:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8738,"nodeType":"ExpressionStatement","src":"2393:35:34"},{"eventCall":{"arguments":[{"id":8740,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"2470:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8741,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8692,"src":"2481:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030303030","id":8742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:7:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"id":8739,"name":"CertificateMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"2452:17:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:48:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8744,"nodeType":"EmitStatement","src":"2447:53:34"},{"expression":{"id":8745,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"2526:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8710,"id":8746,"nodeType":"Return","src":"2519:16:34"}]},"documentation":{"id":8690,"nodeType":"StructuredDocumentation","src":"1552:65:34","text":" @dev Creates a new I-REC certificate as an NFT"},"functionSelector":"42eaa6f4","id":8748,"implemented":true,"kind":"function","modifiers":[{"id":8707,"kind":"modifierInvocation","modifierName":{"id":8706,"name":"onlyOwner","nameLocations":["1877:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1877:9:34"},"nodeType":"ModifierInvocation","src":"1877:9:34"}],"name":"mintCertificate","nameLocation":"1631:15:34","nodeType":"FunctionDefinition","parameters":{"id":8705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8692,"mutability":"mutable","name":"recipient","nameLocation":"1664:9:34","nodeType":"VariableDeclaration","scope":8748,"src":"1656:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8691,"name":"address","nodeType":"ElementaryTypeName","src":"1656:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8694,"mutability":"mutable","name":"baseURI","nameLocation":"1697:7:34","nodeType":"VariableDeclaration","scope":8748,"src":"1683:21:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8693,"name":"string","nodeType":"ElementaryTypeName","src":"1683:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8696,"mutability":"mutable","name":"facilityName","nameLocation":"1728:12:34","nodeType":"VariableDeclaration","scope":8748,"src":"1714:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8695,"name":"string","nodeType":"ElementaryTypeName","src":"1714:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8698,"mutability":"mutable","name":"energySource","nameLocation":"1764:12:34","nodeType":"VariableDeclaration","scope":8748,"src":"1750:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8697,"name":"string","nodeType":"ElementaryTypeName","src":"1750:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8700,"mutability":"mutable","name":"productionDate","nameLocation":"1794:14:34","nodeType":"VariableDeclaration","scope":8748,"src":"1786:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8702,"mutability":"mutable","name":"expiryDate","nameLocation":"1826:10:34","nodeType":"VariableDeclaration","scope":8748,"src":"1818:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8701,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8704,"mutability":"mutable","name":"newItemId","nameLocation":"1854:9:34","nodeType":"VariableDeclaration","scope":8748,"src":"1846:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1646:223:34"},"returnParameters":{"id":8710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8748,"src":"1896:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1896:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1895:9:34"},"scope":8842,"src":"1622:920:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8787,"nodeType":"Block","src":"2804:495:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2822:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2826:6:34","memberName":"sender","nodeType":"MemberAccess","src":"2822:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":8757,"name":"tokenIdOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"2836:12:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":8759,"indexExpression":{"id":8758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"2849:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2836:21:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2822:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4952654343657274696669636174653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":8761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2859:51:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b","typeString":"literal_string \"IReCCertificate: caller is not owner nor approved\""},"value":"IReCCertificate: caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b","typeString":"literal_string \"IReCCertificate: caller is not owner nor approved\""}],"id":8754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2814:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2814:97:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8763,"nodeType":"ExpressionStatement","src":"2814:97:34"},{"assignments":[8765],"declarations":[{"constant":false,"id":8765,"mutability":"mutable","name":"energyAmount","nameLocation":"2999:12:34","nodeType":"VariableDeclaration","scope":8787,"src":"2991:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8764,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8770,"initialValue":{"expression":{"baseExpression":{"id":8766,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8618,"src":"3014:12:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CertificateData_$8613_storage_$","typeString":"mapping(uint256 => struct IReCCertificate.CertificateData storage ref)"}},"id":8768,"indexExpression":{"id":8767,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"3027:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3014:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_storage","typeString":"struct IReCCertificate.CertificateData storage ref"}},"id":8769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3036:12:34","memberName":"energyAmount","nodeType":"MemberAccess","referencedDeclaration":8612,"src":"3014:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:57:34"},{"expression":{"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3102:28:34","subExpression":{"baseExpression":{"id":8771,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8618,"src":"3109:12:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CertificateData_$8613_storage_$","typeString":"mapping(uint256 => struct IReCCertificate.CertificateData storage ref)"}},"id":8773,"indexExpression":{"id":8772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"3122:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3109:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_storage","typeString":"struct IReCCertificate.CertificateData storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8775,"nodeType":"ExpressionStatement","src":"3102:28:34"},{"expression":{"arguments":[{"id":8777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"3181:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8776,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3175:5:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8779,"nodeType":"ExpressionStatement","src":"3175:14:34"},{"eventCall":{"arguments":[{"id":8781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"3258:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3267:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:6:34","memberName":"sender","nodeType":"MemberAccess","src":"3267:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8784,"name":"energyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"3279:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8780,"name":"CertificateBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"3240:17:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3240:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8786,"nodeType":"EmitStatement","src":"3235:57:34"}]},"documentation":{"id":8749,"nodeType":"StructuredDocumentation","src":"2552:198:34","text":" @dev Burns (destroys) an I-REC certificate\n @param tokenId The ID of the token to burn\n Requirements:\n - The caller must own the token or be an approved operator"},"functionSelector":"93b16b45","id":8788,"implemented":true,"kind":"function","modifiers":[],"name":"burnCertificate","nameLocation":"2764:15:34","nodeType":"FunctionDefinition","parameters":{"id":8752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8751,"mutability":"mutable","name":"tokenId","nameLocation":"2788:7:34","nodeType":"VariableDeclaration","scope":8788,"src":"2780:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2780:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2779:17:34"},"returnParameters":{"id":8753,"nodeType":"ParameterList","parameters":[],"src":"2804:0:34"},"scope":8842,"src":"2755:544:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8840,"nodeType":"Block","src":"3696:406:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8807,"name":"tokenIdOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"3714:12:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":8809,"indexExpression":{"id":8808,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"3727:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3714:21:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3747:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8810,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:34","typeDescriptions":{}}},"id":8813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3714:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436572746966696361746520646f6573206e6f74206578697374","id":8815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3751:28:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf","typeString":"literal_string \"Certificate does not exist\""},"value":"Certificate does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf","typeString":"literal_string \"Certificate does not exist\""}],"id":8806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3706:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3706:74:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8817,"nodeType":"ExpressionStatement","src":"3706:74:34"},{"assignments":[8820],"declarations":[{"constant":false,"id":8820,"mutability":"mutable","name":"certData","nameLocation":"3822:8:34","nodeType":"VariableDeclaration","scope":8840,"src":"3799:31:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_memory_ptr","typeString":"struct IReCCertificate.CertificateData"},"typeName":{"id":8819,"nodeType":"UserDefinedTypeName","pathNode":{"id":8818,"name":"CertificateData","nameLocations":["3799:15:34"],"nodeType":"IdentifierPath","referencedDeclaration":8613,"src":"3799:15:34"},"referencedDeclaration":8613,"src":"3799:15:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_storage_ptr","typeString":"struct IReCCertificate.CertificateData"}},"visibility":"internal"}],"id":8824,"initialValue":{"baseExpression":{"id":8821,"name":"certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8618,"src":"3833:12:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CertificateData_$8613_storage_$","typeString":"mapping(uint256 => struct IReCCertificate.CertificateData storage ref)"}},"id":8823,"indexExpression":{"id":8822,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"3846:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3833:21:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_storage","typeString":"struct IReCCertificate.CertificateData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3799:55:34"},{"expression":{"components":[{"expression":{"id":8825,"name":"certData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"3894:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_memory_ptr","typeString":"struct IReCCertificate.CertificateData memory"}},"id":8826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:12:34","memberName":"facilityName","nodeType":"MemberAccess","referencedDeclaration":8604,"src":"3894:21:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8827,"name":"certData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"3929:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_memory_ptr","typeString":"struct IReCCertificate.CertificateData memory"}},"id":8828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3938:12:34","memberName":"energySource","nodeType":"MemberAccess","referencedDeclaration":8606,"src":"3929:21:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8829,"name":"certData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"3964:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_memory_ptr","typeString":"struct IReCCertificate.CertificateData memory"}},"id":8830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3973:14:34","memberName":"productionDate","nodeType":"MemberAccess","referencedDeclaration":8608,"src":"3964:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8831,"name":"certData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"4001:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_memory_ptr","typeString":"struct IReCCertificate.CertificateData memory"}},"id":8832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4010:10:34","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":8610,"src":"4001:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8833,"name":"certData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"4034:8:34","typeDescriptions":{"typeIdentifier":"t_struct$_CertificateData_$8613_memory_ptr","typeString":"struct IReCCertificate.CertificateData memory"}},"id":8834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4043:12:34","memberName":"energyAmount","nodeType":"MemberAccess","referencedDeclaration":8612,"src":"4034:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"4077:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8835,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"4069:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4069:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3880:215:34","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$","typeString":"tuple(string memory,string memory,uint256,uint256,uint256,address)"}},"functionReturnParameters":8805,"id":8839,"nodeType":"Return","src":"3873:222:34"}]},"documentation":{"id":8789,"nodeType":"StructuredDocumentation","src":"3305:126:34","text":" @dev Returns the complete details of a certificate\n @param tokenId The ID of the certificate to query"},"functionSelector":"a901fe5e","id":8841,"implemented":true,"kind":"function","modifiers":[],"name":"getCertificateDetails","nameLocation":"3445:21:34","nodeType":"FunctionDefinition","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8791,"mutability":"mutable","name":"tokenId","nameLocation":"3475:7:34","nodeType":"VariableDeclaration","scope":8841,"src":"3467:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3466:17:34"},"returnParameters":{"id":8805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8794,"mutability":"mutable","name":"facilityName","nameLocation":"3528:12:34","nodeType":"VariableDeclaration","scope":8841,"src":"3514:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8793,"name":"string","nodeType":"ElementaryTypeName","src":"3514:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8796,"mutability":"mutable","name":"energySource","nameLocation":"3564:12:34","nodeType":"VariableDeclaration","scope":8841,"src":"3550:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8795,"name":"string","nodeType":"ElementaryTypeName","src":"3550:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8798,"mutability":"mutable","name":"productionDate","nameLocation":"3594:14:34","nodeType":"VariableDeclaration","scope":8841,"src":"3586:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3586:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8800,"mutability":"mutable","name":"expiryDate","nameLocation":"3626:10:34","nodeType":"VariableDeclaration","scope":8841,"src":"3618:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3618:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8802,"mutability":"mutable","name":"energyAmount","nameLocation":"3654:12:34","nodeType":"VariableDeclaration","scope":8841,"src":"3646:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3646:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8804,"mutability":"mutable","name":"owner","nameLocation":"3684:5:34","nodeType":"VariableDeclaration","scope":8841,"src":"3676:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8803,"name":"address","nodeType":"ElementaryTypeName","src":"3676:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3504:191:34"},"scope":8842,"src":"3436:666:34","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8843,"src":"290:3814:34","usedErrors":[13,18,252,257,266,271,276,283,288,293],"usedEvents":[24,167,174,2123,2132,2141,8630,8638,8642]}],"src":"32:4072:34"},"id":34},"contracts/Marketplace.sol":{"ast":{"absolutePath":"contracts/Marketplace.sol","exportedSymbols":{"Context":[2530],"ECDSA":[4608],"EIP712":[4835],"ERC20":[856],"ERC20Permit":[1088],"ERC721":[2107],"ERC721Holder":[2423],"ERC721URIStorage":[2368],"FractionalCertificateToken":[8593],"IERC165":[4945],"IERC20":[934],"IERC20Errors":[246],"IERC20Metadata":[1114],"IERC20Permit":[1150],"IERC4906":[175],"IERC721":[2224],"IERC721Receiver":[2242],"IReCCertificate":[8842],"Marketplace":[9146],"Math":[6551],"Nonces":[2598],"Ownable":[147],"ReentrancyGuard":[2719],"SafeCast":[8316],"SignedMath":[8460],"Strings":[4260]},"id":9147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8844,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:35"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9147,"sourceUnit":148,"src":"61:52:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9147,"sourceUnit":935,"src":"115:56:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9147,"sourceUnit":2720,"src":"173:59:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":8848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9147,"sourceUnit":4261,"src":"234:51:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/FractionalCertificateToken.sol","file":"./FractionalCertificateToken.sol","id":8849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9147,"sourceUnit":8594,"src":"287:42:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IReCCertificate.sol","file":"./IReCCertificate.sol","id":8850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9147,"sourceUnit":8843,"src":"331:32:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8851,"name":"Ownable","nameLocations":["393:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"393:7:35"},"id":8852,"nodeType":"InheritanceSpecifier","src":"393:7:35"},{"baseName":{"id":8853,"name":"ReentrancyGuard","nameLocations":["402:15:35"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"402:15:35"},"id":8854,"nodeType":"InheritanceSpecifier","src":"402:15:35"}],"canonicalName":"Marketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9146,"linearizedBaseContracts":[9146,2719,147,2530],"name":"Marketplace","nameLocation":"378:11:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Marketplace.Listing","id":8861,"members":[{"constant":false,"id":8856,"mutability":"mutable","name":"seller","nameLocation":"460:6:35","nodeType":"VariableDeclaration","scope":8861,"src":"452:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8855,"name":"address","nodeType":"ElementaryTypeName","src":"452:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8858,"mutability":"mutable","name":"pricePerToken","nameLocation":"485:13:35","nodeType":"VariableDeclaration","scope":8861,"src":"477:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8857,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8860,"mutability":"mutable","name":"amountAvailable","nameLocation":"527:15:35","nodeType":"VariableDeclaration","scope":8861,"src":"519:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8859,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Listing","nameLocation":"433:7:35","nodeType":"StructDefinition","scope":9146,"src":"426:124:35","visibility":"public"},{"constant":false,"functionSelector":"db931fcd","id":8868,"mutability":"mutable","name":"listings","nameLocation":"671:8:35","nodeType":"VariableDeclaration","scope":9146,"src":"616:63:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$_$","typeString":"mapping(address => mapping(address => struct Marketplace.Listing))"},"typeName":{"id":8867,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8862,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"616:47:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$_$","typeString":"mapping(address => mapping(address => struct Marketplace.Listing))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8866,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8863,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"635:27:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$","typeString":"mapping(address => struct Marketplace.Listing)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8865,"nodeType":"UserDefinedTypeName","pathNode":{"id":8864,"name":"Listing","nameLocations":["654:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":8861,"src":"654:7:35"},"referencedDeclaration":8861,"src":"654:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"d9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca","id":8878,"name":"Listed","nameLocation":"694:6:35","nodeType":"EventDefinition","parameters":{"id":8877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8870,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"717:5:35","nodeType":"VariableDeclaration","scope":8878,"src":"701:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8869,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8872,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"740:6:35","nodeType":"VariableDeclaration","scope":8878,"src":"724:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8871,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8874,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"756:6:35","nodeType":"VariableDeclaration","scope":8878,"src":"748:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8873,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8876,"indexed":false,"mutability":"mutable","name":"pricePerToken","nameLocation":"772:13:35","nodeType":"VariableDeclaration","scope":8878,"src":"764:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8875,"name":"uint256","nodeType":"ElementaryTypeName","src":"764:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"700:86:35"},"src":"688:99:35"},{"anonymous":false,"eventSelector":"a326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49","id":8888,"name":"Purchased","nameLocation":"799:9:35","nodeType":"EventDefinition","parameters":{"id":8887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8880,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"825:5:35","nodeType":"VariableDeclaration","scope":8888,"src":"809:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8879,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8882,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"848:5:35","nodeType":"VariableDeclaration","scope":8888,"src":"832:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8881,"name":"address","nodeType":"ElementaryTypeName","src":"832:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8884,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"863:6:35","nodeType":"VariableDeclaration","scope":8888,"src":"855:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8883,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8886,"indexed":false,"mutability":"mutable","name":"totalCost","nameLocation":"879:9:35","nodeType":"VariableDeclaration","scope":8888,"src":"871:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8885,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"808:81:35"},"src":"793:97:35"},{"anonymous":false,"eventSelector":"7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5","id":8894,"name":"Withdrawn","nameLocation":"902:9:35","nodeType":"EventDefinition","parameters":{"id":8893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8890,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"928:6:35","nodeType":"VariableDeclaration","scope":8894,"src":"912:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8889,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8892,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"944:6:35","nodeType":"VariableDeclaration","scope":8894,"src":"936:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8891,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"911:40:35"},"src":"896:56:35"},{"anonymous":false,"eventSelector":"796ebe8ba5d6045889c70272f8e2dad46d17b785eebaf80794d94e1d7de0f082","id":8900,"name":"ListingCancelled","nameLocation":"964:16:35","nodeType":"EventDefinition","parameters":{"id":8899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8896,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"997:5:35","nodeType":"VariableDeclaration","scope":8900,"src":"981:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8895,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8898,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1020:6:35","nodeType":"VariableDeclaration","scope":8900,"src":"1004:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8897,"name":"address","nodeType":"ElementaryTypeName","src":"1004:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"980:47:35"},"src":"958:70:35"},{"body":{"id":8908,"nodeType":"Block","src":"1111:2:35","statements":[]},"id":8909,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8905,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"1097:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8906,"kind":"baseConstructorSpecifier","modifierName":{"id":8904,"name":"Ownable","nameLocations":["1089:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1089:7:35"},"nodeType":"ModifierInvocation","src":"1089:21:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8902,"mutability":"mutable","name":"initialOwner","nameLocation":"1075:12:35","nodeType":"VariableDeclaration","scope":8909,"src":"1067:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8901,"name":"address","nodeType":"ElementaryTypeName","src":"1067:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1066:22:35"},"returnParameters":{"id":8907,"nodeType":"ParameterList","parameters":[],"src":"1111:0:35"},"scope":9146,"src":"1055:58:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8985,"nodeType":"Block","src":"1315:471:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"1334:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1334:10:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8923,"name":"pricePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8916,"src":"1348:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1364:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1348:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1334:31:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e70757473","id":8927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1367:16:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea","typeString":"literal_string \"Invalid inputs\""},"value":"Invalid inputs"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea","typeString":"literal_string \"Invalid inputs\""}],"id":8919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1326:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1326:58:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8929,"nodeType":"ExpressionStatement","src":"1326:58:35"},{"assignments":[8932],"declarations":[{"constant":false,"id":8932,"mutability":"mutable","name":"token","nameLocation":"1404:5:35","nodeType":"VariableDeclaration","scope":8985,"src":"1397:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$934","typeString":"contract IERC20"},"typeName":{"id":8931,"nodeType":"UserDefinedTypeName","pathNode":{"id":8930,"name":"IERC20","nameLocations":["1397:6:35"],"nodeType":"IdentifierPath","referencedDeclaration":934,"src":"1397:6:35"},"referencedDeclaration":934,"src":"1397:6:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$934","typeString":"contract IERC20"}},"visibility":"internal"}],"id":8936,"initialValue":{"arguments":[{"id":8934,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"1419:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8933,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1412:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$934_$","typeString":"type(contract IERC20)"}},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$934","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"1397:35:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8940,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1467:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1471:6:35","memberName":"sender","nodeType":"MemberAccess","src":"1467:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8944,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1487:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_Marketplace_$9146","typeString":"contract Marketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Marketplace_$9146","typeString":"contract Marketplace"}],"id":8943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1479:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8942,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:35","typeDescriptions":{}}},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8938,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"1451:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$934","typeString":"contract IERC20"}},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1457:9:35","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":911,"src":"1451:15:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1451:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8947,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"1497:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1451:52:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b6574706c616365206e6f7420617070726f766564","id":8949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1505:26:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c","typeString":"literal_string \"Marketplace not approved\""},"value":"Marketplace not approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c","typeString":"literal_string \"Marketplace not approved\""}],"id":8937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1443:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1443:89:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8951,"nodeType":"ExpressionStatement","src":"1443:89:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1567:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1571:6:35","memberName":"sender","nodeType":"MemberAccess","src":"1567:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8953,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"1551:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$934","typeString":"contract IERC20"}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1557:9:35","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":891,"src":"1551:15:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1551:27:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"1582:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1551:37:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":8960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1590:22:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":8952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1543:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:70:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8962,"nodeType":"ExpressionStatement","src":"1543:70:35"},{"expression":{"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8963,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"1626:8:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$_$","typeString":"mapping(address => mapping(address => struct Marketplace.Listing storage ref))"}},"id":8967,"indexExpression":{"id":8964,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"1635:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1626:22:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$","typeString":"mapping(address => struct Marketplace.Listing storage ref)"}},"id":8968,"indexExpression":{"expression":{"id":8965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1649:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1653:6:35","memberName":"sender","nodeType":"MemberAccess","src":"1649:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1626:34:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage","typeString":"struct Marketplace.Listing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8970,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1671:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:6:35","memberName":"sender","nodeType":"MemberAccess","src":"1671:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8972,"name":"pricePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8916,"src":"1683:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8973,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"1698:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8969,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"1663:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Listing_$8861_storage_ptr_$","typeString":"type(struct Marketplace.Listing storage pointer)"}},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_memory_ptr","typeString":"struct Marketplace.Listing memory"}},"src":"1626:79:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage","typeString":"struct Marketplace.Listing storage ref"}},"id":8976,"nodeType":"ExpressionStatement","src":"1626:79:35"},{"eventCall":{"arguments":[{"id":8978,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"1730:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1744:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1748:6:35","memberName":"sender","nodeType":"MemberAccess","src":"1744:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8981,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"1756:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8982,"name":"pricePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8916,"src":"1764:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8977,"name":"Listed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"1723:6:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":8983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:55:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8984,"nodeType":"EmitStatement","src":"1718:60:35"}]},"documentation":{"id":8910,"nodeType":"StructuredDocumentation","src":"1123:62:35","text":" @dev Seller lists their fractional tokens"},"functionSelector":"fa982ad1","id":8986,"implemented":true,"kind":"function","modifiers":[],"name":"listTokens","nameLocation":"1200:10:35","nodeType":"FunctionDefinition","parameters":{"id":8917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8912,"mutability":"mutable","name":"tokenAddress","nameLocation":"1229:12:35","nodeType":"VariableDeclaration","scope":8986,"src":"1221:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8911,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8914,"mutability":"mutable","name":"amount","nameLocation":"1260:6:35","nodeType":"VariableDeclaration","scope":8986,"src":"1252:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1252:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8916,"mutability":"mutable","name":"pricePerToken","nameLocation":"1285:13:35","nodeType":"VariableDeclaration","scope":8986,"src":"1277:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1277:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:95:35"},"returnParameters":{"id":8918,"nodeType":"ParameterList","parameters":[],"src":"1315:0:35"},"scope":9146,"src":"1191:595:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9073,"nodeType":"Block","src":"1979:763:35","statements":[{"assignments":[9000],"declarations":[{"constant":false,"id":9000,"mutability":"mutable","name":"item","nameLocation":"2006:4:35","nodeType":"VariableDeclaration","scope":9073,"src":"1990:20:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing"},"typeName":{"id":8999,"nodeType":"UserDefinedTypeName","pathNode":{"id":8998,"name":"Listing","nameLocations":["1990:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":8861,"src":"1990:7:35"},"referencedDeclaration":8861,"src":"1990:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing"}},"visibility":"internal"}],"id":9006,"initialValue":{"baseExpression":{"baseExpression":{"id":9001,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"2013:8:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$_$","typeString":"mapping(address => mapping(address => struct Marketplace.Listing storage ref))"}},"id":9003,"indexExpression":{"id":9002,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"2022:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2013:22:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$","typeString":"mapping(address => struct Marketplace.Listing storage ref)"}},"id":9005,"indexExpression":{"id":9004,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"2036:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2013:30:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage","typeString":"struct Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1990:53:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9008,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"2062:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing storage pointer"}},"id":9009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2067:15:35","memberName":"amountAvailable","nodeType":"MemberAccess","referencedDeclaration":8860,"src":"2062:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9010,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"2086:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2062:35:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820746f6b656e73206c6973746564","id":9012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2099:26:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965","typeString":"literal_string \"Not enough tokens listed\""},"value":"Not enough tokens listed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965","typeString":"literal_string \"Not enough tokens listed\""}],"id":9007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2054:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2054:72:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9014,"nodeType":"ExpressionStatement","src":"2054:72:35"},{"assignments":[9016],"declarations":[{"constant":false,"id":9016,"mutability":"mutable","name":"totalCost","nameLocation":"2155:9:35","nodeType":"VariableDeclaration","scope":9073,"src":"2147:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9015,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9021,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9017,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"2167:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing storage pointer"}},"id":9018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2172:13:35","memberName":"pricePerToken","nodeType":"MemberAccess","referencedDeclaration":8858,"src":"2167:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9019,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"2188:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2167:32:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2147:52:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9023,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2218:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2222:5:35","memberName":"value","nodeType":"MemberAccess","src":"2218:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9025,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"2231:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:22:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482073656e74","id":9027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2242:23:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""},"value":"Insufficient ETH sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""}],"id":9022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2210:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:56:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9029,"nodeType":"ExpressionStatement","src":"2210:56:35"},{"expression":{"arguments":[{"expression":{"id":9034,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"2368:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing storage pointer"}},"id":9035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2373:6:35","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8856,"src":"2368:11:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2381:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2385:6:35","memberName":"sender","nodeType":"MemberAccess","src":"2381:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9038,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"2393:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9031,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"2341:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9030,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"2334:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$934_$","typeString":"type(contract IERC20)"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$934","typeString":"contract IERC20"}},"id":9033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2355:12:35","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":933,"src":"2334:33:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":9039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:71:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9040,"nodeType":"ExpressionStatement","src":"2334:71:35"},{"expression":{"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9041,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"2468:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing storage pointer"}},"id":9043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2473:15:35","memberName":"amountAvailable","nodeType":"MemberAccess","referencedDeclaration":8860,"src":"2468:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":9044,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"2492:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9046,"nodeType":"ExpressionStatement","src":"2468:35:35"},{"assignments":[9048,null],"declarations":[{"constant":false,"id":9048,"mutability":"mutable","name":"sent","nameLocation":"2553:4:35","nodeType":"VariableDeclaration","scope":9073,"src":"2548:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9047,"name":"bool","nodeType":"ElementaryTypeName","src":"2548:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9059,"initialValue":{"arguments":[{"hexValue":"","id":9057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2607:2:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":9051,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"2571:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing storage pointer"}},"id":9052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2576:6:35","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8856,"src":"2571:11:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2563:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":9049,"name":"address","nodeType":"ElementaryTypeName","src":"2563:8:35","stateMutability":"payable","typeDescriptions":{}}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":9054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2584:4:35","memberName":"call","nodeType":"MemberAccess","src":"2563:25:35","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9055,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"2596:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2563:43:35","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:47:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2547:63:35"},{"expression":{"arguments":[{"id":9061,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"2629:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":9062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2635:21:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":9060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2621:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2621:36:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9064,"nodeType":"ExpressionStatement","src":"2621:36:35"},{"eventCall":{"arguments":[{"id":9066,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"2685:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2699:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2703:6:35","memberName":"sender","nodeType":"MemberAccess","src":"2699:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9069,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"2711:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9070,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"2724:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9065,"name":"Purchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"2675:9:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:59:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9072,"nodeType":"EmitStatement","src":"2670:64:35"}]},"documentation":{"id":8987,"nodeType":"StructuredDocumentation","src":"1794:71:35","text":" @dev Buyer buys `amountToBuy` of fractional tokens"},"functionSelector":"dcefa538","id":9074,"implemented":true,"kind":"function","modifiers":[{"id":8996,"kind":"modifierInvocation","modifierName":{"id":8995,"name":"nonReentrant","nameLocations":["1966:12:35"],"nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"1966:12:35"},"nodeType":"ModifierInvocation","src":"1966:12:35"}],"name":"buyTokens","nameLocation":"1880:9:35","nodeType":"FunctionDefinition","parameters":{"id":8994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8989,"mutability":"mutable","name":"tokenAddress","nameLocation":"1898:12:35","nodeType":"VariableDeclaration","scope":9074,"src":"1890:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8988,"name":"address","nodeType":"ElementaryTypeName","src":"1890:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8991,"mutability":"mutable","name":"seller","nameLocation":"1920:6:35","nodeType":"VariableDeclaration","scope":9074,"src":"1912:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8990,"name":"address","nodeType":"ElementaryTypeName","src":"1912:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8993,"mutability":"mutable","name":"amountToBuy","nameLocation":"1936:11:35","nodeType":"VariableDeclaration","scope":9074,"src":"1928:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1928:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1889:59:35"},"returnParameters":{"id":8997,"nodeType":"ParameterList","parameters":[],"src":"1979:0:35"},"scope":9146,"src":"1871:871:35","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9112,"nodeType":"Block","src":"2850:258:35","statements":[{"assignments":[9082],"declarations":[{"constant":false,"id":9082,"mutability":"mutable","name":"item","nameLocation":"2877:4:35","nodeType":"VariableDeclaration","scope":9112,"src":"2861:20:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing"},"typeName":{"id":9081,"nodeType":"UserDefinedTypeName","pathNode":{"id":9080,"name":"Listing","nameLocations":["2861:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":8861,"src":"2861:7:35"},"referencedDeclaration":8861,"src":"2861:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing"}},"visibility":"internal"}],"id":9089,"initialValue":{"baseExpression":{"baseExpression":{"id":9083,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"2884:8:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$_$","typeString":"mapping(address => mapping(address => struct Marketplace.Listing storage ref))"}},"id":9085,"indexExpression":{"id":9084,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"2893:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2884:22:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$","typeString":"mapping(address => struct Marketplace.Listing storage ref)"}},"id":9088,"indexExpression":{"expression":{"id":9086,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2907:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2911:6:35","memberName":"sender","nodeType":"MemberAccess","src":"2907:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2884:34:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage","typeString":"struct Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2861:57:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9091,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9082,"src":"2937:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing storage pointer"}},"id":9092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2942:15:35","memberName":"amountAvailable","nodeType":"MemberAccess","referencedDeclaration":8860,"src":"2937:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2960:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2937:24:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c697374696e6720746f2063616e63656c","id":9095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2963:22:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774","typeString":"literal_string \"No listing to cancel\""},"value":"No listing to cancel"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774","typeString":"literal_string \"No listing to cancel\""}],"id":9090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2929:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:57:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9097,"nodeType":"ExpressionStatement","src":"2929:57:35"},{"expression":{"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2999:41:35","subExpression":{"baseExpression":{"baseExpression":{"id":9098,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"3006:8:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$_$","typeString":"mapping(address => mapping(address => struct Marketplace.Listing storage ref))"}},"id":9100,"indexExpression":{"id":9099,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"3015:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3006:22:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$","typeString":"mapping(address => struct Marketplace.Listing storage ref)"}},"id":9103,"indexExpression":{"expression":{"id":9101,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3029:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3033:6:35","memberName":"sender","nodeType":"MemberAccess","src":"3029:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3006:34:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage","typeString":"struct Marketplace.Listing storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9105,"nodeType":"ExpressionStatement","src":"2999:41:35"},{"eventCall":{"arguments":[{"id":9107,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"3075:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3089:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3093:6:35","memberName":"sender","nodeType":"MemberAccess","src":"3089:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9106,"name":"ListingCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"3058:16:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3058:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9111,"nodeType":"EmitStatement","src":"3053:47:35"}]},"documentation":{"id":9075,"nodeType":"StructuredDocumentation","src":"2750:40:35","text":" @dev Cancel listing"},"functionSelector":"4724da6f","id":9113,"implemented":true,"kind":"function","modifiers":[],"name":"cancelListing","nameLocation":"2805:13:35","nodeType":"FunctionDefinition","parameters":{"id":9078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9077,"mutability":"mutable","name":"tokenAddress","nameLocation":"2827:12:35","nodeType":"VariableDeclaration","scope":9113,"src":"2819:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9076,"name":"address","nodeType":"ElementaryTypeName","src":"2819:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2818:22:35"},"returnParameters":{"id":9079,"nodeType":"ParameterList","parameters":[],"src":"2850:0:35"},"scope":9146,"src":"2796:312:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9144,"nodeType":"Block","src":"3364:132:35","statements":[{"assignments":[9129],"declarations":[{"constant":false,"id":9129,"mutability":"mutable","name":"l","nameLocation":"3390:1:35","nodeType":"VariableDeclaration","scope":9144,"src":"3375:16:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_memory_ptr","typeString":"struct Marketplace.Listing"},"typeName":{"id":9128,"nodeType":"UserDefinedTypeName","pathNode":{"id":9127,"name":"Listing","nameLocations":["3375:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":8861,"src":"3375:7:35"},"referencedDeclaration":8861,"src":"3375:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage_ptr","typeString":"struct Marketplace.Listing"}},"visibility":"internal"}],"id":9135,"initialValue":{"baseExpression":{"baseExpression":{"id":9130,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"3394:8:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$_$","typeString":"mapping(address => mapping(address => struct Marketplace.Listing storage ref))"}},"id":9132,"indexExpression":{"id":9131,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9116,"src":"3403:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3394:22:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Listing_$8861_storage_$","typeString":"mapping(address => struct Marketplace.Listing storage ref)"}},"id":9134,"indexExpression":{"id":9133,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"3417:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3394:30:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_storage","typeString":"struct Marketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3375:49:35"},{"expression":{"components":[{"expression":{"id":9136,"name":"l","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"3443:1:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_memory_ptr","typeString":"struct Marketplace.Listing memory"}},"id":9137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3445:6:35","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8856,"src":"3443:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9138,"name":"l","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"3453:1:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_memory_ptr","typeString":"struct Marketplace.Listing memory"}},"id":9139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3455:13:35","memberName":"pricePerToken","nodeType":"MemberAccess","referencedDeclaration":8858,"src":"3453:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9140,"name":"l","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"3470:1:35","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$8861_memory_ptr","typeString":"struct Marketplace.Listing memory"}},"id":9141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3472:15:35","memberName":"amountAvailable","nodeType":"MemberAccess","referencedDeclaration":8860,"src":"3470:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3442:46:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,uint256,uint256)"}},"functionReturnParameters":9126,"id":9143,"nodeType":"Return","src":"3435:53:35"}]},"documentation":{"id":9114,"nodeType":"StructuredDocumentation","src":"3116:56:35","text":" @dev Returns listing details for UI"},"functionSelector":"b369f6ad","id":9145,"implemented":true,"kind":"function","modifiers":[],"name":"getListing","nameLocation":"3187:10:35","nodeType":"FunctionDefinition","parameters":{"id":9119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9116,"mutability":"mutable","name":"tokenAddress","nameLocation":"3206:12:35","nodeType":"VariableDeclaration","scope":9145,"src":"3198:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9115,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9118,"mutability":"mutable","name":"seller","nameLocation":"3228:6:35","nodeType":"VariableDeclaration","scope":9145,"src":"3220:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9117,"name":"address","nodeType":"ElementaryTypeName","src":"3220:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3197:38:35"},"returnParameters":{"id":9126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9121,"mutability":"mutable","name":"sellerAddress","nameLocation":"3277:13:35","nodeType":"VariableDeclaration","scope":9145,"src":"3269:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9120,"name":"address","nodeType":"ElementaryTypeName","src":"3269:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9123,"mutability":"mutable","name":"pricePerToken","nameLocation":"3309:13:35","nodeType":"VariableDeclaration","scope":9145,"src":"3301:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3301:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9125,"mutability":"mutable","name":"amountAvailable","nameLocation":"3341:15:35","nodeType":"VariableDeclaration","scope":9145,"src":"3333:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3333:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3258:105:35"},"scope":9146,"src":"3178:318:35","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9147,"src":"369:3130:35","usedErrors":[13,18,2664],"usedEvents":[24,8878,8888,8894,8900]}],"src":"33:3468:35"},"id":35}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ERC721Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206404359a087c2b99ae5f8c99f62a39dd41630c53c3d9ba09067fde3ee2e3131464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x4359A087C 0x2B SWAP10 0xAE PUSH0 DUP13 SWAP10 0xF6 0x2A CODECOPY 0xDD COINBASE PUSH4 0xC53C3D9 0xBA MULMOD MOD PUSH32 0xDE3EE2E3131464736F6C634300081C0033000000000000000000000000000000 ","sourceMap":"431:1480:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206404359a087c2b99ae5f8c99f62a39dd41630c53c3d9ba09067fde3ee2e3131464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x4359A087C 0x2B SWAP10 0xAE PUSH0 DUP13 SWAP10 0xF6 0x2A CODECOPY 0xDD COINBASE PUSH4 0xC53C3D9 0xBA MULMOD MOD PUSH32 0xDE3EE2E3131464736F6C634300081C0033000000000000000000000000000000 ","sourceMap":"431:1480:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220634a59fab05765d67f31cc583ea360299d9a044922b6e51a7e4b81f28fc2a3fa64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x4A59FAB0 JUMPI PUSH6 0xD67F31CC583E LOG3 PUSH1 0x29 SWAP14 SWAP11 DIV BLOBHASH 0x22 0xB6 0xE5 BYTE PUSH31 0x4B81F28FC2A3FA64736F6C634300081C003300000000000000000000000000 ","sourceMap":"1255:3026:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220634a59fab05765d67f31cc583ea360299d9a044922b6e51a7e4b81f28fc2a3fa64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x4A59FAB0 JUMPI PUSH6 0xD67F31CC583E LOG3 PUSH1 0x29 SWAP14 SWAP11 DIV BLOBHASH 0x22 0xB6 0xE5 BYTE PUSH31 0x4B81F28FC2A3FA64736F6C634300081C003300000000000000000000000000 ","sourceMap":"1255:3026:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202534be0585d225cf17dd4a862c6e9d466e4ae75e4801277999e5c51c39b8b07464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CALLVALUE 0xBE SDIV DUP6 0xD2 0x25 0xCF OR 0xDD BLOBBASEFEE DUP7 0x2C PUSH15 0x9D466E4AE75E4801277999E5C51C39 0xB8 0xB0 PUSH21 0x64736F6C634300081C003300000000000000000000 ","sourceMap":"297:16541:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202534be0585d225cf17dd4a862c6e9d466e4ae75e4801277999e5c51c39b8b07464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CALLVALUE 0xBE SDIV DUP6 0xD2 0x25 0xCF OR 0xDD BLOBBASEFEE DUP7 0x2C PUSH15 0x9D466E4AE75E4801277999E5C51C39 0xB8 0xB0 PUSH21 0x64736F6C634300081C003300000000000000000000 ","sourceMap":"297:16541:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203abc25de824c285b106a58baf5ab2b9c484a373cc37b7e4c7367aba648b9bb4a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xBC 0x25 0xDE DUP3 0x4C 0x28 JUMPDEST LT PUSH11 0x58BAF5AB2B9C484A373CC3 PUSH28 0x7E4C7367ABA648B9BB4A64736F6C634300081C003300000000000000 ","sourceMap":"521:3181:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203abc25de824c285b106a58baf5ab2b9c484a373cc37b7e4c7367aba648b9bb4a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xBC 0x25 0xDE DUP3 0x4C 0x28 JUMPDEST LT PUSH11 0x58BAF5AB2B9C484A373CC3 PUSH28 0x7E4C7367ABA648B9BB4A64736F6C634300081C003300000000000000 ","sourceMap":"521:3181:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:31:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:32:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/FractionalCertificateToken.sol":{"FractionalCertificateToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"totalFractions","type":"uint256"},{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"},{"internalType":"address","name":"certificateContractAddress","type":"address"},{"internalType":"uint256","name":"certificateTokenId_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalFractions","type":"uint256"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"}],"name":"CertificateFractionalized","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"certificateTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fractionalizeCertificate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFractionInfo","outputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"totalFractions","type":"uint256"},{"internalType":"address","name":"ownerAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"iRecCertificateContract","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isFractionalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_393":{"entryPoint":null,"id":393,"parameterSlots":2,"returnSlots":0},"@_4705":{"entryPoint":null,"id":4705,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8531":{"entryPoint":null,"id":8531,"parameterSlots":5,"returnSlots":0},"@_983":{"entryPoint":null,"id":983,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_4752":{"entryPoint":811,"id":4752,"parameterSlots":0,"returnSlots":1},"@_mint_696":{"entryPoint":902,"id":696,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":533,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_663":{"entryPoint":1152,"id":663,"parameterSlots":3,"returnSlots":0},"@getStringSlot_3037":{"entryPoint":1142,"id":3037,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2877":{"entryPoint":731,"id":2877,"parameterSlots":2,"returnSlots":1},"@toShortString_2779":{"entryPoint":1038,"id":2779,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":2016,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":2082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory":{"entryPoint":2222,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3198,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3213,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3669,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3228,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3724,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1898,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1701,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1925,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3430,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2508,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3419,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2401,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3311,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3617,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2795,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2160,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3188,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2128,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1721,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2760,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3467,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2650,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2936,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1974,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2529,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2459,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2908,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1849,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2640,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2878,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3570,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2412,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1802,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3446,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1775,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1780,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1716,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1711,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1785,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2545,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2865,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2736,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2558,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2694,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2178,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1731,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2731,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:14109:36","nodeType":"YulBlock","src":"0:14109:36","statements":[{"body":{"nativeSrc":"47:35:36","nodeType":"YulBlock","src":"47:35:36","statements":[{"nativeSrc":"57:19:36","nodeType":"YulAssignment","src":"57:19:36","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:36","nodeType":"YulLiteral","src":"73:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:36","nodeType":"YulIdentifier","src":"67:5:36"},"nativeSrc":"67:9:36","nodeType":"YulFunctionCall","src":"67:9:36"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:36","nodeType":"YulIdentifier","src":"57:6:36"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:36","nodeType":"YulTypedName","src":"40:6:36","type":""}],"src":"7:75:36"},{"body":{"nativeSrc":"177:28:36","nodeType":"YulBlock","src":"177:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:36","nodeType":"YulLiteral","src":"194:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:36","nodeType":"YulLiteral","src":"197:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:36","nodeType":"YulIdentifier","src":"187:6:36"},"nativeSrc":"187:12:36","nodeType":"YulFunctionCall","src":"187:12:36"},"nativeSrc":"187:12:36","nodeType":"YulExpressionStatement","src":"187:12:36"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:36","nodeType":"YulFunctionDefinition","src":"88:117:36"},{"body":{"nativeSrc":"300:28:36","nodeType":"YulBlock","src":"300:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:36","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:36","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:36","nodeType":"YulIdentifier","src":"310:6:36"},"nativeSrc":"310:12:36","nodeType":"YulFunctionCall","src":"310:12:36"},"nativeSrc":"310:12:36","nodeType":"YulExpressionStatement","src":"310:12:36"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:36","nodeType":"YulFunctionDefinition","src":"211:117:36"},{"body":{"nativeSrc":"379:32:36","nodeType":"YulBlock","src":"379:32:36","statements":[{"nativeSrc":"389:16:36","nodeType":"YulAssignment","src":"389:16:36","value":{"name":"value","nativeSrc":"400:5:36","nodeType":"YulIdentifier","src":"400:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:36","nodeType":"YulIdentifier","src":"389:7:36"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:36","nodeType":"YulTypedName","src":"361:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:36","nodeType":"YulTypedName","src":"371:7:36","type":""}],"src":"334:77:36"},{"body":{"nativeSrc":"460:79:36","nodeType":"YulBlock","src":"460:79:36","statements":[{"body":{"nativeSrc":"517:16:36","nodeType":"YulBlock","src":"517:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:36","nodeType":"YulLiteral","src":"526:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:36","nodeType":"YulLiteral","src":"529:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:36","nodeType":"YulIdentifier","src":"519:6:36"},"nativeSrc":"519:12:36","nodeType":"YulFunctionCall","src":"519:12:36"},"nativeSrc":"519:12:36","nodeType":"YulExpressionStatement","src":"519:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:36","nodeType":"YulIdentifier","src":"483:5:36"},{"arguments":[{"name":"value","nativeSrc":"508:5:36","nodeType":"YulIdentifier","src":"508:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:36","nodeType":"YulIdentifier","src":"490:17:36"},"nativeSrc":"490:24:36","nodeType":"YulFunctionCall","src":"490:24:36"}],"functionName":{"name":"eq","nativeSrc":"480:2:36","nodeType":"YulIdentifier","src":"480:2:36"},"nativeSrc":"480:35:36","nodeType":"YulFunctionCall","src":"480:35:36"}],"functionName":{"name":"iszero","nativeSrc":"473:6:36","nodeType":"YulIdentifier","src":"473:6:36"},"nativeSrc":"473:43:36","nodeType":"YulFunctionCall","src":"473:43:36"},"nativeSrc":"470:63:36","nodeType":"YulIf","src":"470:63:36"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:36","nodeType":"YulTypedName","src":"453:5:36","type":""}],"src":"417:122:36"},{"body":{"nativeSrc":"608:80:36","nodeType":"YulBlock","src":"608:80:36","statements":[{"nativeSrc":"618:22:36","nodeType":"YulAssignment","src":"618:22:36","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:36","nodeType":"YulIdentifier","src":"633:6:36"}],"functionName":{"name":"mload","nativeSrc":"627:5:36","nodeType":"YulIdentifier","src":"627:5:36"},"nativeSrc":"627:13:36","nodeType":"YulFunctionCall","src":"627:13:36"},"variableNames":[{"name":"value","nativeSrc":"618:5:36","nodeType":"YulIdentifier","src":"618:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:36","nodeType":"YulIdentifier","src":"676:5:36"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:36","nodeType":"YulIdentifier","src":"649:26:36"},"nativeSrc":"649:33:36","nodeType":"YulFunctionCall","src":"649:33:36"},"nativeSrc":"649:33:36","nodeType":"YulExpressionStatement","src":"649:33:36"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:36","nodeType":"YulTypedName","src":"586:6:36","type":""},{"name":"end","nativeSrc":"594:3:36","nodeType":"YulTypedName","src":"594:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:36","nodeType":"YulTypedName","src":"602:5:36","type":""}],"src":"545:143:36"},{"body":{"nativeSrc":"783:28:36","nodeType":"YulBlock","src":"783:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"800:1:36","nodeType":"YulLiteral","src":"800:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"803:1:36","nodeType":"YulLiteral","src":"803:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"793:6:36","nodeType":"YulIdentifier","src":"793:6:36"},"nativeSrc":"793:12:36","nodeType":"YulFunctionCall","src":"793:12:36"},"nativeSrc":"793:12:36","nodeType":"YulExpressionStatement","src":"793:12:36"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"694:117:36","nodeType":"YulFunctionDefinition","src":"694:117:36"},{"body":{"nativeSrc":"906:28:36","nodeType":"YulBlock","src":"906:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"923:1:36","nodeType":"YulLiteral","src":"923:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"926:1:36","nodeType":"YulLiteral","src":"926:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"916:6:36","nodeType":"YulIdentifier","src":"916:6:36"},"nativeSrc":"916:12:36","nodeType":"YulFunctionCall","src":"916:12:36"},"nativeSrc":"916:12:36","nodeType":"YulExpressionStatement","src":"916:12:36"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"817:117:36","nodeType":"YulFunctionDefinition","src":"817:117:36"},{"body":{"nativeSrc":"988:54:36","nodeType":"YulBlock","src":"988:54:36","statements":[{"nativeSrc":"998:38:36","nodeType":"YulAssignment","src":"998:38:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1016:5:36","nodeType":"YulIdentifier","src":"1016:5:36"},{"kind":"number","nativeSrc":"1023:2:36","nodeType":"YulLiteral","src":"1023:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1012:3:36","nodeType":"YulIdentifier","src":"1012:3:36"},"nativeSrc":"1012:14:36","nodeType":"YulFunctionCall","src":"1012:14:36"},{"arguments":[{"kind":"number","nativeSrc":"1032:2:36","nodeType":"YulLiteral","src":"1032:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1028:3:36","nodeType":"YulIdentifier","src":"1028:3:36"},"nativeSrc":"1028:7:36","nodeType":"YulFunctionCall","src":"1028:7:36"}],"functionName":{"name":"and","nativeSrc":"1008:3:36","nodeType":"YulIdentifier","src":"1008:3:36"},"nativeSrc":"1008:28:36","nodeType":"YulFunctionCall","src":"1008:28:36"},"variableNames":[{"name":"result","nativeSrc":"998:6:36","nodeType":"YulIdentifier","src":"998:6:36"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"940:102:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"971:5:36","nodeType":"YulTypedName","src":"971:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"981:6:36","nodeType":"YulTypedName","src":"981:6:36","type":""}],"src":"940:102:36"},{"body":{"nativeSrc":"1076:152:36","nodeType":"YulBlock","src":"1076:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1093:1:36","nodeType":"YulLiteral","src":"1093:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"1096:77:36","nodeType":"YulLiteral","src":"1096:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1086:6:36","nodeType":"YulIdentifier","src":"1086:6:36"},"nativeSrc":"1086:88:36","nodeType":"YulFunctionCall","src":"1086:88:36"},"nativeSrc":"1086:88:36","nodeType":"YulExpressionStatement","src":"1086:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1190:1:36","nodeType":"YulLiteral","src":"1190:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"1193:4:36","nodeType":"YulLiteral","src":"1193:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1183:6:36","nodeType":"YulIdentifier","src":"1183:6:36"},"nativeSrc":"1183:15:36","nodeType":"YulFunctionCall","src":"1183:15:36"},"nativeSrc":"1183:15:36","nodeType":"YulExpressionStatement","src":"1183:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:36","nodeType":"YulLiteral","src":"1214:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:4:36","nodeType":"YulLiteral","src":"1217:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1207:6:36","nodeType":"YulIdentifier","src":"1207:6:36"},"nativeSrc":"1207:15:36","nodeType":"YulFunctionCall","src":"1207:15:36"},"nativeSrc":"1207:15:36","nodeType":"YulExpressionStatement","src":"1207:15:36"}]},"name":"panic_error_0x41","nativeSrc":"1048:180:36","nodeType":"YulFunctionDefinition","src":"1048:180:36"},{"body":{"nativeSrc":"1277:238:36","nodeType":"YulBlock","src":"1277:238:36","statements":[{"nativeSrc":"1287:58:36","nodeType":"YulVariableDeclaration","src":"1287:58:36","value":{"arguments":[{"name":"memPtr","nativeSrc":"1309:6:36","nodeType":"YulIdentifier","src":"1309:6:36"},{"arguments":[{"name":"size","nativeSrc":"1339:4:36","nodeType":"YulIdentifier","src":"1339:4:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1317:21:36","nodeType":"YulIdentifier","src":"1317:21:36"},"nativeSrc":"1317:27:36","nodeType":"YulFunctionCall","src":"1317:27:36"}],"functionName":{"name":"add","nativeSrc":"1305:3:36","nodeType":"YulIdentifier","src":"1305:3:36"},"nativeSrc":"1305:40:36","nodeType":"YulFunctionCall","src":"1305:40:36"},"variables":[{"name":"newFreePtr","nativeSrc":"1291:10:36","nodeType":"YulTypedName","src":"1291:10:36","type":""}]},{"body":{"nativeSrc":"1456:22:36","nodeType":"YulBlock","src":"1456:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1458:16:36","nodeType":"YulIdentifier","src":"1458:16:36"},"nativeSrc":"1458:18:36","nodeType":"YulFunctionCall","src":"1458:18:36"},"nativeSrc":"1458:18:36","nodeType":"YulExpressionStatement","src":"1458:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1399:10:36","nodeType":"YulIdentifier","src":"1399:10:36"},{"kind":"number","nativeSrc":"1411:18:36","nodeType":"YulLiteral","src":"1411:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1396:2:36","nodeType":"YulIdentifier","src":"1396:2:36"},"nativeSrc":"1396:34:36","nodeType":"YulFunctionCall","src":"1396:34:36"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1435:10:36","nodeType":"YulIdentifier","src":"1435:10:36"},{"name":"memPtr","nativeSrc":"1447:6:36","nodeType":"YulIdentifier","src":"1447:6:36"}],"functionName":{"name":"lt","nativeSrc":"1432:2:36","nodeType":"YulIdentifier","src":"1432:2:36"},"nativeSrc":"1432:22:36","nodeType":"YulFunctionCall","src":"1432:22:36"}],"functionName":{"name":"or","nativeSrc":"1393:2:36","nodeType":"YulIdentifier","src":"1393:2:36"},"nativeSrc":"1393:62:36","nodeType":"YulFunctionCall","src":"1393:62:36"},"nativeSrc":"1390:88:36","nodeType":"YulIf","src":"1390:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1494:2:36","nodeType":"YulLiteral","src":"1494:2:36","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1498:10:36","nodeType":"YulIdentifier","src":"1498:10:36"}],"functionName":{"name":"mstore","nativeSrc":"1487:6:36","nodeType":"YulIdentifier","src":"1487:6:36"},"nativeSrc":"1487:22:36","nodeType":"YulFunctionCall","src":"1487:22:36"},"nativeSrc":"1487:22:36","nodeType":"YulExpressionStatement","src":"1487:22:36"}]},"name":"finalize_allocation","nativeSrc":"1234:281:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1263:6:36","nodeType":"YulTypedName","src":"1263:6:36","type":""},{"name":"size","nativeSrc":"1271:4:36","nodeType":"YulTypedName","src":"1271:4:36","type":""}],"src":"1234:281:36"},{"body":{"nativeSrc":"1562:88:36","nodeType":"YulBlock","src":"1562:88:36","statements":[{"nativeSrc":"1572:30:36","nodeType":"YulAssignment","src":"1572:30:36","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1582:18:36","nodeType":"YulIdentifier","src":"1582:18:36"},"nativeSrc":"1582:20:36","nodeType":"YulFunctionCall","src":"1582:20:36"},"variableNames":[{"name":"memPtr","nativeSrc":"1572:6:36","nodeType":"YulIdentifier","src":"1572:6:36"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1631:6:36","nodeType":"YulIdentifier","src":"1631:6:36"},{"name":"size","nativeSrc":"1639:4:36","nodeType":"YulIdentifier","src":"1639:4:36"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1611:19:36","nodeType":"YulIdentifier","src":"1611:19:36"},"nativeSrc":"1611:33:36","nodeType":"YulFunctionCall","src":"1611:33:36"},"nativeSrc":"1611:33:36","nodeType":"YulExpressionStatement","src":"1611:33:36"}]},"name":"allocate_memory","nativeSrc":"1521:129:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1546:4:36","nodeType":"YulTypedName","src":"1546:4:36","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1555:6:36","nodeType":"YulTypedName","src":"1555:6:36","type":""}],"src":"1521:129:36"},{"body":{"nativeSrc":"1723:241:36","nodeType":"YulBlock","src":"1723:241:36","statements":[{"body":{"nativeSrc":"1828:22:36","nodeType":"YulBlock","src":"1828:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1830:16:36","nodeType":"YulIdentifier","src":"1830:16:36"},"nativeSrc":"1830:18:36","nodeType":"YulFunctionCall","src":"1830:18:36"},"nativeSrc":"1830:18:36","nodeType":"YulExpressionStatement","src":"1830:18:36"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1800:6:36","nodeType":"YulIdentifier","src":"1800:6:36"},{"kind":"number","nativeSrc":"1808:18:36","nodeType":"YulLiteral","src":"1808:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1797:2:36","nodeType":"YulIdentifier","src":"1797:2:36"},"nativeSrc":"1797:30:36","nodeType":"YulFunctionCall","src":"1797:30:36"},"nativeSrc":"1794:56:36","nodeType":"YulIf","src":"1794:56:36"},{"nativeSrc":"1860:37:36","nodeType":"YulAssignment","src":"1860:37:36","value":{"arguments":[{"name":"length","nativeSrc":"1890:6:36","nodeType":"YulIdentifier","src":"1890:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1868:21:36","nodeType":"YulIdentifier","src":"1868:21:36"},"nativeSrc":"1868:29:36","nodeType":"YulFunctionCall","src":"1868:29:36"},"variableNames":[{"name":"size","nativeSrc":"1860:4:36","nodeType":"YulIdentifier","src":"1860:4:36"}]},{"nativeSrc":"1934:23:36","nodeType":"YulAssignment","src":"1934:23:36","value":{"arguments":[{"name":"size","nativeSrc":"1946:4:36","nodeType":"YulIdentifier","src":"1946:4:36"},{"kind":"number","nativeSrc":"1952:4:36","nodeType":"YulLiteral","src":"1952:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1942:3:36","nodeType":"YulIdentifier","src":"1942:3:36"},"nativeSrc":"1942:15:36","nodeType":"YulFunctionCall","src":"1942:15:36"},"variableNames":[{"name":"size","nativeSrc":"1934:4:36","nodeType":"YulIdentifier","src":"1934:4:36"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1656:308:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1707:6:36","nodeType":"YulTypedName","src":"1707:6:36","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1718:4:36","nodeType":"YulTypedName","src":"1718:4:36","type":""}],"src":"1656:308:36"},{"body":{"nativeSrc":"2032:186:36","nodeType":"YulBlock","src":"2032:186:36","statements":[{"nativeSrc":"2043:10:36","nodeType":"YulVariableDeclaration","src":"2043:10:36","value":{"kind":"number","nativeSrc":"2052:1:36","nodeType":"YulLiteral","src":"2052:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2047:1:36","nodeType":"YulTypedName","src":"2047:1:36","type":""}]},{"body":{"nativeSrc":"2112:63:36","nodeType":"YulBlock","src":"2112:63:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2137:3:36","nodeType":"YulIdentifier","src":"2137:3:36"},{"name":"i","nativeSrc":"2142:1:36","nodeType":"YulIdentifier","src":"2142:1:36"}],"functionName":{"name":"add","nativeSrc":"2133:3:36","nodeType":"YulIdentifier","src":"2133:3:36"},"nativeSrc":"2133:11:36","nodeType":"YulFunctionCall","src":"2133:11:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2156:3:36","nodeType":"YulIdentifier","src":"2156:3:36"},{"name":"i","nativeSrc":"2161:1:36","nodeType":"YulIdentifier","src":"2161:1:36"}],"functionName":{"name":"add","nativeSrc":"2152:3:36","nodeType":"YulIdentifier","src":"2152:3:36"},"nativeSrc":"2152:11:36","nodeType":"YulFunctionCall","src":"2152:11:36"}],"functionName":{"name":"mload","nativeSrc":"2146:5:36","nodeType":"YulIdentifier","src":"2146:5:36"},"nativeSrc":"2146:18:36","nodeType":"YulFunctionCall","src":"2146:18:36"}],"functionName":{"name":"mstore","nativeSrc":"2126:6:36","nodeType":"YulIdentifier","src":"2126:6:36"},"nativeSrc":"2126:39:36","nodeType":"YulFunctionCall","src":"2126:39:36"},"nativeSrc":"2126:39:36","nodeType":"YulExpressionStatement","src":"2126:39:36"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2073:1:36","nodeType":"YulIdentifier","src":"2073:1:36"},{"name":"length","nativeSrc":"2076:6:36","nodeType":"YulIdentifier","src":"2076:6:36"}],"functionName":{"name":"lt","nativeSrc":"2070:2:36","nodeType":"YulIdentifier","src":"2070:2:36"},"nativeSrc":"2070:13:36","nodeType":"YulFunctionCall","src":"2070:13:36"},"nativeSrc":"2062:113:36","nodeType":"YulForLoop","post":{"nativeSrc":"2084:19:36","nodeType":"YulBlock","src":"2084:19:36","statements":[{"nativeSrc":"2086:15:36","nodeType":"YulAssignment","src":"2086:15:36","value":{"arguments":[{"name":"i","nativeSrc":"2095:1:36","nodeType":"YulIdentifier","src":"2095:1:36"},{"kind":"number","nativeSrc":"2098:2:36","nodeType":"YulLiteral","src":"2098:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2091:3:36","nodeType":"YulIdentifier","src":"2091:3:36"},"nativeSrc":"2091:10:36","nodeType":"YulFunctionCall","src":"2091:10:36"},"variableNames":[{"name":"i","nativeSrc":"2086:1:36","nodeType":"YulIdentifier","src":"2086:1:36"}]}]},"pre":{"nativeSrc":"2066:3:36","nodeType":"YulBlock","src":"2066:3:36","statements":[]},"src":"2062:113:36"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2195:3:36","nodeType":"YulIdentifier","src":"2195:3:36"},{"name":"length","nativeSrc":"2200:6:36","nodeType":"YulIdentifier","src":"2200:6:36"}],"functionName":{"name":"add","nativeSrc":"2191:3:36","nodeType":"YulIdentifier","src":"2191:3:36"},"nativeSrc":"2191:16:36","nodeType":"YulFunctionCall","src":"2191:16:36"},{"kind":"number","nativeSrc":"2209:1:36","nodeType":"YulLiteral","src":"2209:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2184:6:36","nodeType":"YulIdentifier","src":"2184:6:36"},"nativeSrc":"2184:27:36","nodeType":"YulFunctionCall","src":"2184:27:36"},"nativeSrc":"2184:27:36","nodeType":"YulExpressionStatement","src":"2184:27:36"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1970:248:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2014:3:36","nodeType":"YulTypedName","src":"2014:3:36","type":""},{"name":"dst","nativeSrc":"2019:3:36","nodeType":"YulTypedName","src":"2019:3:36","type":""},{"name":"length","nativeSrc":"2024:6:36","nodeType":"YulTypedName","src":"2024:6:36","type":""}],"src":"1970:248:36"},{"body":{"nativeSrc":"2319:339:36","nodeType":"YulBlock","src":"2319:339:36","statements":[{"nativeSrc":"2329:75:36","nodeType":"YulAssignment","src":"2329:75:36","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2396:6:36","nodeType":"YulIdentifier","src":"2396:6:36"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2354:41:36","nodeType":"YulIdentifier","src":"2354:41:36"},"nativeSrc":"2354:49:36","nodeType":"YulFunctionCall","src":"2354:49:36"}],"functionName":{"name":"allocate_memory","nativeSrc":"2338:15:36","nodeType":"YulIdentifier","src":"2338:15:36"},"nativeSrc":"2338:66:36","nodeType":"YulFunctionCall","src":"2338:66:36"},"variableNames":[{"name":"array","nativeSrc":"2329:5:36","nodeType":"YulIdentifier","src":"2329:5:36"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2420:5:36","nodeType":"YulIdentifier","src":"2420:5:36"},{"name":"length","nativeSrc":"2427:6:36","nodeType":"YulIdentifier","src":"2427:6:36"}],"functionName":{"name":"mstore","nativeSrc":"2413:6:36","nodeType":"YulIdentifier","src":"2413:6:36"},"nativeSrc":"2413:21:36","nodeType":"YulFunctionCall","src":"2413:21:36"},"nativeSrc":"2413:21:36","nodeType":"YulExpressionStatement","src":"2413:21:36"},{"nativeSrc":"2443:27:36","nodeType":"YulVariableDeclaration","src":"2443:27:36","value":{"arguments":[{"name":"array","nativeSrc":"2458:5:36","nodeType":"YulIdentifier","src":"2458:5:36"},{"kind":"number","nativeSrc":"2465:4:36","nodeType":"YulLiteral","src":"2465:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2454:3:36","nodeType":"YulIdentifier","src":"2454:3:36"},"nativeSrc":"2454:16:36","nodeType":"YulFunctionCall","src":"2454:16:36"},"variables":[{"name":"dst","nativeSrc":"2447:3:36","nodeType":"YulTypedName","src":"2447:3:36","type":""}]},{"body":{"nativeSrc":"2508:83:36","nodeType":"YulBlock","src":"2508:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2510:77:36","nodeType":"YulIdentifier","src":"2510:77:36"},"nativeSrc":"2510:79:36","nodeType":"YulFunctionCall","src":"2510:79:36"},"nativeSrc":"2510:79:36","nodeType":"YulExpressionStatement","src":"2510:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2489:3:36","nodeType":"YulIdentifier","src":"2489:3:36"},{"name":"length","nativeSrc":"2494:6:36","nodeType":"YulIdentifier","src":"2494:6:36"}],"functionName":{"name":"add","nativeSrc":"2485:3:36","nodeType":"YulIdentifier","src":"2485:3:36"},"nativeSrc":"2485:16:36","nodeType":"YulFunctionCall","src":"2485:16:36"},{"name":"end","nativeSrc":"2503:3:36","nodeType":"YulIdentifier","src":"2503:3:36"}],"functionName":{"name":"gt","nativeSrc":"2482:2:36","nodeType":"YulIdentifier","src":"2482:2:36"},"nativeSrc":"2482:25:36","nodeType":"YulFunctionCall","src":"2482:25:36"},"nativeSrc":"2479:112:36","nodeType":"YulIf","src":"2479:112:36"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2635:3:36","nodeType":"YulIdentifier","src":"2635:3:36"},{"name":"dst","nativeSrc":"2640:3:36","nodeType":"YulIdentifier","src":"2640:3:36"},{"name":"length","nativeSrc":"2645:6:36","nodeType":"YulIdentifier","src":"2645:6:36"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2600:34:36","nodeType":"YulIdentifier","src":"2600:34:36"},"nativeSrc":"2600:52:36","nodeType":"YulFunctionCall","src":"2600:52:36"},"nativeSrc":"2600:52:36","nodeType":"YulExpressionStatement","src":"2600:52:36"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2224:434:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2292:3:36","nodeType":"YulTypedName","src":"2292:3:36","type":""},{"name":"length","nativeSrc":"2297:6:36","nodeType":"YulTypedName","src":"2297:6:36","type":""},{"name":"end","nativeSrc":"2305:3:36","nodeType":"YulTypedName","src":"2305:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2313:5:36","nodeType":"YulTypedName","src":"2313:5:36","type":""}],"src":"2224:434:36"},{"body":{"nativeSrc":"2751:282:36","nodeType":"YulBlock","src":"2751:282:36","statements":[{"body":{"nativeSrc":"2800:83:36","nodeType":"YulBlock","src":"2800:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2802:77:36","nodeType":"YulIdentifier","src":"2802:77:36"},"nativeSrc":"2802:79:36","nodeType":"YulFunctionCall","src":"2802:79:36"},"nativeSrc":"2802:79:36","nodeType":"YulExpressionStatement","src":"2802:79:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2779:6:36","nodeType":"YulIdentifier","src":"2779:6:36"},{"kind":"number","nativeSrc":"2787:4:36","nodeType":"YulLiteral","src":"2787:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2775:3:36","nodeType":"YulIdentifier","src":"2775:3:36"},"nativeSrc":"2775:17:36","nodeType":"YulFunctionCall","src":"2775:17:36"},{"name":"end","nativeSrc":"2794:3:36","nodeType":"YulIdentifier","src":"2794:3:36"}],"functionName":{"name":"slt","nativeSrc":"2771:3:36","nodeType":"YulIdentifier","src":"2771:3:36"},"nativeSrc":"2771:27:36","nodeType":"YulFunctionCall","src":"2771:27:36"}],"functionName":{"name":"iszero","nativeSrc":"2764:6:36","nodeType":"YulIdentifier","src":"2764:6:36"},"nativeSrc":"2764:35:36","nodeType":"YulFunctionCall","src":"2764:35:36"},"nativeSrc":"2761:122:36","nodeType":"YulIf","src":"2761:122:36"},{"nativeSrc":"2892:27:36","nodeType":"YulVariableDeclaration","src":"2892:27:36","value":{"arguments":[{"name":"offset","nativeSrc":"2912:6:36","nodeType":"YulIdentifier","src":"2912:6:36"}],"functionName":{"name":"mload","nativeSrc":"2906:5:36","nodeType":"YulIdentifier","src":"2906:5:36"},"nativeSrc":"2906:13:36","nodeType":"YulFunctionCall","src":"2906:13:36"},"variables":[{"name":"length","nativeSrc":"2896:6:36","nodeType":"YulTypedName","src":"2896:6:36","type":""}]},{"nativeSrc":"2928:99:36","nodeType":"YulAssignment","src":"2928:99:36","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3000:6:36","nodeType":"YulIdentifier","src":"3000:6:36"},{"kind":"number","nativeSrc":"3008:4:36","nodeType":"YulLiteral","src":"3008:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2996:3:36","nodeType":"YulIdentifier","src":"2996:3:36"},"nativeSrc":"2996:17:36","nodeType":"YulFunctionCall","src":"2996:17:36"},{"name":"length","nativeSrc":"3015:6:36","nodeType":"YulIdentifier","src":"3015:6:36"},{"name":"end","nativeSrc":"3023:3:36","nodeType":"YulIdentifier","src":"3023:3:36"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2937:58:36","nodeType":"YulIdentifier","src":"2937:58:36"},"nativeSrc":"2937:90:36","nodeType":"YulFunctionCall","src":"2937:90:36"},"variableNames":[{"name":"array","nativeSrc":"2928:5:36","nodeType":"YulIdentifier","src":"2928:5:36"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2678:355:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2729:6:36","nodeType":"YulTypedName","src":"2729:6:36","type":""},{"name":"end","nativeSrc":"2737:3:36","nodeType":"YulTypedName","src":"2737:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2745:5:36","nodeType":"YulTypedName","src":"2745:5:36","type":""}],"src":"2678:355:36"},{"body":{"nativeSrc":"3084:81:36","nodeType":"YulBlock","src":"3084:81:36","statements":[{"nativeSrc":"3094:65:36","nodeType":"YulAssignment","src":"3094:65:36","value":{"arguments":[{"name":"value","nativeSrc":"3109:5:36","nodeType":"YulIdentifier","src":"3109:5:36"},{"kind":"number","nativeSrc":"3116:42:36","nodeType":"YulLiteral","src":"3116:42:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3105:3:36","nodeType":"YulIdentifier","src":"3105:3:36"},"nativeSrc":"3105:54:36","nodeType":"YulFunctionCall","src":"3105:54:36"},"variableNames":[{"name":"cleaned","nativeSrc":"3094:7:36","nodeType":"YulIdentifier","src":"3094:7:36"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3039:126:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3066:5:36","nodeType":"YulTypedName","src":"3066:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3076:7:36","nodeType":"YulTypedName","src":"3076:7:36","type":""}],"src":"3039:126:36"},{"body":{"nativeSrc":"3216:51:36","nodeType":"YulBlock","src":"3216:51:36","statements":[{"nativeSrc":"3226:35:36","nodeType":"YulAssignment","src":"3226:35:36","value":{"arguments":[{"name":"value","nativeSrc":"3255:5:36","nodeType":"YulIdentifier","src":"3255:5:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3237:17:36","nodeType":"YulIdentifier","src":"3237:17:36"},"nativeSrc":"3237:24:36","nodeType":"YulFunctionCall","src":"3237:24:36"},"variableNames":[{"name":"cleaned","nativeSrc":"3226:7:36","nodeType":"YulIdentifier","src":"3226:7:36"}]}]},"name":"cleanup_t_address","nativeSrc":"3171:96:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3198:5:36","nodeType":"YulTypedName","src":"3198:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3208:7:36","nodeType":"YulTypedName","src":"3208:7:36","type":""}],"src":"3171:96:36"},{"body":{"nativeSrc":"3316:79:36","nodeType":"YulBlock","src":"3316:79:36","statements":[{"body":{"nativeSrc":"3373:16:36","nodeType":"YulBlock","src":"3373:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3382:1:36","nodeType":"YulLiteral","src":"3382:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3385:1:36","nodeType":"YulLiteral","src":"3385:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3375:6:36","nodeType":"YulIdentifier","src":"3375:6:36"},"nativeSrc":"3375:12:36","nodeType":"YulFunctionCall","src":"3375:12:36"},"nativeSrc":"3375:12:36","nodeType":"YulExpressionStatement","src":"3375:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3339:5:36","nodeType":"YulIdentifier","src":"3339:5:36"},{"arguments":[{"name":"value","nativeSrc":"3364:5:36","nodeType":"YulIdentifier","src":"3364:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3346:17:36","nodeType":"YulIdentifier","src":"3346:17:36"},"nativeSrc":"3346:24:36","nodeType":"YulFunctionCall","src":"3346:24:36"}],"functionName":{"name":"eq","nativeSrc":"3336:2:36","nodeType":"YulIdentifier","src":"3336:2:36"},"nativeSrc":"3336:35:36","nodeType":"YulFunctionCall","src":"3336:35:36"}],"functionName":{"name":"iszero","nativeSrc":"3329:6:36","nodeType":"YulIdentifier","src":"3329:6:36"},"nativeSrc":"3329:43:36","nodeType":"YulFunctionCall","src":"3329:43:36"},"nativeSrc":"3326:63:36","nodeType":"YulIf","src":"3326:63:36"}]},"name":"validator_revert_t_address","nativeSrc":"3273:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3309:5:36","nodeType":"YulTypedName","src":"3309:5:36","type":""}],"src":"3273:122:36"},{"body":{"nativeSrc":"3464:80:36","nodeType":"YulBlock","src":"3464:80:36","statements":[{"nativeSrc":"3474:22:36","nodeType":"YulAssignment","src":"3474:22:36","value":{"arguments":[{"name":"offset","nativeSrc":"3489:6:36","nodeType":"YulIdentifier","src":"3489:6:36"}],"functionName":{"name":"mload","nativeSrc":"3483:5:36","nodeType":"YulIdentifier","src":"3483:5:36"},"nativeSrc":"3483:13:36","nodeType":"YulFunctionCall","src":"3483:13:36"},"variableNames":[{"name":"value","nativeSrc":"3474:5:36","nodeType":"YulIdentifier","src":"3474:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3532:5:36","nodeType":"YulIdentifier","src":"3532:5:36"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3505:26:36","nodeType":"YulIdentifier","src":"3505:26:36"},"nativeSrc":"3505:33:36","nodeType":"YulFunctionCall","src":"3505:33:36"},"nativeSrc":"3505:33:36","nodeType":"YulExpressionStatement","src":"3505:33:36"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"3401:143:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3442:6:36","nodeType":"YulTypedName","src":"3442:6:36","type":""},{"name":"end","nativeSrc":"3450:3:36","nodeType":"YulTypedName","src":"3450:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3458:5:36","nodeType":"YulTypedName","src":"3458:5:36","type":""}],"src":"3401:143:36"},{"body":{"nativeSrc":"3715:1158:36","nodeType":"YulBlock","src":"3715:1158:36","statements":[{"body":{"nativeSrc":"3762:83:36","nodeType":"YulBlock","src":"3762:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3764:77:36","nodeType":"YulIdentifier","src":"3764:77:36"},"nativeSrc":"3764:79:36","nodeType":"YulFunctionCall","src":"3764:79:36"},"nativeSrc":"3764:79:36","nodeType":"YulExpressionStatement","src":"3764:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3736:7:36","nodeType":"YulIdentifier","src":"3736:7:36"},{"name":"headStart","nativeSrc":"3745:9:36","nodeType":"YulIdentifier","src":"3745:9:36"}],"functionName":{"name":"sub","nativeSrc":"3732:3:36","nodeType":"YulIdentifier","src":"3732:3:36"},"nativeSrc":"3732:23:36","nodeType":"YulFunctionCall","src":"3732:23:36"},{"kind":"number","nativeSrc":"3757:3:36","nodeType":"YulLiteral","src":"3757:3:36","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"3728:3:36","nodeType":"YulIdentifier","src":"3728:3:36"},"nativeSrc":"3728:33:36","nodeType":"YulFunctionCall","src":"3728:33:36"},"nativeSrc":"3725:120:36","nodeType":"YulIf","src":"3725:120:36"},{"nativeSrc":"3855:128:36","nodeType":"YulBlock","src":"3855:128:36","statements":[{"nativeSrc":"3870:15:36","nodeType":"YulVariableDeclaration","src":"3870:15:36","value":{"kind":"number","nativeSrc":"3884:1:36","nodeType":"YulLiteral","src":"3884:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3874:6:36","nodeType":"YulTypedName","src":"3874:6:36","type":""}]},{"nativeSrc":"3899:74:36","nodeType":"YulAssignment","src":"3899:74:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3945:9:36","nodeType":"YulIdentifier","src":"3945:9:36"},{"name":"offset","nativeSrc":"3956:6:36","nodeType":"YulIdentifier","src":"3956:6:36"}],"functionName":{"name":"add","nativeSrc":"3941:3:36","nodeType":"YulIdentifier","src":"3941:3:36"},"nativeSrc":"3941:22:36","nodeType":"YulFunctionCall","src":"3941:22:36"},{"name":"dataEnd","nativeSrc":"3965:7:36","nodeType":"YulIdentifier","src":"3965:7:36"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3909:31:36","nodeType":"YulIdentifier","src":"3909:31:36"},"nativeSrc":"3909:64:36","nodeType":"YulFunctionCall","src":"3909:64:36"},"variableNames":[{"name":"value0","nativeSrc":"3899:6:36","nodeType":"YulIdentifier","src":"3899:6:36"}]}]},{"nativeSrc":"3993:292:36","nodeType":"YulBlock","src":"3993:292:36","statements":[{"nativeSrc":"4008:39:36","nodeType":"YulVariableDeclaration","src":"4008:39:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4032:9:36","nodeType":"YulIdentifier","src":"4032:9:36"},{"kind":"number","nativeSrc":"4043:2:36","nodeType":"YulLiteral","src":"4043:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4028:3:36","nodeType":"YulIdentifier","src":"4028:3:36"},"nativeSrc":"4028:18:36","nodeType":"YulFunctionCall","src":"4028:18:36"}],"functionName":{"name":"mload","nativeSrc":"4022:5:36","nodeType":"YulIdentifier","src":"4022:5:36"},"nativeSrc":"4022:25:36","nodeType":"YulFunctionCall","src":"4022:25:36"},"variables":[{"name":"offset","nativeSrc":"4012:6:36","nodeType":"YulTypedName","src":"4012:6:36","type":""}]},{"body":{"nativeSrc":"4094:83:36","nodeType":"YulBlock","src":"4094:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4096:77:36","nodeType":"YulIdentifier","src":"4096:77:36"},"nativeSrc":"4096:79:36","nodeType":"YulFunctionCall","src":"4096:79:36"},"nativeSrc":"4096:79:36","nodeType":"YulExpressionStatement","src":"4096:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4066:6:36","nodeType":"YulIdentifier","src":"4066:6:36"},{"kind":"number","nativeSrc":"4074:18:36","nodeType":"YulLiteral","src":"4074:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4063:2:36","nodeType":"YulIdentifier","src":"4063:2:36"},"nativeSrc":"4063:30:36","nodeType":"YulFunctionCall","src":"4063:30:36"},"nativeSrc":"4060:117:36","nodeType":"YulIf","src":"4060:117:36"},{"nativeSrc":"4191:84:36","nodeType":"YulAssignment","src":"4191:84:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4247:9:36","nodeType":"YulIdentifier","src":"4247:9:36"},{"name":"offset","nativeSrc":"4258:6:36","nodeType":"YulIdentifier","src":"4258:6:36"}],"functionName":{"name":"add","nativeSrc":"4243:3:36","nodeType":"YulIdentifier","src":"4243:3:36"},"nativeSrc":"4243:22:36","nodeType":"YulFunctionCall","src":"4243:22:36"},{"name":"dataEnd","nativeSrc":"4267:7:36","nodeType":"YulIdentifier","src":"4267:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4201:41:36","nodeType":"YulIdentifier","src":"4201:41:36"},"nativeSrc":"4201:74:36","nodeType":"YulFunctionCall","src":"4201:74:36"},"variableNames":[{"name":"value1","nativeSrc":"4191:6:36","nodeType":"YulIdentifier","src":"4191:6:36"}]}]},{"nativeSrc":"4295:292:36","nodeType":"YulBlock","src":"4295:292:36","statements":[{"nativeSrc":"4310:39:36","nodeType":"YulVariableDeclaration","src":"4310:39:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4334:9:36","nodeType":"YulIdentifier","src":"4334:9:36"},{"kind":"number","nativeSrc":"4345:2:36","nodeType":"YulLiteral","src":"4345:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4330:3:36","nodeType":"YulIdentifier","src":"4330:3:36"},"nativeSrc":"4330:18:36","nodeType":"YulFunctionCall","src":"4330:18:36"}],"functionName":{"name":"mload","nativeSrc":"4324:5:36","nodeType":"YulIdentifier","src":"4324:5:36"},"nativeSrc":"4324:25:36","nodeType":"YulFunctionCall","src":"4324:25:36"},"variables":[{"name":"offset","nativeSrc":"4314:6:36","nodeType":"YulTypedName","src":"4314:6:36","type":""}]},{"body":{"nativeSrc":"4396:83:36","nodeType":"YulBlock","src":"4396:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4398:77:36","nodeType":"YulIdentifier","src":"4398:77:36"},"nativeSrc":"4398:79:36","nodeType":"YulFunctionCall","src":"4398:79:36"},"nativeSrc":"4398:79:36","nodeType":"YulExpressionStatement","src":"4398:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4368:6:36","nodeType":"YulIdentifier","src":"4368:6:36"},{"kind":"number","nativeSrc":"4376:18:36","nodeType":"YulLiteral","src":"4376:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4365:2:36","nodeType":"YulIdentifier","src":"4365:2:36"},"nativeSrc":"4365:30:36","nodeType":"YulFunctionCall","src":"4365:30:36"},"nativeSrc":"4362:117:36","nodeType":"YulIf","src":"4362:117:36"},{"nativeSrc":"4493:84:36","nodeType":"YulAssignment","src":"4493:84:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4549:9:36","nodeType":"YulIdentifier","src":"4549:9:36"},{"name":"offset","nativeSrc":"4560:6:36","nodeType":"YulIdentifier","src":"4560:6:36"}],"functionName":{"name":"add","nativeSrc":"4545:3:36","nodeType":"YulIdentifier","src":"4545:3:36"},"nativeSrc":"4545:22:36","nodeType":"YulFunctionCall","src":"4545:22:36"},{"name":"dataEnd","nativeSrc":"4569:7:36","nodeType":"YulIdentifier","src":"4569:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4503:41:36","nodeType":"YulIdentifier","src":"4503:41:36"},"nativeSrc":"4503:74:36","nodeType":"YulFunctionCall","src":"4503:74:36"},"variableNames":[{"name":"value2","nativeSrc":"4493:6:36","nodeType":"YulIdentifier","src":"4493:6:36"}]}]},{"nativeSrc":"4597:129:36","nodeType":"YulBlock","src":"4597:129:36","statements":[{"nativeSrc":"4612:16:36","nodeType":"YulVariableDeclaration","src":"4612:16:36","value":{"kind":"number","nativeSrc":"4626:2:36","nodeType":"YulLiteral","src":"4626:2:36","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"4616:6:36","nodeType":"YulTypedName","src":"4616:6:36","type":""}]},{"nativeSrc":"4642:74:36","nodeType":"YulAssignment","src":"4642:74:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4688:9:36","nodeType":"YulIdentifier","src":"4688:9:36"},{"name":"offset","nativeSrc":"4699:6:36","nodeType":"YulIdentifier","src":"4699:6:36"}],"functionName":{"name":"add","nativeSrc":"4684:3:36","nodeType":"YulIdentifier","src":"4684:3:36"},"nativeSrc":"4684:22:36","nodeType":"YulFunctionCall","src":"4684:22:36"},{"name":"dataEnd","nativeSrc":"4708:7:36","nodeType":"YulIdentifier","src":"4708:7:36"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"4652:31:36","nodeType":"YulIdentifier","src":"4652:31:36"},"nativeSrc":"4652:64:36","nodeType":"YulFunctionCall","src":"4652:64:36"},"variableNames":[{"name":"value3","nativeSrc":"4642:6:36","nodeType":"YulIdentifier","src":"4642:6:36"}]}]},{"nativeSrc":"4736:130:36","nodeType":"YulBlock","src":"4736:130:36","statements":[{"nativeSrc":"4751:17:36","nodeType":"YulVariableDeclaration","src":"4751:17:36","value":{"kind":"number","nativeSrc":"4765:3:36","nodeType":"YulLiteral","src":"4765:3:36","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"4755:6:36","nodeType":"YulTypedName","src":"4755:6:36","type":""}]},{"nativeSrc":"4782:74:36","nodeType":"YulAssignment","src":"4782:74:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4828:9:36","nodeType":"YulIdentifier","src":"4828:9:36"},{"name":"offset","nativeSrc":"4839:6:36","nodeType":"YulIdentifier","src":"4839:6:36"}],"functionName":{"name":"add","nativeSrc":"4824:3:36","nodeType":"YulIdentifier","src":"4824:3:36"},"nativeSrc":"4824:22:36","nodeType":"YulFunctionCall","src":"4824:22:36"},{"name":"dataEnd","nativeSrc":"4848:7:36","nodeType":"YulIdentifier","src":"4848:7:36"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4792:31:36","nodeType":"YulIdentifier","src":"4792:31:36"},"nativeSrc":"4792:64:36","nodeType":"YulFunctionCall","src":"4792:64:36"},"variableNames":[{"name":"value4","nativeSrc":"4782:6:36","nodeType":"YulIdentifier","src":"4782:6:36"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory","nativeSrc":"3550:1323:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3653:9:36","nodeType":"YulTypedName","src":"3653:9:36","type":""},{"name":"dataEnd","nativeSrc":"3664:7:36","nodeType":"YulTypedName","src":"3664:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3676:6:36","nodeType":"YulTypedName","src":"3676:6:36","type":""},{"name":"value1","nativeSrc":"3684:6:36","nodeType":"YulTypedName","src":"3684:6:36","type":""},{"name":"value2","nativeSrc":"3692:6:36","nodeType":"YulTypedName","src":"3692:6:36","type":""},{"name":"value3","nativeSrc":"3700:6:36","nodeType":"YulTypedName","src":"3700:6:36","type":""},{"name":"value4","nativeSrc":"3708:6:36","nodeType":"YulTypedName","src":"3708:6:36","type":""}],"src":"3550:1323:36"},{"body":{"nativeSrc":"4938:40:36","nodeType":"YulBlock","src":"4938:40:36","statements":[{"nativeSrc":"4949:22:36","nodeType":"YulAssignment","src":"4949:22:36","value":{"arguments":[{"name":"value","nativeSrc":"4965:5:36","nodeType":"YulIdentifier","src":"4965:5:36"}],"functionName":{"name":"mload","nativeSrc":"4959:5:36","nodeType":"YulIdentifier","src":"4959:5:36"},"nativeSrc":"4959:12:36","nodeType":"YulFunctionCall","src":"4959:12:36"},"variableNames":[{"name":"length","nativeSrc":"4949:6:36","nodeType":"YulIdentifier","src":"4949:6:36"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4879:99:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4921:5:36","nodeType":"YulTypedName","src":"4921:5:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4931:6:36","nodeType":"YulTypedName","src":"4931:6:36","type":""}],"src":"4879:99:36"},{"body":{"nativeSrc":"5012:152:36","nodeType":"YulBlock","src":"5012:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5029:1:36","nodeType":"YulLiteral","src":"5029:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5032:77:36","nodeType":"YulLiteral","src":"5032:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5022:6:36","nodeType":"YulIdentifier","src":"5022:6:36"},"nativeSrc":"5022:88:36","nodeType":"YulFunctionCall","src":"5022:88:36"},"nativeSrc":"5022:88:36","nodeType":"YulExpressionStatement","src":"5022:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5126:1:36","nodeType":"YulLiteral","src":"5126:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"5129:4:36","nodeType":"YulLiteral","src":"5129:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5119:6:36","nodeType":"YulIdentifier","src":"5119:6:36"},"nativeSrc":"5119:15:36","nodeType":"YulFunctionCall","src":"5119:15:36"},"nativeSrc":"5119:15:36","nodeType":"YulExpressionStatement","src":"5119:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5150:1:36","nodeType":"YulLiteral","src":"5150:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5153:4:36","nodeType":"YulLiteral","src":"5153:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5143:6:36","nodeType":"YulIdentifier","src":"5143:6:36"},"nativeSrc":"5143:15:36","nodeType":"YulFunctionCall","src":"5143:15:36"},"nativeSrc":"5143:15:36","nodeType":"YulExpressionStatement","src":"5143:15:36"}]},"name":"panic_error_0x22","nativeSrc":"4984:180:36","nodeType":"YulFunctionDefinition","src":"4984:180:36"},{"body":{"nativeSrc":"5221:269:36","nodeType":"YulBlock","src":"5221:269:36","statements":[{"nativeSrc":"5231:22:36","nodeType":"YulAssignment","src":"5231:22:36","value":{"arguments":[{"name":"data","nativeSrc":"5245:4:36","nodeType":"YulIdentifier","src":"5245:4:36"},{"kind":"number","nativeSrc":"5251:1:36","nodeType":"YulLiteral","src":"5251:1:36","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5241:3:36","nodeType":"YulIdentifier","src":"5241:3:36"},"nativeSrc":"5241:12:36","nodeType":"YulFunctionCall","src":"5241:12:36"},"variableNames":[{"name":"length","nativeSrc":"5231:6:36","nodeType":"YulIdentifier","src":"5231:6:36"}]},{"nativeSrc":"5262:38:36","nodeType":"YulVariableDeclaration","src":"5262:38:36","value":{"arguments":[{"name":"data","nativeSrc":"5292:4:36","nodeType":"YulIdentifier","src":"5292:4:36"},{"kind":"number","nativeSrc":"5298:1:36","nodeType":"YulLiteral","src":"5298:1:36","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5288:3:36","nodeType":"YulIdentifier","src":"5288:3:36"},"nativeSrc":"5288:12:36","nodeType":"YulFunctionCall","src":"5288:12:36"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5266:18:36","nodeType":"YulTypedName","src":"5266:18:36","type":""}]},{"body":{"nativeSrc":"5339:51:36","nodeType":"YulBlock","src":"5339:51:36","statements":[{"nativeSrc":"5353:27:36","nodeType":"YulAssignment","src":"5353:27:36","value":{"arguments":[{"name":"length","nativeSrc":"5367:6:36","nodeType":"YulIdentifier","src":"5367:6:36"},{"kind":"number","nativeSrc":"5375:4:36","nodeType":"YulLiteral","src":"5375:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5363:3:36","nodeType":"YulIdentifier","src":"5363:3:36"},"nativeSrc":"5363:17:36","nodeType":"YulFunctionCall","src":"5363:17:36"},"variableNames":[{"name":"length","nativeSrc":"5353:6:36","nodeType":"YulIdentifier","src":"5353:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5319:18:36","nodeType":"YulIdentifier","src":"5319:18:36"}],"functionName":{"name":"iszero","nativeSrc":"5312:6:36","nodeType":"YulIdentifier","src":"5312:6:36"},"nativeSrc":"5312:26:36","nodeType":"YulFunctionCall","src":"5312:26:36"},"nativeSrc":"5309:81:36","nodeType":"YulIf","src":"5309:81:36"},{"body":{"nativeSrc":"5442:42:36","nodeType":"YulBlock","src":"5442:42:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"5456:16:36","nodeType":"YulIdentifier","src":"5456:16:36"},"nativeSrc":"5456:18:36","nodeType":"YulFunctionCall","src":"5456:18:36"},"nativeSrc":"5456:18:36","nodeType":"YulExpressionStatement","src":"5456:18:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5406:18:36","nodeType":"YulIdentifier","src":"5406:18:36"},{"arguments":[{"name":"length","nativeSrc":"5429:6:36","nodeType":"YulIdentifier","src":"5429:6:36"},{"kind":"number","nativeSrc":"5437:2:36","nodeType":"YulLiteral","src":"5437:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5426:2:36","nodeType":"YulIdentifier","src":"5426:2:36"},"nativeSrc":"5426:14:36","nodeType":"YulFunctionCall","src":"5426:14:36"}],"functionName":{"name":"eq","nativeSrc":"5403:2:36","nodeType":"YulIdentifier","src":"5403:2:36"},"nativeSrc":"5403:38:36","nodeType":"YulFunctionCall","src":"5403:38:36"},"nativeSrc":"5400:84:36","nodeType":"YulIf","src":"5400:84:36"}]},"name":"extract_byte_array_length","nativeSrc":"5170:320:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5205:4:36","nodeType":"YulTypedName","src":"5205:4:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5214:6:36","nodeType":"YulTypedName","src":"5214:6:36","type":""}],"src":"5170:320:36"},{"body":{"nativeSrc":"5550:87:36","nodeType":"YulBlock","src":"5550:87:36","statements":[{"nativeSrc":"5560:11:36","nodeType":"YulAssignment","src":"5560:11:36","value":{"name":"ptr","nativeSrc":"5568:3:36","nodeType":"YulIdentifier","src":"5568:3:36"},"variableNames":[{"name":"data","nativeSrc":"5560:4:36","nodeType":"YulIdentifier","src":"5560:4:36"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5588:1:36","nodeType":"YulLiteral","src":"5588:1:36","type":"","value":"0"},{"name":"ptr","nativeSrc":"5591:3:36","nodeType":"YulIdentifier","src":"5591:3:36"}],"functionName":{"name":"mstore","nativeSrc":"5581:6:36","nodeType":"YulIdentifier","src":"5581:6:36"},"nativeSrc":"5581:14:36","nodeType":"YulFunctionCall","src":"5581:14:36"},"nativeSrc":"5581:14:36","nodeType":"YulExpressionStatement","src":"5581:14:36"},{"nativeSrc":"5604:26:36","nodeType":"YulAssignment","src":"5604:26:36","value":{"arguments":[{"kind":"number","nativeSrc":"5622:1:36","nodeType":"YulLiteral","src":"5622:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5625:4:36","nodeType":"YulLiteral","src":"5625:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"5612:9:36","nodeType":"YulIdentifier","src":"5612:9:36"},"nativeSrc":"5612:18:36","nodeType":"YulFunctionCall","src":"5612:18:36"},"variableNames":[{"name":"data","nativeSrc":"5604:4:36","nodeType":"YulIdentifier","src":"5604:4:36"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"5496:141:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"5537:3:36","nodeType":"YulTypedName","src":"5537:3:36","type":""}],"returnVariables":[{"name":"data","nativeSrc":"5545:4:36","nodeType":"YulTypedName","src":"5545:4:36","type":""}],"src":"5496:141:36"},{"body":{"nativeSrc":"5687:49:36","nodeType":"YulBlock","src":"5687:49:36","statements":[{"nativeSrc":"5697:33:36","nodeType":"YulAssignment","src":"5697:33:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5715:5:36","nodeType":"YulIdentifier","src":"5715:5:36"},{"kind":"number","nativeSrc":"5722:2:36","nodeType":"YulLiteral","src":"5722:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5711:3:36","nodeType":"YulIdentifier","src":"5711:3:36"},"nativeSrc":"5711:14:36","nodeType":"YulFunctionCall","src":"5711:14:36"},{"kind":"number","nativeSrc":"5727:2:36","nodeType":"YulLiteral","src":"5727:2:36","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"5707:3:36","nodeType":"YulIdentifier","src":"5707:3:36"},"nativeSrc":"5707:23:36","nodeType":"YulFunctionCall","src":"5707:23:36"},"variableNames":[{"name":"result","nativeSrc":"5697:6:36","nodeType":"YulIdentifier","src":"5697:6:36"}]}]},"name":"divide_by_32_ceil","nativeSrc":"5643:93:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5670:5:36","nodeType":"YulTypedName","src":"5670:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5680:6:36","nodeType":"YulTypedName","src":"5680:6:36","type":""}],"src":"5643:93:36"},{"body":{"nativeSrc":"5795:54:36","nodeType":"YulBlock","src":"5795:54:36","statements":[{"nativeSrc":"5805:37:36","nodeType":"YulAssignment","src":"5805:37:36","value":{"arguments":[{"name":"bits","nativeSrc":"5830:4:36","nodeType":"YulIdentifier","src":"5830:4:36"},{"name":"value","nativeSrc":"5836:5:36","nodeType":"YulIdentifier","src":"5836:5:36"}],"functionName":{"name":"shl","nativeSrc":"5826:3:36","nodeType":"YulIdentifier","src":"5826:3:36"},"nativeSrc":"5826:16:36","nodeType":"YulFunctionCall","src":"5826:16:36"},"variableNames":[{"name":"newValue","nativeSrc":"5805:8:36","nodeType":"YulIdentifier","src":"5805:8:36"}]}]},"name":"shift_left_dynamic","nativeSrc":"5742:107:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"5770:4:36","nodeType":"YulTypedName","src":"5770:4:36","type":""},{"name":"value","nativeSrc":"5776:5:36","nodeType":"YulTypedName","src":"5776:5:36","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"5786:8:36","nodeType":"YulTypedName","src":"5786:8:36","type":""}],"src":"5742:107:36"},{"body":{"nativeSrc":"5931:317:36","nodeType":"YulBlock","src":"5931:317:36","statements":[{"nativeSrc":"5941:35:36","nodeType":"YulVariableDeclaration","src":"5941:35:36","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"5962:10:36","nodeType":"YulIdentifier","src":"5962:10:36"},{"kind":"number","nativeSrc":"5974:1:36","nodeType":"YulLiteral","src":"5974:1:36","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"5958:3:36","nodeType":"YulIdentifier","src":"5958:3:36"},"nativeSrc":"5958:18:36","nodeType":"YulFunctionCall","src":"5958:18:36"},"variables":[{"name":"shiftBits","nativeSrc":"5945:9:36","nodeType":"YulTypedName","src":"5945:9:36","type":""}]},{"nativeSrc":"5985:109:36","nodeType":"YulVariableDeclaration","src":"5985:109:36","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6016:9:36","nodeType":"YulIdentifier","src":"6016:9:36"},{"kind":"number","nativeSrc":"6027:66:36","nodeType":"YulLiteral","src":"6027:66:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5997:18:36","nodeType":"YulIdentifier","src":"5997:18:36"},"nativeSrc":"5997:97:36","nodeType":"YulFunctionCall","src":"5997:97:36"},"variables":[{"name":"mask","nativeSrc":"5989:4:36","nodeType":"YulTypedName","src":"5989:4:36","type":""}]},{"nativeSrc":"6103:51:36","nodeType":"YulAssignment","src":"6103:51:36","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6134:9:36","nodeType":"YulIdentifier","src":"6134:9:36"},{"name":"toInsert","nativeSrc":"6145:8:36","nodeType":"YulIdentifier","src":"6145:8:36"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"6115:18:36","nodeType":"YulIdentifier","src":"6115:18:36"},"nativeSrc":"6115:39:36","nodeType":"YulFunctionCall","src":"6115:39:36"},"variableNames":[{"name":"toInsert","nativeSrc":"6103:8:36","nodeType":"YulIdentifier","src":"6103:8:36"}]},{"nativeSrc":"6163:30:36","nodeType":"YulAssignment","src":"6163:30:36","value":{"arguments":[{"name":"value","nativeSrc":"6176:5:36","nodeType":"YulIdentifier","src":"6176:5:36"},{"arguments":[{"name":"mask","nativeSrc":"6187:4:36","nodeType":"YulIdentifier","src":"6187:4:36"}],"functionName":{"name":"not","nativeSrc":"6183:3:36","nodeType":"YulIdentifier","src":"6183:3:36"},"nativeSrc":"6183:9:36","nodeType":"YulFunctionCall","src":"6183:9:36"}],"functionName":{"name":"and","nativeSrc":"6172:3:36","nodeType":"YulIdentifier","src":"6172:3:36"},"nativeSrc":"6172:21:36","nodeType":"YulFunctionCall","src":"6172:21:36"},"variableNames":[{"name":"value","nativeSrc":"6163:5:36","nodeType":"YulIdentifier","src":"6163:5:36"}]},{"nativeSrc":"6202:40:36","nodeType":"YulAssignment","src":"6202:40:36","value":{"arguments":[{"name":"value","nativeSrc":"6215:5:36","nodeType":"YulIdentifier","src":"6215:5:36"},{"arguments":[{"name":"toInsert","nativeSrc":"6226:8:36","nodeType":"YulIdentifier","src":"6226:8:36"},{"name":"mask","nativeSrc":"6236:4:36","nodeType":"YulIdentifier","src":"6236:4:36"}],"functionName":{"name":"and","nativeSrc":"6222:3:36","nodeType":"YulIdentifier","src":"6222:3:36"},"nativeSrc":"6222:19:36","nodeType":"YulFunctionCall","src":"6222:19:36"}],"functionName":{"name":"or","nativeSrc":"6212:2:36","nodeType":"YulIdentifier","src":"6212:2:36"},"nativeSrc":"6212:30:36","nodeType":"YulFunctionCall","src":"6212:30:36"},"variableNames":[{"name":"result","nativeSrc":"6202:6:36","nodeType":"YulIdentifier","src":"6202:6:36"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"5855:393:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5892:5:36","nodeType":"YulTypedName","src":"5892:5:36","type":""},{"name":"shiftBytes","nativeSrc":"5899:10:36","nodeType":"YulTypedName","src":"5899:10:36","type":""},{"name":"toInsert","nativeSrc":"5911:8:36","nodeType":"YulTypedName","src":"5911:8:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5924:6:36","nodeType":"YulTypedName","src":"5924:6:36","type":""}],"src":"5855:393:36"},{"body":{"nativeSrc":"6286:28:36","nodeType":"YulBlock","src":"6286:28:36","statements":[{"nativeSrc":"6296:12:36","nodeType":"YulAssignment","src":"6296:12:36","value":{"name":"value","nativeSrc":"6303:5:36","nodeType":"YulIdentifier","src":"6303:5:36"},"variableNames":[{"name":"ret","nativeSrc":"6296:3:36","nodeType":"YulIdentifier","src":"6296:3:36"}]}]},"name":"identity","nativeSrc":"6254:60:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6272:5:36","nodeType":"YulTypedName","src":"6272:5:36","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6282:3:36","nodeType":"YulTypedName","src":"6282:3:36","type":""}],"src":"6254:60:36"},{"body":{"nativeSrc":"6380:82:36","nodeType":"YulBlock","src":"6380:82:36","statements":[{"nativeSrc":"6390:66:36","nodeType":"YulAssignment","src":"6390:66:36","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6448:5:36","nodeType":"YulIdentifier","src":"6448:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6430:17:36","nodeType":"YulIdentifier","src":"6430:17:36"},"nativeSrc":"6430:24:36","nodeType":"YulFunctionCall","src":"6430:24:36"}],"functionName":{"name":"identity","nativeSrc":"6421:8:36","nodeType":"YulIdentifier","src":"6421:8:36"},"nativeSrc":"6421:34:36","nodeType":"YulFunctionCall","src":"6421:34:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6403:17:36","nodeType":"YulIdentifier","src":"6403:17:36"},"nativeSrc":"6403:53:36","nodeType":"YulFunctionCall","src":"6403:53:36"},"variableNames":[{"name":"converted","nativeSrc":"6390:9:36","nodeType":"YulIdentifier","src":"6390:9:36"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6320:142:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6360:5:36","nodeType":"YulTypedName","src":"6360:5:36","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6370:9:36","nodeType":"YulTypedName","src":"6370:9:36","type":""}],"src":"6320:142:36"},{"body":{"nativeSrc":"6515:28:36","nodeType":"YulBlock","src":"6515:28:36","statements":[{"nativeSrc":"6525:12:36","nodeType":"YulAssignment","src":"6525:12:36","value":{"name":"value","nativeSrc":"6532:5:36","nodeType":"YulIdentifier","src":"6532:5:36"},"variableNames":[{"name":"ret","nativeSrc":"6525:3:36","nodeType":"YulIdentifier","src":"6525:3:36"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"6468:75:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6501:5:36","nodeType":"YulTypedName","src":"6501:5:36","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6511:3:36","nodeType":"YulTypedName","src":"6511:3:36","type":""}],"src":"6468:75:36"},{"body":{"nativeSrc":"6625:193:36","nodeType":"YulBlock","src":"6625:193:36","statements":[{"nativeSrc":"6635:63:36","nodeType":"YulVariableDeclaration","src":"6635:63:36","value":{"arguments":[{"name":"value_0","nativeSrc":"6690:7:36","nodeType":"YulIdentifier","src":"6690:7:36"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6659:30:36","nodeType":"YulIdentifier","src":"6659:30:36"},"nativeSrc":"6659:39:36","nodeType":"YulFunctionCall","src":"6659:39:36"},"variables":[{"name":"convertedValue_0","nativeSrc":"6639:16:36","nodeType":"YulTypedName","src":"6639:16:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6714:4:36","nodeType":"YulIdentifier","src":"6714:4:36"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"6754:4:36","nodeType":"YulIdentifier","src":"6754:4:36"}],"functionName":{"name":"sload","nativeSrc":"6748:5:36","nodeType":"YulIdentifier","src":"6748:5:36"},"nativeSrc":"6748:11:36","nodeType":"YulFunctionCall","src":"6748:11:36"},{"name":"offset","nativeSrc":"6761:6:36","nodeType":"YulIdentifier","src":"6761:6:36"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"6793:16:36","nodeType":"YulIdentifier","src":"6793:16:36"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"6769:23:36","nodeType":"YulIdentifier","src":"6769:23:36"},"nativeSrc":"6769:41:36","nodeType":"YulFunctionCall","src":"6769:41:36"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"6720:27:36","nodeType":"YulIdentifier","src":"6720:27:36"},"nativeSrc":"6720:91:36","nodeType":"YulFunctionCall","src":"6720:91:36"}],"functionName":{"name":"sstore","nativeSrc":"6707:6:36","nodeType":"YulIdentifier","src":"6707:6:36"},"nativeSrc":"6707:105:36","nodeType":"YulFunctionCall","src":"6707:105:36"},"nativeSrc":"6707:105:36","nodeType":"YulExpressionStatement","src":"6707:105:36"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6549:269:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6602:4:36","nodeType":"YulTypedName","src":"6602:4:36","type":""},{"name":"offset","nativeSrc":"6608:6:36","nodeType":"YulTypedName","src":"6608:6:36","type":""},{"name":"value_0","nativeSrc":"6616:7:36","nodeType":"YulTypedName","src":"6616:7:36","type":""}],"src":"6549:269:36"},{"body":{"nativeSrc":"6873:24:36","nodeType":"YulBlock","src":"6873:24:36","statements":[{"nativeSrc":"6883:8:36","nodeType":"YulAssignment","src":"6883:8:36","value":{"kind":"number","nativeSrc":"6890:1:36","nodeType":"YulLiteral","src":"6890:1:36","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"6883:3:36","nodeType":"YulIdentifier","src":"6883:3:36"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"6824:73:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"6869:3:36","nodeType":"YulTypedName","src":"6869:3:36","type":""}],"src":"6824:73:36"},{"body":{"nativeSrc":"6956:136:36","nodeType":"YulBlock","src":"6956:136:36","statements":[{"nativeSrc":"6966:46:36","nodeType":"YulVariableDeclaration","src":"6966:46:36","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"6980:30:36","nodeType":"YulIdentifier","src":"6980:30:36"},"nativeSrc":"6980:32:36","nodeType":"YulFunctionCall","src":"6980:32:36"},"variables":[{"name":"zero_0","nativeSrc":"6970:6:36","nodeType":"YulTypedName","src":"6970:6:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7065:4:36","nodeType":"YulIdentifier","src":"7065:4:36"},{"name":"offset","nativeSrc":"7071:6:36","nodeType":"YulIdentifier","src":"7071:6:36"},{"name":"zero_0","nativeSrc":"7079:6:36","nodeType":"YulIdentifier","src":"7079:6:36"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"7021:43:36","nodeType":"YulIdentifier","src":"7021:43:36"},"nativeSrc":"7021:65:36","nodeType":"YulFunctionCall","src":"7021:65:36"},"nativeSrc":"7021:65:36","nodeType":"YulExpressionStatement","src":"7021:65:36"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"6903:189:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6942:4:36","nodeType":"YulTypedName","src":"6942:4:36","type":""},{"name":"offset","nativeSrc":"6948:6:36","nodeType":"YulTypedName","src":"6948:6:36","type":""}],"src":"6903:189:36"},{"body":{"nativeSrc":"7148:136:36","nodeType":"YulBlock","src":"7148:136:36","statements":[{"body":{"nativeSrc":"7215:63:36","nodeType":"YulBlock","src":"7215:63:36","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"7259:5:36","nodeType":"YulIdentifier","src":"7259:5:36"},{"kind":"number","nativeSrc":"7266:1:36","nodeType":"YulLiteral","src":"7266:1:36","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"7229:29:36","nodeType":"YulIdentifier","src":"7229:29:36"},"nativeSrc":"7229:39:36","nodeType":"YulFunctionCall","src":"7229:39:36"},"nativeSrc":"7229:39:36","nodeType":"YulExpressionStatement","src":"7229:39:36"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"7168:5:36","nodeType":"YulIdentifier","src":"7168:5:36"},{"name":"end","nativeSrc":"7175:3:36","nodeType":"YulIdentifier","src":"7175:3:36"}],"functionName":{"name":"lt","nativeSrc":"7165:2:36","nodeType":"YulIdentifier","src":"7165:2:36"},"nativeSrc":"7165:14:36","nodeType":"YulFunctionCall","src":"7165:14:36"},"nativeSrc":"7158:120:36","nodeType":"YulForLoop","post":{"nativeSrc":"7180:26:36","nodeType":"YulBlock","src":"7180:26:36","statements":[{"nativeSrc":"7182:22:36","nodeType":"YulAssignment","src":"7182:22:36","value":{"arguments":[{"name":"start","nativeSrc":"7195:5:36","nodeType":"YulIdentifier","src":"7195:5:36"},{"kind":"number","nativeSrc":"7202:1:36","nodeType":"YulLiteral","src":"7202:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7191:3:36","nodeType":"YulIdentifier","src":"7191:3:36"},"nativeSrc":"7191:13:36","nodeType":"YulFunctionCall","src":"7191:13:36"},"variableNames":[{"name":"start","nativeSrc":"7182:5:36","nodeType":"YulIdentifier","src":"7182:5:36"}]}]},"pre":{"nativeSrc":"7162:2:36","nodeType":"YulBlock","src":"7162:2:36","statements":[]},"src":"7158:120:36"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"7098:186:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"7136:5:36","nodeType":"YulTypedName","src":"7136:5:36","type":""},{"name":"end","nativeSrc":"7143:3:36","nodeType":"YulTypedName","src":"7143:3:36","type":""}],"src":"7098:186:36"},{"body":{"nativeSrc":"7369:464:36","nodeType":"YulBlock","src":"7369:464:36","statements":[{"body":{"nativeSrc":"7395:431:36","nodeType":"YulBlock","src":"7395:431:36","statements":[{"nativeSrc":"7409:54:36","nodeType":"YulVariableDeclaration","src":"7409:54:36","value":{"arguments":[{"name":"array","nativeSrc":"7457:5:36","nodeType":"YulIdentifier","src":"7457:5:36"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7425:31:36","nodeType":"YulIdentifier","src":"7425:31:36"},"nativeSrc":"7425:38:36","nodeType":"YulFunctionCall","src":"7425:38:36"},"variables":[{"name":"dataArea","nativeSrc":"7413:8:36","nodeType":"YulTypedName","src":"7413:8:36","type":""}]},{"nativeSrc":"7476:63:36","nodeType":"YulVariableDeclaration","src":"7476:63:36","value":{"arguments":[{"name":"dataArea","nativeSrc":"7499:8:36","nodeType":"YulIdentifier","src":"7499:8:36"},{"arguments":[{"name":"startIndex","nativeSrc":"7527:10:36","nodeType":"YulIdentifier","src":"7527:10:36"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7509:17:36","nodeType":"YulIdentifier","src":"7509:17:36"},"nativeSrc":"7509:29:36","nodeType":"YulFunctionCall","src":"7509:29:36"}],"functionName":{"name":"add","nativeSrc":"7495:3:36","nodeType":"YulIdentifier","src":"7495:3:36"},"nativeSrc":"7495:44:36","nodeType":"YulFunctionCall","src":"7495:44:36"},"variables":[{"name":"deleteStart","nativeSrc":"7480:11:36","nodeType":"YulTypedName","src":"7480:11:36","type":""}]},{"body":{"nativeSrc":"7696:27:36","nodeType":"YulBlock","src":"7696:27:36","statements":[{"nativeSrc":"7698:23:36","nodeType":"YulAssignment","src":"7698:23:36","value":{"name":"dataArea","nativeSrc":"7713:8:36","nodeType":"YulIdentifier","src":"7713:8:36"},"variableNames":[{"name":"deleteStart","nativeSrc":"7698:11:36","nodeType":"YulIdentifier","src":"7698:11:36"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7680:10:36","nodeType":"YulIdentifier","src":"7680:10:36"},{"kind":"number","nativeSrc":"7692:2:36","nodeType":"YulLiteral","src":"7692:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7677:2:36","nodeType":"YulIdentifier","src":"7677:2:36"},"nativeSrc":"7677:18:36","nodeType":"YulFunctionCall","src":"7677:18:36"},"nativeSrc":"7674:49:36","nodeType":"YulIf","src":"7674:49:36"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"7765:11:36","nodeType":"YulIdentifier","src":"7765:11:36"},{"arguments":[{"name":"dataArea","nativeSrc":"7782:8:36","nodeType":"YulIdentifier","src":"7782:8:36"},{"arguments":[{"name":"len","nativeSrc":"7810:3:36","nodeType":"YulIdentifier","src":"7810:3:36"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7792:17:36","nodeType":"YulIdentifier","src":"7792:17:36"},"nativeSrc":"7792:22:36","nodeType":"YulFunctionCall","src":"7792:22:36"}],"functionName":{"name":"add","nativeSrc":"7778:3:36","nodeType":"YulIdentifier","src":"7778:3:36"},"nativeSrc":"7778:37:36","nodeType":"YulFunctionCall","src":"7778:37:36"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"7736:28:36","nodeType":"YulIdentifier","src":"7736:28:36"},"nativeSrc":"7736:80:36","nodeType":"YulFunctionCall","src":"7736:80:36"},"nativeSrc":"7736:80:36","nodeType":"YulExpressionStatement","src":"7736:80:36"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7386:3:36","nodeType":"YulIdentifier","src":"7386:3:36"},{"kind":"number","nativeSrc":"7391:2:36","nodeType":"YulLiteral","src":"7391:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7383:2:36","nodeType":"YulIdentifier","src":"7383:2:36"},"nativeSrc":"7383:11:36","nodeType":"YulFunctionCall","src":"7383:11:36"},"nativeSrc":"7380:446:36","nodeType":"YulIf","src":"7380:446:36"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7290:543:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7345:5:36","nodeType":"YulTypedName","src":"7345:5:36","type":""},{"name":"len","nativeSrc":"7352:3:36","nodeType":"YulTypedName","src":"7352:3:36","type":""},{"name":"startIndex","nativeSrc":"7357:10:36","nodeType":"YulTypedName","src":"7357:10:36","type":""}],"src":"7290:543:36"},{"body":{"nativeSrc":"7902:54:36","nodeType":"YulBlock","src":"7902:54:36","statements":[{"nativeSrc":"7912:37:36","nodeType":"YulAssignment","src":"7912:37:36","value":{"arguments":[{"name":"bits","nativeSrc":"7937:4:36","nodeType":"YulIdentifier","src":"7937:4:36"},{"name":"value","nativeSrc":"7943:5:36","nodeType":"YulIdentifier","src":"7943:5:36"}],"functionName":{"name":"shr","nativeSrc":"7933:3:36","nodeType":"YulIdentifier","src":"7933:3:36"},"nativeSrc":"7933:16:36","nodeType":"YulFunctionCall","src":"7933:16:36"},"variableNames":[{"name":"newValue","nativeSrc":"7912:8:36","nodeType":"YulIdentifier","src":"7912:8:36"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"7839:117:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7877:4:36","nodeType":"YulTypedName","src":"7877:4:36","type":""},{"name":"value","nativeSrc":"7883:5:36","nodeType":"YulTypedName","src":"7883:5:36","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7893:8:36","nodeType":"YulTypedName","src":"7893:8:36","type":""}],"src":"7839:117:36"},{"body":{"nativeSrc":"8013:118:36","nodeType":"YulBlock","src":"8013:118:36","statements":[{"nativeSrc":"8023:68:36","nodeType":"YulVariableDeclaration","src":"8023:68:36","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8072:1:36","nodeType":"YulLiteral","src":"8072:1:36","type":"","value":"8"},{"name":"bytes","nativeSrc":"8075:5:36","nodeType":"YulIdentifier","src":"8075:5:36"}],"functionName":{"name":"mul","nativeSrc":"8068:3:36","nodeType":"YulIdentifier","src":"8068:3:36"},"nativeSrc":"8068:13:36","nodeType":"YulFunctionCall","src":"8068:13:36"},{"arguments":[{"kind":"number","nativeSrc":"8087:1:36","nodeType":"YulLiteral","src":"8087:1:36","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8083:3:36","nodeType":"YulIdentifier","src":"8083:3:36"},"nativeSrc":"8083:6:36","nodeType":"YulFunctionCall","src":"8083:6:36"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"8039:28:36","nodeType":"YulIdentifier","src":"8039:28:36"},"nativeSrc":"8039:51:36","nodeType":"YulFunctionCall","src":"8039:51:36"}],"functionName":{"name":"not","nativeSrc":"8035:3:36","nodeType":"YulIdentifier","src":"8035:3:36"},"nativeSrc":"8035:56:36","nodeType":"YulFunctionCall","src":"8035:56:36"},"variables":[{"name":"mask","nativeSrc":"8027:4:36","nodeType":"YulTypedName","src":"8027:4:36","type":""}]},{"nativeSrc":"8100:25:36","nodeType":"YulAssignment","src":"8100:25:36","value":{"arguments":[{"name":"data","nativeSrc":"8114:4:36","nodeType":"YulIdentifier","src":"8114:4:36"},{"name":"mask","nativeSrc":"8120:4:36","nodeType":"YulIdentifier","src":"8120:4:36"}],"functionName":{"name":"and","nativeSrc":"8110:3:36","nodeType":"YulIdentifier","src":"8110:3:36"},"nativeSrc":"8110:15:36","nodeType":"YulFunctionCall","src":"8110:15:36"},"variableNames":[{"name":"result","nativeSrc":"8100:6:36","nodeType":"YulIdentifier","src":"8100:6:36"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"7962:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7990:4:36","nodeType":"YulTypedName","src":"7990:4:36","type":""},{"name":"bytes","nativeSrc":"7996:5:36","nodeType":"YulTypedName","src":"7996:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"8006:6:36","nodeType":"YulTypedName","src":"8006:6:36","type":""}],"src":"7962:169:36"},{"body":{"nativeSrc":"8217:214:36","nodeType":"YulBlock","src":"8217:214:36","statements":[{"nativeSrc":"8350:37:36","nodeType":"YulAssignment","src":"8350:37:36","value":{"arguments":[{"name":"data","nativeSrc":"8377:4:36","nodeType":"YulIdentifier","src":"8377:4:36"},{"name":"len","nativeSrc":"8383:3:36","nodeType":"YulIdentifier","src":"8383:3:36"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8358:18:36","nodeType":"YulIdentifier","src":"8358:18:36"},"nativeSrc":"8358:29:36","nodeType":"YulFunctionCall","src":"8358:29:36"},"variableNames":[{"name":"data","nativeSrc":"8350:4:36","nodeType":"YulIdentifier","src":"8350:4:36"}]},{"nativeSrc":"8396:29:36","nodeType":"YulAssignment","src":"8396:29:36","value":{"arguments":[{"name":"data","nativeSrc":"8407:4:36","nodeType":"YulIdentifier","src":"8407:4:36"},{"arguments":[{"kind":"number","nativeSrc":"8417:1:36","nodeType":"YulLiteral","src":"8417:1:36","type":"","value":"2"},{"name":"len","nativeSrc":"8420:3:36","nodeType":"YulIdentifier","src":"8420:3:36"}],"functionName":{"name":"mul","nativeSrc":"8413:3:36","nodeType":"YulIdentifier","src":"8413:3:36"},"nativeSrc":"8413:11:36","nodeType":"YulFunctionCall","src":"8413:11:36"}],"functionName":{"name":"or","nativeSrc":"8404:2:36","nodeType":"YulIdentifier","src":"8404:2:36"},"nativeSrc":"8404:21:36","nodeType":"YulFunctionCall","src":"8404:21:36"},"variableNames":[{"name":"used","nativeSrc":"8396:4:36","nodeType":"YulIdentifier","src":"8396:4:36"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8136:295:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8198:4:36","nodeType":"YulTypedName","src":"8198:4:36","type":""},{"name":"len","nativeSrc":"8204:3:36","nodeType":"YulTypedName","src":"8204:3:36","type":""}],"returnVariables":[{"name":"used","nativeSrc":"8212:4:36","nodeType":"YulTypedName","src":"8212:4:36","type":""}],"src":"8136:295:36"},{"body":{"nativeSrc":"8528:1303:36","nodeType":"YulBlock","src":"8528:1303:36","statements":[{"nativeSrc":"8539:51:36","nodeType":"YulVariableDeclaration","src":"8539:51:36","value":{"arguments":[{"name":"src","nativeSrc":"8586:3:36","nodeType":"YulIdentifier","src":"8586:3:36"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"8553:32:36","nodeType":"YulIdentifier","src":"8553:32:36"},"nativeSrc":"8553:37:36","nodeType":"YulFunctionCall","src":"8553:37:36"},"variables":[{"name":"newLen","nativeSrc":"8543:6:36","nodeType":"YulTypedName","src":"8543:6:36","type":""}]},{"body":{"nativeSrc":"8675:22:36","nodeType":"YulBlock","src":"8675:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8677:16:36","nodeType":"YulIdentifier","src":"8677:16:36"},"nativeSrc":"8677:18:36","nodeType":"YulFunctionCall","src":"8677:18:36"},"nativeSrc":"8677:18:36","nodeType":"YulExpressionStatement","src":"8677:18:36"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"8647:6:36","nodeType":"YulIdentifier","src":"8647:6:36"},{"kind":"number","nativeSrc":"8655:18:36","nodeType":"YulLiteral","src":"8655:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8644:2:36","nodeType":"YulIdentifier","src":"8644:2:36"},"nativeSrc":"8644:30:36","nodeType":"YulFunctionCall","src":"8644:30:36"},"nativeSrc":"8641:56:36","nodeType":"YulIf","src":"8641:56:36"},{"nativeSrc":"8707:52:36","nodeType":"YulVariableDeclaration","src":"8707:52:36","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8753:4:36","nodeType":"YulIdentifier","src":"8753:4:36"}],"functionName":{"name":"sload","nativeSrc":"8747:5:36","nodeType":"YulIdentifier","src":"8747:5:36"},"nativeSrc":"8747:11:36","nodeType":"YulFunctionCall","src":"8747:11:36"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"8721:25:36","nodeType":"YulIdentifier","src":"8721:25:36"},"nativeSrc":"8721:38:36","nodeType":"YulFunctionCall","src":"8721:38:36"},"variables":[{"name":"oldLen","nativeSrc":"8711:6:36","nodeType":"YulTypedName","src":"8711:6:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8852:4:36","nodeType":"YulIdentifier","src":"8852:4:36"},{"name":"oldLen","nativeSrc":"8858:6:36","nodeType":"YulIdentifier","src":"8858:6:36"},{"name":"newLen","nativeSrc":"8866:6:36","nodeType":"YulIdentifier","src":"8866:6:36"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"8806:45:36","nodeType":"YulIdentifier","src":"8806:45:36"},"nativeSrc":"8806:67:36","nodeType":"YulFunctionCall","src":"8806:67:36"},"nativeSrc":"8806:67:36","nodeType":"YulExpressionStatement","src":"8806:67:36"},{"nativeSrc":"8883:18:36","nodeType":"YulVariableDeclaration","src":"8883:18:36","value":{"kind":"number","nativeSrc":"8900:1:36","nodeType":"YulLiteral","src":"8900:1:36","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8887:9:36","nodeType":"YulTypedName","src":"8887:9:36","type":""}]},{"nativeSrc":"8911:17:36","nodeType":"YulAssignment","src":"8911:17:36","value":{"kind":"number","nativeSrc":"8924:4:36","nodeType":"YulLiteral","src":"8924:4:36","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8911:9:36","nodeType":"YulIdentifier","src":"8911:9:36"}]},{"cases":[{"body":{"nativeSrc":"8975:611:36","nodeType":"YulBlock","src":"8975:611:36","statements":[{"nativeSrc":"8989:37:36","nodeType":"YulVariableDeclaration","src":"8989:37:36","value":{"arguments":[{"name":"newLen","nativeSrc":"9008:6:36","nodeType":"YulIdentifier","src":"9008:6:36"},{"arguments":[{"kind":"number","nativeSrc":"9020:4:36","nodeType":"YulLiteral","src":"9020:4:36","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"9016:3:36","nodeType":"YulIdentifier","src":"9016:3:36"},"nativeSrc":"9016:9:36","nodeType":"YulFunctionCall","src":"9016:9:36"}],"functionName":{"name":"and","nativeSrc":"9004:3:36","nodeType":"YulIdentifier","src":"9004:3:36"},"nativeSrc":"9004:22:36","nodeType":"YulFunctionCall","src":"9004:22:36"},"variables":[{"name":"loopEnd","nativeSrc":"8993:7:36","nodeType":"YulTypedName","src":"8993:7:36","type":""}]},{"nativeSrc":"9040:51:36","nodeType":"YulVariableDeclaration","src":"9040:51:36","value":{"arguments":[{"name":"slot","nativeSrc":"9086:4:36","nodeType":"YulIdentifier","src":"9086:4:36"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"9054:31:36","nodeType":"YulIdentifier","src":"9054:31:36"},"nativeSrc":"9054:37:36","nodeType":"YulFunctionCall","src":"9054:37:36"},"variables":[{"name":"dstPtr","nativeSrc":"9044:6:36","nodeType":"YulTypedName","src":"9044:6:36","type":""}]},{"nativeSrc":"9104:10:36","nodeType":"YulVariableDeclaration","src":"9104:10:36","value":{"kind":"number","nativeSrc":"9113:1:36","nodeType":"YulLiteral","src":"9113:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9108:1:36","nodeType":"YulTypedName","src":"9108:1:36","type":""}]},{"body":{"nativeSrc":"9172:163:36","nodeType":"YulBlock","src":"9172:163:36","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9197:6:36","nodeType":"YulIdentifier","src":"9197:6:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9215:3:36","nodeType":"YulIdentifier","src":"9215:3:36"},{"name":"srcOffset","nativeSrc":"9220:9:36","nodeType":"YulIdentifier","src":"9220:9:36"}],"functionName":{"name":"add","nativeSrc":"9211:3:36","nodeType":"YulIdentifier","src":"9211:3:36"},"nativeSrc":"9211:19:36","nodeType":"YulFunctionCall","src":"9211:19:36"}],"functionName":{"name":"mload","nativeSrc":"9205:5:36","nodeType":"YulIdentifier","src":"9205:5:36"},"nativeSrc":"9205:26:36","nodeType":"YulFunctionCall","src":"9205:26:36"}],"functionName":{"name":"sstore","nativeSrc":"9190:6:36","nodeType":"YulIdentifier","src":"9190:6:36"},"nativeSrc":"9190:42:36","nodeType":"YulFunctionCall","src":"9190:42:36"},"nativeSrc":"9190:42:36","nodeType":"YulExpressionStatement","src":"9190:42:36"},{"nativeSrc":"9249:24:36","nodeType":"YulAssignment","src":"9249:24:36","value":{"arguments":[{"name":"dstPtr","nativeSrc":"9263:6:36","nodeType":"YulIdentifier","src":"9263:6:36"},{"kind":"number","nativeSrc":"9271:1:36","nodeType":"YulLiteral","src":"9271:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9259:3:36","nodeType":"YulIdentifier","src":"9259:3:36"},"nativeSrc":"9259:14:36","nodeType":"YulFunctionCall","src":"9259:14:36"},"variableNames":[{"name":"dstPtr","nativeSrc":"9249:6:36","nodeType":"YulIdentifier","src":"9249:6:36"}]},{"nativeSrc":"9290:31:36","nodeType":"YulAssignment","src":"9290:31:36","value":{"arguments":[{"name":"srcOffset","nativeSrc":"9307:9:36","nodeType":"YulIdentifier","src":"9307:9:36"},{"kind":"number","nativeSrc":"9318:2:36","nodeType":"YulLiteral","src":"9318:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9303:3:36","nodeType":"YulIdentifier","src":"9303:3:36"},"nativeSrc":"9303:18:36","nodeType":"YulFunctionCall","src":"9303:18:36"},"variableNames":[{"name":"srcOffset","nativeSrc":"9290:9:36","nodeType":"YulIdentifier","src":"9290:9:36"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9138:1:36","nodeType":"YulIdentifier","src":"9138:1:36"},{"name":"loopEnd","nativeSrc":"9141:7:36","nodeType":"YulIdentifier","src":"9141:7:36"}],"functionName":{"name":"lt","nativeSrc":"9135:2:36","nodeType":"YulIdentifier","src":"9135:2:36"},"nativeSrc":"9135:14:36","nodeType":"YulFunctionCall","src":"9135:14:36"},"nativeSrc":"9127:208:36","nodeType":"YulForLoop","post":{"nativeSrc":"9150:21:36","nodeType":"YulBlock","src":"9150:21:36","statements":[{"nativeSrc":"9152:17:36","nodeType":"YulAssignment","src":"9152:17:36","value":{"arguments":[{"name":"i","nativeSrc":"9161:1:36","nodeType":"YulIdentifier","src":"9161:1:36"},{"kind":"number","nativeSrc":"9164:4:36","nodeType":"YulLiteral","src":"9164:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9157:3:36","nodeType":"YulIdentifier","src":"9157:3:36"},"nativeSrc":"9157:12:36","nodeType":"YulFunctionCall","src":"9157:12:36"},"variableNames":[{"name":"i","nativeSrc":"9152:1:36","nodeType":"YulIdentifier","src":"9152:1:36"}]}]},"pre":{"nativeSrc":"9131:3:36","nodeType":"YulBlock","src":"9131:3:36","statements":[]},"src":"9127:208:36"},{"body":{"nativeSrc":"9371:156:36","nodeType":"YulBlock","src":"9371:156:36","statements":[{"nativeSrc":"9389:43:36","nodeType":"YulVariableDeclaration","src":"9389:43:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9416:3:36","nodeType":"YulIdentifier","src":"9416:3:36"},{"name":"srcOffset","nativeSrc":"9421:9:36","nodeType":"YulIdentifier","src":"9421:9:36"}],"functionName":{"name":"add","nativeSrc":"9412:3:36","nodeType":"YulIdentifier","src":"9412:3:36"},"nativeSrc":"9412:19:36","nodeType":"YulFunctionCall","src":"9412:19:36"}],"functionName":{"name":"mload","nativeSrc":"9406:5:36","nodeType":"YulIdentifier","src":"9406:5:36"},"nativeSrc":"9406:26:36","nodeType":"YulFunctionCall","src":"9406:26:36"},"variables":[{"name":"lastValue","nativeSrc":"9393:9:36","nodeType":"YulTypedName","src":"9393:9:36","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9456:6:36","nodeType":"YulIdentifier","src":"9456:6:36"},{"arguments":[{"name":"lastValue","nativeSrc":"9483:9:36","nodeType":"YulIdentifier","src":"9483:9:36"},{"arguments":[{"name":"newLen","nativeSrc":"9498:6:36","nodeType":"YulIdentifier","src":"9498:6:36"},{"kind":"number","nativeSrc":"9506:4:36","nodeType":"YulLiteral","src":"9506:4:36","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"9494:3:36","nodeType":"YulIdentifier","src":"9494:3:36"},"nativeSrc":"9494:17:36","nodeType":"YulFunctionCall","src":"9494:17:36"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"9464:18:36","nodeType":"YulIdentifier","src":"9464:18:36"},"nativeSrc":"9464:48:36","nodeType":"YulFunctionCall","src":"9464:48:36"}],"functionName":{"name":"sstore","nativeSrc":"9449:6:36","nodeType":"YulIdentifier","src":"9449:6:36"},"nativeSrc":"9449:64:36","nodeType":"YulFunctionCall","src":"9449:64:36"},"nativeSrc":"9449:64:36","nodeType":"YulExpressionStatement","src":"9449:64:36"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"9354:7:36","nodeType":"YulIdentifier","src":"9354:7:36"},{"name":"newLen","nativeSrc":"9363:6:36","nodeType":"YulIdentifier","src":"9363:6:36"}],"functionName":{"name":"lt","nativeSrc":"9351:2:36","nodeType":"YulIdentifier","src":"9351:2:36"},"nativeSrc":"9351:19:36","nodeType":"YulFunctionCall","src":"9351:19:36"},"nativeSrc":"9348:179:36","nodeType":"YulIf","src":"9348:179:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9547:4:36","nodeType":"YulIdentifier","src":"9547:4:36"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"9561:6:36","nodeType":"YulIdentifier","src":"9561:6:36"},{"kind":"number","nativeSrc":"9569:1:36","nodeType":"YulLiteral","src":"9569:1:36","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"9557:3:36","nodeType":"YulIdentifier","src":"9557:3:36"},"nativeSrc":"9557:14:36","nodeType":"YulFunctionCall","src":"9557:14:36"},{"kind":"number","nativeSrc":"9573:1:36","nodeType":"YulLiteral","src":"9573:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9553:3:36","nodeType":"YulIdentifier","src":"9553:3:36"},"nativeSrc":"9553:22:36","nodeType":"YulFunctionCall","src":"9553:22:36"}],"functionName":{"name":"sstore","nativeSrc":"9540:6:36","nodeType":"YulIdentifier","src":"9540:6:36"},"nativeSrc":"9540:36:36","nodeType":"YulFunctionCall","src":"9540:36:36"},"nativeSrc":"9540:36:36","nodeType":"YulExpressionStatement","src":"9540:36:36"}]},"nativeSrc":"8968:618:36","nodeType":"YulCase","src":"8968:618:36","value":{"kind":"number","nativeSrc":"8973:1:36","nodeType":"YulLiteral","src":"8973:1:36","type":"","value":"1"}},{"body":{"nativeSrc":"9603:222:36","nodeType":"YulBlock","src":"9603:222:36","statements":[{"nativeSrc":"9617:14:36","nodeType":"YulVariableDeclaration","src":"9617:14:36","value":{"kind":"number","nativeSrc":"9630:1:36","nodeType":"YulLiteral","src":"9630:1:36","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9621:5:36","nodeType":"YulTypedName","src":"9621:5:36","type":""}]},{"body":{"nativeSrc":"9654:67:36","nodeType":"YulBlock","src":"9654:67:36","statements":[{"nativeSrc":"9672:35:36","nodeType":"YulAssignment","src":"9672:35:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9691:3:36","nodeType":"YulIdentifier","src":"9691:3:36"},{"name":"srcOffset","nativeSrc":"9696:9:36","nodeType":"YulIdentifier","src":"9696:9:36"}],"functionName":{"name":"add","nativeSrc":"9687:3:36","nodeType":"YulIdentifier","src":"9687:3:36"},"nativeSrc":"9687:19:36","nodeType":"YulFunctionCall","src":"9687:19:36"}],"functionName":{"name":"mload","nativeSrc":"9681:5:36","nodeType":"YulIdentifier","src":"9681:5:36"},"nativeSrc":"9681:26:36","nodeType":"YulFunctionCall","src":"9681:26:36"},"variableNames":[{"name":"value","nativeSrc":"9672:5:36","nodeType":"YulIdentifier","src":"9672:5:36"}]}]},"condition":{"name":"newLen","nativeSrc":"9647:6:36","nodeType":"YulIdentifier","src":"9647:6:36"},"nativeSrc":"9644:77:36","nodeType":"YulIf","src":"9644:77:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9741:4:36","nodeType":"YulIdentifier","src":"9741:4:36"},{"arguments":[{"name":"value","nativeSrc":"9800:5:36","nodeType":"YulIdentifier","src":"9800:5:36"},{"name":"newLen","nativeSrc":"9807:6:36","nodeType":"YulIdentifier","src":"9807:6:36"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9747:52:36","nodeType":"YulIdentifier","src":"9747:52:36"},"nativeSrc":"9747:67:36","nodeType":"YulFunctionCall","src":"9747:67:36"}],"functionName":{"name":"sstore","nativeSrc":"9734:6:36","nodeType":"YulIdentifier","src":"9734:6:36"},"nativeSrc":"9734:81:36","nodeType":"YulFunctionCall","src":"9734:81:36"},"nativeSrc":"9734:81:36","nodeType":"YulExpressionStatement","src":"9734:81:36"}]},"nativeSrc":"9595:230:36","nodeType":"YulCase","src":"9595:230:36","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8948:6:36","nodeType":"YulIdentifier","src":"8948:6:36"},{"kind":"number","nativeSrc":"8956:2:36","nodeType":"YulLiteral","src":"8956:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8945:2:36","nodeType":"YulIdentifier","src":"8945:2:36"},"nativeSrc":"8945:14:36","nodeType":"YulFunctionCall","src":"8945:14:36"},"nativeSrc":"8938:887:36","nodeType":"YulSwitch","src":"8938:887:36"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"8436:1395:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8517:4:36","nodeType":"YulTypedName","src":"8517:4:36","type":""},{"name":"src","nativeSrc":"8523:3:36","nodeType":"YulTypedName","src":"8523:3:36","type":""}],"src":"8436:1395:36"},{"body":{"nativeSrc":"9902:53:36","nodeType":"YulBlock","src":"9902:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9919:3:36","nodeType":"YulIdentifier","src":"9919:3:36"},{"arguments":[{"name":"value","nativeSrc":"9942:5:36","nodeType":"YulIdentifier","src":"9942:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9924:17:36","nodeType":"YulIdentifier","src":"9924:17:36"},"nativeSrc":"9924:24:36","nodeType":"YulFunctionCall","src":"9924:24:36"}],"functionName":{"name":"mstore","nativeSrc":"9912:6:36","nodeType":"YulIdentifier","src":"9912:6:36"},"nativeSrc":"9912:37:36","nodeType":"YulFunctionCall","src":"9912:37:36"},"nativeSrc":"9912:37:36","nodeType":"YulExpressionStatement","src":"9912:37:36"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9837:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9890:5:36","nodeType":"YulTypedName","src":"9890:5:36","type":""},{"name":"pos","nativeSrc":"9897:3:36","nodeType":"YulTypedName","src":"9897:3:36","type":""}],"src":"9837:118:36"},{"body":{"nativeSrc":"10059:124:36","nodeType":"YulBlock","src":"10059:124:36","statements":[{"nativeSrc":"10069:26:36","nodeType":"YulAssignment","src":"10069:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"10081:9:36","nodeType":"YulIdentifier","src":"10081:9:36"},{"kind":"number","nativeSrc":"10092:2:36","nodeType":"YulLiteral","src":"10092:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10077:3:36","nodeType":"YulIdentifier","src":"10077:3:36"},"nativeSrc":"10077:18:36","nodeType":"YulFunctionCall","src":"10077:18:36"},"variableNames":[{"name":"tail","nativeSrc":"10069:4:36","nodeType":"YulIdentifier","src":"10069:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10149:6:36","nodeType":"YulIdentifier","src":"10149:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"10162:9:36","nodeType":"YulIdentifier","src":"10162:9:36"},{"kind":"number","nativeSrc":"10173:1:36","nodeType":"YulLiteral","src":"10173:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10158:3:36","nodeType":"YulIdentifier","src":"10158:3:36"},"nativeSrc":"10158:17:36","nodeType":"YulFunctionCall","src":"10158:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10105:43:36","nodeType":"YulIdentifier","src":"10105:43:36"},"nativeSrc":"10105:71:36","nodeType":"YulFunctionCall","src":"10105:71:36"},"nativeSrc":"10105:71:36","nodeType":"YulExpressionStatement","src":"10105:71:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9961:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10031:9:36","nodeType":"YulTypedName","src":"10031:9:36","type":""},{"name":"value0","nativeSrc":"10043:6:36","nodeType":"YulTypedName","src":"10043:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10054:4:36","nodeType":"YulTypedName","src":"10054:4:36","type":""}],"src":"9961:222:36"},{"body":{"nativeSrc":"10234:32:36","nodeType":"YulBlock","src":"10234:32:36","statements":[{"nativeSrc":"10244:16:36","nodeType":"YulAssignment","src":"10244:16:36","value":{"name":"value","nativeSrc":"10255:5:36","nodeType":"YulIdentifier","src":"10255:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"10244:7:36","nodeType":"YulIdentifier","src":"10244:7:36"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"10189:77:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10216:5:36","nodeType":"YulTypedName","src":"10216:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10226:7:36","nodeType":"YulTypedName","src":"10226:7:36","type":""}],"src":"10189:77:36"},{"body":{"nativeSrc":"10337:53:36","nodeType":"YulBlock","src":"10337:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10354:3:36","nodeType":"YulIdentifier","src":"10354:3:36"},{"arguments":[{"name":"value","nativeSrc":"10377:5:36","nodeType":"YulIdentifier","src":"10377:5:36"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10359:17:36","nodeType":"YulIdentifier","src":"10359:17:36"},"nativeSrc":"10359:24:36","nodeType":"YulFunctionCall","src":"10359:24:36"}],"functionName":{"name":"mstore","nativeSrc":"10347:6:36","nodeType":"YulIdentifier","src":"10347:6:36"},"nativeSrc":"10347:37:36","nodeType":"YulFunctionCall","src":"10347:37:36"},"nativeSrc":"10347:37:36","nodeType":"YulExpressionStatement","src":"10347:37:36"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10272:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10325:5:36","nodeType":"YulTypedName","src":"10325:5:36","type":""},{"name":"pos","nativeSrc":"10332:3:36","nodeType":"YulTypedName","src":"10332:3:36","type":""}],"src":"10272:118:36"},{"body":{"nativeSrc":"10461:53:36","nodeType":"YulBlock","src":"10461:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10478:3:36","nodeType":"YulIdentifier","src":"10478:3:36"},{"arguments":[{"name":"value","nativeSrc":"10501:5:36","nodeType":"YulIdentifier","src":"10501:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10483:17:36","nodeType":"YulIdentifier","src":"10483:17:36"},"nativeSrc":"10483:24:36","nodeType":"YulFunctionCall","src":"10483:24:36"}],"functionName":{"name":"mstore","nativeSrc":"10471:6:36","nodeType":"YulIdentifier","src":"10471:6:36"},"nativeSrc":"10471:37:36","nodeType":"YulFunctionCall","src":"10471:37:36"},"nativeSrc":"10471:37:36","nodeType":"YulExpressionStatement","src":"10471:37:36"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10396:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10449:5:36","nodeType":"YulTypedName","src":"10449:5:36","type":""},{"name":"pos","nativeSrc":"10456:3:36","nodeType":"YulTypedName","src":"10456:3:36","type":""}],"src":"10396:118:36"},{"body":{"nativeSrc":"10730:454:36","nodeType":"YulBlock","src":"10730:454:36","statements":[{"nativeSrc":"10740:27:36","nodeType":"YulAssignment","src":"10740:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"10752:9:36","nodeType":"YulIdentifier","src":"10752:9:36"},{"kind":"number","nativeSrc":"10763:3:36","nodeType":"YulLiteral","src":"10763:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10748:3:36","nodeType":"YulIdentifier","src":"10748:3:36"},"nativeSrc":"10748:19:36","nodeType":"YulFunctionCall","src":"10748:19:36"},"variableNames":[{"name":"tail","nativeSrc":"10740:4:36","nodeType":"YulIdentifier","src":"10740:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10821:6:36","nodeType":"YulIdentifier","src":"10821:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"10834:9:36","nodeType":"YulIdentifier","src":"10834:9:36"},{"kind":"number","nativeSrc":"10845:1:36","nodeType":"YulLiteral","src":"10845:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10830:3:36","nodeType":"YulIdentifier","src":"10830:3:36"},"nativeSrc":"10830:17:36","nodeType":"YulFunctionCall","src":"10830:17:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10777:43:36","nodeType":"YulIdentifier","src":"10777:43:36"},"nativeSrc":"10777:71:36","nodeType":"YulFunctionCall","src":"10777:71:36"},"nativeSrc":"10777:71:36","nodeType":"YulExpressionStatement","src":"10777:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10902:6:36","nodeType":"YulIdentifier","src":"10902:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"10915:9:36","nodeType":"YulIdentifier","src":"10915:9:36"},{"kind":"number","nativeSrc":"10926:2:36","nodeType":"YulLiteral","src":"10926:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10911:3:36","nodeType":"YulIdentifier","src":"10911:3:36"},"nativeSrc":"10911:18:36","nodeType":"YulFunctionCall","src":"10911:18:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10858:43:36","nodeType":"YulIdentifier","src":"10858:43:36"},"nativeSrc":"10858:72:36","nodeType":"YulFunctionCall","src":"10858:72:36"},"nativeSrc":"10858:72:36","nodeType":"YulExpressionStatement","src":"10858:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10984:6:36","nodeType":"YulIdentifier","src":"10984:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"10997:9:36","nodeType":"YulIdentifier","src":"10997:9:36"},{"kind":"number","nativeSrc":"11008:2:36","nodeType":"YulLiteral","src":"11008:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10993:3:36","nodeType":"YulIdentifier","src":"10993:3:36"},"nativeSrc":"10993:18:36","nodeType":"YulFunctionCall","src":"10993:18:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10940:43:36","nodeType":"YulIdentifier","src":"10940:43:36"},"nativeSrc":"10940:72:36","nodeType":"YulFunctionCall","src":"10940:72:36"},"nativeSrc":"10940:72:36","nodeType":"YulExpressionStatement","src":"10940:72:36"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11066:6:36","nodeType":"YulIdentifier","src":"11066:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"11079:9:36","nodeType":"YulIdentifier","src":"11079:9:36"},{"kind":"number","nativeSrc":"11090:2:36","nodeType":"YulLiteral","src":"11090:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11075:3:36","nodeType":"YulIdentifier","src":"11075:3:36"},"nativeSrc":"11075:18:36","nodeType":"YulFunctionCall","src":"11075:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11022:43:36","nodeType":"YulIdentifier","src":"11022:43:36"},"nativeSrc":"11022:72:36","nodeType":"YulFunctionCall","src":"11022:72:36"},"nativeSrc":"11022:72:36","nodeType":"YulExpressionStatement","src":"11022:72:36"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11148:6:36","nodeType":"YulIdentifier","src":"11148:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"11161:9:36","nodeType":"YulIdentifier","src":"11161:9:36"},{"kind":"number","nativeSrc":"11172:3:36","nodeType":"YulLiteral","src":"11172:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11157:3:36","nodeType":"YulIdentifier","src":"11157:3:36"},"nativeSrc":"11157:19:36","nodeType":"YulFunctionCall","src":"11157:19:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11104:43:36","nodeType":"YulIdentifier","src":"11104:43:36"},"nativeSrc":"11104:73:36","nodeType":"YulFunctionCall","src":"11104:73:36"},"nativeSrc":"11104:73:36","nodeType":"YulExpressionStatement","src":"11104:73:36"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"10520:664:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10670:9:36","nodeType":"YulTypedName","src":"10670:9:36","type":""},{"name":"value4","nativeSrc":"10682:6:36","nodeType":"YulTypedName","src":"10682:6:36","type":""},{"name":"value3","nativeSrc":"10690:6:36","nodeType":"YulTypedName","src":"10690:6:36","type":""},{"name":"value2","nativeSrc":"10698:6:36","nodeType":"YulTypedName","src":"10698:6:36","type":""},{"name":"value1","nativeSrc":"10706:6:36","nodeType":"YulTypedName","src":"10706:6:36","type":""},{"name":"value0","nativeSrc":"10714:6:36","nodeType":"YulTypedName","src":"10714:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10725:4:36","nodeType":"YulTypedName","src":"10725:4:36","type":""}],"src":"10520:664:36"},{"body":{"nativeSrc":"11286:73:36","nodeType":"YulBlock","src":"11286:73:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11303:3:36","nodeType":"YulIdentifier","src":"11303:3:36"},{"name":"length","nativeSrc":"11308:6:36","nodeType":"YulIdentifier","src":"11308:6:36"}],"functionName":{"name":"mstore","nativeSrc":"11296:6:36","nodeType":"YulIdentifier","src":"11296:6:36"},"nativeSrc":"11296:19:36","nodeType":"YulFunctionCall","src":"11296:19:36"},"nativeSrc":"11296:19:36","nodeType":"YulExpressionStatement","src":"11296:19:36"},{"nativeSrc":"11324:29:36","nodeType":"YulAssignment","src":"11324:29:36","value":{"arguments":[{"name":"pos","nativeSrc":"11343:3:36","nodeType":"YulIdentifier","src":"11343:3:36"},{"kind":"number","nativeSrc":"11348:4:36","nodeType":"YulLiteral","src":"11348:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11339:3:36","nodeType":"YulIdentifier","src":"11339:3:36"},"nativeSrc":"11339:14:36","nodeType":"YulFunctionCall","src":"11339:14:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"11324:11:36","nodeType":"YulIdentifier","src":"11324:11:36"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11190:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11258:3:36","nodeType":"YulTypedName","src":"11258:3:36","type":""},{"name":"length","nativeSrc":"11263:6:36","nodeType":"YulTypedName","src":"11263:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11274:11:36","nodeType":"YulTypedName","src":"11274:11:36","type":""}],"src":"11190:169:36"},{"body":{"nativeSrc":"11457:285:36","nodeType":"YulBlock","src":"11457:285:36","statements":[{"nativeSrc":"11467:53:36","nodeType":"YulVariableDeclaration","src":"11467:53:36","value":{"arguments":[{"name":"value","nativeSrc":"11514:5:36","nodeType":"YulIdentifier","src":"11514:5:36"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"11481:32:36","nodeType":"YulIdentifier","src":"11481:32:36"},"nativeSrc":"11481:39:36","nodeType":"YulFunctionCall","src":"11481:39:36"},"variables":[{"name":"length","nativeSrc":"11471:6:36","nodeType":"YulTypedName","src":"11471:6:36","type":""}]},{"nativeSrc":"11529:78:36","nodeType":"YulAssignment","src":"11529:78:36","value":{"arguments":[{"name":"pos","nativeSrc":"11595:3:36","nodeType":"YulIdentifier","src":"11595:3:36"},{"name":"length","nativeSrc":"11600:6:36","nodeType":"YulIdentifier","src":"11600:6:36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11536:58:36","nodeType":"YulIdentifier","src":"11536:58:36"},"nativeSrc":"11536:71:36","nodeType":"YulFunctionCall","src":"11536:71:36"},"variableNames":[{"name":"pos","nativeSrc":"11529:3:36","nodeType":"YulIdentifier","src":"11529:3:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11655:5:36","nodeType":"YulIdentifier","src":"11655:5:36"},{"kind":"number","nativeSrc":"11662:4:36","nodeType":"YulLiteral","src":"11662:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11651:3:36","nodeType":"YulIdentifier","src":"11651:3:36"},"nativeSrc":"11651:16:36","nodeType":"YulFunctionCall","src":"11651:16:36"},{"name":"pos","nativeSrc":"11669:3:36","nodeType":"YulIdentifier","src":"11669:3:36"},{"name":"length","nativeSrc":"11674:6:36","nodeType":"YulIdentifier","src":"11674:6:36"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11616:34:36","nodeType":"YulIdentifier","src":"11616:34:36"},"nativeSrc":"11616:65:36","nodeType":"YulFunctionCall","src":"11616:65:36"},"nativeSrc":"11616:65:36","nodeType":"YulExpressionStatement","src":"11616:65:36"},{"nativeSrc":"11690:46:36","nodeType":"YulAssignment","src":"11690:46:36","value":{"arguments":[{"name":"pos","nativeSrc":"11701:3:36","nodeType":"YulIdentifier","src":"11701:3:36"},{"arguments":[{"name":"length","nativeSrc":"11728:6:36","nodeType":"YulIdentifier","src":"11728:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11706:21:36","nodeType":"YulIdentifier","src":"11706:21:36"},"nativeSrc":"11706:29:36","nodeType":"YulFunctionCall","src":"11706:29:36"}],"functionName":{"name":"add","nativeSrc":"11697:3:36","nodeType":"YulIdentifier","src":"11697:3:36"},"nativeSrc":"11697:39:36","nodeType":"YulFunctionCall","src":"11697:39:36"},"variableNames":[{"name":"end","nativeSrc":"11690:3:36","nodeType":"YulIdentifier","src":"11690:3:36"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11365:377:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11438:5:36","nodeType":"YulTypedName","src":"11438:5:36","type":""},{"name":"pos","nativeSrc":"11445:3:36","nodeType":"YulTypedName","src":"11445:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11453:3:36","nodeType":"YulTypedName","src":"11453:3:36","type":""}],"src":"11365:377:36"},{"body":{"nativeSrc":"11866:195:36","nodeType":"YulBlock","src":"11866:195:36","statements":[{"nativeSrc":"11876:26:36","nodeType":"YulAssignment","src":"11876:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"11888:9:36","nodeType":"YulIdentifier","src":"11888:9:36"},{"kind":"number","nativeSrc":"11899:2:36","nodeType":"YulLiteral","src":"11899:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11884:3:36","nodeType":"YulIdentifier","src":"11884:3:36"},"nativeSrc":"11884:18:36","nodeType":"YulFunctionCall","src":"11884:18:36"},"variableNames":[{"name":"tail","nativeSrc":"11876:4:36","nodeType":"YulIdentifier","src":"11876:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11923:9:36","nodeType":"YulIdentifier","src":"11923:9:36"},{"kind":"number","nativeSrc":"11934:1:36","nodeType":"YulLiteral","src":"11934:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11919:3:36","nodeType":"YulIdentifier","src":"11919:3:36"},"nativeSrc":"11919:17:36","nodeType":"YulFunctionCall","src":"11919:17:36"},{"arguments":[{"name":"tail","nativeSrc":"11942:4:36","nodeType":"YulIdentifier","src":"11942:4:36"},{"name":"headStart","nativeSrc":"11948:9:36","nodeType":"YulIdentifier","src":"11948:9:36"}],"functionName":{"name":"sub","nativeSrc":"11938:3:36","nodeType":"YulIdentifier","src":"11938:3:36"},"nativeSrc":"11938:20:36","nodeType":"YulFunctionCall","src":"11938:20:36"}],"functionName":{"name":"mstore","nativeSrc":"11912:6:36","nodeType":"YulIdentifier","src":"11912:6:36"},"nativeSrc":"11912:47:36","nodeType":"YulFunctionCall","src":"11912:47:36"},"nativeSrc":"11912:47:36","nodeType":"YulExpressionStatement","src":"11912:47:36"},{"nativeSrc":"11968:86:36","nodeType":"YulAssignment","src":"11968:86:36","value":{"arguments":[{"name":"value0","nativeSrc":"12040:6:36","nodeType":"YulIdentifier","src":"12040:6:36"},{"name":"tail","nativeSrc":"12049:4:36","nodeType":"YulIdentifier","src":"12049:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11976:63:36","nodeType":"YulIdentifier","src":"11976:63:36"},"nativeSrc":"11976:78:36","nodeType":"YulFunctionCall","src":"11976:78:36"},"variableNames":[{"name":"tail","nativeSrc":"11968:4:36","nodeType":"YulIdentifier","src":"11968:4:36"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11748:313:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11838:9:36","nodeType":"YulTypedName","src":"11838:9:36","type":""},{"name":"value0","nativeSrc":"11850:6:36","nodeType":"YulTypedName","src":"11850:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11861:4:36","nodeType":"YulTypedName","src":"11861:4:36","type":""}],"src":"11748:313:36"},{"body":{"nativeSrc":"12125:40:36","nodeType":"YulBlock","src":"12125:40:36","statements":[{"nativeSrc":"12136:22:36","nodeType":"YulAssignment","src":"12136:22:36","value":{"arguments":[{"name":"value","nativeSrc":"12152:5:36","nodeType":"YulIdentifier","src":"12152:5:36"}],"functionName":{"name":"mload","nativeSrc":"12146:5:36","nodeType":"YulIdentifier","src":"12146:5:36"},"nativeSrc":"12146:12:36","nodeType":"YulFunctionCall","src":"12146:12:36"},"variableNames":[{"name":"length","nativeSrc":"12136:6:36","nodeType":"YulIdentifier","src":"12136:6:36"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12067:98:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12108:5:36","nodeType":"YulTypedName","src":"12108:5:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12118:6:36","nodeType":"YulTypedName","src":"12118:6:36","type":""}],"src":"12067:98:36"},{"body":{"nativeSrc":"12227:60:36","nodeType":"YulBlock","src":"12227:60:36","statements":[{"nativeSrc":"12237:11:36","nodeType":"YulAssignment","src":"12237:11:36","value":{"name":"ptr","nativeSrc":"12245:3:36","nodeType":"YulIdentifier","src":"12245:3:36"},"variableNames":[{"name":"data","nativeSrc":"12237:4:36","nodeType":"YulIdentifier","src":"12237:4:36"}]},{"nativeSrc":"12258:22:36","nodeType":"YulAssignment","src":"12258:22:36","value":{"arguments":[{"name":"ptr","nativeSrc":"12270:3:36","nodeType":"YulIdentifier","src":"12270:3:36"},{"kind":"number","nativeSrc":"12275:4:36","nodeType":"YulLiteral","src":"12275:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12266:3:36","nodeType":"YulIdentifier","src":"12266:3:36"},"nativeSrc":"12266:14:36","nodeType":"YulFunctionCall","src":"12266:14:36"},"variableNames":[{"name":"data","nativeSrc":"12258:4:36","nodeType":"YulIdentifier","src":"12258:4:36"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12171:116:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12214:3:36","nodeType":"YulTypedName","src":"12214:3:36","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12222:4:36","nodeType":"YulTypedName","src":"12222:4:36","type":""}],"src":"12171:116:36"},{"body":{"nativeSrc":"12348:99:36","nodeType":"YulBlock","src":"12348:99:36","statements":[{"nativeSrc":"12359:42:36","nodeType":"YulVariableDeclaration","src":"12359:42:36","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"12396:3:36","nodeType":"YulIdentifier","src":"12396:3:36"}],"functionName":{"name":"mload","nativeSrc":"12390:5:36","nodeType":"YulIdentifier","src":"12390:5:36"},"nativeSrc":"12390:10:36","nodeType":"YulFunctionCall","src":"12390:10:36"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12372:17:36","nodeType":"YulIdentifier","src":"12372:17:36"},"nativeSrc":"12372:29:36","nodeType":"YulFunctionCall","src":"12372:29:36"},"variables":[{"name":"value","nativeSrc":"12363:5:36","nodeType":"YulTypedName","src":"12363:5:36","type":""}]},{"nativeSrc":"12411:29:36","nodeType":"YulAssignment","src":"12411:29:36","value":{"name":"value","nativeSrc":"12435:5:36","nodeType":"YulIdentifier","src":"12435:5:36"},"variableNames":[{"name":"returnValue","nativeSrc":"12411:11:36","nodeType":"YulIdentifier","src":"12411:11:36"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"12293:154:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12328:3:36","nodeType":"YulTypedName","src":"12328:3:36","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"12336:11:36","nodeType":"YulTypedName","src":"12336:11:36","type":""}],"src":"12293:154:36"},{"body":{"nativeSrc":"12543:504:36","nodeType":"YulBlock","src":"12543:504:36","statements":[{"nativeSrc":"12554:52:36","nodeType":"YulVariableDeclaration","src":"12554:52:36","value":{"arguments":[{"name":"array","nativeSrc":"12600:5:36","nodeType":"YulIdentifier","src":"12600:5:36"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12568:31:36","nodeType":"YulIdentifier","src":"12568:31:36"},"nativeSrc":"12568:38:36","nodeType":"YulFunctionCall","src":"12568:38:36"},"variables":[{"name":"length","nativeSrc":"12558:6:36","nodeType":"YulTypedName","src":"12558:6:36","type":""}]},{"nativeSrc":"12615:21:36","nodeType":"YulVariableDeclaration","src":"12615:21:36","value":{"name":"array","nativeSrc":"12631:5:36","nodeType":"YulIdentifier","src":"12631:5:36"},"variables":[{"name":"dataArea","nativeSrc":"12619:8:36","nodeType":"YulTypedName","src":"12619:8:36","type":""}]},{"nativeSrc":"12646:52:36","nodeType":"YulAssignment","src":"12646:52:36","value":{"arguments":[{"name":"array","nativeSrc":"12692:5:36","nodeType":"YulIdentifier","src":"12692:5:36"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12658:33:36","nodeType":"YulIdentifier","src":"12658:33:36"},"nativeSrc":"12658:40:36","nodeType":"YulFunctionCall","src":"12658:40:36"},"variableNames":[{"name":"dataArea","nativeSrc":"12646:8:36","nodeType":"YulIdentifier","src":"12646:8:36"}]},{"nativeSrc":"12708:44:36","nodeType":"YulAssignment","src":"12708:44:36","value":{"arguments":[{"name":"dataArea","nativeSrc":"12743:8:36","nodeType":"YulIdentifier","src":"12743:8:36"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"12717:25:36","nodeType":"YulIdentifier","src":"12717:25:36"},"nativeSrc":"12717:35:36","nodeType":"YulFunctionCall","src":"12717:35:36"},"variableNames":[{"name":"value","nativeSrc":"12708:5:36","nodeType":"YulIdentifier","src":"12708:5:36"}]},{"body":{"nativeSrc":"12780:260:36","nodeType":"YulBlock","src":"12780:260:36","statements":[{"nativeSrc":"12794:236:36","nodeType":"YulAssignment","src":"12794:236:36","value":{"arguments":[{"name":"value","nativeSrc":"12824:5:36","nodeType":"YulIdentifier","src":"12824:5:36"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12891:1:36","nodeType":"YulLiteral","src":"12891:1:36","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"12898:2:36","nodeType":"YulLiteral","src":"12898:2:36","type":"","value":"32"},{"name":"length","nativeSrc":"12902:6:36","nodeType":"YulIdentifier","src":"12902:6:36"}],"functionName":{"name":"sub","nativeSrc":"12894:3:36","nodeType":"YulIdentifier","src":"12894:3:36"},"nativeSrc":"12894:15:36","nodeType":"YulFunctionCall","src":"12894:15:36"}],"functionName":{"name":"mul","nativeSrc":"12887:3:36","nodeType":"YulIdentifier","src":"12887:3:36"},"nativeSrc":"12887:23:36","nodeType":"YulFunctionCall","src":"12887:23:36"},{"kind":"number","nativeSrc":"12932:66:36","nodeType":"YulLiteral","src":"12932:66:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"12847:18:36","nodeType":"YulIdentifier","src":"12847:18:36"},"nativeSrc":"12847:169:36","nodeType":"YulFunctionCall","src":"12847:169:36"}],"functionName":{"name":"and","nativeSrc":"12803:3:36","nodeType":"YulIdentifier","src":"12803:3:36"},"nativeSrc":"12803:227:36","nodeType":"YulFunctionCall","src":"12803:227:36"},"variableNames":[{"name":"value","nativeSrc":"12794:5:36","nodeType":"YulIdentifier","src":"12794:5:36"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12768:6:36","nodeType":"YulIdentifier","src":"12768:6:36"},{"kind":"number","nativeSrc":"12776:2:36","nodeType":"YulLiteral","src":"12776:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12765:2:36","nodeType":"YulIdentifier","src":"12765:2:36"},"nativeSrc":"12765:14:36","nodeType":"YulFunctionCall","src":"12765:14:36"},"nativeSrc":"12762:278:36","nodeType":"YulIf","src":"12762:278:36"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"12453:594:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"12527:5:36","nodeType":"YulTypedName","src":"12527:5:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12537:5:36","nodeType":"YulTypedName","src":"12537:5:36","type":""}],"src":"12453:594:36"},{"body":{"nativeSrc":"13081:152:36","nodeType":"YulBlock","src":"13081:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13098:1:36","nodeType":"YulLiteral","src":"13098:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"13101:77:36","nodeType":"YulLiteral","src":"13101:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13091:6:36","nodeType":"YulIdentifier","src":"13091:6:36"},"nativeSrc":"13091:88:36","nodeType":"YulFunctionCall","src":"13091:88:36"},"nativeSrc":"13091:88:36","nodeType":"YulExpressionStatement","src":"13091:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13195:1:36","nodeType":"YulLiteral","src":"13195:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"13198:4:36","nodeType":"YulLiteral","src":"13198:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13188:6:36","nodeType":"YulIdentifier","src":"13188:6:36"},"nativeSrc":"13188:15:36","nodeType":"YulFunctionCall","src":"13188:15:36"},"nativeSrc":"13188:15:36","nodeType":"YulExpressionStatement","src":"13188:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13219:1:36","nodeType":"YulLiteral","src":"13219:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"13222:4:36","nodeType":"YulLiteral","src":"13222:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13212:6:36","nodeType":"YulIdentifier","src":"13212:6:36"},"nativeSrc":"13212:15:36","nodeType":"YulFunctionCall","src":"13212:15:36"},"nativeSrc":"13212:15:36","nodeType":"YulExpressionStatement","src":"13212:15:36"}]},"name":"panic_error_0x11","nativeSrc":"13053:180:36","nodeType":"YulFunctionDefinition","src":"13053:180:36"},{"body":{"nativeSrc":"13283:147:36","nodeType":"YulBlock","src":"13283:147:36","statements":[{"nativeSrc":"13293:25:36","nodeType":"YulAssignment","src":"13293:25:36","value":{"arguments":[{"name":"x","nativeSrc":"13316:1:36","nodeType":"YulIdentifier","src":"13316:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13298:17:36","nodeType":"YulIdentifier","src":"13298:17:36"},"nativeSrc":"13298:20:36","nodeType":"YulFunctionCall","src":"13298:20:36"},"variableNames":[{"name":"x","nativeSrc":"13293:1:36","nodeType":"YulIdentifier","src":"13293:1:36"}]},{"nativeSrc":"13327:25:36","nodeType":"YulAssignment","src":"13327:25:36","value":{"arguments":[{"name":"y","nativeSrc":"13350:1:36","nodeType":"YulIdentifier","src":"13350:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13332:17:36","nodeType":"YulIdentifier","src":"13332:17:36"},"nativeSrc":"13332:20:36","nodeType":"YulFunctionCall","src":"13332:20:36"},"variableNames":[{"name":"y","nativeSrc":"13327:1:36","nodeType":"YulIdentifier","src":"13327:1:36"}]},{"nativeSrc":"13361:16:36","nodeType":"YulAssignment","src":"13361:16:36","value":{"arguments":[{"name":"x","nativeSrc":"13372:1:36","nodeType":"YulIdentifier","src":"13372:1:36"},{"name":"y","nativeSrc":"13375:1:36","nodeType":"YulIdentifier","src":"13375:1:36"}],"functionName":{"name":"add","nativeSrc":"13368:3:36","nodeType":"YulIdentifier","src":"13368:3:36"},"nativeSrc":"13368:9:36","nodeType":"YulFunctionCall","src":"13368:9:36"},"variableNames":[{"name":"sum","nativeSrc":"13361:3:36","nodeType":"YulIdentifier","src":"13361:3:36"}]},{"body":{"nativeSrc":"13401:22:36","nodeType":"YulBlock","src":"13401:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13403:16:36","nodeType":"YulIdentifier","src":"13403:16:36"},"nativeSrc":"13403:18:36","nodeType":"YulFunctionCall","src":"13403:18:36"},"nativeSrc":"13403:18:36","nodeType":"YulExpressionStatement","src":"13403:18:36"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13393:1:36","nodeType":"YulIdentifier","src":"13393:1:36"},{"name":"sum","nativeSrc":"13396:3:36","nodeType":"YulIdentifier","src":"13396:3:36"}],"functionName":{"name":"gt","nativeSrc":"13390:2:36","nodeType":"YulIdentifier","src":"13390:2:36"},"nativeSrc":"13390:10:36","nodeType":"YulFunctionCall","src":"13390:10:36"},"nativeSrc":"13387:36:36","nodeType":"YulIf","src":"13387:36:36"}]},"name":"checked_add_t_uint256","nativeSrc":"13239:191:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13270:1:36","nodeType":"YulTypedName","src":"13270:1:36","type":""},{"name":"y","nativeSrc":"13273:1:36","nodeType":"YulTypedName","src":"13273:1:36","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13279:3:36","nodeType":"YulTypedName","src":"13279:3:36","type":""}],"src":"13239:191:36"},{"body":{"nativeSrc":"13590:288:36","nodeType":"YulBlock","src":"13590:288:36","statements":[{"nativeSrc":"13600:26:36","nodeType":"YulAssignment","src":"13600:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"13612:9:36","nodeType":"YulIdentifier","src":"13612:9:36"},{"kind":"number","nativeSrc":"13623:2:36","nodeType":"YulLiteral","src":"13623:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13608:3:36","nodeType":"YulIdentifier","src":"13608:3:36"},"nativeSrc":"13608:18:36","nodeType":"YulFunctionCall","src":"13608:18:36"},"variableNames":[{"name":"tail","nativeSrc":"13600:4:36","nodeType":"YulIdentifier","src":"13600:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13680:6:36","nodeType":"YulIdentifier","src":"13680:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"13693:9:36","nodeType":"YulIdentifier","src":"13693:9:36"},{"kind":"number","nativeSrc":"13704:1:36","nodeType":"YulLiteral","src":"13704:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13689:3:36","nodeType":"YulIdentifier","src":"13689:3:36"},"nativeSrc":"13689:17:36","nodeType":"YulFunctionCall","src":"13689:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13636:43:36","nodeType":"YulIdentifier","src":"13636:43:36"},"nativeSrc":"13636:71:36","nodeType":"YulFunctionCall","src":"13636:71:36"},"nativeSrc":"13636:71:36","nodeType":"YulExpressionStatement","src":"13636:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13761:6:36","nodeType":"YulIdentifier","src":"13761:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"13774:9:36","nodeType":"YulIdentifier","src":"13774:9:36"},{"kind":"number","nativeSrc":"13785:2:36","nodeType":"YulLiteral","src":"13785:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13770:3:36","nodeType":"YulIdentifier","src":"13770:3:36"},"nativeSrc":"13770:18:36","nodeType":"YulFunctionCall","src":"13770:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13717:43:36","nodeType":"YulIdentifier","src":"13717:43:36"},"nativeSrc":"13717:72:36","nodeType":"YulFunctionCall","src":"13717:72:36"},"nativeSrc":"13717:72:36","nodeType":"YulExpressionStatement","src":"13717:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13843:6:36","nodeType":"YulIdentifier","src":"13843:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"13856:9:36","nodeType":"YulIdentifier","src":"13856:9:36"},{"kind":"number","nativeSrc":"13867:2:36","nodeType":"YulLiteral","src":"13867:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13852:3:36","nodeType":"YulIdentifier","src":"13852:3:36"},"nativeSrc":"13852:18:36","nodeType":"YulFunctionCall","src":"13852:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13799:43:36","nodeType":"YulIdentifier","src":"13799:43:36"},"nativeSrc":"13799:72:36","nodeType":"YulFunctionCall","src":"13799:72:36"},"nativeSrc":"13799:72:36","nodeType":"YulExpressionStatement","src":"13799:72:36"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13436:442:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13546:9:36","nodeType":"YulTypedName","src":"13546:9:36","type":""},{"name":"value2","nativeSrc":"13558:6:36","nodeType":"YulTypedName","src":"13558:6:36","type":""},{"name":"value1","nativeSrc":"13566:6:36","nodeType":"YulTypedName","src":"13566:6:36","type":""},{"name":"value0","nativeSrc":"13574:6:36","nodeType":"YulTypedName","src":"13574:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13585:4:36","nodeType":"YulTypedName","src":"13585:4:36","type":""}],"src":"13436:442:36"},{"body":{"nativeSrc":"13982:124:36","nodeType":"YulBlock","src":"13982:124:36","statements":[{"nativeSrc":"13992:26:36","nodeType":"YulAssignment","src":"13992:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"14004:9:36","nodeType":"YulIdentifier","src":"14004:9:36"},{"kind":"number","nativeSrc":"14015:2:36","nodeType":"YulLiteral","src":"14015:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14000:3:36","nodeType":"YulIdentifier","src":"14000:3:36"},"nativeSrc":"14000:18:36","nodeType":"YulFunctionCall","src":"14000:18:36"},"variableNames":[{"name":"tail","nativeSrc":"13992:4:36","nodeType":"YulIdentifier","src":"13992:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14072:6:36","nodeType":"YulIdentifier","src":"14072:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"14085:9:36","nodeType":"YulIdentifier","src":"14085:9:36"},{"kind":"number","nativeSrc":"14096:1:36","nodeType":"YulLiteral","src":"14096:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14081:3:36","nodeType":"YulIdentifier","src":"14081:3:36"},"nativeSrc":"14081:17:36","nodeType":"YulFunctionCall","src":"14081:17:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14028:43:36","nodeType":"YulIdentifier","src":"14028:43:36"},"nativeSrc":"14028:71:36","nodeType":"YulFunctionCall","src":"14028:71:36"},"nativeSrc":"14028:71:36","nodeType":"YulExpressionStatement","src":"14028:71:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"13884:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13954:9:36","nodeType":"YulTypedName","src":"13954:9:36","type":""},{"name":"value0","nativeSrc":"13966:6:36","nodeType":"YulTypedName","src":"13966:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13977:4:36","nodeType":"YulTypedName","src":"13977:4:36","type":""}],"src":"13884:222:36"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x1A0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x34DE CODESIZE SUB DUP1 PUSH2 0x34DE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x33 SWAP2 SWAP1 PUSH2 0x8AE JUMP JUMPDEST DUP4 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER DUP8 DUP8 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0xB78 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x8D SWAP2 SWAP1 PUSH2 0xB78 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x102 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111 DUP2 PUSH2 0x215 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x126 PUSH1 0x6 DUP4 PUSH2 0x2DB PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x142 PUSH1 0x7 DUP3 PUSH2 0x2DB PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x17F PUSH2 0x32B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH2 0x180 DUP2 DUP2 MSTORE POP POP PUSH2 0x20B CALLER DUP7 PUSH2 0x386 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x2FD JUMPI PUSH2 0x2F6 DUP4 PUSH2 0x40E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x325 JUMP JUMPDEST DUP3 PUSH2 0x30D DUP4 PUSH2 0x476 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0xB78 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40A PUSH1 0x0 DUP4 DUP4 PUSH2 0x480 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x45B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x467 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D2 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x55E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x555 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x63B JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CC DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E9 DUP2 PUSH2 0x6C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x742 DUP3 PUSH2 0x6F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x774 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x780 DUP3 DUP3 PUSH2 0x739 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7A0 JUMPI PUSH2 0x79F PUSH2 0x70A JUMP JUMPDEST JUMPDEST PUSH2 0x7A9 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x7EE DUP5 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x80F JUMPI PUSH2 0x80E PUSH2 0x6F4 JUMP JUMPDEST JUMPDEST PUSH2 0x81A DUP5 DUP3 DUP6 PUSH2 0x7B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x837 JUMPI PUSH2 0x836 PUSH2 0x6EF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x847 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B DUP3 PUSH2 0x850 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88B DUP2 PUSH2 0x870 JUMP JUMPDEST DUP2 EQ PUSH2 0x896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A8 DUP2 PUSH2 0x882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8CA JUMPI PUSH2 0x8C9 PUSH2 0x6AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP9 DUP3 DUP10 ADD PUSH2 0x6DA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH2 0x905 DUP9 DUP3 DUP10 ADD PUSH2 0x822 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x926 JUMPI PUSH2 0x925 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH2 0x932 DUP9 DUP3 DUP10 ADD PUSH2 0x822 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x943 DUP9 DUP3 DUP10 ADD PUSH2 0x899 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x954 DUP9 DUP3 DUP10 ADD PUSH2 0x6DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x9B3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9C6 JUMPI PUSH2 0x9C5 PUSH2 0x96C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xA2E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0xA38 DUP7 DUP4 PUSH2 0x9F1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0xA70 PUSH2 0xA6B DUP5 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8F DUP4 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0xAA3 PUSH2 0xA9B DUP3 PUSH2 0xA7C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x9FE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xAB8 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0xAC3 DUP2 DUP5 DUP5 PUSH2 0xA86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAE7 JUMPI PUSH2 0xADC PUSH1 0x0 DUP3 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xAC9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB2C JUMPI PUSH2 0xAFD DUP2 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0xB06 DUP5 PUSH2 0x9E1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB15 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB29 PUSH2 0xB21 DUP6 PUSH2 0x9E1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xAC8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xB31 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB68 DUP4 DUP4 PUSH2 0xB3E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB81 DUP3 PUSH2 0x961 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x70A JUMP JUMPDEST JUMPDEST PUSH2 0xBA4 DUP3 SLOAD PUSH2 0x99B JUMP JUMPDEST PUSH2 0xBAF DUP3 DUP3 DUP6 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBE2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xBD0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xBDA DUP6 DUP3 PUSH2 0xB5C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xBF0 DUP7 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBF3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xC35 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xC31 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xB3E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0x870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC87 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xCB1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xCBE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xCCB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xCD8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xCE5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0B DUP3 PUSH2 0x961 JUMP JUMPDEST PUSH2 0xD15 DUP2 DUP6 PUSH2 0xCEF JUMP JUMPDEST SWAP4 POP PUSH2 0xD25 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH2 0x6F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD53 DUP2 DUP5 PUSH2 0xD00 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD82 DUP3 MLOAD PUSH2 0xC74 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD96 DUP3 PUSH2 0xD5B JUMP JUMPDEST DUP3 PUSH2 0xDA0 DUP5 PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAB DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDE6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x9F1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE2C DUP3 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE37 DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE6A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xE77 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x25A4 PUSH2 0xF3A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x565 ADD MSTORE DUP2 DUP2 PUSH2 0x667 ADD MSTORE DUP2 DUP2 PUSH2 0x72B ADD MSTORE PUSH2 0xBBB ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x629 ADD MSTORE DUP2 DUP2 PUSH2 0x91B ADD MSTORE PUSH2 0xB9A ADD MSTORE PUSH1 0x0 PUSH2 0x102C ADD MSTORE PUSH1 0x0 PUSH2 0xFF1 ADD MSTORE PUSH1 0x0 PUSH2 0x1541 ADD MSTORE PUSH1 0x0 PUSH2 0x1520 ADD MSTORE PUSH1 0x0 PUSH2 0xD9F ADD MSTORE PUSH1 0x0 PUSH2 0xDF5 ADD MSTORE PUSH1 0x0 PUSH2 0xE1E ADD MSTORE PUSH2 0x25A4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xB01D6D82 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xFB647CD9 EQ PUSH2 0x415 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x341 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x3FB3CA20 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x4B24691F EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x70BE42A6 EQ PUSH2 0x2BB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x76A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41D PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x445 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x471 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x493 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D3 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x514 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x521 DUP6 DUP3 DUP6 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x52C DUP6 DUP6 DUP6 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B PUSH2 0xD9B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS PUSH32 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x467DBDF4E2CF848CDA2E91CD4FE12EED702C327975F0CA15FC227E822E72CA5B PUSH32 0x0 PUSH2 0x752 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x760 SWAP3 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x772 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x0 PUSH2 0xED9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x789 DUP3 PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x7A4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x1023 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CD JUMPI PUSH2 0x7CC PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x873 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89F SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x901 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x90E DUP2 DUP6 DUP6 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x982 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x9B1 DUP13 PUSH2 0x105E JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C7 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x9EA DUP3 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9FA DUP3 DUP8 DUP8 DUP8 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA6E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP3 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA79 DUP11 DUP11 DUP11 PUSH2 0xC00 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB14 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB86 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xED9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH32 0x0 PUSH2 0xBE2 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0xBEA PUSH2 0x83A JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC0D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1E DUP5 DUP5 PUSH2 0xA85 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC91 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x10FF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD19 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD96 DUP4 DUP4 DUP4 PUSH2 0x12D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE17 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xE44 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xE4F JUMP JUMPDEST PUSH2 0xE4C PUSH2 0x14FB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE5A PUSH2 0xBF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE78 PUSH2 0x83A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED7 JUMPI PUSH2 0xE9B PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x101E PUSH1 0x6 PUSH32 0x0 PUSH2 0x1591 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1059 PUSH1 0x7 PUSH32 0x0 PUSH2 0x1591 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C8 PUSH2 0x10C2 PUSH2 0xD9B JUMP JUMPDEST DUP4 PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x10E1 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1682 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10F1 DUP3 DUP3 PUSH2 0x1776 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12D0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1328 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x2473 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13B4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1444 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1491 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1576 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x15AE JUMPI PUSH2 0x15A7 DUP4 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH2 0x163B JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x15BA SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E6 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1633 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1608 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1633 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1616 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x16C2 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x16E7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1709 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175D JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x176C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1801 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1828 JUMPI PUSH2 0x1827 PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x186D JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1864 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1880 JUMPI PUSH2 0x187F PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1893 JUMPI PUSH2 0x1892 PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x18D5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CC SWAP2 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x18E7 DUP4 PUSH2 0x194E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1938 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1995 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A00 DUP3 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x1A0A DUP2 DUP6 PUSH2 0x19A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x1A23 DUP2 PUSH2 0x19E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A48 DUP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8F DUP3 PUSH2 0x1A64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ABC DUP2 PUSH2 0x1A96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD5 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF2 DUP2 PUSH2 0x1ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP6 DUP3 DUP7 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2E DUP6 DUP3 DUP7 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4D DUP2 PUSH2 0x1B38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1BB0 DUP3 PUSH2 0x19E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE2 PUSH2 0x1A50 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEE DUP3 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST PUSH2 0x1C17 DUP3 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C46 PUSH2 0x1C41 DUP5 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH2 0x1C6D DUP5 DUP3 DUP6 PUSH2 0x1C24 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CCB DUP8 DUP3 DUP9 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CDC DUP8 DUP3 DUP9 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CED DUP8 DUP3 DUP9 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x1A5F JUMP JUMPDEST JUMPDEST PUSH2 0x1D1A DUP8 DUP3 DUP9 ADD PUSH2 0x1C75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D5B DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D85 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBF JUMPI PUSH2 0x1DBE PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DCD DUP7 DUP3 DUP8 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DDE DUP7 DUP3 DUP8 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DEF DUP7 DUP3 DUP8 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E0F DUP2 PUSH2 0x1DF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E43 DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E7A JUMPI PUSH2 0x1E79 PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E88 DUP5 DUP3 DUP6 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC6 DUP2 PUSH2 0x1E91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ED5 DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F10 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F22 DUP4 DUP4 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F46 DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH2 0x1F50 DUP2 DUP6 PUSH2 0x1EE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F5B DUP4 PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F8C JUMPI DUP2 MLOAD PUSH2 0x1F73 DUP9 DUP3 PUSH2 0x1F16 JUMP JUMPDEST SWAP8 POP PUSH2 0x1F7E DUP4 PUSH2 0x1F2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F5F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1FAE PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1EBD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1FC0 DUP2 DUP10 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FD4 DUP2 DUP9 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE3 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1FF0 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x1FFD PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1E3A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x200F DUP2 DUP5 PUSH2 0x1F3B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2032 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205D PUSH2 0x2058 PUSH2 0x2053 DUP5 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x1A64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206F DUP3 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2081 DUP3 PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x2076 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20BB DUP2 PUSH2 0x1DF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x20C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D8 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E7 DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP2 EQ PUSH2 0x20F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2104 DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2129 JUMPI PUSH2 0x2128 PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP11 DUP3 DUP12 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2148 DUP11 DUP3 DUP12 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2159 DUP11 DUP3 DUP12 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x216A DUP11 DUP3 DUP12 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x217B DUP11 DUP3 DUP12 ADD PUSH2 0x20C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x218C DUP11 DUP3 DUP12 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x219D DUP11 DUP3 DUP12 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C3 JUMPI PUSH2 0x21C2 PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2201 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x220E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x221B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x2228 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2278 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x2231 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436572746966696361746520616C7265616479206672616374696F6E616C697A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22ED PUSH1 0x22 DUP4 PUSH2 0x19A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F8 DUP3 PUSH2 0x2291 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231C DUP2 PUSH2 0x22E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2338 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x2345 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x2352 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x236F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x237C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2398 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x23A5 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x23B2 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x23BF PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x23CC PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x23D9 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x2406 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2422 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x242F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x243C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x247E DUP3 PUSH2 0x1AC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2489 DUP4 PUSH2 0x1AC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x24A1 JUMPI PUSH2 0x24A0 PUSH2 0x2444 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24BC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x24C9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x24D6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x24E3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x24F0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x250F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x251C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E06 JUMP JUMPDEST PUSH2 0x2529 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x2536 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E3A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xD1 CALLER PUSH5 0x27F0C98878 0x27 PUSH30 0x4FFA8935600A098749AF3405A62D20EF13749ED50E64736F6C634300081C STOP CALLER ","sourceMap":"381:1905:33:-:0;;;842:455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1089:9;1616:4:8;3328:431:26;;;;;;;;;;;;;;;;;1108:10:33;1053:9;1064:11;1675:5:6;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:26;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1577:52:8;1165:26:33::3;1131:61;;;;;;;;::::0;::::3;1224:19;1203:40;;;;::::0;::::3;1256:33;1262:10;1274:14;1256:5;;;:33;;:::i;:::-;842:455:::0;;;;;381:1905;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:22:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:26:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;7458:208:6:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;1708:286:22:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:23:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;6008:1107:6:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:36:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:248::-;2052:1;2062:113;2076:6;2073:1;2070:13;2062:113;;;2161:1;2156:3;2152:11;2146:18;2142:1;2137:3;2133:11;2126:39;2098:2;2095:1;2091:10;2086:15;;2062:113;;;2209:1;2200:6;2195:3;2191:16;2184:27;2032:186;1970:248;;;:::o;2224:434::-;2313:5;2338:66;2354:49;2396:6;2354:49;:::i;:::-;2338:66;:::i;:::-;2329:75;;2427:6;2420:5;2413:21;2465:4;2458:5;2454:16;2503:3;2494:6;2489:3;2485:16;2482:25;2479:112;;;2510:79;;:::i;:::-;2479:112;2600:52;2645:6;2640:3;2635;2600:52;:::i;:::-;2319:339;2224:434;;;;;:::o;2678:355::-;2745:5;2794:3;2787:4;2779:6;2775:17;2771:27;2761:122;;2802:79;;:::i;:::-;2761:122;2912:6;2906:13;2937:90;3023:3;3015:6;3008:4;3000:6;2996:17;2937:90;:::i;:::-;2928:99;;2751:282;2678:355;;;;:::o;3039:126::-;3076:7;3116:42;3109:5;3105:54;3094:65;;3039:126;;;:::o;3171:96::-;3208:7;3237:24;3255:5;3237:24;:::i;:::-;3226:35;;3171:96;;;:::o;3273:122::-;3346:24;3364:5;3346:24;:::i;:::-;3339:5;3336:35;3326:63;;3385:1;3382;3375:12;3326:63;3273:122;:::o;3401:143::-;3458:5;3489:6;3483:13;3474:22;;3505:33;3532:5;3505:33;:::i;:::-;3401:143;;;;:::o;3550:1323::-;3676:6;3684;3692;3700;3708;3757:3;3745:9;3736:7;3732:23;3728:33;3725:120;;;3764:79;;:::i;:::-;3725:120;3884:1;3909:64;3965:7;3956:6;3945:9;3941:22;3909:64;:::i;:::-;3899:74;;3855:128;4043:2;4032:9;4028:18;4022:25;4074:18;4066:6;4063:30;4060:117;;;4096:79;;:::i;:::-;4060:117;4201:74;4267:7;4258:6;4247:9;4243:22;4201:74;:::i;:::-;4191:84;;3993:292;4345:2;4334:9;4330:18;4324:25;4376:18;4368:6;4365:30;4362:117;;;4398:79;;:::i;:::-;4362:117;4503:74;4569:7;4560:6;4549:9;4545:22;4503:74;:::i;:::-;4493:84;;4295:292;4626:2;4652:64;4708:7;4699:6;4688:9;4684:22;4652:64;:::i;:::-;4642:74;;4597:129;4765:3;4792:64;4848:7;4839:6;4828:9;4824:22;4792:64;:::i;:::-;4782:74;;4736:130;3550:1323;;;;;;;;:::o;4879:99::-;4931:6;4965:5;4959:12;4949:22;;4879:99;;;:::o;4984:180::-;5032:77;5029:1;5022:88;5129:4;5126:1;5119:15;5153:4;5150:1;5143:15;5170:320;5214:6;5251:1;5245:4;5241:12;5231:22;;5298:1;5292:4;5288:12;5319:18;5309:81;;5375:4;5367:6;5363:17;5353:27;;5309:81;5437:2;5429:6;5426:14;5406:18;5403:38;5400:84;;5456:18;;:::i;:::-;5400:84;5221:269;5170:320;;;:::o;5496:141::-;5545:4;5568:3;5560:11;;5591:3;5588:1;5581:14;5625:4;5622:1;5612:18;5604:26;;5496:141;;;:::o;5643:93::-;5680:6;5727:2;5722;5715:5;5711:14;5707:23;5697:33;;5643:93;;;:::o;5742:107::-;5786:8;5836:5;5830:4;5826:16;5805:37;;5742:107;;;;:::o;5855:393::-;5924:6;5974:1;5962:10;5958:18;5997:97;6027:66;6016:9;5997:97;:::i;:::-;6115:39;6145:8;6134:9;6115:39;:::i;:::-;6103:51;;6187:4;6183:9;6176:5;6172:21;6163:30;;6236:4;6226:8;6222:19;6215:5;6212:30;6202:40;;5931:317;;5855:393;;;;;:::o;6254:60::-;6282:3;6303:5;6296:12;;6254:60;;;:::o;6320:142::-;6370:9;6403:53;6421:34;6430:24;6448:5;6430:24;:::i;:::-;6421:34;:::i;:::-;6403:53;:::i;:::-;6390:66;;6320:142;;;:::o;6468:75::-;6511:3;6532:5;6525:12;;6468:75;;;:::o;6549:269::-;6659:39;6690:7;6659:39;:::i;:::-;6720:91;6769:41;6793:16;6769:41;:::i;:::-;6761:6;6754:4;6748:11;6720:91;:::i;:::-;6714:4;6707:105;6625:193;6549:269;;;:::o;6824:73::-;6869:3;6824:73;:::o;6903:189::-;6980:32;;:::i;:::-;7021:65;7079:6;7071;7065:4;7021:65;:::i;:::-;6956:136;6903:189;;:::o;7098:186::-;7158:120;7175:3;7168:5;7165:14;7158:120;;;7229:39;7266:1;7259:5;7229:39;:::i;:::-;7202:1;7195:5;7191:13;7182:22;;7158:120;;;7098:186;;:::o;7290:543::-;7391:2;7386:3;7383:11;7380:446;;;7425:38;7457:5;7425:38;:::i;:::-;7509:29;7527:10;7509:29;:::i;:::-;7499:8;7495:44;7692:2;7680:10;7677:18;7674:49;;;7713:8;7698:23;;7674:49;7736:80;7792:22;7810:3;7792:22;:::i;:::-;7782:8;7778:37;7765:11;7736:80;:::i;:::-;7395:431;;7380:446;7290:543;;;:::o;7839:117::-;7893:8;7943:5;7937:4;7933:16;7912:37;;7839:117;;;;:::o;7962:169::-;8006:6;8039:51;8087:1;8083:6;8075:5;8072:1;8068:13;8039:51;:::i;:::-;8035:56;8120:4;8114;8110:15;8100:25;;8013:118;7962:169;;;;:::o;8136:295::-;8212:4;8358:29;8383:3;8377:4;8358:29;:::i;:::-;8350:37;;8420:3;8417:1;8413:11;8407:4;8404:21;8396:29;;8136:295;;;;:::o;8436:1395::-;8553:37;8586:3;8553:37;:::i;:::-;8655:18;8647:6;8644:30;8641:56;;;8677:18;;:::i;:::-;8641:56;8721:38;8753:4;8747:11;8721:38;:::i;:::-;8806:67;8866:6;8858;8852:4;8806:67;:::i;:::-;8900:1;8924:4;8911:17;;8956:2;8948:6;8945:14;8973:1;8968:618;;;;9630:1;9647:6;9644:77;;;9696:9;9691:3;9687:19;9681:26;9672:35;;9644:77;9747:67;9807:6;9800:5;9747:67;:::i;:::-;9741:4;9734:81;9603:222;8938:887;;8968:618;9020:4;9016:9;9008:6;9004:22;9054:37;9086:4;9054:37;:::i;:::-;9113:1;9127:208;9141:7;9138:1;9135:14;9127:208;;;9220:9;9215:3;9211:19;9205:26;9197:6;9190:42;9271:1;9263:6;9259:14;9249:24;;9318:2;9307:9;9303:18;9290:31;;9164:4;9161:1;9157:12;9152:17;;9127:208;;;9363:6;9354:7;9351:19;9348:179;;;9421:9;9416:3;9412:19;9406:26;9464:48;9506:4;9498:6;9494:17;9483:9;9464:48;:::i;:::-;9456:6;9449:64;9371:156;9348:179;9573:1;9569;9561:6;9557:14;9553:22;9547:4;9540:36;8975:611;;;8938:887;;8528:1303;;;8436:1395;;:::o;9837:118::-;9924:24;9942:5;9924:24;:::i;:::-;9919:3;9912:37;9837:118;;:::o;9961:222::-;10054:4;10092:2;10081:9;10077:18;10069:26;;10105:71;10173:1;10162:9;10158:17;10149:6;10105:71;:::i;:::-;9961:222;;;;:::o;10189:77::-;10226:7;10255:5;10244:16;;10189:77;;;:::o;10272:118::-;10359:24;10377:5;10359:24;:::i;:::-;10354:3;10347:37;10272:118;;:::o;10396:::-;10483:24;10501:5;10483:24;:::i;:::-;10478:3;10471:37;10396:118;;:::o;10520:664::-;10725:4;10763:3;10752:9;10748:19;10740:27;;10777:71;10845:1;10834:9;10830:17;10821:6;10777:71;:::i;:::-;10858:72;10926:2;10915:9;10911:18;10902:6;10858:72;:::i;:::-;10940;11008:2;10997:9;10993:18;10984:6;10940:72;:::i;:::-;11022;11090:2;11079:9;11075:18;11066:6;11022:72;:::i;:::-;11104:73;11172:3;11161:9;11157:19;11148:6;11104:73;:::i;:::-;10520:664;;;;;;;;:::o;11190:169::-;11274:11;11308:6;11303:3;11296:19;11348:4;11343:3;11339:14;11324:29;;11190:169;;;;:::o;11365:377::-;11453:3;11481:39;11514:5;11481:39;:::i;:::-;11536:71;11600:6;11595:3;11536:71;:::i;:::-;11529:78;;11616:65;11674:6;11669:3;11662:4;11655:5;11651:16;11616:65;:::i;:::-;11706:29;11728:6;11706:29;:::i;:::-;11701:3;11697:39;11690:46;;11457:285;11365:377;;;;:::o;11748:313::-;11861:4;11899:2;11888:9;11884:18;11876:26;;11948:9;11942:4;11938:20;11934:1;11923:9;11919:17;11912:47;11976:78;12049:4;12040:6;11976:78;:::i;:::-;11968:86;;11748:313;;;;:::o;12067:98::-;12118:6;12152:5;12146:12;12136:22;;12067:98;;;:::o;12171:116::-;12222:4;12245:3;12237:11;;12275:4;12270:3;12266:14;12258:22;;12171:116;;;:::o;12293:154::-;12336:11;12372:29;12396:3;12390:10;12372:29;:::i;:::-;12435:5;12411:29;;12348:99;12293:154;;;:::o;12453:594::-;12537:5;12568:38;12600:5;12568:38;:::i;:::-;12631:5;12658:40;12692:5;12658:40;:::i;:::-;12646:52;;12717:35;12743:8;12717:35;:::i;:::-;12708:44;;12776:2;12768:6;12765:14;12762:278;;;12847:169;12932:66;12902:6;12898:2;12894:15;12891:1;12887:23;12847:169;:::i;:::-;12824:5;12803:227;12794:236;;12762:278;12543:504;;12453:594;;;:::o;13053:180::-;13101:77;13098:1;13091:88;13198:4;13195:1;13188:15;13222:4;13219:1;13212:15;13239:191;13279:3;13298:20;13316:1;13298:20;:::i;:::-;13293:25;;13332:20;13350:1;13332:20;:::i;:::-;13327:25;;13375:1;13372;13368:9;13361:16;;13396:3;13393:1;13390:10;13387:36;;;13403:18;;:::i;:::-;13387:36;13239:191;;;;:::o;13436:442::-;13585:4;13623:2;13612:9;13608:18;13600:26;;13636:71;13704:1;13693:9;13689:17;13680:6;13636:71;:::i;:::-;13717:72;13785:2;13774:9;13770:18;13761:6;13717:72;:::i;:::-;13799;13867:2;13856:9;13852:18;13843:6;13799:72;:::i;:::-;13436:442;;;;;;:::o;13884:222::-;13977:4;14015:2;14004:9;14000:18;13992:26;;14028:71;14096:1;14085:9;14081:17;14072:6;14028:71;:::i;:::-;13884:222;;;;:::o;381:1905:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1087":{"entryPoint":1345,"id":1087,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_4822":{"entryPoint":4072,"id":4822,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4834":{"entryPoint":4131,"id":4834,"parameterSlots":0,"returnSlots":1},"@_approve_747":{"entryPoint":3072,"id":747,"parameterSlots":3,"returnSlots":0},"@_approve_807":{"entryPoint":4351,"id":807,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4752":{"entryPoint":5371,"id":4752,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":3666,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_4731":{"entryPoint":3483,"id":4731,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_4768":{"entryPoint":4277,"id":4768,"parameterSlots":1,"returnSlots":1},"@_msgSender_2512":{"entryPoint":3064,"id":2512,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_855":{"entryPoint":3090,"id":855,"parameterSlots":3,"returnSlots":0},"@_throwError_4607":{"entryPoint":6006,"id":4607,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3801,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_586":{"entryPoint":3239,"id":586,"parameterSlots":3,"returnSlots":0},"@_update_663":{"entryPoint":4822,"id":663,"parameterSlots":3,"returnSlots":0},"@_useNonce_2572":{"entryPoint":4190,"id":2572,"parameterSlots":1,"returnSlots":1},"@allowance_483":{"entryPoint":2693,"id":483,"parameterSlots":2,"returnSlots":1},"@approve_507":{"entryPoint":1224,"id":507,"parameterSlots":2,"returnSlots":1},"@balanceOf_442":{"entryPoint":1415,"id":442,"parameterSlots":1,"returnSlots":1},"@byteLength_2837":{"entryPoint":6478,"id":2837,"parameterSlots":1,"returnSlots":1},"@certificateTokenId_8480":{"entryPoint":1379,"id":8480,"parameterSlots":0,"returnSlots":0},"@decimals_420":{"entryPoint":1336,"id":420,"parameterSlots":0,"returnSlots":1},"@eip712Domain_4810":{"entryPoint":1936,"id":4810,"parameterSlots":0,"returnSlots":7},"@fractionalizeCertificate_8568":{"entryPoint":1487,"id":8568,"parameterSlots":0,"returnSlots":0},"@getFractionInfo_8592":{"entryPoint":2962,"id":8592,"parameterSlots":0,"returnSlots":4},"@iRecCertificateContract_8478":{"entryPoint":2329,"id":8478,"parameterSlots":0,"returnSlots":0},"@isFractionalized_8482":{"entryPoint":1360,"id":8482,"parameterSlots":0,"returnSlots":0},"@name_402":{"entryPoint":1078,"id":402,"parameterSlots":0,"returnSlots":1},"@nonces_1077":{"entryPoint":1918,"id":1077,"parameterSlots":1,"returnSlots":1},"@nonces_2557":{"entryPoint":3999,"id":2557,"parameterSlots":1,"returnSlots":1},"@onERC721Received_2422":{"entryPoint":1259,"id":2422,"parameterSlots":4,"returnSlots":1},"@owner_67":{"entryPoint":2106,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1060":{"entryPoint":2365,"id":1060,"parameterSlots":7,"returnSlots":0},"@recover_4558":{"entryPoint":4303,"id":4558,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1898,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_411":{"entryPoint":2148,"id":411,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2904":{"entryPoint":5521,"id":2904,"parameterSlots":2,"returnSlots":1},"@toString_2805":{"entryPoint":6362,"id":2805,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4908":{"entryPoint":5697,"id":4908,"parameterSlots":2,"returnSlots":1},"@totalSupply_429":{"entryPoint":1279,"id":429,"parameterSlots":0,"returnSlots":1},"@transferFrom_539":{"entryPoint":1289,"id":539,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2828,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_466":{"entryPoint":2294,"id":466,"parameterSlots":2,"returnSlots":1},"@tryRecover_4522":{"entryPoint":5762,"id":4522,"parameterSlots":4,"returnSlots":3},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7219,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":8393,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8620,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7590,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7331,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":8458,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6904,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7884,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6980,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":7869,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7738,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":7506,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC721_$2224_to_t_address_fromStack":{"entryPoint":8328,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4_to_t_string_memory_ptr_fromStack":{"entryPoint":8928,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7943,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7548,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7686,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":9188,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8995,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9229,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":8684,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8089,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7753,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9091,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":9383,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":9466,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":7521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC721_$2224__to_t_address__fromStack_reversed":{"entryPoint":8343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8963,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9050,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":7701,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7128,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6736,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7155,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7927,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7899,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6558,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7982,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7910,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6569,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9331,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6788,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6968,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":7825,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7462,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6756,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6850,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7673,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC721_$2224_to_t_address":{"entryPoint":8310,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8292,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7204,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6586,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8800,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7079,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":8248,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9284,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":9535,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8753,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7032,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7022,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7027,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6751,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6746,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6628,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4":{"entryPoint":8849,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6806,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8414,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6860,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":8370,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:22045:36","nodeType":"YulBlock","src":"0:22045:36","statements":[{"body":{"nativeSrc":"66:40:36","nodeType":"YulBlock","src":"66:40:36","statements":[{"nativeSrc":"77:22:36","nodeType":"YulAssignment","src":"77:22:36","value":{"arguments":[{"name":"value","nativeSrc":"93:5:36","nodeType":"YulIdentifier","src":"93:5:36"}],"functionName":{"name":"mload","nativeSrc":"87:5:36","nodeType":"YulIdentifier","src":"87:5:36"},"nativeSrc":"87:12:36","nodeType":"YulFunctionCall","src":"87:12:36"},"variableNames":[{"name":"length","nativeSrc":"77:6:36","nodeType":"YulIdentifier","src":"77:6:36"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:36","nodeType":"YulTypedName","src":"49:5:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:36","nodeType":"YulTypedName","src":"59:6:36","type":""}],"src":"7:99:36"},{"body":{"nativeSrc":"208:73:36","nodeType":"YulBlock","src":"208:73:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:36","nodeType":"YulIdentifier","src":"225:3:36"},{"name":"length","nativeSrc":"230:6:36","nodeType":"YulIdentifier","src":"230:6:36"}],"functionName":{"name":"mstore","nativeSrc":"218:6:36","nodeType":"YulIdentifier","src":"218:6:36"},"nativeSrc":"218:19:36","nodeType":"YulFunctionCall","src":"218:19:36"},"nativeSrc":"218:19:36","nodeType":"YulExpressionStatement","src":"218:19:36"},{"nativeSrc":"246:29:36","nodeType":"YulAssignment","src":"246:29:36","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:36","nodeType":"YulIdentifier","src":"265:3:36"},{"kind":"number","nativeSrc":"270:4:36","nodeType":"YulLiteral","src":"270:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:36","nodeType":"YulIdentifier","src":"261:3:36"},"nativeSrc":"261:14:36","nodeType":"YulFunctionCall","src":"261:14:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:36","nodeType":"YulIdentifier","src":"246:11:36"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:36","nodeType":"YulTypedName","src":"180:3:36","type":""},{"name":"length","nativeSrc":"185:6:36","nodeType":"YulTypedName","src":"185:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:36","nodeType":"YulTypedName","src":"196:11:36","type":""}],"src":"112:169:36"},{"body":{"nativeSrc":"349:186:36","nodeType":"YulBlock","src":"349:186:36","statements":[{"nativeSrc":"360:10:36","nodeType":"YulVariableDeclaration","src":"360:10:36","value":{"kind":"number","nativeSrc":"369:1:36","nodeType":"YulLiteral","src":"369:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:36","nodeType":"YulTypedName","src":"364:1:36","type":""}]},{"body":{"nativeSrc":"429:63:36","nodeType":"YulBlock","src":"429:63:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:36","nodeType":"YulIdentifier","src":"454:3:36"},{"name":"i","nativeSrc":"459:1:36","nodeType":"YulIdentifier","src":"459:1:36"}],"functionName":{"name":"add","nativeSrc":"450:3:36","nodeType":"YulIdentifier","src":"450:3:36"},"nativeSrc":"450:11:36","nodeType":"YulFunctionCall","src":"450:11:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:36","nodeType":"YulIdentifier","src":"473:3:36"},{"name":"i","nativeSrc":"478:1:36","nodeType":"YulIdentifier","src":"478:1:36"}],"functionName":{"name":"add","nativeSrc":"469:3:36","nodeType":"YulIdentifier","src":"469:3:36"},"nativeSrc":"469:11:36","nodeType":"YulFunctionCall","src":"469:11:36"}],"functionName":{"name":"mload","nativeSrc":"463:5:36","nodeType":"YulIdentifier","src":"463:5:36"},"nativeSrc":"463:18:36","nodeType":"YulFunctionCall","src":"463:18:36"}],"functionName":{"name":"mstore","nativeSrc":"443:6:36","nodeType":"YulIdentifier","src":"443:6:36"},"nativeSrc":"443:39:36","nodeType":"YulFunctionCall","src":"443:39:36"},"nativeSrc":"443:39:36","nodeType":"YulExpressionStatement","src":"443:39:36"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:36","nodeType":"YulIdentifier","src":"390:1:36"},{"name":"length","nativeSrc":"393:6:36","nodeType":"YulIdentifier","src":"393:6:36"}],"functionName":{"name":"lt","nativeSrc":"387:2:36","nodeType":"YulIdentifier","src":"387:2:36"},"nativeSrc":"387:13:36","nodeType":"YulFunctionCall","src":"387:13:36"},"nativeSrc":"379:113:36","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:36","nodeType":"YulBlock","src":"401:19:36","statements":[{"nativeSrc":"403:15:36","nodeType":"YulAssignment","src":"403:15:36","value":{"arguments":[{"name":"i","nativeSrc":"412:1:36","nodeType":"YulIdentifier","src":"412:1:36"},{"kind":"number","nativeSrc":"415:2:36","nodeType":"YulLiteral","src":"415:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:36","nodeType":"YulIdentifier","src":"408:3:36"},"nativeSrc":"408:10:36","nodeType":"YulFunctionCall","src":"408:10:36"},"variableNames":[{"name":"i","nativeSrc":"403:1:36","nodeType":"YulIdentifier","src":"403:1:36"}]}]},"pre":{"nativeSrc":"383:3:36","nodeType":"YulBlock","src":"383:3:36","statements":[]},"src":"379:113:36"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:36","nodeType":"YulIdentifier","src":"512:3:36"},{"name":"length","nativeSrc":"517:6:36","nodeType":"YulIdentifier","src":"517:6:36"}],"functionName":{"name":"add","nativeSrc":"508:3:36","nodeType":"YulIdentifier","src":"508:3:36"},"nativeSrc":"508:16:36","nodeType":"YulFunctionCall","src":"508:16:36"},{"kind":"number","nativeSrc":"526:1:36","nodeType":"YulLiteral","src":"526:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:36","nodeType":"YulIdentifier","src":"501:6:36"},"nativeSrc":"501:27:36","nodeType":"YulFunctionCall","src":"501:27:36"},"nativeSrc":"501:27:36","nodeType":"YulExpressionStatement","src":"501:27:36"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:36","nodeType":"YulTypedName","src":"331:3:36","type":""},{"name":"dst","nativeSrc":"336:3:36","nodeType":"YulTypedName","src":"336:3:36","type":""},{"name":"length","nativeSrc":"341:6:36","nodeType":"YulTypedName","src":"341:6:36","type":""}],"src":"287:248:36"},{"body":{"nativeSrc":"589:54:36","nodeType":"YulBlock","src":"589:54:36","statements":[{"nativeSrc":"599:38:36","nodeType":"YulAssignment","src":"599:38:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:36","nodeType":"YulIdentifier","src":"617:5:36"},{"kind":"number","nativeSrc":"624:2:36","nodeType":"YulLiteral","src":"624:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:36","nodeType":"YulIdentifier","src":"613:3:36"},"nativeSrc":"613:14:36","nodeType":"YulFunctionCall","src":"613:14:36"},{"arguments":[{"kind":"number","nativeSrc":"633:2:36","nodeType":"YulLiteral","src":"633:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:36","nodeType":"YulIdentifier","src":"629:3:36"},"nativeSrc":"629:7:36","nodeType":"YulFunctionCall","src":"629:7:36"}],"functionName":{"name":"and","nativeSrc":"609:3:36","nodeType":"YulIdentifier","src":"609:3:36"},"nativeSrc":"609:28:36","nodeType":"YulFunctionCall","src":"609:28:36"},"variableNames":[{"name":"result","nativeSrc":"599:6:36","nodeType":"YulIdentifier","src":"599:6:36"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:36","nodeType":"YulTypedName","src":"572:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:36","nodeType":"YulTypedName","src":"582:6:36","type":""}],"src":"541:102:36"},{"body":{"nativeSrc":"741:285:36","nodeType":"YulBlock","src":"741:285:36","statements":[{"nativeSrc":"751:53:36","nodeType":"YulVariableDeclaration","src":"751:53:36","value":{"arguments":[{"name":"value","nativeSrc":"798:5:36","nodeType":"YulIdentifier","src":"798:5:36"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:36","nodeType":"YulIdentifier","src":"765:32:36"},"nativeSrc":"765:39:36","nodeType":"YulFunctionCall","src":"765:39:36"},"variables":[{"name":"length","nativeSrc":"755:6:36","nodeType":"YulTypedName","src":"755:6:36","type":""}]},{"nativeSrc":"813:78:36","nodeType":"YulAssignment","src":"813:78:36","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:36","nodeType":"YulIdentifier","src":"879:3:36"},{"name":"length","nativeSrc":"884:6:36","nodeType":"YulIdentifier","src":"884:6:36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:36","nodeType":"YulIdentifier","src":"820:58:36"},"nativeSrc":"820:71:36","nodeType":"YulFunctionCall","src":"820:71:36"},"variableNames":[{"name":"pos","nativeSrc":"813:3:36","nodeType":"YulIdentifier","src":"813:3:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:36","nodeType":"YulIdentifier","src":"939:5:36"},{"kind":"number","nativeSrc":"946:4:36","nodeType":"YulLiteral","src":"946:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:36","nodeType":"YulIdentifier","src":"935:3:36"},"nativeSrc":"935:16:36","nodeType":"YulFunctionCall","src":"935:16:36"},{"name":"pos","nativeSrc":"953:3:36","nodeType":"YulIdentifier","src":"953:3:36"},{"name":"length","nativeSrc":"958:6:36","nodeType":"YulIdentifier","src":"958:6:36"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:36","nodeType":"YulIdentifier","src":"900:34:36"},"nativeSrc":"900:65:36","nodeType":"YulFunctionCall","src":"900:65:36"},"nativeSrc":"900:65:36","nodeType":"YulExpressionStatement","src":"900:65:36"},{"nativeSrc":"974:46:36","nodeType":"YulAssignment","src":"974:46:36","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:36","nodeType":"YulIdentifier","src":"985:3:36"},{"arguments":[{"name":"length","nativeSrc":"1012:6:36","nodeType":"YulIdentifier","src":"1012:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:36","nodeType":"YulIdentifier","src":"990:21:36"},"nativeSrc":"990:29:36","nodeType":"YulFunctionCall","src":"990:29:36"}],"functionName":{"name":"add","nativeSrc":"981:3:36","nodeType":"YulIdentifier","src":"981:3:36"},"nativeSrc":"981:39:36","nodeType":"YulFunctionCall","src":"981:39:36"},"variableNames":[{"name":"end","nativeSrc":"974:3:36","nodeType":"YulIdentifier","src":"974:3:36"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:36","nodeType":"YulTypedName","src":"722:5:36","type":""},{"name":"pos","nativeSrc":"729:3:36","nodeType":"YulTypedName","src":"729:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:36","nodeType":"YulTypedName","src":"737:3:36","type":""}],"src":"649:377:36"},{"body":{"nativeSrc":"1150:195:36","nodeType":"YulBlock","src":"1150:195:36","statements":[{"nativeSrc":"1160:26:36","nodeType":"YulAssignment","src":"1160:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:36","nodeType":"YulIdentifier","src":"1172:9:36"},{"kind":"number","nativeSrc":"1183:2:36","nodeType":"YulLiteral","src":"1183:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:36","nodeType":"YulIdentifier","src":"1168:3:36"},"nativeSrc":"1168:18:36","nodeType":"YulFunctionCall","src":"1168:18:36"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:36","nodeType":"YulIdentifier","src":"1160:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:36","nodeType":"YulIdentifier","src":"1207:9:36"},{"kind":"number","nativeSrc":"1218:1:36","nodeType":"YulLiteral","src":"1218:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:36","nodeType":"YulIdentifier","src":"1203:3:36"},"nativeSrc":"1203:17:36","nodeType":"YulFunctionCall","src":"1203:17:36"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:36","nodeType":"YulIdentifier","src":"1226:4:36"},{"name":"headStart","nativeSrc":"1232:9:36","nodeType":"YulIdentifier","src":"1232:9:36"}],"functionName":{"name":"sub","nativeSrc":"1222:3:36","nodeType":"YulIdentifier","src":"1222:3:36"},"nativeSrc":"1222:20:36","nodeType":"YulFunctionCall","src":"1222:20:36"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:36","nodeType":"YulIdentifier","src":"1196:6:36"},"nativeSrc":"1196:47:36","nodeType":"YulFunctionCall","src":"1196:47:36"},"nativeSrc":"1196:47:36","nodeType":"YulExpressionStatement","src":"1196:47:36"},{"nativeSrc":"1252:86:36","nodeType":"YulAssignment","src":"1252:86:36","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:36","nodeType":"YulIdentifier","src":"1324:6:36"},{"name":"tail","nativeSrc":"1333:4:36","nodeType":"YulIdentifier","src":"1333:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:36","nodeType":"YulIdentifier","src":"1260:63:36"},"nativeSrc":"1260:78:36","nodeType":"YulFunctionCall","src":"1260:78:36"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:36","nodeType":"YulIdentifier","src":"1252:4:36"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:36","nodeType":"YulTypedName","src":"1122:9:36","type":""},{"name":"value0","nativeSrc":"1134:6:36","nodeType":"YulTypedName","src":"1134:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:36","nodeType":"YulTypedName","src":"1145:4:36","type":""}],"src":"1032:313:36"},{"body":{"nativeSrc":"1391:35:36","nodeType":"YulBlock","src":"1391:35:36","statements":[{"nativeSrc":"1401:19:36","nodeType":"YulAssignment","src":"1401:19:36","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:36","nodeType":"YulLiteral","src":"1417:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:36","nodeType":"YulIdentifier","src":"1411:5:36"},"nativeSrc":"1411:9:36","nodeType":"YulFunctionCall","src":"1411:9:36"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:36","nodeType":"YulIdentifier","src":"1401:6:36"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:36","nodeType":"YulTypedName","src":"1384:6:36","type":""}],"src":"1351:75:36"},{"body":{"nativeSrc":"1521:28:36","nodeType":"YulBlock","src":"1521:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:36","nodeType":"YulLiteral","src":"1538:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:36","nodeType":"YulLiteral","src":"1541:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:36","nodeType":"YulIdentifier","src":"1531:6:36"},"nativeSrc":"1531:12:36","nodeType":"YulFunctionCall","src":"1531:12:36"},"nativeSrc":"1531:12:36","nodeType":"YulExpressionStatement","src":"1531:12:36"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:36","nodeType":"YulFunctionDefinition","src":"1432:117:36"},{"body":{"nativeSrc":"1644:28:36","nodeType":"YulBlock","src":"1644:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:36","nodeType":"YulLiteral","src":"1661:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:36","nodeType":"YulLiteral","src":"1664:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:36","nodeType":"YulIdentifier","src":"1654:6:36"},"nativeSrc":"1654:12:36","nodeType":"YulFunctionCall","src":"1654:12:36"},"nativeSrc":"1654:12:36","nodeType":"YulExpressionStatement","src":"1654:12:36"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:36","nodeType":"YulFunctionDefinition","src":"1555:117:36"},{"body":{"nativeSrc":"1723:81:36","nodeType":"YulBlock","src":"1723:81:36","statements":[{"nativeSrc":"1733:65:36","nodeType":"YulAssignment","src":"1733:65:36","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:36","nodeType":"YulIdentifier","src":"1748:5:36"},{"kind":"number","nativeSrc":"1755:42:36","nodeType":"YulLiteral","src":"1755:42:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:36","nodeType":"YulIdentifier","src":"1744:3:36"},"nativeSrc":"1744:54:36","nodeType":"YulFunctionCall","src":"1744:54:36"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:36","nodeType":"YulIdentifier","src":"1733:7:36"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:36","nodeType":"YulTypedName","src":"1705:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:36","nodeType":"YulTypedName","src":"1715:7:36","type":""}],"src":"1678:126:36"},{"body":{"nativeSrc":"1855:51:36","nodeType":"YulBlock","src":"1855:51:36","statements":[{"nativeSrc":"1865:35:36","nodeType":"YulAssignment","src":"1865:35:36","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:36","nodeType":"YulIdentifier","src":"1894:5:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:36","nodeType":"YulIdentifier","src":"1876:17:36"},"nativeSrc":"1876:24:36","nodeType":"YulFunctionCall","src":"1876:24:36"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:36","nodeType":"YulIdentifier","src":"1865:7:36"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:36","nodeType":"YulTypedName","src":"1837:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:36","nodeType":"YulTypedName","src":"1847:7:36","type":""}],"src":"1810:96:36"},{"body":{"nativeSrc":"1955:79:36","nodeType":"YulBlock","src":"1955:79:36","statements":[{"body":{"nativeSrc":"2012:16:36","nodeType":"YulBlock","src":"2012:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:36","nodeType":"YulLiteral","src":"2021:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:36","nodeType":"YulLiteral","src":"2024:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:36","nodeType":"YulIdentifier","src":"2014:6:36"},"nativeSrc":"2014:12:36","nodeType":"YulFunctionCall","src":"2014:12:36"},"nativeSrc":"2014:12:36","nodeType":"YulExpressionStatement","src":"2014:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:36","nodeType":"YulIdentifier","src":"1978:5:36"},{"arguments":[{"name":"value","nativeSrc":"2003:5:36","nodeType":"YulIdentifier","src":"2003:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:36","nodeType":"YulIdentifier","src":"1985:17:36"},"nativeSrc":"1985:24:36","nodeType":"YulFunctionCall","src":"1985:24:36"}],"functionName":{"name":"eq","nativeSrc":"1975:2:36","nodeType":"YulIdentifier","src":"1975:2:36"},"nativeSrc":"1975:35:36","nodeType":"YulFunctionCall","src":"1975:35:36"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:36","nodeType":"YulIdentifier","src":"1968:6:36"},"nativeSrc":"1968:43:36","nodeType":"YulFunctionCall","src":"1968:43:36"},"nativeSrc":"1965:63:36","nodeType":"YulIf","src":"1965:63:36"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:36","nodeType":"YulTypedName","src":"1948:5:36","type":""}],"src":"1912:122:36"},{"body":{"nativeSrc":"2092:87:36","nodeType":"YulBlock","src":"2092:87:36","statements":[{"nativeSrc":"2102:29:36","nodeType":"YulAssignment","src":"2102:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:36","nodeType":"YulIdentifier","src":"2124:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:36","nodeType":"YulIdentifier","src":"2111:12:36"},"nativeSrc":"2111:20:36","nodeType":"YulFunctionCall","src":"2111:20:36"},"variableNames":[{"name":"value","nativeSrc":"2102:5:36","nodeType":"YulIdentifier","src":"2102:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:36","nodeType":"YulIdentifier","src":"2167:5:36"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:36","nodeType":"YulIdentifier","src":"2140:26:36"},"nativeSrc":"2140:33:36","nodeType":"YulFunctionCall","src":"2140:33:36"},"nativeSrc":"2140:33:36","nodeType":"YulExpressionStatement","src":"2140:33:36"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:36","nodeType":"YulTypedName","src":"2070:6:36","type":""},{"name":"end","nativeSrc":"2078:3:36","nodeType":"YulTypedName","src":"2078:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:36","nodeType":"YulTypedName","src":"2086:5:36","type":""}],"src":"2040:139:36"},{"body":{"nativeSrc":"2230:32:36","nodeType":"YulBlock","src":"2230:32:36","statements":[{"nativeSrc":"2240:16:36","nodeType":"YulAssignment","src":"2240:16:36","value":{"name":"value","nativeSrc":"2251:5:36","nodeType":"YulIdentifier","src":"2251:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:36","nodeType":"YulIdentifier","src":"2240:7:36"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:36","nodeType":"YulTypedName","src":"2212:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:36","nodeType":"YulTypedName","src":"2222:7:36","type":""}],"src":"2185:77:36"},{"body":{"nativeSrc":"2311:79:36","nodeType":"YulBlock","src":"2311:79:36","statements":[{"body":{"nativeSrc":"2368:16:36","nodeType":"YulBlock","src":"2368:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:36","nodeType":"YulLiteral","src":"2377:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:36","nodeType":"YulLiteral","src":"2380:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:36","nodeType":"YulIdentifier","src":"2370:6:36"},"nativeSrc":"2370:12:36","nodeType":"YulFunctionCall","src":"2370:12:36"},"nativeSrc":"2370:12:36","nodeType":"YulExpressionStatement","src":"2370:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:36","nodeType":"YulIdentifier","src":"2334:5:36"},{"arguments":[{"name":"value","nativeSrc":"2359:5:36","nodeType":"YulIdentifier","src":"2359:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:36","nodeType":"YulIdentifier","src":"2341:17:36"},"nativeSrc":"2341:24:36","nodeType":"YulFunctionCall","src":"2341:24:36"}],"functionName":{"name":"eq","nativeSrc":"2331:2:36","nodeType":"YulIdentifier","src":"2331:2:36"},"nativeSrc":"2331:35:36","nodeType":"YulFunctionCall","src":"2331:35:36"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:36","nodeType":"YulIdentifier","src":"2324:6:36"},"nativeSrc":"2324:43:36","nodeType":"YulFunctionCall","src":"2324:43:36"},"nativeSrc":"2321:63:36","nodeType":"YulIf","src":"2321:63:36"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:36","nodeType":"YulTypedName","src":"2304:5:36","type":""}],"src":"2268:122:36"},{"body":{"nativeSrc":"2448:87:36","nodeType":"YulBlock","src":"2448:87:36","statements":[{"nativeSrc":"2458:29:36","nodeType":"YulAssignment","src":"2458:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:36","nodeType":"YulIdentifier","src":"2480:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:36","nodeType":"YulIdentifier","src":"2467:12:36"},"nativeSrc":"2467:20:36","nodeType":"YulFunctionCall","src":"2467:20:36"},"variableNames":[{"name":"value","nativeSrc":"2458:5:36","nodeType":"YulIdentifier","src":"2458:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:36","nodeType":"YulIdentifier","src":"2523:5:36"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:36","nodeType":"YulIdentifier","src":"2496:26:36"},"nativeSrc":"2496:33:36","nodeType":"YulFunctionCall","src":"2496:33:36"},"nativeSrc":"2496:33:36","nodeType":"YulExpressionStatement","src":"2496:33:36"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:36","nodeType":"YulTypedName","src":"2426:6:36","type":""},{"name":"end","nativeSrc":"2434:3:36","nodeType":"YulTypedName","src":"2434:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:36","nodeType":"YulTypedName","src":"2442:5:36","type":""}],"src":"2396:139:36"},{"body":{"nativeSrc":"2624:391:36","nodeType":"YulBlock","src":"2624:391:36","statements":[{"body":{"nativeSrc":"2670:83:36","nodeType":"YulBlock","src":"2670:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:36","nodeType":"YulIdentifier","src":"2672:77:36"},"nativeSrc":"2672:79:36","nodeType":"YulFunctionCall","src":"2672:79:36"},"nativeSrc":"2672:79:36","nodeType":"YulExpressionStatement","src":"2672:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:36","nodeType":"YulIdentifier","src":"2645:7:36"},{"name":"headStart","nativeSrc":"2654:9:36","nodeType":"YulIdentifier","src":"2654:9:36"}],"functionName":{"name":"sub","nativeSrc":"2641:3:36","nodeType":"YulIdentifier","src":"2641:3:36"},"nativeSrc":"2641:23:36","nodeType":"YulFunctionCall","src":"2641:23:36"},{"kind":"number","nativeSrc":"2666:2:36","nodeType":"YulLiteral","src":"2666:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:36","nodeType":"YulIdentifier","src":"2637:3:36"},"nativeSrc":"2637:32:36","nodeType":"YulFunctionCall","src":"2637:32:36"},"nativeSrc":"2634:119:36","nodeType":"YulIf","src":"2634:119:36"},{"nativeSrc":"2763:117:36","nodeType":"YulBlock","src":"2763:117:36","statements":[{"nativeSrc":"2778:15:36","nodeType":"YulVariableDeclaration","src":"2778:15:36","value":{"kind":"number","nativeSrc":"2792:1:36","nodeType":"YulLiteral","src":"2792:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:36","nodeType":"YulTypedName","src":"2782:6:36","type":""}]},{"nativeSrc":"2807:63:36","nodeType":"YulAssignment","src":"2807:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:36","nodeType":"YulIdentifier","src":"2842:9:36"},{"name":"offset","nativeSrc":"2853:6:36","nodeType":"YulIdentifier","src":"2853:6:36"}],"functionName":{"name":"add","nativeSrc":"2838:3:36","nodeType":"YulIdentifier","src":"2838:3:36"},"nativeSrc":"2838:22:36","nodeType":"YulFunctionCall","src":"2838:22:36"},{"name":"dataEnd","nativeSrc":"2862:7:36","nodeType":"YulIdentifier","src":"2862:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:36","nodeType":"YulIdentifier","src":"2817:20:36"},"nativeSrc":"2817:53:36","nodeType":"YulFunctionCall","src":"2817:53:36"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:36","nodeType":"YulIdentifier","src":"2807:6:36"}]}]},{"nativeSrc":"2890:118:36","nodeType":"YulBlock","src":"2890:118:36","statements":[{"nativeSrc":"2905:16:36","nodeType":"YulVariableDeclaration","src":"2905:16:36","value":{"kind":"number","nativeSrc":"2919:2:36","nodeType":"YulLiteral","src":"2919:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:36","nodeType":"YulTypedName","src":"2909:6:36","type":""}]},{"nativeSrc":"2935:63:36","nodeType":"YulAssignment","src":"2935:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:36","nodeType":"YulIdentifier","src":"2970:9:36"},{"name":"offset","nativeSrc":"2981:6:36","nodeType":"YulIdentifier","src":"2981:6:36"}],"functionName":{"name":"add","nativeSrc":"2966:3:36","nodeType":"YulIdentifier","src":"2966:3:36"},"nativeSrc":"2966:22:36","nodeType":"YulFunctionCall","src":"2966:22:36"},{"name":"dataEnd","nativeSrc":"2990:7:36","nodeType":"YulIdentifier","src":"2990:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:36","nodeType":"YulIdentifier","src":"2945:20:36"},"nativeSrc":"2945:53:36","nodeType":"YulFunctionCall","src":"2945:53:36"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:36","nodeType":"YulIdentifier","src":"2935:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:36","nodeType":"YulTypedName","src":"2586:9:36","type":""},{"name":"dataEnd","nativeSrc":"2597:7:36","nodeType":"YulTypedName","src":"2597:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:36","nodeType":"YulTypedName","src":"2609:6:36","type":""},{"name":"value1","nativeSrc":"2617:6:36","nodeType":"YulTypedName","src":"2617:6:36","type":""}],"src":"2541:474:36"},{"body":{"nativeSrc":"3063:48:36","nodeType":"YulBlock","src":"3063:48:36","statements":[{"nativeSrc":"3073:32:36","nodeType":"YulAssignment","src":"3073:32:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:36","nodeType":"YulIdentifier","src":"3098:5:36"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:36","nodeType":"YulIdentifier","src":"3091:6:36"},"nativeSrc":"3091:13:36","nodeType":"YulFunctionCall","src":"3091:13:36"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:36","nodeType":"YulIdentifier","src":"3084:6:36"},"nativeSrc":"3084:21:36","nodeType":"YulFunctionCall","src":"3084:21:36"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:36","nodeType":"YulIdentifier","src":"3073:7:36"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:36","nodeType":"YulTypedName","src":"3045:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:36","nodeType":"YulTypedName","src":"3055:7:36","type":""}],"src":"3021:90:36"},{"body":{"nativeSrc":"3176:50:36","nodeType":"YulBlock","src":"3176:50:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:36","nodeType":"YulIdentifier","src":"3193:3:36"},{"arguments":[{"name":"value","nativeSrc":"3213:5:36","nodeType":"YulIdentifier","src":"3213:5:36"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:36","nodeType":"YulIdentifier","src":"3198:14:36"},"nativeSrc":"3198:21:36","nodeType":"YulFunctionCall","src":"3198:21:36"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:36","nodeType":"YulIdentifier","src":"3186:6:36"},"nativeSrc":"3186:34:36","nodeType":"YulFunctionCall","src":"3186:34:36"},"nativeSrc":"3186:34:36","nodeType":"YulExpressionStatement","src":"3186:34:36"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:36","nodeType":"YulTypedName","src":"3164:5:36","type":""},{"name":"pos","nativeSrc":"3171:3:36","nodeType":"YulTypedName","src":"3171:3:36","type":""}],"src":"3117:109:36"},{"body":{"nativeSrc":"3324:118:36","nodeType":"YulBlock","src":"3324:118:36","statements":[{"nativeSrc":"3334:26:36","nodeType":"YulAssignment","src":"3334:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:36","nodeType":"YulIdentifier","src":"3346:9:36"},{"kind":"number","nativeSrc":"3357:2:36","nodeType":"YulLiteral","src":"3357:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:36","nodeType":"YulIdentifier","src":"3342:3:36"},"nativeSrc":"3342:18:36","nodeType":"YulFunctionCall","src":"3342:18:36"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:36","nodeType":"YulIdentifier","src":"3334:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:36","nodeType":"YulIdentifier","src":"3408:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:36","nodeType":"YulIdentifier","src":"3421:9:36"},{"kind":"number","nativeSrc":"3432:1:36","nodeType":"YulLiteral","src":"3432:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:36","nodeType":"YulIdentifier","src":"3417:3:36"},"nativeSrc":"3417:17:36","nodeType":"YulFunctionCall","src":"3417:17:36"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:36","nodeType":"YulIdentifier","src":"3370:37:36"},"nativeSrc":"3370:65:36","nodeType":"YulFunctionCall","src":"3370:65:36"},"nativeSrc":"3370:65:36","nodeType":"YulExpressionStatement","src":"3370:65:36"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:36","nodeType":"YulTypedName","src":"3296:9:36","type":""},{"name":"value0","nativeSrc":"3308:6:36","nodeType":"YulTypedName","src":"3308:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:36","nodeType":"YulTypedName","src":"3319:4:36","type":""}],"src":"3232:210:36"},{"body":{"nativeSrc":"3537:28:36","nodeType":"YulBlock","src":"3537:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3554:1:36","nodeType":"YulLiteral","src":"3554:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3557:1:36","nodeType":"YulLiteral","src":"3557:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3547:6:36","nodeType":"YulIdentifier","src":"3547:6:36"},"nativeSrc":"3547:12:36","nodeType":"YulFunctionCall","src":"3547:12:36"},"nativeSrc":"3547:12:36","nodeType":"YulExpressionStatement","src":"3547:12:36"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3448:117:36","nodeType":"YulFunctionDefinition","src":"3448:117:36"},{"body":{"nativeSrc":"3660:28:36","nodeType":"YulBlock","src":"3660:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3677:1:36","nodeType":"YulLiteral","src":"3677:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3680:1:36","nodeType":"YulLiteral","src":"3680:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3670:6:36","nodeType":"YulIdentifier","src":"3670:6:36"},"nativeSrc":"3670:12:36","nodeType":"YulFunctionCall","src":"3670:12:36"},"nativeSrc":"3670:12:36","nodeType":"YulExpressionStatement","src":"3670:12:36"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"3571:117:36","nodeType":"YulFunctionDefinition","src":"3571:117:36"},{"body":{"nativeSrc":"3722:152:36","nodeType":"YulBlock","src":"3722:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3739:1:36","nodeType":"YulLiteral","src":"3739:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3742:77:36","nodeType":"YulLiteral","src":"3742:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3732:6:36","nodeType":"YulIdentifier","src":"3732:6:36"},"nativeSrc":"3732:88:36","nodeType":"YulFunctionCall","src":"3732:88:36"},"nativeSrc":"3732:88:36","nodeType":"YulExpressionStatement","src":"3732:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3836:1:36","nodeType":"YulLiteral","src":"3836:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"3839:4:36","nodeType":"YulLiteral","src":"3839:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3829:6:36","nodeType":"YulIdentifier","src":"3829:6:36"},"nativeSrc":"3829:15:36","nodeType":"YulFunctionCall","src":"3829:15:36"},"nativeSrc":"3829:15:36","nodeType":"YulExpressionStatement","src":"3829:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3860:1:36","nodeType":"YulLiteral","src":"3860:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3863:4:36","nodeType":"YulLiteral","src":"3863:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3853:6:36","nodeType":"YulIdentifier","src":"3853:6:36"},"nativeSrc":"3853:15:36","nodeType":"YulFunctionCall","src":"3853:15:36"},"nativeSrc":"3853:15:36","nodeType":"YulExpressionStatement","src":"3853:15:36"}]},"name":"panic_error_0x41","nativeSrc":"3694:180:36","nodeType":"YulFunctionDefinition","src":"3694:180:36"},{"body":{"nativeSrc":"3923:238:36","nodeType":"YulBlock","src":"3923:238:36","statements":[{"nativeSrc":"3933:58:36","nodeType":"YulVariableDeclaration","src":"3933:58:36","value":{"arguments":[{"name":"memPtr","nativeSrc":"3955:6:36","nodeType":"YulIdentifier","src":"3955:6:36"},{"arguments":[{"name":"size","nativeSrc":"3985:4:36","nodeType":"YulIdentifier","src":"3985:4:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3963:21:36","nodeType":"YulIdentifier","src":"3963:21:36"},"nativeSrc":"3963:27:36","nodeType":"YulFunctionCall","src":"3963:27:36"}],"functionName":{"name":"add","nativeSrc":"3951:3:36","nodeType":"YulIdentifier","src":"3951:3:36"},"nativeSrc":"3951:40:36","nodeType":"YulFunctionCall","src":"3951:40:36"},"variables":[{"name":"newFreePtr","nativeSrc":"3937:10:36","nodeType":"YulTypedName","src":"3937:10:36","type":""}]},{"body":{"nativeSrc":"4102:22:36","nodeType":"YulBlock","src":"4102:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4104:16:36","nodeType":"YulIdentifier","src":"4104:16:36"},"nativeSrc":"4104:18:36","nodeType":"YulFunctionCall","src":"4104:18:36"},"nativeSrc":"4104:18:36","nodeType":"YulExpressionStatement","src":"4104:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4045:10:36","nodeType":"YulIdentifier","src":"4045:10:36"},{"kind":"number","nativeSrc":"4057:18:36","nodeType":"YulLiteral","src":"4057:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4042:2:36","nodeType":"YulIdentifier","src":"4042:2:36"},"nativeSrc":"4042:34:36","nodeType":"YulFunctionCall","src":"4042:34:36"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4081:10:36","nodeType":"YulIdentifier","src":"4081:10:36"},{"name":"memPtr","nativeSrc":"4093:6:36","nodeType":"YulIdentifier","src":"4093:6:36"}],"functionName":{"name":"lt","nativeSrc":"4078:2:36","nodeType":"YulIdentifier","src":"4078:2:36"},"nativeSrc":"4078:22:36","nodeType":"YulFunctionCall","src":"4078:22:36"}],"functionName":{"name":"or","nativeSrc":"4039:2:36","nodeType":"YulIdentifier","src":"4039:2:36"},"nativeSrc":"4039:62:36","nodeType":"YulFunctionCall","src":"4039:62:36"},"nativeSrc":"4036:88:36","nodeType":"YulIf","src":"4036:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4140:2:36","nodeType":"YulLiteral","src":"4140:2:36","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4144:10:36","nodeType":"YulIdentifier","src":"4144:10:36"}],"functionName":{"name":"mstore","nativeSrc":"4133:6:36","nodeType":"YulIdentifier","src":"4133:6:36"},"nativeSrc":"4133:22:36","nodeType":"YulFunctionCall","src":"4133:22:36"},"nativeSrc":"4133:22:36","nodeType":"YulExpressionStatement","src":"4133:22:36"}]},"name":"finalize_allocation","nativeSrc":"3880:281:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3909:6:36","nodeType":"YulTypedName","src":"3909:6:36","type":""},{"name":"size","nativeSrc":"3917:4:36","nodeType":"YulTypedName","src":"3917:4:36","type":""}],"src":"3880:281:36"},{"body":{"nativeSrc":"4208:88:36","nodeType":"YulBlock","src":"4208:88:36","statements":[{"nativeSrc":"4218:30:36","nodeType":"YulAssignment","src":"4218:30:36","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"4228:18:36","nodeType":"YulIdentifier","src":"4228:18:36"},"nativeSrc":"4228:20:36","nodeType":"YulFunctionCall","src":"4228:20:36"},"variableNames":[{"name":"memPtr","nativeSrc":"4218:6:36","nodeType":"YulIdentifier","src":"4218:6:36"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4277:6:36","nodeType":"YulIdentifier","src":"4277:6:36"},{"name":"size","nativeSrc":"4285:4:36","nodeType":"YulIdentifier","src":"4285:4:36"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4257:19:36","nodeType":"YulIdentifier","src":"4257:19:36"},"nativeSrc":"4257:33:36","nodeType":"YulFunctionCall","src":"4257:33:36"},"nativeSrc":"4257:33:36","nodeType":"YulExpressionStatement","src":"4257:33:36"}]},"name":"allocate_memory","nativeSrc":"4167:129:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"4192:4:36","nodeType":"YulTypedName","src":"4192:4:36","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"4201:6:36","nodeType":"YulTypedName","src":"4201:6:36","type":""}],"src":"4167:129:36"},{"body":{"nativeSrc":"4368:241:36","nodeType":"YulBlock","src":"4368:241:36","statements":[{"body":{"nativeSrc":"4473:22:36","nodeType":"YulBlock","src":"4473:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4475:16:36","nodeType":"YulIdentifier","src":"4475:16:36"},"nativeSrc":"4475:18:36","nodeType":"YulFunctionCall","src":"4475:18:36"},"nativeSrc":"4475:18:36","nodeType":"YulExpressionStatement","src":"4475:18:36"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4445:6:36","nodeType":"YulIdentifier","src":"4445:6:36"},{"kind":"number","nativeSrc":"4453:18:36","nodeType":"YulLiteral","src":"4453:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4442:2:36","nodeType":"YulIdentifier","src":"4442:2:36"},"nativeSrc":"4442:30:36","nodeType":"YulFunctionCall","src":"4442:30:36"},"nativeSrc":"4439:56:36","nodeType":"YulIf","src":"4439:56:36"},{"nativeSrc":"4505:37:36","nodeType":"YulAssignment","src":"4505:37:36","value":{"arguments":[{"name":"length","nativeSrc":"4535:6:36","nodeType":"YulIdentifier","src":"4535:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4513:21:36","nodeType":"YulIdentifier","src":"4513:21:36"},"nativeSrc":"4513:29:36","nodeType":"YulFunctionCall","src":"4513:29:36"},"variableNames":[{"name":"size","nativeSrc":"4505:4:36","nodeType":"YulIdentifier","src":"4505:4:36"}]},{"nativeSrc":"4579:23:36","nodeType":"YulAssignment","src":"4579:23:36","value":{"arguments":[{"name":"size","nativeSrc":"4591:4:36","nodeType":"YulIdentifier","src":"4591:4:36"},{"kind":"number","nativeSrc":"4597:4:36","nodeType":"YulLiteral","src":"4597:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4587:3:36","nodeType":"YulIdentifier","src":"4587:3:36"},"nativeSrc":"4587:15:36","nodeType":"YulFunctionCall","src":"4587:15:36"},"variableNames":[{"name":"size","nativeSrc":"4579:4:36","nodeType":"YulIdentifier","src":"4579:4:36"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"4302:307:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"4352:6:36","nodeType":"YulTypedName","src":"4352:6:36","type":""}],"returnVariables":[{"name":"size","nativeSrc":"4363:4:36","nodeType":"YulTypedName","src":"4363:4:36","type":""}],"src":"4302:307:36"},{"body":{"nativeSrc":"4679:84:36","nodeType":"YulBlock","src":"4679:84:36","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4703:3:36","nodeType":"YulIdentifier","src":"4703:3:36"},{"name":"src","nativeSrc":"4708:3:36","nodeType":"YulIdentifier","src":"4708:3:36"},{"name":"length","nativeSrc":"4713:6:36","nodeType":"YulIdentifier","src":"4713:6:36"}],"functionName":{"name":"calldatacopy","nativeSrc":"4690:12:36","nodeType":"YulIdentifier","src":"4690:12:36"},"nativeSrc":"4690:30:36","nodeType":"YulFunctionCall","src":"4690:30:36"},"nativeSrc":"4690:30:36","nodeType":"YulExpressionStatement","src":"4690:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4740:3:36","nodeType":"YulIdentifier","src":"4740:3:36"},{"name":"length","nativeSrc":"4745:6:36","nodeType":"YulIdentifier","src":"4745:6:36"}],"functionName":{"name":"add","nativeSrc":"4736:3:36","nodeType":"YulIdentifier","src":"4736:3:36"},"nativeSrc":"4736:16:36","nodeType":"YulFunctionCall","src":"4736:16:36"},{"kind":"number","nativeSrc":"4754:1:36","nodeType":"YulLiteral","src":"4754:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4729:6:36","nodeType":"YulIdentifier","src":"4729:6:36"},"nativeSrc":"4729:27:36","nodeType":"YulFunctionCall","src":"4729:27:36"},"nativeSrc":"4729:27:36","nodeType":"YulExpressionStatement","src":"4729:27:36"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4615:148:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4661:3:36","nodeType":"YulTypedName","src":"4661:3:36","type":""},{"name":"dst","nativeSrc":"4666:3:36","nodeType":"YulTypedName","src":"4666:3:36","type":""},{"name":"length","nativeSrc":"4671:6:36","nodeType":"YulTypedName","src":"4671:6:36","type":""}],"src":"4615:148:36"},{"body":{"nativeSrc":"4852:340:36","nodeType":"YulBlock","src":"4852:340:36","statements":[{"nativeSrc":"4862:74:36","nodeType":"YulAssignment","src":"4862:74:36","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4928:6:36","nodeType":"YulIdentifier","src":"4928:6:36"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"4887:40:36","nodeType":"YulIdentifier","src":"4887:40:36"},"nativeSrc":"4887:48:36","nodeType":"YulFunctionCall","src":"4887:48:36"}],"functionName":{"name":"allocate_memory","nativeSrc":"4871:15:36","nodeType":"YulIdentifier","src":"4871:15:36"},"nativeSrc":"4871:65:36","nodeType":"YulFunctionCall","src":"4871:65:36"},"variableNames":[{"name":"array","nativeSrc":"4862:5:36","nodeType":"YulIdentifier","src":"4862:5:36"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"4952:5:36","nodeType":"YulIdentifier","src":"4952:5:36"},{"name":"length","nativeSrc":"4959:6:36","nodeType":"YulIdentifier","src":"4959:6:36"}],"functionName":{"name":"mstore","nativeSrc":"4945:6:36","nodeType":"YulIdentifier","src":"4945:6:36"},"nativeSrc":"4945:21:36","nodeType":"YulFunctionCall","src":"4945:21:36"},"nativeSrc":"4945:21:36","nodeType":"YulExpressionStatement","src":"4945:21:36"},{"nativeSrc":"4975:27:36","nodeType":"YulVariableDeclaration","src":"4975:27:36","value":{"arguments":[{"name":"array","nativeSrc":"4990:5:36","nodeType":"YulIdentifier","src":"4990:5:36"},{"kind":"number","nativeSrc":"4997:4:36","nodeType":"YulLiteral","src":"4997:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4986:3:36","nodeType":"YulIdentifier","src":"4986:3:36"},"nativeSrc":"4986:16:36","nodeType":"YulFunctionCall","src":"4986:16:36"},"variables":[{"name":"dst","nativeSrc":"4979:3:36","nodeType":"YulTypedName","src":"4979:3:36","type":""}]},{"body":{"nativeSrc":"5040:83:36","nodeType":"YulBlock","src":"5040:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5042:77:36","nodeType":"YulIdentifier","src":"5042:77:36"},"nativeSrc":"5042:79:36","nodeType":"YulFunctionCall","src":"5042:79:36"},"nativeSrc":"5042:79:36","nodeType":"YulExpressionStatement","src":"5042:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5021:3:36","nodeType":"YulIdentifier","src":"5021:3:36"},{"name":"length","nativeSrc":"5026:6:36","nodeType":"YulIdentifier","src":"5026:6:36"}],"functionName":{"name":"add","nativeSrc":"5017:3:36","nodeType":"YulIdentifier","src":"5017:3:36"},"nativeSrc":"5017:16:36","nodeType":"YulFunctionCall","src":"5017:16:36"},{"name":"end","nativeSrc":"5035:3:36","nodeType":"YulIdentifier","src":"5035:3:36"}],"functionName":{"name":"gt","nativeSrc":"5014:2:36","nodeType":"YulIdentifier","src":"5014:2:36"},"nativeSrc":"5014:25:36","nodeType":"YulFunctionCall","src":"5014:25:36"},"nativeSrc":"5011:112:36","nodeType":"YulIf","src":"5011:112:36"},{"expression":{"arguments":[{"name":"src","nativeSrc":"5169:3:36","nodeType":"YulIdentifier","src":"5169:3:36"},{"name":"dst","nativeSrc":"5174:3:36","nodeType":"YulIdentifier","src":"5174:3:36"},{"name":"length","nativeSrc":"5179:6:36","nodeType":"YulIdentifier","src":"5179:6:36"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"5132:36:36","nodeType":"YulIdentifier","src":"5132:36:36"},"nativeSrc":"5132:54:36","nodeType":"YulFunctionCall","src":"5132:54:36"},"nativeSrc":"5132:54:36","nodeType":"YulExpressionStatement","src":"5132:54:36"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"4769:423:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4825:3:36","nodeType":"YulTypedName","src":"4825:3:36","type":""},{"name":"length","nativeSrc":"4830:6:36","nodeType":"YulTypedName","src":"4830:6:36","type":""},{"name":"end","nativeSrc":"4838:3:36","nodeType":"YulTypedName","src":"4838:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4846:5:36","nodeType":"YulTypedName","src":"4846:5:36","type":""}],"src":"4769:423:36"},{"body":{"nativeSrc":"5272:277:36","nodeType":"YulBlock","src":"5272:277:36","statements":[{"body":{"nativeSrc":"5321:83:36","nodeType":"YulBlock","src":"5321:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5323:77:36","nodeType":"YulIdentifier","src":"5323:77:36"},"nativeSrc":"5323:79:36","nodeType":"YulFunctionCall","src":"5323:79:36"},"nativeSrc":"5323:79:36","nodeType":"YulExpressionStatement","src":"5323:79:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5300:6:36","nodeType":"YulIdentifier","src":"5300:6:36"},{"kind":"number","nativeSrc":"5308:4:36","nodeType":"YulLiteral","src":"5308:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5296:3:36","nodeType":"YulIdentifier","src":"5296:3:36"},"nativeSrc":"5296:17:36","nodeType":"YulFunctionCall","src":"5296:17:36"},{"name":"end","nativeSrc":"5315:3:36","nodeType":"YulIdentifier","src":"5315:3:36"}],"functionName":{"name":"slt","nativeSrc":"5292:3:36","nodeType":"YulIdentifier","src":"5292:3:36"},"nativeSrc":"5292:27:36","nodeType":"YulFunctionCall","src":"5292:27:36"}],"functionName":{"name":"iszero","nativeSrc":"5285:6:36","nodeType":"YulIdentifier","src":"5285:6:36"},"nativeSrc":"5285:35:36","nodeType":"YulFunctionCall","src":"5285:35:36"},"nativeSrc":"5282:122:36","nodeType":"YulIf","src":"5282:122:36"},{"nativeSrc":"5413:34:36","nodeType":"YulVariableDeclaration","src":"5413:34:36","value":{"arguments":[{"name":"offset","nativeSrc":"5440:6:36","nodeType":"YulIdentifier","src":"5440:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"5427:12:36","nodeType":"YulIdentifier","src":"5427:12:36"},"nativeSrc":"5427:20:36","nodeType":"YulFunctionCall","src":"5427:20:36"},"variables":[{"name":"length","nativeSrc":"5417:6:36","nodeType":"YulTypedName","src":"5417:6:36","type":""}]},{"nativeSrc":"5456:87:36","nodeType":"YulAssignment","src":"5456:87:36","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5516:6:36","nodeType":"YulIdentifier","src":"5516:6:36"},{"kind":"number","nativeSrc":"5524:4:36","nodeType":"YulLiteral","src":"5524:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5512:3:36","nodeType":"YulIdentifier","src":"5512:3:36"},"nativeSrc":"5512:17:36","nodeType":"YulFunctionCall","src":"5512:17:36"},{"name":"length","nativeSrc":"5531:6:36","nodeType":"YulIdentifier","src":"5531:6:36"},{"name":"end","nativeSrc":"5539:3:36","nodeType":"YulIdentifier","src":"5539:3:36"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"5465:46:36","nodeType":"YulIdentifier","src":"5465:46:36"},"nativeSrc":"5465:78:36","nodeType":"YulFunctionCall","src":"5465:78:36"},"variableNames":[{"name":"array","nativeSrc":"5456:5:36","nodeType":"YulIdentifier","src":"5456:5:36"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"5211:338:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5250:6:36","nodeType":"YulTypedName","src":"5250:6:36","type":""},{"name":"end","nativeSrc":"5258:3:36","nodeType":"YulTypedName","src":"5258:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"5266:5:36","nodeType":"YulTypedName","src":"5266:5:36","type":""}],"src":"5211:338:36"},{"body":{"nativeSrc":"5681:817:36","nodeType":"YulBlock","src":"5681:817:36","statements":[{"body":{"nativeSrc":"5728:83:36","nodeType":"YulBlock","src":"5728:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5730:77:36","nodeType":"YulIdentifier","src":"5730:77:36"},"nativeSrc":"5730:79:36","nodeType":"YulFunctionCall","src":"5730:79:36"},"nativeSrc":"5730:79:36","nodeType":"YulExpressionStatement","src":"5730:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5702:7:36","nodeType":"YulIdentifier","src":"5702:7:36"},{"name":"headStart","nativeSrc":"5711:9:36","nodeType":"YulIdentifier","src":"5711:9:36"}],"functionName":{"name":"sub","nativeSrc":"5698:3:36","nodeType":"YulIdentifier","src":"5698:3:36"},"nativeSrc":"5698:23:36","nodeType":"YulFunctionCall","src":"5698:23:36"},{"kind":"number","nativeSrc":"5723:3:36","nodeType":"YulLiteral","src":"5723:3:36","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"5694:3:36","nodeType":"YulIdentifier","src":"5694:3:36"},"nativeSrc":"5694:33:36","nodeType":"YulFunctionCall","src":"5694:33:36"},"nativeSrc":"5691:120:36","nodeType":"YulIf","src":"5691:120:36"},{"nativeSrc":"5821:117:36","nodeType":"YulBlock","src":"5821:117:36","statements":[{"nativeSrc":"5836:15:36","nodeType":"YulVariableDeclaration","src":"5836:15:36","value":{"kind":"number","nativeSrc":"5850:1:36","nodeType":"YulLiteral","src":"5850:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5840:6:36","nodeType":"YulTypedName","src":"5840:6:36","type":""}]},{"nativeSrc":"5865:63:36","nodeType":"YulAssignment","src":"5865:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5900:9:36","nodeType":"YulIdentifier","src":"5900:9:36"},{"name":"offset","nativeSrc":"5911:6:36","nodeType":"YulIdentifier","src":"5911:6:36"}],"functionName":{"name":"add","nativeSrc":"5896:3:36","nodeType":"YulIdentifier","src":"5896:3:36"},"nativeSrc":"5896:22:36","nodeType":"YulFunctionCall","src":"5896:22:36"},{"name":"dataEnd","nativeSrc":"5920:7:36","nodeType":"YulIdentifier","src":"5920:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5875:20:36","nodeType":"YulIdentifier","src":"5875:20:36"},"nativeSrc":"5875:53:36","nodeType":"YulFunctionCall","src":"5875:53:36"},"variableNames":[{"name":"value0","nativeSrc":"5865:6:36","nodeType":"YulIdentifier","src":"5865:6:36"}]}]},{"nativeSrc":"5948:118:36","nodeType":"YulBlock","src":"5948:118:36","statements":[{"nativeSrc":"5963:16:36","nodeType":"YulVariableDeclaration","src":"5963:16:36","value":{"kind":"number","nativeSrc":"5977:2:36","nodeType":"YulLiteral","src":"5977:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5967:6:36","nodeType":"YulTypedName","src":"5967:6:36","type":""}]},{"nativeSrc":"5993:63:36","nodeType":"YulAssignment","src":"5993:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6028:9:36","nodeType":"YulIdentifier","src":"6028:9:36"},{"name":"offset","nativeSrc":"6039:6:36","nodeType":"YulIdentifier","src":"6039:6:36"}],"functionName":{"name":"add","nativeSrc":"6024:3:36","nodeType":"YulIdentifier","src":"6024:3:36"},"nativeSrc":"6024:22:36","nodeType":"YulFunctionCall","src":"6024:22:36"},{"name":"dataEnd","nativeSrc":"6048:7:36","nodeType":"YulIdentifier","src":"6048:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6003:20:36","nodeType":"YulIdentifier","src":"6003:20:36"},"nativeSrc":"6003:53:36","nodeType":"YulFunctionCall","src":"6003:53:36"},"variableNames":[{"name":"value1","nativeSrc":"5993:6:36","nodeType":"YulIdentifier","src":"5993:6:36"}]}]},{"nativeSrc":"6076:118:36","nodeType":"YulBlock","src":"6076:118:36","statements":[{"nativeSrc":"6091:16:36","nodeType":"YulVariableDeclaration","src":"6091:16:36","value":{"kind":"number","nativeSrc":"6105:2:36","nodeType":"YulLiteral","src":"6105:2:36","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6095:6:36","nodeType":"YulTypedName","src":"6095:6:36","type":""}]},{"nativeSrc":"6121:63:36","nodeType":"YulAssignment","src":"6121:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6156:9:36","nodeType":"YulIdentifier","src":"6156:9:36"},{"name":"offset","nativeSrc":"6167:6:36","nodeType":"YulIdentifier","src":"6167:6:36"}],"functionName":{"name":"add","nativeSrc":"6152:3:36","nodeType":"YulIdentifier","src":"6152:3:36"},"nativeSrc":"6152:22:36","nodeType":"YulFunctionCall","src":"6152:22:36"},{"name":"dataEnd","nativeSrc":"6176:7:36","nodeType":"YulIdentifier","src":"6176:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6131:20:36","nodeType":"YulIdentifier","src":"6131:20:36"},"nativeSrc":"6131:53:36","nodeType":"YulFunctionCall","src":"6131:53:36"},"variableNames":[{"name":"value2","nativeSrc":"6121:6:36","nodeType":"YulIdentifier","src":"6121:6:36"}]}]},{"nativeSrc":"6204:287:36","nodeType":"YulBlock","src":"6204:287:36","statements":[{"nativeSrc":"6219:46:36","nodeType":"YulVariableDeclaration","src":"6219:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6250:9:36","nodeType":"YulIdentifier","src":"6250:9:36"},{"kind":"number","nativeSrc":"6261:2:36","nodeType":"YulLiteral","src":"6261:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6246:3:36","nodeType":"YulIdentifier","src":"6246:3:36"},"nativeSrc":"6246:18:36","nodeType":"YulFunctionCall","src":"6246:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"6233:12:36","nodeType":"YulIdentifier","src":"6233:12:36"},"nativeSrc":"6233:32:36","nodeType":"YulFunctionCall","src":"6233:32:36"},"variables":[{"name":"offset","nativeSrc":"6223:6:36","nodeType":"YulTypedName","src":"6223:6:36","type":""}]},{"body":{"nativeSrc":"6312:83:36","nodeType":"YulBlock","src":"6312:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6314:77:36","nodeType":"YulIdentifier","src":"6314:77:36"},"nativeSrc":"6314:79:36","nodeType":"YulFunctionCall","src":"6314:79:36"},"nativeSrc":"6314:79:36","nodeType":"YulExpressionStatement","src":"6314:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6284:6:36","nodeType":"YulIdentifier","src":"6284:6:36"},{"kind":"number","nativeSrc":"6292:18:36","nodeType":"YulLiteral","src":"6292:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6281:2:36","nodeType":"YulIdentifier","src":"6281:2:36"},"nativeSrc":"6281:30:36","nodeType":"YulFunctionCall","src":"6281:30:36"},"nativeSrc":"6278:117:36","nodeType":"YulIf","src":"6278:117:36"},{"nativeSrc":"6409:72:36","nodeType":"YulAssignment","src":"6409:72:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6453:9:36","nodeType":"YulIdentifier","src":"6453:9:36"},{"name":"offset","nativeSrc":"6464:6:36","nodeType":"YulIdentifier","src":"6464:6:36"}],"functionName":{"name":"add","nativeSrc":"6449:3:36","nodeType":"YulIdentifier","src":"6449:3:36"},"nativeSrc":"6449:22:36","nodeType":"YulFunctionCall","src":"6449:22:36"},{"name":"dataEnd","nativeSrc":"6473:7:36","nodeType":"YulIdentifier","src":"6473:7:36"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"6419:29:36","nodeType":"YulIdentifier","src":"6419:29:36"},"nativeSrc":"6419:62:36","nodeType":"YulFunctionCall","src":"6419:62:36"},"variableNames":[{"name":"value3","nativeSrc":"6409:6:36","nodeType":"YulIdentifier","src":"6409:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"5555:943:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5627:9:36","nodeType":"YulTypedName","src":"5627:9:36","type":""},{"name":"dataEnd","nativeSrc":"5638:7:36","nodeType":"YulTypedName","src":"5638:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5650:6:36","nodeType":"YulTypedName","src":"5650:6:36","type":""},{"name":"value1","nativeSrc":"5658:6:36","nodeType":"YulTypedName","src":"5658:6:36","type":""},{"name":"value2","nativeSrc":"5666:6:36","nodeType":"YulTypedName","src":"5666:6:36","type":""},{"name":"value3","nativeSrc":"5674:6:36","nodeType":"YulTypedName","src":"5674:6:36","type":""}],"src":"5555:943:36"},{"body":{"nativeSrc":"6548:105:36","nodeType":"YulBlock","src":"6548:105:36","statements":[{"nativeSrc":"6558:89:36","nodeType":"YulAssignment","src":"6558:89:36","value":{"arguments":[{"name":"value","nativeSrc":"6573:5:36","nodeType":"YulIdentifier","src":"6573:5:36"},{"kind":"number","nativeSrc":"6580:66:36","nodeType":"YulLiteral","src":"6580:66:36","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"6569:3:36","nodeType":"YulIdentifier","src":"6569:3:36"},"nativeSrc":"6569:78:36","nodeType":"YulFunctionCall","src":"6569:78:36"},"variableNames":[{"name":"cleaned","nativeSrc":"6558:7:36","nodeType":"YulIdentifier","src":"6558:7:36"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"6504:149:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6530:5:36","nodeType":"YulTypedName","src":"6530:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6540:7:36","nodeType":"YulTypedName","src":"6540:7:36","type":""}],"src":"6504:149:36"},{"body":{"nativeSrc":"6722:52:36","nodeType":"YulBlock","src":"6722:52:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6739:3:36","nodeType":"YulIdentifier","src":"6739:3:36"},{"arguments":[{"name":"value","nativeSrc":"6761:5:36","nodeType":"YulIdentifier","src":"6761:5:36"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"6744:16:36","nodeType":"YulIdentifier","src":"6744:16:36"},"nativeSrc":"6744:23:36","nodeType":"YulFunctionCall","src":"6744:23:36"}],"functionName":{"name":"mstore","nativeSrc":"6732:6:36","nodeType":"YulIdentifier","src":"6732:6:36"},"nativeSrc":"6732:36:36","nodeType":"YulFunctionCall","src":"6732:36:36"},"nativeSrc":"6732:36:36","nodeType":"YulExpressionStatement","src":"6732:36:36"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"6659:115:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6710:5:36","nodeType":"YulTypedName","src":"6710:5:36","type":""},{"name":"pos","nativeSrc":"6717:3:36","nodeType":"YulTypedName","src":"6717:3:36","type":""}],"src":"6659:115:36"},{"body":{"nativeSrc":"6876:122:36","nodeType":"YulBlock","src":"6876:122:36","statements":[{"nativeSrc":"6886:26:36","nodeType":"YulAssignment","src":"6886:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"6898:9:36","nodeType":"YulIdentifier","src":"6898:9:36"},{"kind":"number","nativeSrc":"6909:2:36","nodeType":"YulLiteral","src":"6909:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6894:3:36","nodeType":"YulIdentifier","src":"6894:3:36"},"nativeSrc":"6894:18:36","nodeType":"YulFunctionCall","src":"6894:18:36"},"variableNames":[{"name":"tail","nativeSrc":"6886:4:36","nodeType":"YulIdentifier","src":"6886:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6964:6:36","nodeType":"YulIdentifier","src":"6964:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"6977:9:36","nodeType":"YulIdentifier","src":"6977:9:36"},{"kind":"number","nativeSrc":"6988:1:36","nodeType":"YulLiteral","src":"6988:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6973:3:36","nodeType":"YulIdentifier","src":"6973:3:36"},"nativeSrc":"6973:17:36","nodeType":"YulFunctionCall","src":"6973:17:36"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"6922:41:36","nodeType":"YulIdentifier","src":"6922:41:36"},"nativeSrc":"6922:69:36","nodeType":"YulFunctionCall","src":"6922:69:36"},"nativeSrc":"6922:69:36","nodeType":"YulExpressionStatement","src":"6922:69:36"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"6780:218:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6848:9:36","nodeType":"YulTypedName","src":"6848:9:36","type":""},{"name":"value0","nativeSrc":"6860:6:36","nodeType":"YulTypedName","src":"6860:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6871:4:36","nodeType":"YulTypedName","src":"6871:4:36","type":""}],"src":"6780:218:36"},{"body":{"nativeSrc":"7069:53:36","nodeType":"YulBlock","src":"7069:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7086:3:36","nodeType":"YulIdentifier","src":"7086:3:36"},{"arguments":[{"name":"value","nativeSrc":"7109:5:36","nodeType":"YulIdentifier","src":"7109:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7091:17:36","nodeType":"YulIdentifier","src":"7091:17:36"},"nativeSrc":"7091:24:36","nodeType":"YulFunctionCall","src":"7091:24:36"}],"functionName":{"name":"mstore","nativeSrc":"7079:6:36","nodeType":"YulIdentifier","src":"7079:6:36"},"nativeSrc":"7079:37:36","nodeType":"YulFunctionCall","src":"7079:37:36"},"nativeSrc":"7079:37:36","nodeType":"YulExpressionStatement","src":"7079:37:36"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7004:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7057:5:36","nodeType":"YulTypedName","src":"7057:5:36","type":""},{"name":"pos","nativeSrc":"7064:3:36","nodeType":"YulTypedName","src":"7064:3:36","type":""}],"src":"7004:118:36"},{"body":{"nativeSrc":"7226:124:36","nodeType":"YulBlock","src":"7226:124:36","statements":[{"nativeSrc":"7236:26:36","nodeType":"YulAssignment","src":"7236:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"7248:9:36","nodeType":"YulIdentifier","src":"7248:9:36"},{"kind":"number","nativeSrc":"7259:2:36","nodeType":"YulLiteral","src":"7259:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7244:3:36","nodeType":"YulIdentifier","src":"7244:3:36"},"nativeSrc":"7244:18:36","nodeType":"YulFunctionCall","src":"7244:18:36"},"variableNames":[{"name":"tail","nativeSrc":"7236:4:36","nodeType":"YulIdentifier","src":"7236:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7316:6:36","nodeType":"YulIdentifier","src":"7316:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"7329:9:36","nodeType":"YulIdentifier","src":"7329:9:36"},{"kind":"number","nativeSrc":"7340:1:36","nodeType":"YulLiteral","src":"7340:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7325:3:36","nodeType":"YulIdentifier","src":"7325:3:36"},"nativeSrc":"7325:17:36","nodeType":"YulFunctionCall","src":"7325:17:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7272:43:36","nodeType":"YulIdentifier","src":"7272:43:36"},"nativeSrc":"7272:71:36","nodeType":"YulFunctionCall","src":"7272:71:36"},"nativeSrc":"7272:71:36","nodeType":"YulExpressionStatement","src":"7272:71:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"7128:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7198:9:36","nodeType":"YulTypedName","src":"7198:9:36","type":""},{"name":"value0","nativeSrc":"7210:6:36","nodeType":"YulTypedName","src":"7210:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7221:4:36","nodeType":"YulTypedName","src":"7221:4:36","type":""}],"src":"7128:222:36"},{"body":{"nativeSrc":"7456:519:36","nodeType":"YulBlock","src":"7456:519:36","statements":[{"body":{"nativeSrc":"7502:83:36","nodeType":"YulBlock","src":"7502:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7504:77:36","nodeType":"YulIdentifier","src":"7504:77:36"},"nativeSrc":"7504:79:36","nodeType":"YulFunctionCall","src":"7504:79:36"},"nativeSrc":"7504:79:36","nodeType":"YulExpressionStatement","src":"7504:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7477:7:36","nodeType":"YulIdentifier","src":"7477:7:36"},{"name":"headStart","nativeSrc":"7486:9:36","nodeType":"YulIdentifier","src":"7486:9:36"}],"functionName":{"name":"sub","nativeSrc":"7473:3:36","nodeType":"YulIdentifier","src":"7473:3:36"},"nativeSrc":"7473:23:36","nodeType":"YulFunctionCall","src":"7473:23:36"},{"kind":"number","nativeSrc":"7498:2:36","nodeType":"YulLiteral","src":"7498:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"7469:3:36","nodeType":"YulIdentifier","src":"7469:3:36"},"nativeSrc":"7469:32:36","nodeType":"YulFunctionCall","src":"7469:32:36"},"nativeSrc":"7466:119:36","nodeType":"YulIf","src":"7466:119:36"},{"nativeSrc":"7595:117:36","nodeType":"YulBlock","src":"7595:117:36","statements":[{"nativeSrc":"7610:15:36","nodeType":"YulVariableDeclaration","src":"7610:15:36","value":{"kind":"number","nativeSrc":"7624:1:36","nodeType":"YulLiteral","src":"7624:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7614:6:36","nodeType":"YulTypedName","src":"7614:6:36","type":""}]},{"nativeSrc":"7639:63:36","nodeType":"YulAssignment","src":"7639:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7674:9:36","nodeType":"YulIdentifier","src":"7674:9:36"},{"name":"offset","nativeSrc":"7685:6:36","nodeType":"YulIdentifier","src":"7685:6:36"}],"functionName":{"name":"add","nativeSrc":"7670:3:36","nodeType":"YulIdentifier","src":"7670:3:36"},"nativeSrc":"7670:22:36","nodeType":"YulFunctionCall","src":"7670:22:36"},{"name":"dataEnd","nativeSrc":"7694:7:36","nodeType":"YulIdentifier","src":"7694:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7649:20:36","nodeType":"YulIdentifier","src":"7649:20:36"},"nativeSrc":"7649:53:36","nodeType":"YulFunctionCall","src":"7649:53:36"},"variableNames":[{"name":"value0","nativeSrc":"7639:6:36","nodeType":"YulIdentifier","src":"7639:6:36"}]}]},{"nativeSrc":"7722:118:36","nodeType":"YulBlock","src":"7722:118:36","statements":[{"nativeSrc":"7737:16:36","nodeType":"YulVariableDeclaration","src":"7737:16:36","value":{"kind":"number","nativeSrc":"7751:2:36","nodeType":"YulLiteral","src":"7751:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7741:6:36","nodeType":"YulTypedName","src":"7741:6:36","type":""}]},{"nativeSrc":"7767:63:36","nodeType":"YulAssignment","src":"7767:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7802:9:36","nodeType":"YulIdentifier","src":"7802:9:36"},{"name":"offset","nativeSrc":"7813:6:36","nodeType":"YulIdentifier","src":"7813:6:36"}],"functionName":{"name":"add","nativeSrc":"7798:3:36","nodeType":"YulIdentifier","src":"7798:3:36"},"nativeSrc":"7798:22:36","nodeType":"YulFunctionCall","src":"7798:22:36"},{"name":"dataEnd","nativeSrc":"7822:7:36","nodeType":"YulIdentifier","src":"7822:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7777:20:36","nodeType":"YulIdentifier","src":"7777:20:36"},"nativeSrc":"7777:53:36","nodeType":"YulFunctionCall","src":"7777:53:36"},"variableNames":[{"name":"value1","nativeSrc":"7767:6:36","nodeType":"YulIdentifier","src":"7767:6:36"}]}]},{"nativeSrc":"7850:118:36","nodeType":"YulBlock","src":"7850:118:36","statements":[{"nativeSrc":"7865:16:36","nodeType":"YulVariableDeclaration","src":"7865:16:36","value":{"kind":"number","nativeSrc":"7879:2:36","nodeType":"YulLiteral","src":"7879:2:36","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"7869:6:36","nodeType":"YulTypedName","src":"7869:6:36","type":""}]},{"nativeSrc":"7895:63:36","nodeType":"YulAssignment","src":"7895:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7930:9:36","nodeType":"YulIdentifier","src":"7930:9:36"},{"name":"offset","nativeSrc":"7941:6:36","nodeType":"YulIdentifier","src":"7941:6:36"}],"functionName":{"name":"add","nativeSrc":"7926:3:36","nodeType":"YulIdentifier","src":"7926:3:36"},"nativeSrc":"7926:22:36","nodeType":"YulFunctionCall","src":"7926:22:36"},{"name":"dataEnd","nativeSrc":"7950:7:36","nodeType":"YulIdentifier","src":"7950:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7905:20:36","nodeType":"YulIdentifier","src":"7905:20:36"},"nativeSrc":"7905:53:36","nodeType":"YulFunctionCall","src":"7905:53:36"},"variableNames":[{"name":"value2","nativeSrc":"7895:6:36","nodeType":"YulIdentifier","src":"7895:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"7356:619:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7410:9:36","nodeType":"YulTypedName","src":"7410:9:36","type":""},{"name":"dataEnd","nativeSrc":"7421:7:36","nodeType":"YulTypedName","src":"7421:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7433:6:36","nodeType":"YulTypedName","src":"7433:6:36","type":""},{"name":"value1","nativeSrc":"7441:6:36","nodeType":"YulTypedName","src":"7441:6:36","type":""},{"name":"value2","nativeSrc":"7449:6:36","nodeType":"YulTypedName","src":"7449:6:36","type":""}],"src":"7356:619:36"},{"body":{"nativeSrc":"8024:43:36","nodeType":"YulBlock","src":"8024:43:36","statements":[{"nativeSrc":"8034:27:36","nodeType":"YulAssignment","src":"8034:27:36","value":{"arguments":[{"name":"value","nativeSrc":"8049:5:36","nodeType":"YulIdentifier","src":"8049:5:36"},{"kind":"number","nativeSrc":"8056:4:36","nodeType":"YulLiteral","src":"8056:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8045:3:36","nodeType":"YulIdentifier","src":"8045:3:36"},"nativeSrc":"8045:16:36","nodeType":"YulFunctionCall","src":"8045:16:36"},"variableNames":[{"name":"cleaned","nativeSrc":"8034:7:36","nodeType":"YulIdentifier","src":"8034:7:36"}]}]},"name":"cleanup_t_uint8","nativeSrc":"7981:86:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8006:5:36","nodeType":"YulTypedName","src":"8006:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8016:7:36","nodeType":"YulTypedName","src":"8016:7:36","type":""}],"src":"7981:86:36"},{"body":{"nativeSrc":"8134:51:36","nodeType":"YulBlock","src":"8134:51:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8151:3:36","nodeType":"YulIdentifier","src":"8151:3:36"},{"arguments":[{"name":"value","nativeSrc":"8172:5:36","nodeType":"YulIdentifier","src":"8172:5:36"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"8156:15:36","nodeType":"YulIdentifier","src":"8156:15:36"},"nativeSrc":"8156:22:36","nodeType":"YulFunctionCall","src":"8156:22:36"}],"functionName":{"name":"mstore","nativeSrc":"8144:6:36","nodeType":"YulIdentifier","src":"8144:6:36"},"nativeSrc":"8144:35:36","nodeType":"YulFunctionCall","src":"8144:35:36"},"nativeSrc":"8144:35:36","nodeType":"YulExpressionStatement","src":"8144:35:36"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"8073:112:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8122:5:36","nodeType":"YulTypedName","src":"8122:5:36","type":""},{"name":"pos","nativeSrc":"8129:3:36","nodeType":"YulTypedName","src":"8129:3:36","type":""}],"src":"8073:112:36"},{"body":{"nativeSrc":"8285:120:36","nodeType":"YulBlock","src":"8285:120:36","statements":[{"nativeSrc":"8295:26:36","nodeType":"YulAssignment","src":"8295:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"8307:9:36","nodeType":"YulIdentifier","src":"8307:9:36"},{"kind":"number","nativeSrc":"8318:2:36","nodeType":"YulLiteral","src":"8318:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8303:3:36","nodeType":"YulIdentifier","src":"8303:3:36"},"nativeSrc":"8303:18:36","nodeType":"YulFunctionCall","src":"8303:18:36"},"variableNames":[{"name":"tail","nativeSrc":"8295:4:36","nodeType":"YulIdentifier","src":"8295:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8371:6:36","nodeType":"YulIdentifier","src":"8371:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"8384:9:36","nodeType":"YulIdentifier","src":"8384:9:36"},{"kind":"number","nativeSrc":"8395:1:36","nodeType":"YulLiteral","src":"8395:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8380:3:36","nodeType":"YulIdentifier","src":"8380:3:36"},"nativeSrc":"8380:17:36","nodeType":"YulFunctionCall","src":"8380:17:36"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"8331:39:36","nodeType":"YulIdentifier","src":"8331:39:36"},"nativeSrc":"8331:67:36","nodeType":"YulFunctionCall","src":"8331:67:36"},"nativeSrc":"8331:67:36","nodeType":"YulExpressionStatement","src":"8331:67:36"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"8191:214:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8257:9:36","nodeType":"YulTypedName","src":"8257:9:36","type":""},{"name":"value0","nativeSrc":"8269:6:36","nodeType":"YulTypedName","src":"8269:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8280:4:36","nodeType":"YulTypedName","src":"8280:4:36","type":""}],"src":"8191:214:36"},{"body":{"nativeSrc":"8456:32:36","nodeType":"YulBlock","src":"8456:32:36","statements":[{"nativeSrc":"8466:16:36","nodeType":"YulAssignment","src":"8466:16:36","value":{"name":"value","nativeSrc":"8477:5:36","nodeType":"YulIdentifier","src":"8477:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"8466:7:36","nodeType":"YulIdentifier","src":"8466:7:36"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8411:77:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8438:5:36","nodeType":"YulTypedName","src":"8438:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8448:7:36","nodeType":"YulTypedName","src":"8448:7:36","type":""}],"src":"8411:77:36"},{"body":{"nativeSrc":"8559:53:36","nodeType":"YulBlock","src":"8559:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8576:3:36","nodeType":"YulIdentifier","src":"8576:3:36"},{"arguments":[{"name":"value","nativeSrc":"8599:5:36","nodeType":"YulIdentifier","src":"8599:5:36"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8581:17:36","nodeType":"YulIdentifier","src":"8581:17:36"},"nativeSrc":"8581:24:36","nodeType":"YulFunctionCall","src":"8581:24:36"}],"functionName":{"name":"mstore","nativeSrc":"8569:6:36","nodeType":"YulIdentifier","src":"8569:6:36"},"nativeSrc":"8569:37:36","nodeType":"YulFunctionCall","src":"8569:37:36"},"nativeSrc":"8569:37:36","nodeType":"YulExpressionStatement","src":"8569:37:36"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8494:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8547:5:36","nodeType":"YulTypedName","src":"8547:5:36","type":""},{"name":"pos","nativeSrc":"8554:3:36","nodeType":"YulTypedName","src":"8554:3:36","type":""}],"src":"8494:118:36"},{"body":{"nativeSrc":"8716:124:36","nodeType":"YulBlock","src":"8716:124:36","statements":[{"nativeSrc":"8726:26:36","nodeType":"YulAssignment","src":"8726:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"8738:9:36","nodeType":"YulIdentifier","src":"8738:9:36"},{"kind":"number","nativeSrc":"8749:2:36","nodeType":"YulLiteral","src":"8749:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8734:3:36","nodeType":"YulIdentifier","src":"8734:3:36"},"nativeSrc":"8734:18:36","nodeType":"YulFunctionCall","src":"8734:18:36"},"variableNames":[{"name":"tail","nativeSrc":"8726:4:36","nodeType":"YulIdentifier","src":"8726:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8806:6:36","nodeType":"YulIdentifier","src":"8806:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"8819:9:36","nodeType":"YulIdentifier","src":"8819:9:36"},{"kind":"number","nativeSrc":"8830:1:36","nodeType":"YulLiteral","src":"8830:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8815:3:36","nodeType":"YulIdentifier","src":"8815:3:36"},"nativeSrc":"8815:17:36","nodeType":"YulFunctionCall","src":"8815:17:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8762:43:36","nodeType":"YulIdentifier","src":"8762:43:36"},"nativeSrc":"8762:71:36","nodeType":"YulFunctionCall","src":"8762:71:36"},"nativeSrc":"8762:71:36","nodeType":"YulExpressionStatement","src":"8762:71:36"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"8618:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8688:9:36","nodeType":"YulTypedName","src":"8688:9:36","type":""},{"name":"value0","nativeSrc":"8700:6:36","nodeType":"YulTypedName","src":"8700:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8711:4:36","nodeType":"YulTypedName","src":"8711:4:36","type":""}],"src":"8618:222:36"},{"body":{"nativeSrc":"8912:263:36","nodeType":"YulBlock","src":"8912:263:36","statements":[{"body":{"nativeSrc":"8958:83:36","nodeType":"YulBlock","src":"8958:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8960:77:36","nodeType":"YulIdentifier","src":"8960:77:36"},"nativeSrc":"8960:79:36","nodeType":"YulFunctionCall","src":"8960:79:36"},"nativeSrc":"8960:79:36","nodeType":"YulExpressionStatement","src":"8960:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8933:7:36","nodeType":"YulIdentifier","src":"8933:7:36"},{"name":"headStart","nativeSrc":"8942:9:36","nodeType":"YulIdentifier","src":"8942:9:36"}],"functionName":{"name":"sub","nativeSrc":"8929:3:36","nodeType":"YulIdentifier","src":"8929:3:36"},"nativeSrc":"8929:23:36","nodeType":"YulFunctionCall","src":"8929:23:36"},{"kind":"number","nativeSrc":"8954:2:36","nodeType":"YulLiteral","src":"8954:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8925:3:36","nodeType":"YulIdentifier","src":"8925:3:36"},"nativeSrc":"8925:32:36","nodeType":"YulFunctionCall","src":"8925:32:36"},"nativeSrc":"8922:119:36","nodeType":"YulIf","src":"8922:119:36"},{"nativeSrc":"9051:117:36","nodeType":"YulBlock","src":"9051:117:36","statements":[{"nativeSrc":"9066:15:36","nodeType":"YulVariableDeclaration","src":"9066:15:36","value":{"kind":"number","nativeSrc":"9080:1:36","nodeType":"YulLiteral","src":"9080:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9070:6:36","nodeType":"YulTypedName","src":"9070:6:36","type":""}]},{"nativeSrc":"9095:63:36","nodeType":"YulAssignment","src":"9095:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9130:9:36","nodeType":"YulIdentifier","src":"9130:9:36"},{"name":"offset","nativeSrc":"9141:6:36","nodeType":"YulIdentifier","src":"9141:6:36"}],"functionName":{"name":"add","nativeSrc":"9126:3:36","nodeType":"YulIdentifier","src":"9126:3:36"},"nativeSrc":"9126:22:36","nodeType":"YulFunctionCall","src":"9126:22:36"},{"name":"dataEnd","nativeSrc":"9150:7:36","nodeType":"YulIdentifier","src":"9150:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9105:20:36","nodeType":"YulIdentifier","src":"9105:20:36"},"nativeSrc":"9105:53:36","nodeType":"YulFunctionCall","src":"9105:53:36"},"variableNames":[{"name":"value0","nativeSrc":"9095:6:36","nodeType":"YulIdentifier","src":"9095:6:36"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8846:329:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8882:9:36","nodeType":"YulTypedName","src":"8882:9:36","type":""},{"name":"dataEnd","nativeSrc":"8893:7:36","nodeType":"YulTypedName","src":"8893:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8905:6:36","nodeType":"YulTypedName","src":"8905:6:36","type":""}],"src":"8846:329:36"},{"body":{"nativeSrc":"9225:105:36","nodeType":"YulBlock","src":"9225:105:36","statements":[{"nativeSrc":"9235:89:36","nodeType":"YulAssignment","src":"9235:89:36","value":{"arguments":[{"name":"value","nativeSrc":"9250:5:36","nodeType":"YulIdentifier","src":"9250:5:36"},{"kind":"number","nativeSrc":"9257:66:36","nodeType":"YulLiteral","src":"9257:66:36","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"9246:3:36","nodeType":"YulIdentifier","src":"9246:3:36"},"nativeSrc":"9246:78:36","nodeType":"YulFunctionCall","src":"9246:78:36"},"variableNames":[{"name":"cleaned","nativeSrc":"9235:7:36","nodeType":"YulIdentifier","src":"9235:7:36"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"9181:149:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9207:5:36","nodeType":"YulTypedName","src":"9207:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9217:7:36","nodeType":"YulTypedName","src":"9217:7:36","type":""}],"src":"9181:149:36"},{"body":{"nativeSrc":"9399:52:36","nodeType":"YulBlock","src":"9399:52:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9416:3:36","nodeType":"YulIdentifier","src":"9416:3:36"},{"arguments":[{"name":"value","nativeSrc":"9438:5:36","nodeType":"YulIdentifier","src":"9438:5:36"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"9421:16:36","nodeType":"YulIdentifier","src":"9421:16:36"},"nativeSrc":"9421:23:36","nodeType":"YulFunctionCall","src":"9421:23:36"}],"functionName":{"name":"mstore","nativeSrc":"9409:6:36","nodeType":"YulIdentifier","src":"9409:6:36"},"nativeSrc":"9409:36:36","nodeType":"YulFunctionCall","src":"9409:36:36"},"nativeSrc":"9409:36:36","nodeType":"YulExpressionStatement","src":"9409:36:36"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"9336:115:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9387:5:36","nodeType":"YulTypedName","src":"9387:5:36","type":""},{"name":"pos","nativeSrc":"9394:3:36","nodeType":"YulTypedName","src":"9394:3:36","type":""}],"src":"9336:115:36"},{"body":{"nativeSrc":"9522:53:36","nodeType":"YulBlock","src":"9522:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9539:3:36","nodeType":"YulIdentifier","src":"9539:3:36"},{"arguments":[{"name":"value","nativeSrc":"9562:5:36","nodeType":"YulIdentifier","src":"9562:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9544:17:36","nodeType":"YulIdentifier","src":"9544:17:36"},"nativeSrc":"9544:24:36","nodeType":"YulFunctionCall","src":"9544:24:36"}],"functionName":{"name":"mstore","nativeSrc":"9532:6:36","nodeType":"YulIdentifier","src":"9532:6:36"},"nativeSrc":"9532:37:36","nodeType":"YulFunctionCall","src":"9532:37:36"},"nativeSrc":"9532:37:36","nodeType":"YulExpressionStatement","src":"9532:37:36"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9457:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9510:5:36","nodeType":"YulTypedName","src":"9510:5:36","type":""},{"name":"pos","nativeSrc":"9517:3:36","nodeType":"YulTypedName","src":"9517:3:36","type":""}],"src":"9457:118:36"},{"body":{"nativeSrc":"9655:40:36","nodeType":"YulBlock","src":"9655:40:36","statements":[{"nativeSrc":"9666:22:36","nodeType":"YulAssignment","src":"9666:22:36","value":{"arguments":[{"name":"value","nativeSrc":"9682:5:36","nodeType":"YulIdentifier","src":"9682:5:36"}],"functionName":{"name":"mload","nativeSrc":"9676:5:36","nodeType":"YulIdentifier","src":"9676:5:36"},"nativeSrc":"9676:12:36","nodeType":"YulFunctionCall","src":"9676:12:36"},"variableNames":[{"name":"length","nativeSrc":"9666:6:36","nodeType":"YulIdentifier","src":"9666:6:36"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9581:114:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9638:5:36","nodeType":"YulTypedName","src":"9638:5:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9648:6:36","nodeType":"YulTypedName","src":"9648:6:36","type":""}],"src":"9581:114:36"},{"body":{"nativeSrc":"9812:73:36","nodeType":"YulBlock","src":"9812:73:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9829:3:36","nodeType":"YulIdentifier","src":"9829:3:36"},{"name":"length","nativeSrc":"9834:6:36","nodeType":"YulIdentifier","src":"9834:6:36"}],"functionName":{"name":"mstore","nativeSrc":"9822:6:36","nodeType":"YulIdentifier","src":"9822:6:36"},"nativeSrc":"9822:19:36","nodeType":"YulFunctionCall","src":"9822:19:36"},"nativeSrc":"9822:19:36","nodeType":"YulExpressionStatement","src":"9822:19:36"},{"nativeSrc":"9850:29:36","nodeType":"YulAssignment","src":"9850:29:36","value":{"arguments":[{"name":"pos","nativeSrc":"9869:3:36","nodeType":"YulIdentifier","src":"9869:3:36"},{"kind":"number","nativeSrc":"9874:4:36","nodeType":"YulLiteral","src":"9874:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9865:3:36","nodeType":"YulIdentifier","src":"9865:3:36"},"nativeSrc":"9865:14:36","nodeType":"YulFunctionCall","src":"9865:14:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"9850:11:36","nodeType":"YulIdentifier","src":"9850:11:36"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9701:184:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9784:3:36","nodeType":"YulTypedName","src":"9784:3:36","type":""},{"name":"length","nativeSrc":"9789:6:36","nodeType":"YulTypedName","src":"9789:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9800:11:36","nodeType":"YulTypedName","src":"9800:11:36","type":""}],"src":"9701:184:36"},{"body":{"nativeSrc":"9963:60:36","nodeType":"YulBlock","src":"9963:60:36","statements":[{"nativeSrc":"9973:11:36","nodeType":"YulAssignment","src":"9973:11:36","value":{"name":"ptr","nativeSrc":"9981:3:36","nodeType":"YulIdentifier","src":"9981:3:36"},"variableNames":[{"name":"data","nativeSrc":"9973:4:36","nodeType":"YulIdentifier","src":"9973:4:36"}]},{"nativeSrc":"9994:22:36","nodeType":"YulAssignment","src":"9994:22:36","value":{"arguments":[{"name":"ptr","nativeSrc":"10006:3:36","nodeType":"YulIdentifier","src":"10006:3:36"},{"kind":"number","nativeSrc":"10011:4:36","nodeType":"YulLiteral","src":"10011:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10002:3:36","nodeType":"YulIdentifier","src":"10002:3:36"},"nativeSrc":"10002:14:36","nodeType":"YulFunctionCall","src":"10002:14:36"},"variableNames":[{"name":"data","nativeSrc":"9994:4:36","nodeType":"YulIdentifier","src":"9994:4:36"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9891:132:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"9950:3:36","nodeType":"YulTypedName","src":"9950:3:36","type":""}],"returnVariables":[{"name":"data","nativeSrc":"9958:4:36","nodeType":"YulTypedName","src":"9958:4:36","type":""}],"src":"9891:132:36"},{"body":{"nativeSrc":"10084:53:36","nodeType":"YulBlock","src":"10084:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10101:3:36","nodeType":"YulIdentifier","src":"10101:3:36"},{"arguments":[{"name":"value","nativeSrc":"10124:5:36","nodeType":"YulIdentifier","src":"10124:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10106:17:36","nodeType":"YulIdentifier","src":"10106:17:36"},"nativeSrc":"10106:24:36","nodeType":"YulFunctionCall","src":"10106:24:36"}],"functionName":{"name":"mstore","nativeSrc":"10094:6:36","nodeType":"YulIdentifier","src":"10094:6:36"},"nativeSrc":"10094:37:36","nodeType":"YulFunctionCall","src":"10094:37:36"},"nativeSrc":"10094:37:36","nodeType":"YulExpressionStatement","src":"10094:37:36"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"10029:108:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10072:5:36","nodeType":"YulTypedName","src":"10072:5:36","type":""},{"name":"pos","nativeSrc":"10079:3:36","nodeType":"YulTypedName","src":"10079:3:36","type":""}],"src":"10029:108:36"},{"body":{"nativeSrc":"10223:99:36","nodeType":"YulBlock","src":"10223:99:36","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"10267:6:36","nodeType":"YulIdentifier","src":"10267:6:36"},{"name":"pos","nativeSrc":"10275:3:36","nodeType":"YulIdentifier","src":"10275:3:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"10233:33:36","nodeType":"YulIdentifier","src":"10233:33:36"},"nativeSrc":"10233:46:36","nodeType":"YulFunctionCall","src":"10233:46:36"},"nativeSrc":"10233:46:36","nodeType":"YulExpressionStatement","src":"10233:46:36"},{"nativeSrc":"10288:28:36","nodeType":"YulAssignment","src":"10288:28:36","value":{"arguments":[{"name":"pos","nativeSrc":"10306:3:36","nodeType":"YulIdentifier","src":"10306:3:36"},{"kind":"number","nativeSrc":"10311:4:36","nodeType":"YulLiteral","src":"10311:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10302:3:36","nodeType":"YulIdentifier","src":"10302:3:36"},"nativeSrc":"10302:14:36","nodeType":"YulFunctionCall","src":"10302:14:36"},"variableNames":[{"name":"updatedPos","nativeSrc":"10288:10:36","nodeType":"YulIdentifier","src":"10288:10:36"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"10143:179:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"10196:6:36","nodeType":"YulTypedName","src":"10196:6:36","type":""},{"name":"pos","nativeSrc":"10204:3:36","nodeType":"YulTypedName","src":"10204:3:36","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"10212:10:36","nodeType":"YulTypedName","src":"10212:10:36","type":""}],"src":"10143:179:36"},{"body":{"nativeSrc":"10403:38:36","nodeType":"YulBlock","src":"10403:38:36","statements":[{"nativeSrc":"10413:22:36","nodeType":"YulAssignment","src":"10413:22:36","value":{"arguments":[{"name":"ptr","nativeSrc":"10425:3:36","nodeType":"YulIdentifier","src":"10425:3:36"},{"kind":"number","nativeSrc":"10430:4:36","nodeType":"YulLiteral","src":"10430:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10421:3:36","nodeType":"YulIdentifier","src":"10421:3:36"},"nativeSrc":"10421:14:36","nodeType":"YulFunctionCall","src":"10421:14:36"},"variableNames":[{"name":"next","nativeSrc":"10413:4:36","nodeType":"YulIdentifier","src":"10413:4:36"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10328:113:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10390:3:36","nodeType":"YulTypedName","src":"10390:3:36","type":""}],"returnVariables":[{"name":"next","nativeSrc":"10398:4:36","nodeType":"YulTypedName","src":"10398:4:36","type":""}],"src":"10328:113:36"},{"body":{"nativeSrc":"10601:608:36","nodeType":"YulBlock","src":"10601:608:36","statements":[{"nativeSrc":"10611:68:36","nodeType":"YulVariableDeclaration","src":"10611:68:36","value":{"arguments":[{"name":"value","nativeSrc":"10673:5:36","nodeType":"YulIdentifier","src":"10673:5:36"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10625:47:36","nodeType":"YulIdentifier","src":"10625:47:36"},"nativeSrc":"10625:54:36","nodeType":"YulFunctionCall","src":"10625:54:36"},"variables":[{"name":"length","nativeSrc":"10615:6:36","nodeType":"YulTypedName","src":"10615:6:36","type":""}]},{"nativeSrc":"10688:93:36","nodeType":"YulAssignment","src":"10688:93:36","value":{"arguments":[{"name":"pos","nativeSrc":"10769:3:36","nodeType":"YulIdentifier","src":"10769:3:36"},{"name":"length","nativeSrc":"10774:6:36","nodeType":"YulIdentifier","src":"10774:6:36"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10695:73:36","nodeType":"YulIdentifier","src":"10695:73:36"},"nativeSrc":"10695:86:36","nodeType":"YulFunctionCall","src":"10695:86:36"},"variableNames":[{"name":"pos","nativeSrc":"10688:3:36","nodeType":"YulIdentifier","src":"10688:3:36"}]},{"nativeSrc":"10790:71:36","nodeType":"YulVariableDeclaration","src":"10790:71:36","value":{"arguments":[{"name":"value","nativeSrc":"10855:5:36","nodeType":"YulIdentifier","src":"10855:5:36"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10805:49:36","nodeType":"YulIdentifier","src":"10805:49:36"},"nativeSrc":"10805:56:36","nodeType":"YulFunctionCall","src":"10805:56:36"},"variables":[{"name":"baseRef","nativeSrc":"10794:7:36","nodeType":"YulTypedName","src":"10794:7:36","type":""}]},{"nativeSrc":"10870:21:36","nodeType":"YulVariableDeclaration","src":"10870:21:36","value":{"name":"baseRef","nativeSrc":"10884:7:36","nodeType":"YulIdentifier","src":"10884:7:36"},"variables":[{"name":"srcPtr","nativeSrc":"10874:6:36","nodeType":"YulTypedName","src":"10874:6:36","type":""}]},{"body":{"nativeSrc":"10960:224:36","nodeType":"YulBlock","src":"10960:224:36","statements":[{"nativeSrc":"10974:34:36","nodeType":"YulVariableDeclaration","src":"10974:34:36","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11001:6:36","nodeType":"YulIdentifier","src":"11001:6:36"}],"functionName":{"name":"mload","nativeSrc":"10995:5:36","nodeType":"YulIdentifier","src":"10995:5:36"},"nativeSrc":"10995:13:36","nodeType":"YulFunctionCall","src":"10995:13:36"},"variables":[{"name":"elementValue0","nativeSrc":"10978:13:36","nodeType":"YulTypedName","src":"10978:13:36","type":""}]},{"nativeSrc":"11021:70:36","nodeType":"YulAssignment","src":"11021:70:36","value":{"arguments":[{"name":"elementValue0","nativeSrc":"11072:13:36","nodeType":"YulIdentifier","src":"11072:13:36"},{"name":"pos","nativeSrc":"11087:3:36","nodeType":"YulIdentifier","src":"11087:3:36"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"11028:43:36","nodeType":"YulIdentifier","src":"11028:43:36"},"nativeSrc":"11028:63:36","nodeType":"YulFunctionCall","src":"11028:63:36"},"variableNames":[{"name":"pos","nativeSrc":"11021:3:36","nodeType":"YulIdentifier","src":"11021:3:36"}]},{"nativeSrc":"11104:70:36","nodeType":"YulAssignment","src":"11104:70:36","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11167:6:36","nodeType":"YulIdentifier","src":"11167:6:36"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11114:52:36","nodeType":"YulIdentifier","src":"11114:52:36"},"nativeSrc":"11114:60:36","nodeType":"YulFunctionCall","src":"11114:60:36"},"variableNames":[{"name":"srcPtr","nativeSrc":"11104:6:36","nodeType":"YulIdentifier","src":"11104:6:36"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10922:1:36","nodeType":"YulIdentifier","src":"10922:1:36"},{"name":"length","nativeSrc":"10925:6:36","nodeType":"YulIdentifier","src":"10925:6:36"}],"functionName":{"name":"lt","nativeSrc":"10919:2:36","nodeType":"YulIdentifier","src":"10919:2:36"},"nativeSrc":"10919:13:36","nodeType":"YulFunctionCall","src":"10919:13:36"},"nativeSrc":"10900:284:36","nodeType":"YulForLoop","post":{"nativeSrc":"10933:18:36","nodeType":"YulBlock","src":"10933:18:36","statements":[{"nativeSrc":"10935:14:36","nodeType":"YulAssignment","src":"10935:14:36","value":{"arguments":[{"name":"i","nativeSrc":"10944:1:36","nodeType":"YulIdentifier","src":"10944:1:36"},{"kind":"number","nativeSrc":"10947:1:36","nodeType":"YulLiteral","src":"10947:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10940:3:36","nodeType":"YulIdentifier","src":"10940:3:36"},"nativeSrc":"10940:9:36","nodeType":"YulFunctionCall","src":"10940:9:36"},"variableNames":[{"name":"i","nativeSrc":"10935:1:36","nodeType":"YulIdentifier","src":"10935:1:36"}]}]},"pre":{"nativeSrc":"10904:14:36","nodeType":"YulBlock","src":"10904:14:36","statements":[{"nativeSrc":"10906:10:36","nodeType":"YulVariableDeclaration","src":"10906:10:36","value":{"kind":"number","nativeSrc":"10915:1:36","nodeType":"YulLiteral","src":"10915:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10910:1:36","nodeType":"YulTypedName","src":"10910:1:36","type":""}]}]},"src":"10900:284:36"},{"nativeSrc":"11193:10:36","nodeType":"YulAssignment","src":"11193:10:36","value":{"name":"pos","nativeSrc":"11200:3:36","nodeType":"YulIdentifier","src":"11200:3:36"},"variableNames":[{"name":"end","nativeSrc":"11193:3:36","nodeType":"YulIdentifier","src":"11193:3:36"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10477:732:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10580:5:36","nodeType":"YulTypedName","src":"10580:5:36","type":""},{"name":"pos","nativeSrc":"10587:3:36","nodeType":"YulTypedName","src":"10587:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10596:3:36","nodeType":"YulTypedName","src":"10596:3:36","type":""}],"src":"10477:732:36"},{"body":{"nativeSrc":"11569:861:36","nodeType":"YulBlock","src":"11569:861:36","statements":[{"nativeSrc":"11579:27:36","nodeType":"YulAssignment","src":"11579:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"11591:9:36","nodeType":"YulIdentifier","src":"11591:9:36"},{"kind":"number","nativeSrc":"11602:3:36","nodeType":"YulLiteral","src":"11602:3:36","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"11587:3:36","nodeType":"YulIdentifier","src":"11587:3:36"},"nativeSrc":"11587:19:36","nodeType":"YulFunctionCall","src":"11587:19:36"},"variableNames":[{"name":"tail","nativeSrc":"11579:4:36","nodeType":"YulIdentifier","src":"11579:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11658:6:36","nodeType":"YulIdentifier","src":"11658:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"11671:9:36","nodeType":"YulIdentifier","src":"11671:9:36"},{"kind":"number","nativeSrc":"11682:1:36","nodeType":"YulLiteral","src":"11682:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11667:3:36","nodeType":"YulIdentifier","src":"11667:3:36"},"nativeSrc":"11667:17:36","nodeType":"YulFunctionCall","src":"11667:17:36"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"11616:41:36","nodeType":"YulIdentifier","src":"11616:41:36"},"nativeSrc":"11616:69:36","nodeType":"YulFunctionCall","src":"11616:69:36"},"nativeSrc":"11616:69:36","nodeType":"YulExpressionStatement","src":"11616:69:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11706:9:36","nodeType":"YulIdentifier","src":"11706:9:36"},{"kind":"number","nativeSrc":"11717:2:36","nodeType":"YulLiteral","src":"11717:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11702:3:36","nodeType":"YulIdentifier","src":"11702:3:36"},"nativeSrc":"11702:18:36","nodeType":"YulFunctionCall","src":"11702:18:36"},{"arguments":[{"name":"tail","nativeSrc":"11726:4:36","nodeType":"YulIdentifier","src":"11726:4:36"},{"name":"headStart","nativeSrc":"11732:9:36","nodeType":"YulIdentifier","src":"11732:9:36"}],"functionName":{"name":"sub","nativeSrc":"11722:3:36","nodeType":"YulIdentifier","src":"11722:3:36"},"nativeSrc":"11722:20:36","nodeType":"YulFunctionCall","src":"11722:20:36"}],"functionName":{"name":"mstore","nativeSrc":"11695:6:36","nodeType":"YulIdentifier","src":"11695:6:36"},"nativeSrc":"11695:48:36","nodeType":"YulFunctionCall","src":"11695:48:36"},"nativeSrc":"11695:48:36","nodeType":"YulExpressionStatement","src":"11695:48:36"},{"nativeSrc":"11752:86:36","nodeType":"YulAssignment","src":"11752:86:36","value":{"arguments":[{"name":"value1","nativeSrc":"11824:6:36","nodeType":"YulIdentifier","src":"11824:6:36"},{"name":"tail","nativeSrc":"11833:4:36","nodeType":"YulIdentifier","src":"11833:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11760:63:36","nodeType":"YulIdentifier","src":"11760:63:36"},"nativeSrc":"11760:78:36","nodeType":"YulFunctionCall","src":"11760:78:36"},"variableNames":[{"name":"tail","nativeSrc":"11752:4:36","nodeType":"YulIdentifier","src":"11752:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11859:9:36","nodeType":"YulIdentifier","src":"11859:9:36"},{"kind":"number","nativeSrc":"11870:2:36","nodeType":"YulLiteral","src":"11870:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11855:3:36","nodeType":"YulIdentifier","src":"11855:3:36"},"nativeSrc":"11855:18:36","nodeType":"YulFunctionCall","src":"11855:18:36"},{"arguments":[{"name":"tail","nativeSrc":"11879:4:36","nodeType":"YulIdentifier","src":"11879:4:36"},{"name":"headStart","nativeSrc":"11885:9:36","nodeType":"YulIdentifier","src":"11885:9:36"}],"functionName":{"name":"sub","nativeSrc":"11875:3:36","nodeType":"YulIdentifier","src":"11875:3:36"},"nativeSrc":"11875:20:36","nodeType":"YulFunctionCall","src":"11875:20:36"}],"functionName":{"name":"mstore","nativeSrc":"11848:6:36","nodeType":"YulIdentifier","src":"11848:6:36"},"nativeSrc":"11848:48:36","nodeType":"YulFunctionCall","src":"11848:48:36"},"nativeSrc":"11848:48:36","nodeType":"YulExpressionStatement","src":"11848:48:36"},{"nativeSrc":"11905:86:36","nodeType":"YulAssignment","src":"11905:86:36","value":{"arguments":[{"name":"value2","nativeSrc":"11977:6:36","nodeType":"YulIdentifier","src":"11977:6:36"},{"name":"tail","nativeSrc":"11986:4:36","nodeType":"YulIdentifier","src":"11986:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11913:63:36","nodeType":"YulIdentifier","src":"11913:63:36"},"nativeSrc":"11913:78:36","nodeType":"YulFunctionCall","src":"11913:78:36"},"variableNames":[{"name":"tail","nativeSrc":"11905:4:36","nodeType":"YulIdentifier","src":"11905:4:36"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12045:6:36","nodeType":"YulIdentifier","src":"12045:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12058:9:36","nodeType":"YulIdentifier","src":"12058:9:36"},{"kind":"number","nativeSrc":"12069:2:36","nodeType":"YulLiteral","src":"12069:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12054:3:36","nodeType":"YulIdentifier","src":"12054:3:36"},"nativeSrc":"12054:18:36","nodeType":"YulFunctionCall","src":"12054:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12001:43:36","nodeType":"YulIdentifier","src":"12001:43:36"},"nativeSrc":"12001:72:36","nodeType":"YulFunctionCall","src":"12001:72:36"},"nativeSrc":"12001:72:36","nodeType":"YulExpressionStatement","src":"12001:72:36"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12127:6:36","nodeType":"YulIdentifier","src":"12127:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12140:9:36","nodeType":"YulIdentifier","src":"12140:9:36"},{"kind":"number","nativeSrc":"12151:3:36","nodeType":"YulLiteral","src":"12151:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12136:3:36","nodeType":"YulIdentifier","src":"12136:3:36"},"nativeSrc":"12136:19:36","nodeType":"YulFunctionCall","src":"12136:19:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12083:43:36","nodeType":"YulIdentifier","src":"12083:43:36"},"nativeSrc":"12083:73:36","nodeType":"YulFunctionCall","src":"12083:73:36"},"nativeSrc":"12083:73:36","nodeType":"YulExpressionStatement","src":"12083:73:36"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12210:6:36","nodeType":"YulIdentifier","src":"12210:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12223:9:36","nodeType":"YulIdentifier","src":"12223:9:36"},{"kind":"number","nativeSrc":"12234:3:36","nodeType":"YulLiteral","src":"12234:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12219:3:36","nodeType":"YulIdentifier","src":"12219:3:36"},"nativeSrc":"12219:19:36","nodeType":"YulFunctionCall","src":"12219:19:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12166:43:36","nodeType":"YulIdentifier","src":"12166:43:36"},"nativeSrc":"12166:73:36","nodeType":"YulFunctionCall","src":"12166:73:36"},"nativeSrc":"12166:73:36","nodeType":"YulExpressionStatement","src":"12166:73:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12260:9:36","nodeType":"YulIdentifier","src":"12260:9:36"},{"kind":"number","nativeSrc":"12271:3:36","nodeType":"YulLiteral","src":"12271:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12256:3:36","nodeType":"YulIdentifier","src":"12256:3:36"},"nativeSrc":"12256:19:36","nodeType":"YulFunctionCall","src":"12256:19:36"},{"arguments":[{"name":"tail","nativeSrc":"12281:4:36","nodeType":"YulIdentifier","src":"12281:4:36"},{"name":"headStart","nativeSrc":"12287:9:36","nodeType":"YulIdentifier","src":"12287:9:36"}],"functionName":{"name":"sub","nativeSrc":"12277:3:36","nodeType":"YulIdentifier","src":"12277:3:36"},"nativeSrc":"12277:20:36","nodeType":"YulFunctionCall","src":"12277:20:36"}],"functionName":{"name":"mstore","nativeSrc":"12249:6:36","nodeType":"YulIdentifier","src":"12249:6:36"},"nativeSrc":"12249:49:36","nodeType":"YulFunctionCall","src":"12249:49:36"},"nativeSrc":"12249:49:36","nodeType":"YulExpressionStatement","src":"12249:49:36"},{"nativeSrc":"12307:116:36","nodeType":"YulAssignment","src":"12307:116:36","value":{"arguments":[{"name":"value6","nativeSrc":"12409:6:36","nodeType":"YulIdentifier","src":"12409:6:36"},{"name":"tail","nativeSrc":"12418:4:36","nodeType":"YulIdentifier","src":"12418:4:36"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"12315:93:36","nodeType":"YulIdentifier","src":"12315:93:36"},"nativeSrc":"12315:108:36","nodeType":"YulFunctionCall","src":"12315:108:36"},"variableNames":[{"name":"tail","nativeSrc":"12307:4:36","nodeType":"YulIdentifier","src":"12307:4:36"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"11215:1215:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11493:9:36","nodeType":"YulTypedName","src":"11493:9:36","type":""},{"name":"value6","nativeSrc":"11505:6:36","nodeType":"YulTypedName","src":"11505:6:36","type":""},{"name":"value5","nativeSrc":"11513:6:36","nodeType":"YulTypedName","src":"11513:6:36","type":""},{"name":"value4","nativeSrc":"11521:6:36","nodeType":"YulTypedName","src":"11521:6:36","type":""},{"name":"value3","nativeSrc":"11529:6:36","nodeType":"YulTypedName","src":"11529:6:36","type":""},{"name":"value2","nativeSrc":"11537:6:36","nodeType":"YulTypedName","src":"11537:6:36","type":""},{"name":"value1","nativeSrc":"11545:6:36","nodeType":"YulTypedName","src":"11545:6:36","type":""},{"name":"value0","nativeSrc":"11553:6:36","nodeType":"YulTypedName","src":"11553:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11564:4:36","nodeType":"YulTypedName","src":"11564:4:36","type":""}],"src":"11215:1215:36"},{"body":{"nativeSrc":"12534:124:36","nodeType":"YulBlock","src":"12534:124:36","statements":[{"nativeSrc":"12544:26:36","nodeType":"YulAssignment","src":"12544:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"12556:9:36","nodeType":"YulIdentifier","src":"12556:9:36"},{"kind":"number","nativeSrc":"12567:2:36","nodeType":"YulLiteral","src":"12567:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12552:3:36","nodeType":"YulIdentifier","src":"12552:3:36"},"nativeSrc":"12552:18:36","nodeType":"YulFunctionCall","src":"12552:18:36"},"variableNames":[{"name":"tail","nativeSrc":"12544:4:36","nodeType":"YulIdentifier","src":"12544:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12624:6:36","nodeType":"YulIdentifier","src":"12624:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12637:9:36","nodeType":"YulIdentifier","src":"12637:9:36"},{"kind":"number","nativeSrc":"12648:1:36","nodeType":"YulLiteral","src":"12648:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12633:3:36","nodeType":"YulIdentifier","src":"12633:3:36"},"nativeSrc":"12633:17:36","nodeType":"YulFunctionCall","src":"12633:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12580:43:36","nodeType":"YulIdentifier","src":"12580:43:36"},"nativeSrc":"12580:71:36","nodeType":"YulFunctionCall","src":"12580:71:36"},"nativeSrc":"12580:71:36","nodeType":"YulExpressionStatement","src":"12580:71:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"12436:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12506:9:36","nodeType":"YulTypedName","src":"12506:9:36","type":""},{"name":"value0","nativeSrc":"12518:6:36","nodeType":"YulTypedName","src":"12518:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12529:4:36","nodeType":"YulTypedName","src":"12529:4:36","type":""}],"src":"12436:222:36"},{"body":{"nativeSrc":"12696:28:36","nodeType":"YulBlock","src":"12696:28:36","statements":[{"nativeSrc":"12706:12:36","nodeType":"YulAssignment","src":"12706:12:36","value":{"name":"value","nativeSrc":"12713:5:36","nodeType":"YulIdentifier","src":"12713:5:36"},"variableNames":[{"name":"ret","nativeSrc":"12706:3:36","nodeType":"YulIdentifier","src":"12706:3:36"}]}]},"name":"identity","nativeSrc":"12664:60:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12682:5:36","nodeType":"YulTypedName","src":"12682:5:36","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"12692:3:36","nodeType":"YulTypedName","src":"12692:3:36","type":""}],"src":"12664:60:36"},{"body":{"nativeSrc":"12790:82:36","nodeType":"YulBlock","src":"12790:82:36","statements":[{"nativeSrc":"12800:66:36","nodeType":"YulAssignment","src":"12800:66:36","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12858:5:36","nodeType":"YulIdentifier","src":"12858:5:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"12840:17:36","nodeType":"YulIdentifier","src":"12840:17:36"},"nativeSrc":"12840:24:36","nodeType":"YulFunctionCall","src":"12840:24:36"}],"functionName":{"name":"identity","nativeSrc":"12831:8:36","nodeType":"YulIdentifier","src":"12831:8:36"},"nativeSrc":"12831:34:36","nodeType":"YulFunctionCall","src":"12831:34:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"12813:17:36","nodeType":"YulIdentifier","src":"12813:17:36"},"nativeSrc":"12813:53:36","nodeType":"YulFunctionCall","src":"12813:53:36"},"variableNames":[{"name":"converted","nativeSrc":"12800:9:36","nodeType":"YulIdentifier","src":"12800:9:36"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"12730:142:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12770:5:36","nodeType":"YulTypedName","src":"12770:5:36","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"12780:9:36","nodeType":"YulTypedName","src":"12780:9:36","type":""}],"src":"12730:142:36"},{"body":{"nativeSrc":"12938:66:36","nodeType":"YulBlock","src":"12938:66:36","statements":[{"nativeSrc":"12948:50:36","nodeType":"YulAssignment","src":"12948:50:36","value":{"arguments":[{"name":"value","nativeSrc":"12992:5:36","nodeType":"YulIdentifier","src":"12992:5:36"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"12961:30:36","nodeType":"YulIdentifier","src":"12961:30:36"},"nativeSrc":"12961:37:36","nodeType":"YulFunctionCall","src":"12961:37:36"},"variableNames":[{"name":"converted","nativeSrc":"12948:9:36","nodeType":"YulIdentifier","src":"12948:9:36"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"12878:126:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12918:5:36","nodeType":"YulTypedName","src":"12918:5:36","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"12928:9:36","nodeType":"YulTypedName","src":"12928:9:36","type":""}],"src":"12878:126:36"},{"body":{"nativeSrc":"13086:66:36","nodeType":"YulBlock","src":"13086:66:36","statements":[{"nativeSrc":"13096:50:36","nodeType":"YulAssignment","src":"13096:50:36","value":{"arguments":[{"name":"value","nativeSrc":"13140:5:36","nodeType":"YulIdentifier","src":"13140:5:36"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"13109:30:36","nodeType":"YulIdentifier","src":"13109:30:36"},"nativeSrc":"13109:37:36","nodeType":"YulFunctionCall","src":"13109:37:36"},"variableNames":[{"name":"converted","nativeSrc":"13096:9:36","nodeType":"YulIdentifier","src":"13096:9:36"}]}]},"name":"convert_t_contract$_IERC721_$2224_to_t_address","nativeSrc":"13010:142:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13066:5:36","nodeType":"YulTypedName","src":"13066:5:36","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"13076:9:36","nodeType":"YulTypedName","src":"13076:9:36","type":""}],"src":"13010:142:36"},{"body":{"nativeSrc":"13239:82:36","nodeType":"YulBlock","src":"13239:82:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13256:3:36","nodeType":"YulIdentifier","src":"13256:3:36"},{"arguments":[{"name":"value","nativeSrc":"13308:5:36","nodeType":"YulIdentifier","src":"13308:5:36"}],"functionName":{"name":"convert_t_contract$_IERC721_$2224_to_t_address","nativeSrc":"13261:46:36","nodeType":"YulIdentifier","src":"13261:46:36"},"nativeSrc":"13261:53:36","nodeType":"YulFunctionCall","src":"13261:53:36"}],"functionName":{"name":"mstore","nativeSrc":"13249:6:36","nodeType":"YulIdentifier","src":"13249:6:36"},"nativeSrc":"13249:66:36","nodeType":"YulFunctionCall","src":"13249:66:36"},"nativeSrc":"13249:66:36","nodeType":"YulExpressionStatement","src":"13249:66:36"}]},"name":"abi_encode_t_contract$_IERC721_$2224_to_t_address_fromStack","nativeSrc":"13158:163:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13227:5:36","nodeType":"YulTypedName","src":"13227:5:36","type":""},{"name":"pos","nativeSrc":"13234:3:36","nodeType":"YulTypedName","src":"13234:3:36","type":""}],"src":"13158:163:36"},{"body":{"nativeSrc":"13441:140:36","nodeType":"YulBlock","src":"13441:140:36","statements":[{"nativeSrc":"13451:26:36","nodeType":"YulAssignment","src":"13451:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"13463:9:36","nodeType":"YulIdentifier","src":"13463:9:36"},{"kind":"number","nativeSrc":"13474:2:36","nodeType":"YulLiteral","src":"13474:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13459:3:36","nodeType":"YulIdentifier","src":"13459:3:36"},"nativeSrc":"13459:18:36","nodeType":"YulFunctionCall","src":"13459:18:36"},"variableNames":[{"name":"tail","nativeSrc":"13451:4:36","nodeType":"YulIdentifier","src":"13451:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13547:6:36","nodeType":"YulIdentifier","src":"13547:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"13560:9:36","nodeType":"YulIdentifier","src":"13560:9:36"},{"kind":"number","nativeSrc":"13571:1:36","nodeType":"YulLiteral","src":"13571:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13556:3:36","nodeType":"YulIdentifier","src":"13556:3:36"},"nativeSrc":"13556:17:36","nodeType":"YulFunctionCall","src":"13556:17:36"}],"functionName":{"name":"abi_encode_t_contract$_IERC721_$2224_to_t_address_fromStack","nativeSrc":"13487:59:36","nodeType":"YulIdentifier","src":"13487:59:36"},"nativeSrc":"13487:87:36","nodeType":"YulFunctionCall","src":"13487:87:36"},"nativeSrc":"13487:87:36","nodeType":"YulExpressionStatement","src":"13487:87:36"}]},"name":"abi_encode_tuple_t_contract$_IERC721_$2224__to_t_address__fromStack_reversed","nativeSrc":"13327:254:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13413:9:36","nodeType":"YulTypedName","src":"13413:9:36","type":""},{"name":"value0","nativeSrc":"13425:6:36","nodeType":"YulTypedName","src":"13425:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13436:4:36","nodeType":"YulTypedName","src":"13436:4:36","type":""}],"src":"13327:254:36"},{"body":{"nativeSrc":"13628:77:36","nodeType":"YulBlock","src":"13628:77:36","statements":[{"body":{"nativeSrc":"13683:16:36","nodeType":"YulBlock","src":"13683:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13692:1:36","nodeType":"YulLiteral","src":"13692:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"13695:1:36","nodeType":"YulLiteral","src":"13695:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13685:6:36","nodeType":"YulIdentifier","src":"13685:6:36"},"nativeSrc":"13685:12:36","nodeType":"YulFunctionCall","src":"13685:12:36"},"nativeSrc":"13685:12:36","nodeType":"YulExpressionStatement","src":"13685:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13651:5:36","nodeType":"YulIdentifier","src":"13651:5:36"},{"arguments":[{"name":"value","nativeSrc":"13674:5:36","nodeType":"YulIdentifier","src":"13674:5:36"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"13658:15:36","nodeType":"YulIdentifier","src":"13658:15:36"},"nativeSrc":"13658:22:36","nodeType":"YulFunctionCall","src":"13658:22:36"}],"functionName":{"name":"eq","nativeSrc":"13648:2:36","nodeType":"YulIdentifier","src":"13648:2:36"},"nativeSrc":"13648:33:36","nodeType":"YulFunctionCall","src":"13648:33:36"}],"functionName":{"name":"iszero","nativeSrc":"13641:6:36","nodeType":"YulIdentifier","src":"13641:6:36"},"nativeSrc":"13641:41:36","nodeType":"YulFunctionCall","src":"13641:41:36"},"nativeSrc":"13638:61:36","nodeType":"YulIf","src":"13638:61:36"}]},"name":"validator_revert_t_uint8","nativeSrc":"13587:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13621:5:36","nodeType":"YulTypedName","src":"13621:5:36","type":""}],"src":"13587:118:36"},{"body":{"nativeSrc":"13761:85:36","nodeType":"YulBlock","src":"13761:85:36","statements":[{"nativeSrc":"13771:29:36","nodeType":"YulAssignment","src":"13771:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"13793:6:36","nodeType":"YulIdentifier","src":"13793:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"13780:12:36","nodeType":"YulIdentifier","src":"13780:12:36"},"nativeSrc":"13780:20:36","nodeType":"YulFunctionCall","src":"13780:20:36"},"variableNames":[{"name":"value","nativeSrc":"13771:5:36","nodeType":"YulIdentifier","src":"13771:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13834:5:36","nodeType":"YulIdentifier","src":"13834:5:36"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"13809:24:36","nodeType":"YulIdentifier","src":"13809:24:36"},"nativeSrc":"13809:31:36","nodeType":"YulFunctionCall","src":"13809:31:36"},"nativeSrc":"13809:31:36","nodeType":"YulExpressionStatement","src":"13809:31:36"}]},"name":"abi_decode_t_uint8","nativeSrc":"13711:135:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13739:6:36","nodeType":"YulTypedName","src":"13739:6:36","type":""},{"name":"end","nativeSrc":"13747:3:36","nodeType":"YulTypedName","src":"13747:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"13755:5:36","nodeType":"YulTypedName","src":"13755:5:36","type":""}],"src":"13711:135:36"},{"body":{"nativeSrc":"13895:79:36","nodeType":"YulBlock","src":"13895:79:36","statements":[{"body":{"nativeSrc":"13952:16:36","nodeType":"YulBlock","src":"13952:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13961:1:36","nodeType":"YulLiteral","src":"13961:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"13964:1:36","nodeType":"YulLiteral","src":"13964:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13954:6:36","nodeType":"YulIdentifier","src":"13954:6:36"},"nativeSrc":"13954:12:36","nodeType":"YulFunctionCall","src":"13954:12:36"},"nativeSrc":"13954:12:36","nodeType":"YulExpressionStatement","src":"13954:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13918:5:36","nodeType":"YulIdentifier","src":"13918:5:36"},{"arguments":[{"name":"value","nativeSrc":"13943:5:36","nodeType":"YulIdentifier","src":"13943:5:36"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"13925:17:36","nodeType":"YulIdentifier","src":"13925:17:36"},"nativeSrc":"13925:24:36","nodeType":"YulFunctionCall","src":"13925:24:36"}],"functionName":{"name":"eq","nativeSrc":"13915:2:36","nodeType":"YulIdentifier","src":"13915:2:36"},"nativeSrc":"13915:35:36","nodeType":"YulFunctionCall","src":"13915:35:36"}],"functionName":{"name":"iszero","nativeSrc":"13908:6:36","nodeType":"YulIdentifier","src":"13908:6:36"},"nativeSrc":"13908:43:36","nodeType":"YulFunctionCall","src":"13908:43:36"},"nativeSrc":"13905:63:36","nodeType":"YulIf","src":"13905:63:36"}]},"name":"validator_revert_t_bytes32","nativeSrc":"13852:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13888:5:36","nodeType":"YulTypedName","src":"13888:5:36","type":""}],"src":"13852:122:36"},{"body":{"nativeSrc":"14032:87:36","nodeType":"YulBlock","src":"14032:87:36","statements":[{"nativeSrc":"14042:29:36","nodeType":"YulAssignment","src":"14042:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"14064:6:36","nodeType":"YulIdentifier","src":"14064:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"14051:12:36","nodeType":"YulIdentifier","src":"14051:12:36"},"nativeSrc":"14051:20:36","nodeType":"YulFunctionCall","src":"14051:20:36"},"variableNames":[{"name":"value","nativeSrc":"14042:5:36","nodeType":"YulIdentifier","src":"14042:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14107:5:36","nodeType":"YulIdentifier","src":"14107:5:36"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"14080:26:36","nodeType":"YulIdentifier","src":"14080:26:36"},"nativeSrc":"14080:33:36","nodeType":"YulFunctionCall","src":"14080:33:36"},"nativeSrc":"14080:33:36","nodeType":"YulExpressionStatement","src":"14080:33:36"}]},"name":"abi_decode_t_bytes32","nativeSrc":"13980:139:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14010:6:36","nodeType":"YulTypedName","src":"14010:6:36","type":""},{"name":"end","nativeSrc":"14018:3:36","nodeType":"YulTypedName","src":"14018:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14026:5:36","nodeType":"YulTypedName","src":"14026:5:36","type":""}],"src":"13980:139:36"},{"body":{"nativeSrc":"14291:1033:36","nodeType":"YulBlock","src":"14291:1033:36","statements":[{"body":{"nativeSrc":"14338:83:36","nodeType":"YulBlock","src":"14338:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14340:77:36","nodeType":"YulIdentifier","src":"14340:77:36"},"nativeSrc":"14340:79:36","nodeType":"YulFunctionCall","src":"14340:79:36"},"nativeSrc":"14340:79:36","nodeType":"YulExpressionStatement","src":"14340:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14312:7:36","nodeType":"YulIdentifier","src":"14312:7:36"},{"name":"headStart","nativeSrc":"14321:9:36","nodeType":"YulIdentifier","src":"14321:9:36"}],"functionName":{"name":"sub","nativeSrc":"14308:3:36","nodeType":"YulIdentifier","src":"14308:3:36"},"nativeSrc":"14308:23:36","nodeType":"YulFunctionCall","src":"14308:23:36"},{"kind":"number","nativeSrc":"14333:3:36","nodeType":"YulLiteral","src":"14333:3:36","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"14304:3:36","nodeType":"YulIdentifier","src":"14304:3:36"},"nativeSrc":"14304:33:36","nodeType":"YulFunctionCall","src":"14304:33:36"},"nativeSrc":"14301:120:36","nodeType":"YulIf","src":"14301:120:36"},{"nativeSrc":"14431:117:36","nodeType":"YulBlock","src":"14431:117:36","statements":[{"nativeSrc":"14446:15:36","nodeType":"YulVariableDeclaration","src":"14446:15:36","value":{"kind":"number","nativeSrc":"14460:1:36","nodeType":"YulLiteral","src":"14460:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14450:6:36","nodeType":"YulTypedName","src":"14450:6:36","type":""}]},{"nativeSrc":"14475:63:36","nodeType":"YulAssignment","src":"14475:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14510:9:36","nodeType":"YulIdentifier","src":"14510:9:36"},{"name":"offset","nativeSrc":"14521:6:36","nodeType":"YulIdentifier","src":"14521:6:36"}],"functionName":{"name":"add","nativeSrc":"14506:3:36","nodeType":"YulIdentifier","src":"14506:3:36"},"nativeSrc":"14506:22:36","nodeType":"YulFunctionCall","src":"14506:22:36"},{"name":"dataEnd","nativeSrc":"14530:7:36","nodeType":"YulIdentifier","src":"14530:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14485:20:36","nodeType":"YulIdentifier","src":"14485:20:36"},"nativeSrc":"14485:53:36","nodeType":"YulFunctionCall","src":"14485:53:36"},"variableNames":[{"name":"value0","nativeSrc":"14475:6:36","nodeType":"YulIdentifier","src":"14475:6:36"}]}]},{"nativeSrc":"14558:118:36","nodeType":"YulBlock","src":"14558:118:36","statements":[{"nativeSrc":"14573:16:36","nodeType":"YulVariableDeclaration","src":"14573:16:36","value":{"kind":"number","nativeSrc":"14587:2:36","nodeType":"YulLiteral","src":"14587:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14577:6:36","nodeType":"YulTypedName","src":"14577:6:36","type":""}]},{"nativeSrc":"14603:63:36","nodeType":"YulAssignment","src":"14603:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14638:9:36","nodeType":"YulIdentifier","src":"14638:9:36"},{"name":"offset","nativeSrc":"14649:6:36","nodeType":"YulIdentifier","src":"14649:6:36"}],"functionName":{"name":"add","nativeSrc":"14634:3:36","nodeType":"YulIdentifier","src":"14634:3:36"},"nativeSrc":"14634:22:36","nodeType":"YulFunctionCall","src":"14634:22:36"},{"name":"dataEnd","nativeSrc":"14658:7:36","nodeType":"YulIdentifier","src":"14658:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14613:20:36","nodeType":"YulIdentifier","src":"14613:20:36"},"nativeSrc":"14613:53:36","nodeType":"YulFunctionCall","src":"14613:53:36"},"variableNames":[{"name":"value1","nativeSrc":"14603:6:36","nodeType":"YulIdentifier","src":"14603:6:36"}]}]},{"nativeSrc":"14686:118:36","nodeType":"YulBlock","src":"14686:118:36","statements":[{"nativeSrc":"14701:16:36","nodeType":"YulVariableDeclaration","src":"14701:16:36","value":{"kind":"number","nativeSrc":"14715:2:36","nodeType":"YulLiteral","src":"14715:2:36","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"14705:6:36","nodeType":"YulTypedName","src":"14705:6:36","type":""}]},{"nativeSrc":"14731:63:36","nodeType":"YulAssignment","src":"14731:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14766:9:36","nodeType":"YulIdentifier","src":"14766:9:36"},{"name":"offset","nativeSrc":"14777:6:36","nodeType":"YulIdentifier","src":"14777:6:36"}],"functionName":{"name":"add","nativeSrc":"14762:3:36","nodeType":"YulIdentifier","src":"14762:3:36"},"nativeSrc":"14762:22:36","nodeType":"YulFunctionCall","src":"14762:22:36"},{"name":"dataEnd","nativeSrc":"14786:7:36","nodeType":"YulIdentifier","src":"14786:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14741:20:36","nodeType":"YulIdentifier","src":"14741:20:36"},"nativeSrc":"14741:53:36","nodeType":"YulFunctionCall","src":"14741:53:36"},"variableNames":[{"name":"value2","nativeSrc":"14731:6:36","nodeType":"YulIdentifier","src":"14731:6:36"}]}]},{"nativeSrc":"14814:118:36","nodeType":"YulBlock","src":"14814:118:36","statements":[{"nativeSrc":"14829:16:36","nodeType":"YulVariableDeclaration","src":"14829:16:36","value":{"kind":"number","nativeSrc":"14843:2:36","nodeType":"YulLiteral","src":"14843:2:36","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"14833:6:36","nodeType":"YulTypedName","src":"14833:6:36","type":""}]},{"nativeSrc":"14859:63:36","nodeType":"YulAssignment","src":"14859:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14894:9:36","nodeType":"YulIdentifier","src":"14894:9:36"},{"name":"offset","nativeSrc":"14905:6:36","nodeType":"YulIdentifier","src":"14905:6:36"}],"functionName":{"name":"add","nativeSrc":"14890:3:36","nodeType":"YulIdentifier","src":"14890:3:36"},"nativeSrc":"14890:22:36","nodeType":"YulFunctionCall","src":"14890:22:36"},{"name":"dataEnd","nativeSrc":"14914:7:36","nodeType":"YulIdentifier","src":"14914:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14869:20:36","nodeType":"YulIdentifier","src":"14869:20:36"},"nativeSrc":"14869:53:36","nodeType":"YulFunctionCall","src":"14869:53:36"},"variableNames":[{"name":"value3","nativeSrc":"14859:6:36","nodeType":"YulIdentifier","src":"14859:6:36"}]}]},{"nativeSrc":"14942:117:36","nodeType":"YulBlock","src":"14942:117:36","statements":[{"nativeSrc":"14957:17:36","nodeType":"YulVariableDeclaration","src":"14957:17:36","value":{"kind":"number","nativeSrc":"14971:3:36","nodeType":"YulLiteral","src":"14971:3:36","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"14961:6:36","nodeType":"YulTypedName","src":"14961:6:36","type":""}]},{"nativeSrc":"14988:61:36","nodeType":"YulAssignment","src":"14988:61:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15021:9:36","nodeType":"YulIdentifier","src":"15021:9:36"},{"name":"offset","nativeSrc":"15032:6:36","nodeType":"YulIdentifier","src":"15032:6:36"}],"functionName":{"name":"add","nativeSrc":"15017:3:36","nodeType":"YulIdentifier","src":"15017:3:36"},"nativeSrc":"15017:22:36","nodeType":"YulFunctionCall","src":"15017:22:36"},{"name":"dataEnd","nativeSrc":"15041:7:36","nodeType":"YulIdentifier","src":"15041:7:36"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"14998:18:36","nodeType":"YulIdentifier","src":"14998:18:36"},"nativeSrc":"14998:51:36","nodeType":"YulFunctionCall","src":"14998:51:36"},"variableNames":[{"name":"value4","nativeSrc":"14988:6:36","nodeType":"YulIdentifier","src":"14988:6:36"}]}]},{"nativeSrc":"15069:119:36","nodeType":"YulBlock","src":"15069:119:36","statements":[{"nativeSrc":"15084:17:36","nodeType":"YulVariableDeclaration","src":"15084:17:36","value":{"kind":"number","nativeSrc":"15098:3:36","nodeType":"YulLiteral","src":"15098:3:36","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"15088:6:36","nodeType":"YulTypedName","src":"15088:6:36","type":""}]},{"nativeSrc":"15115:63:36","nodeType":"YulAssignment","src":"15115:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15150:9:36","nodeType":"YulIdentifier","src":"15150:9:36"},{"name":"offset","nativeSrc":"15161:6:36","nodeType":"YulIdentifier","src":"15161:6:36"}],"functionName":{"name":"add","nativeSrc":"15146:3:36","nodeType":"YulIdentifier","src":"15146:3:36"},"nativeSrc":"15146:22:36","nodeType":"YulFunctionCall","src":"15146:22:36"},{"name":"dataEnd","nativeSrc":"15170:7:36","nodeType":"YulIdentifier","src":"15170:7:36"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"15125:20:36","nodeType":"YulIdentifier","src":"15125:20:36"},"nativeSrc":"15125:53:36","nodeType":"YulFunctionCall","src":"15125:53:36"},"variableNames":[{"name":"value5","nativeSrc":"15115:6:36","nodeType":"YulIdentifier","src":"15115:6:36"}]}]},{"nativeSrc":"15198:119:36","nodeType":"YulBlock","src":"15198:119:36","statements":[{"nativeSrc":"15213:17:36","nodeType":"YulVariableDeclaration","src":"15213:17:36","value":{"kind":"number","nativeSrc":"15227:3:36","nodeType":"YulLiteral","src":"15227:3:36","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"15217:6:36","nodeType":"YulTypedName","src":"15217:6:36","type":""}]},{"nativeSrc":"15244:63:36","nodeType":"YulAssignment","src":"15244:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15279:9:36","nodeType":"YulIdentifier","src":"15279:9:36"},{"name":"offset","nativeSrc":"15290:6:36","nodeType":"YulIdentifier","src":"15290:6:36"}],"functionName":{"name":"add","nativeSrc":"15275:3:36","nodeType":"YulIdentifier","src":"15275:3:36"},"nativeSrc":"15275:22:36","nodeType":"YulFunctionCall","src":"15275:22:36"},{"name":"dataEnd","nativeSrc":"15299:7:36","nodeType":"YulIdentifier","src":"15299:7:36"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"15254:20:36","nodeType":"YulIdentifier","src":"15254:20:36"},"nativeSrc":"15254:53:36","nodeType":"YulFunctionCall","src":"15254:53:36"},"variableNames":[{"name":"value6","nativeSrc":"15244:6:36","nodeType":"YulIdentifier","src":"15244:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"14125:1199:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14213:9:36","nodeType":"YulTypedName","src":"14213:9:36","type":""},{"name":"dataEnd","nativeSrc":"14224:7:36","nodeType":"YulTypedName","src":"14224:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14236:6:36","nodeType":"YulTypedName","src":"14236:6:36","type":""},{"name":"value1","nativeSrc":"14244:6:36","nodeType":"YulTypedName","src":"14244:6:36","type":""},{"name":"value2","nativeSrc":"14252:6:36","nodeType":"YulTypedName","src":"14252:6:36","type":""},{"name":"value3","nativeSrc":"14260:6:36","nodeType":"YulTypedName","src":"14260:6:36","type":""},{"name":"value4","nativeSrc":"14268:6:36","nodeType":"YulTypedName","src":"14268:6:36","type":""},{"name":"value5","nativeSrc":"14276:6:36","nodeType":"YulTypedName","src":"14276:6:36","type":""},{"name":"value6","nativeSrc":"14284:6:36","nodeType":"YulTypedName","src":"14284:6:36","type":""}],"src":"14125:1199:36"},{"body":{"nativeSrc":"15413:391:36","nodeType":"YulBlock","src":"15413:391:36","statements":[{"body":{"nativeSrc":"15459:83:36","nodeType":"YulBlock","src":"15459:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15461:77:36","nodeType":"YulIdentifier","src":"15461:77:36"},"nativeSrc":"15461:79:36","nodeType":"YulFunctionCall","src":"15461:79:36"},"nativeSrc":"15461:79:36","nodeType":"YulExpressionStatement","src":"15461:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15434:7:36","nodeType":"YulIdentifier","src":"15434:7:36"},{"name":"headStart","nativeSrc":"15443:9:36","nodeType":"YulIdentifier","src":"15443:9:36"}],"functionName":{"name":"sub","nativeSrc":"15430:3:36","nodeType":"YulIdentifier","src":"15430:3:36"},"nativeSrc":"15430:23:36","nodeType":"YulFunctionCall","src":"15430:23:36"},{"kind":"number","nativeSrc":"15455:2:36","nodeType":"YulLiteral","src":"15455:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15426:3:36","nodeType":"YulIdentifier","src":"15426:3:36"},"nativeSrc":"15426:32:36","nodeType":"YulFunctionCall","src":"15426:32:36"},"nativeSrc":"15423:119:36","nodeType":"YulIf","src":"15423:119:36"},{"nativeSrc":"15552:117:36","nodeType":"YulBlock","src":"15552:117:36","statements":[{"nativeSrc":"15567:15:36","nodeType":"YulVariableDeclaration","src":"15567:15:36","value":{"kind":"number","nativeSrc":"15581:1:36","nodeType":"YulLiteral","src":"15581:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15571:6:36","nodeType":"YulTypedName","src":"15571:6:36","type":""}]},{"nativeSrc":"15596:63:36","nodeType":"YulAssignment","src":"15596:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15631:9:36","nodeType":"YulIdentifier","src":"15631:9:36"},{"name":"offset","nativeSrc":"15642:6:36","nodeType":"YulIdentifier","src":"15642:6:36"}],"functionName":{"name":"add","nativeSrc":"15627:3:36","nodeType":"YulIdentifier","src":"15627:3:36"},"nativeSrc":"15627:22:36","nodeType":"YulFunctionCall","src":"15627:22:36"},{"name":"dataEnd","nativeSrc":"15651:7:36","nodeType":"YulIdentifier","src":"15651:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15606:20:36","nodeType":"YulIdentifier","src":"15606:20:36"},"nativeSrc":"15606:53:36","nodeType":"YulFunctionCall","src":"15606:53:36"},"variableNames":[{"name":"value0","nativeSrc":"15596:6:36","nodeType":"YulIdentifier","src":"15596:6:36"}]}]},{"nativeSrc":"15679:118:36","nodeType":"YulBlock","src":"15679:118:36","statements":[{"nativeSrc":"15694:16:36","nodeType":"YulVariableDeclaration","src":"15694:16:36","value":{"kind":"number","nativeSrc":"15708:2:36","nodeType":"YulLiteral","src":"15708:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15698:6:36","nodeType":"YulTypedName","src":"15698:6:36","type":""}]},{"nativeSrc":"15724:63:36","nodeType":"YulAssignment","src":"15724:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15759:9:36","nodeType":"YulIdentifier","src":"15759:9:36"},{"name":"offset","nativeSrc":"15770:6:36","nodeType":"YulIdentifier","src":"15770:6:36"}],"functionName":{"name":"add","nativeSrc":"15755:3:36","nodeType":"YulIdentifier","src":"15755:3:36"},"nativeSrc":"15755:22:36","nodeType":"YulFunctionCall","src":"15755:22:36"},{"name":"dataEnd","nativeSrc":"15779:7:36","nodeType":"YulIdentifier","src":"15779:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15734:20:36","nodeType":"YulIdentifier","src":"15734:20:36"},"nativeSrc":"15734:53:36","nodeType":"YulFunctionCall","src":"15734:53:36"},"variableNames":[{"name":"value1","nativeSrc":"15724:6:36","nodeType":"YulIdentifier","src":"15724:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"15330:474:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15375:9:36","nodeType":"YulTypedName","src":"15375:9:36","type":""},{"name":"dataEnd","nativeSrc":"15386:7:36","nodeType":"YulTypedName","src":"15386:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15398:6:36","nodeType":"YulTypedName","src":"15398:6:36","type":""},{"name":"value1","nativeSrc":"15406:6:36","nodeType":"YulTypedName","src":"15406:6:36","type":""}],"src":"15330:474:36"},{"body":{"nativeSrc":"15992:371:36","nodeType":"YulBlock","src":"15992:371:36","statements":[{"nativeSrc":"16002:27:36","nodeType":"YulAssignment","src":"16002:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"16014:9:36","nodeType":"YulIdentifier","src":"16014:9:36"},{"kind":"number","nativeSrc":"16025:3:36","nodeType":"YulLiteral","src":"16025:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16010:3:36","nodeType":"YulIdentifier","src":"16010:3:36"},"nativeSrc":"16010:19:36","nodeType":"YulFunctionCall","src":"16010:19:36"},"variableNames":[{"name":"tail","nativeSrc":"16002:4:36","nodeType":"YulIdentifier","src":"16002:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16083:6:36","nodeType":"YulIdentifier","src":"16083:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"16096:9:36","nodeType":"YulIdentifier","src":"16096:9:36"},{"kind":"number","nativeSrc":"16107:1:36","nodeType":"YulLiteral","src":"16107:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16092:3:36","nodeType":"YulIdentifier","src":"16092:3:36"},"nativeSrc":"16092:17:36","nodeType":"YulFunctionCall","src":"16092:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16039:43:36","nodeType":"YulIdentifier","src":"16039:43:36"},"nativeSrc":"16039:71:36","nodeType":"YulFunctionCall","src":"16039:71:36"},"nativeSrc":"16039:71:36","nodeType":"YulExpressionStatement","src":"16039:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16164:6:36","nodeType":"YulIdentifier","src":"16164:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"16177:9:36","nodeType":"YulIdentifier","src":"16177:9:36"},{"kind":"number","nativeSrc":"16188:2:36","nodeType":"YulLiteral","src":"16188:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16173:3:36","nodeType":"YulIdentifier","src":"16173:3:36"},"nativeSrc":"16173:18:36","nodeType":"YulFunctionCall","src":"16173:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16120:43:36","nodeType":"YulIdentifier","src":"16120:43:36"},"nativeSrc":"16120:72:36","nodeType":"YulFunctionCall","src":"16120:72:36"},"nativeSrc":"16120:72:36","nodeType":"YulExpressionStatement","src":"16120:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"16246:6:36","nodeType":"YulIdentifier","src":"16246:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"16259:9:36","nodeType":"YulIdentifier","src":"16259:9:36"},{"kind":"number","nativeSrc":"16270:2:36","nodeType":"YulLiteral","src":"16270:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16255:3:36","nodeType":"YulIdentifier","src":"16255:3:36"},"nativeSrc":"16255:18:36","nodeType":"YulFunctionCall","src":"16255:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16202:43:36","nodeType":"YulIdentifier","src":"16202:43:36"},"nativeSrc":"16202:72:36","nodeType":"YulFunctionCall","src":"16202:72:36"},"nativeSrc":"16202:72:36","nodeType":"YulExpressionStatement","src":"16202:72:36"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"16328:6:36","nodeType":"YulIdentifier","src":"16328:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"16341:9:36","nodeType":"YulIdentifier","src":"16341:9:36"},{"kind":"number","nativeSrc":"16352:2:36","nodeType":"YulLiteral","src":"16352:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16337:3:36","nodeType":"YulIdentifier","src":"16337:3:36"},"nativeSrc":"16337:18:36","nodeType":"YulFunctionCall","src":"16337:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16284:43:36","nodeType":"YulIdentifier","src":"16284:43:36"},"nativeSrc":"16284:72:36","nodeType":"YulFunctionCall","src":"16284:72:36"},"nativeSrc":"16284:72:36","nodeType":"YulExpressionStatement","src":"16284:72:36"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed","nativeSrc":"15810:553:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15940:9:36","nodeType":"YulTypedName","src":"15940:9:36","type":""},{"name":"value3","nativeSrc":"15952:6:36","nodeType":"YulTypedName","src":"15952:6:36","type":""},{"name":"value2","nativeSrc":"15960:6:36","nodeType":"YulTypedName","src":"15960:6:36","type":""},{"name":"value1","nativeSrc":"15968:6:36","nodeType":"YulTypedName","src":"15968:6:36","type":""},{"name":"value0","nativeSrc":"15976:6:36","nodeType":"YulTypedName","src":"15976:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15987:4:36","nodeType":"YulTypedName","src":"15987:4:36","type":""}],"src":"15810:553:36"},{"body":{"nativeSrc":"16397:152:36","nodeType":"YulBlock","src":"16397:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16414:1:36","nodeType":"YulLiteral","src":"16414:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"16417:77:36","nodeType":"YulLiteral","src":"16417:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16407:6:36","nodeType":"YulIdentifier","src":"16407:6:36"},"nativeSrc":"16407:88:36","nodeType":"YulFunctionCall","src":"16407:88:36"},"nativeSrc":"16407:88:36","nodeType":"YulExpressionStatement","src":"16407:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16511:1:36","nodeType":"YulLiteral","src":"16511:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"16514:4:36","nodeType":"YulLiteral","src":"16514:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"16504:6:36","nodeType":"YulIdentifier","src":"16504:6:36"},"nativeSrc":"16504:15:36","nodeType":"YulFunctionCall","src":"16504:15:36"},"nativeSrc":"16504:15:36","nodeType":"YulExpressionStatement","src":"16504:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16535:1:36","nodeType":"YulLiteral","src":"16535:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"16538:4:36","nodeType":"YulLiteral","src":"16538:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16528:6:36","nodeType":"YulIdentifier","src":"16528:6:36"},"nativeSrc":"16528:15:36","nodeType":"YulFunctionCall","src":"16528:15:36"},"nativeSrc":"16528:15:36","nodeType":"YulExpressionStatement","src":"16528:15:36"}]},"name":"panic_error_0x22","nativeSrc":"16369:180:36","nodeType":"YulFunctionDefinition","src":"16369:180:36"},{"body":{"nativeSrc":"16606:269:36","nodeType":"YulBlock","src":"16606:269:36","statements":[{"nativeSrc":"16616:22:36","nodeType":"YulAssignment","src":"16616:22:36","value":{"arguments":[{"name":"data","nativeSrc":"16630:4:36","nodeType":"YulIdentifier","src":"16630:4:36"},{"kind":"number","nativeSrc":"16636:1:36","nodeType":"YulLiteral","src":"16636:1:36","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"16626:3:36","nodeType":"YulIdentifier","src":"16626:3:36"},"nativeSrc":"16626:12:36","nodeType":"YulFunctionCall","src":"16626:12:36"},"variableNames":[{"name":"length","nativeSrc":"16616:6:36","nodeType":"YulIdentifier","src":"16616:6:36"}]},{"nativeSrc":"16647:38:36","nodeType":"YulVariableDeclaration","src":"16647:38:36","value":{"arguments":[{"name":"data","nativeSrc":"16677:4:36","nodeType":"YulIdentifier","src":"16677:4:36"},{"kind":"number","nativeSrc":"16683:1:36","nodeType":"YulLiteral","src":"16683:1:36","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"16673:3:36","nodeType":"YulIdentifier","src":"16673:3:36"},"nativeSrc":"16673:12:36","nodeType":"YulFunctionCall","src":"16673:12:36"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"16651:18:36","nodeType":"YulTypedName","src":"16651:18:36","type":""}]},{"body":{"nativeSrc":"16724:51:36","nodeType":"YulBlock","src":"16724:51:36","statements":[{"nativeSrc":"16738:27:36","nodeType":"YulAssignment","src":"16738:27:36","value":{"arguments":[{"name":"length","nativeSrc":"16752:6:36","nodeType":"YulIdentifier","src":"16752:6:36"},{"kind":"number","nativeSrc":"16760:4:36","nodeType":"YulLiteral","src":"16760:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"16748:3:36","nodeType":"YulIdentifier","src":"16748:3:36"},"nativeSrc":"16748:17:36","nodeType":"YulFunctionCall","src":"16748:17:36"},"variableNames":[{"name":"length","nativeSrc":"16738:6:36","nodeType":"YulIdentifier","src":"16738:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16704:18:36","nodeType":"YulIdentifier","src":"16704:18:36"}],"functionName":{"name":"iszero","nativeSrc":"16697:6:36","nodeType":"YulIdentifier","src":"16697:6:36"},"nativeSrc":"16697:26:36","nodeType":"YulFunctionCall","src":"16697:26:36"},"nativeSrc":"16694:81:36","nodeType":"YulIf","src":"16694:81:36"},{"body":{"nativeSrc":"16827:42:36","nodeType":"YulBlock","src":"16827:42:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"16841:16:36","nodeType":"YulIdentifier","src":"16841:16:36"},"nativeSrc":"16841:18:36","nodeType":"YulFunctionCall","src":"16841:18:36"},"nativeSrc":"16841:18:36","nodeType":"YulExpressionStatement","src":"16841:18:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16791:18:36","nodeType":"YulIdentifier","src":"16791:18:36"},{"arguments":[{"name":"length","nativeSrc":"16814:6:36","nodeType":"YulIdentifier","src":"16814:6:36"},{"kind":"number","nativeSrc":"16822:2:36","nodeType":"YulLiteral","src":"16822:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"16811:2:36","nodeType":"YulIdentifier","src":"16811:2:36"},"nativeSrc":"16811:14:36","nodeType":"YulFunctionCall","src":"16811:14:36"}],"functionName":{"name":"eq","nativeSrc":"16788:2:36","nodeType":"YulIdentifier","src":"16788:2:36"},"nativeSrc":"16788:38:36","nodeType":"YulFunctionCall","src":"16788:38:36"},"nativeSrc":"16785:84:36","nodeType":"YulIf","src":"16785:84:36"}]},"name":"extract_byte_array_length","nativeSrc":"16555:320:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16590:4:36","nodeType":"YulTypedName","src":"16590:4:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"16599:6:36","nodeType":"YulTypedName","src":"16599:6:36","type":""}],"src":"16555:320:36"},{"body":{"nativeSrc":"16987:115:36","nodeType":"YulBlock","src":"16987:115:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17009:6:36","nodeType":"YulIdentifier","src":"17009:6:36"},{"kind":"number","nativeSrc":"17017:1:36","nodeType":"YulLiteral","src":"17017:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17005:3:36","nodeType":"YulIdentifier","src":"17005:3:36"},"nativeSrc":"17005:14:36","nodeType":"YulFunctionCall","src":"17005:14:36"},{"hexValue":"436572746966696361746520616c7265616479206672616374696f6e616c697a","kind":"string","nativeSrc":"17021:34:36","nodeType":"YulLiteral","src":"17021:34:36","type":"","value":"Certificate already fractionaliz"}],"functionName":{"name":"mstore","nativeSrc":"16998:6:36","nodeType":"YulIdentifier","src":"16998:6:36"},"nativeSrc":"16998:58:36","nodeType":"YulFunctionCall","src":"16998:58:36"},"nativeSrc":"16998:58:36","nodeType":"YulExpressionStatement","src":"16998:58:36"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17077:6:36","nodeType":"YulIdentifier","src":"17077:6:36"},{"kind":"number","nativeSrc":"17085:2:36","nodeType":"YulLiteral","src":"17085:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17073:3:36","nodeType":"YulIdentifier","src":"17073:3:36"},"nativeSrc":"17073:15:36","nodeType":"YulFunctionCall","src":"17073:15:36"},{"hexValue":"6564","kind":"string","nativeSrc":"17090:4:36","nodeType":"YulLiteral","src":"17090:4:36","type":"","value":"ed"}],"functionName":{"name":"mstore","nativeSrc":"17066:6:36","nodeType":"YulIdentifier","src":"17066:6:36"},"nativeSrc":"17066:29:36","nodeType":"YulFunctionCall","src":"17066:29:36"},"nativeSrc":"17066:29:36","nodeType":"YulExpressionStatement","src":"17066:29:36"}]},"name":"store_literal_in_memory_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4","nativeSrc":"16881:221:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16979:6:36","nodeType":"YulTypedName","src":"16979:6:36","type":""}],"src":"16881:221:36"},{"body":{"nativeSrc":"17254:220:36","nodeType":"YulBlock","src":"17254:220:36","statements":[{"nativeSrc":"17264:74:36","nodeType":"YulAssignment","src":"17264:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"17330:3:36","nodeType":"YulIdentifier","src":"17330:3:36"},{"kind":"number","nativeSrc":"17335:2:36","nodeType":"YulLiteral","src":"17335:2:36","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17271:58:36","nodeType":"YulIdentifier","src":"17271:58:36"},"nativeSrc":"17271:67:36","nodeType":"YulFunctionCall","src":"17271:67:36"},"variableNames":[{"name":"pos","nativeSrc":"17264:3:36","nodeType":"YulIdentifier","src":"17264:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17436:3:36","nodeType":"YulIdentifier","src":"17436:3:36"}],"functionName":{"name":"store_literal_in_memory_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4","nativeSrc":"17347:88:36","nodeType":"YulIdentifier","src":"17347:88:36"},"nativeSrc":"17347:93:36","nodeType":"YulFunctionCall","src":"17347:93:36"},"nativeSrc":"17347:93:36","nodeType":"YulExpressionStatement","src":"17347:93:36"},{"nativeSrc":"17449:19:36","nodeType":"YulAssignment","src":"17449:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"17460:3:36","nodeType":"YulIdentifier","src":"17460:3:36"},{"kind":"number","nativeSrc":"17465:2:36","nodeType":"YulLiteral","src":"17465:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17456:3:36","nodeType":"YulIdentifier","src":"17456:3:36"},"nativeSrc":"17456:12:36","nodeType":"YulFunctionCall","src":"17456:12:36"},"variableNames":[{"name":"end","nativeSrc":"17449:3:36","nodeType":"YulIdentifier","src":"17449:3:36"}]}]},"name":"abi_encode_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4_to_t_string_memory_ptr_fromStack","nativeSrc":"17108:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17242:3:36","nodeType":"YulTypedName","src":"17242:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17250:3:36","nodeType":"YulTypedName","src":"17250:3:36","type":""}],"src":"17108:366:36"},{"body":{"nativeSrc":"17651:248:36","nodeType":"YulBlock","src":"17651:248:36","statements":[{"nativeSrc":"17661:26:36","nodeType":"YulAssignment","src":"17661:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"17673:9:36","nodeType":"YulIdentifier","src":"17673:9:36"},{"kind":"number","nativeSrc":"17684:2:36","nodeType":"YulLiteral","src":"17684:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17669:3:36","nodeType":"YulIdentifier","src":"17669:3:36"},"nativeSrc":"17669:18:36","nodeType":"YulFunctionCall","src":"17669:18:36"},"variableNames":[{"name":"tail","nativeSrc":"17661:4:36","nodeType":"YulIdentifier","src":"17661:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17708:9:36","nodeType":"YulIdentifier","src":"17708:9:36"},{"kind":"number","nativeSrc":"17719:1:36","nodeType":"YulLiteral","src":"17719:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17704:3:36","nodeType":"YulIdentifier","src":"17704:3:36"},"nativeSrc":"17704:17:36","nodeType":"YulFunctionCall","src":"17704:17:36"},{"arguments":[{"name":"tail","nativeSrc":"17727:4:36","nodeType":"YulIdentifier","src":"17727:4:36"},{"name":"headStart","nativeSrc":"17733:9:36","nodeType":"YulIdentifier","src":"17733:9:36"}],"functionName":{"name":"sub","nativeSrc":"17723:3:36","nodeType":"YulIdentifier","src":"17723:3:36"},"nativeSrc":"17723:20:36","nodeType":"YulFunctionCall","src":"17723:20:36"}],"functionName":{"name":"mstore","nativeSrc":"17697:6:36","nodeType":"YulIdentifier","src":"17697:6:36"},"nativeSrc":"17697:47:36","nodeType":"YulFunctionCall","src":"17697:47:36"},"nativeSrc":"17697:47:36","nodeType":"YulExpressionStatement","src":"17697:47:36"},{"nativeSrc":"17753:139:36","nodeType":"YulAssignment","src":"17753:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"17887:4:36","nodeType":"YulIdentifier","src":"17887:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4_to_t_string_memory_ptr_fromStack","nativeSrc":"17761:124:36","nodeType":"YulIdentifier","src":"17761:124:36"},"nativeSrc":"17761:131:36","nodeType":"YulFunctionCall","src":"17761:131:36"},"variableNames":[{"name":"tail","nativeSrc":"17753:4:36","nodeType":"YulIdentifier","src":"17753:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17480:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17631:9:36","nodeType":"YulTypedName","src":"17631:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17646:4:36","nodeType":"YulTypedName","src":"17646:4:36","type":""}],"src":"17480:419:36"},{"body":{"nativeSrc":"18059:288:36","nodeType":"YulBlock","src":"18059:288:36","statements":[{"nativeSrc":"18069:26:36","nodeType":"YulAssignment","src":"18069:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"18081:9:36","nodeType":"YulIdentifier","src":"18081:9:36"},{"kind":"number","nativeSrc":"18092:2:36","nodeType":"YulLiteral","src":"18092:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18077:3:36","nodeType":"YulIdentifier","src":"18077:3:36"},"nativeSrc":"18077:18:36","nodeType":"YulFunctionCall","src":"18077:18:36"},"variableNames":[{"name":"tail","nativeSrc":"18069:4:36","nodeType":"YulIdentifier","src":"18069:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18149:6:36","nodeType":"YulIdentifier","src":"18149:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"18162:9:36","nodeType":"YulIdentifier","src":"18162:9:36"},{"kind":"number","nativeSrc":"18173:1:36","nodeType":"YulLiteral","src":"18173:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18158:3:36","nodeType":"YulIdentifier","src":"18158:3:36"},"nativeSrc":"18158:17:36","nodeType":"YulFunctionCall","src":"18158:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18105:43:36","nodeType":"YulIdentifier","src":"18105:43:36"},"nativeSrc":"18105:71:36","nodeType":"YulFunctionCall","src":"18105:71:36"},"nativeSrc":"18105:71:36","nodeType":"YulExpressionStatement","src":"18105:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18230:6:36","nodeType":"YulIdentifier","src":"18230:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"18243:9:36","nodeType":"YulIdentifier","src":"18243:9:36"},{"kind":"number","nativeSrc":"18254:2:36","nodeType":"YulLiteral","src":"18254:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18239:3:36","nodeType":"YulIdentifier","src":"18239:3:36"},"nativeSrc":"18239:18:36","nodeType":"YulFunctionCall","src":"18239:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18186:43:36","nodeType":"YulIdentifier","src":"18186:43:36"},"nativeSrc":"18186:72:36","nodeType":"YulFunctionCall","src":"18186:72:36"},"nativeSrc":"18186:72:36","nodeType":"YulExpressionStatement","src":"18186:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"18312:6:36","nodeType":"YulIdentifier","src":"18312:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"18325:9:36","nodeType":"YulIdentifier","src":"18325:9:36"},{"kind":"number","nativeSrc":"18336:2:36","nodeType":"YulLiteral","src":"18336:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18321:3:36","nodeType":"YulIdentifier","src":"18321:3:36"},"nativeSrc":"18321:18:36","nodeType":"YulFunctionCall","src":"18321:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18268:43:36","nodeType":"YulIdentifier","src":"18268:43:36"},"nativeSrc":"18268:72:36","nodeType":"YulFunctionCall","src":"18268:72:36"},"nativeSrc":"18268:72:36","nodeType":"YulExpressionStatement","src":"18268:72:36"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"17905:442:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18015:9:36","nodeType":"YulTypedName","src":"18015:9:36","type":""},{"name":"value2","nativeSrc":"18027:6:36","nodeType":"YulTypedName","src":"18027:6:36","type":""},{"name":"value1","nativeSrc":"18035:6:36","nodeType":"YulTypedName","src":"18035:6:36","type":""},{"name":"value0","nativeSrc":"18043:6:36","nodeType":"YulTypedName","src":"18043:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18054:4:36","nodeType":"YulTypedName","src":"18054:4:36","type":""}],"src":"17905:442:36"},{"body":{"nativeSrc":"18479:206:36","nodeType":"YulBlock","src":"18479:206:36","statements":[{"nativeSrc":"18489:26:36","nodeType":"YulAssignment","src":"18489:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"18501:9:36","nodeType":"YulIdentifier","src":"18501:9:36"},{"kind":"number","nativeSrc":"18512:2:36","nodeType":"YulLiteral","src":"18512:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18497:3:36","nodeType":"YulIdentifier","src":"18497:3:36"},"nativeSrc":"18497:18:36","nodeType":"YulFunctionCall","src":"18497:18:36"},"variableNames":[{"name":"tail","nativeSrc":"18489:4:36","nodeType":"YulIdentifier","src":"18489:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18569:6:36","nodeType":"YulIdentifier","src":"18569:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"18582:9:36","nodeType":"YulIdentifier","src":"18582:9:36"},{"kind":"number","nativeSrc":"18593:1:36","nodeType":"YulLiteral","src":"18593:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18578:3:36","nodeType":"YulIdentifier","src":"18578:3:36"},"nativeSrc":"18578:17:36","nodeType":"YulFunctionCall","src":"18578:17:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18525:43:36","nodeType":"YulIdentifier","src":"18525:43:36"},"nativeSrc":"18525:71:36","nodeType":"YulFunctionCall","src":"18525:71:36"},"nativeSrc":"18525:71:36","nodeType":"YulExpressionStatement","src":"18525:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18650:6:36","nodeType":"YulIdentifier","src":"18650:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"18663:9:36","nodeType":"YulIdentifier","src":"18663:9:36"},{"kind":"number","nativeSrc":"18674:2:36","nodeType":"YulLiteral","src":"18674:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18659:3:36","nodeType":"YulIdentifier","src":"18659:3:36"},"nativeSrc":"18659:18:36","nodeType":"YulFunctionCall","src":"18659:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18606:43:36","nodeType":"YulIdentifier","src":"18606:43:36"},"nativeSrc":"18606:72:36","nodeType":"YulFunctionCall","src":"18606:72:36"},"nativeSrc":"18606:72:36","nodeType":"YulExpressionStatement","src":"18606:72:36"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"18353:332:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18443:9:36","nodeType":"YulTypedName","src":"18443:9:36","type":""},{"name":"value1","nativeSrc":"18455:6:36","nodeType":"YulTypedName","src":"18455:6:36","type":""},{"name":"value0","nativeSrc":"18463:6:36","nodeType":"YulTypedName","src":"18463:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18474:4:36","nodeType":"YulTypedName","src":"18474:4:36","type":""}],"src":"18353:332:36"},{"body":{"nativeSrc":"18929:537:36","nodeType":"YulBlock","src":"18929:537:36","statements":[{"nativeSrc":"18939:27:36","nodeType":"YulAssignment","src":"18939:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"18951:9:36","nodeType":"YulIdentifier","src":"18951:9:36"},{"kind":"number","nativeSrc":"18962:3:36","nodeType":"YulLiteral","src":"18962:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"18947:3:36","nodeType":"YulIdentifier","src":"18947:3:36"},"nativeSrc":"18947:19:36","nodeType":"YulFunctionCall","src":"18947:19:36"},"variableNames":[{"name":"tail","nativeSrc":"18939:4:36","nodeType":"YulIdentifier","src":"18939:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19020:6:36","nodeType":"YulIdentifier","src":"19020:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19033:9:36","nodeType":"YulIdentifier","src":"19033:9:36"},{"kind":"number","nativeSrc":"19044:1:36","nodeType":"YulLiteral","src":"19044:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19029:3:36","nodeType":"YulIdentifier","src":"19029:3:36"},"nativeSrc":"19029:17:36","nodeType":"YulFunctionCall","src":"19029:17:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"18976:43:36","nodeType":"YulIdentifier","src":"18976:43:36"},"nativeSrc":"18976:71:36","nodeType":"YulFunctionCall","src":"18976:71:36"},"nativeSrc":"18976:71:36","nodeType":"YulExpressionStatement","src":"18976:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19101:6:36","nodeType":"YulIdentifier","src":"19101:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19114:9:36","nodeType":"YulIdentifier","src":"19114:9:36"},{"kind":"number","nativeSrc":"19125:2:36","nodeType":"YulLiteral","src":"19125:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19110:3:36","nodeType":"YulIdentifier","src":"19110:3:36"},"nativeSrc":"19110:18:36","nodeType":"YulFunctionCall","src":"19110:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19057:43:36","nodeType":"YulIdentifier","src":"19057:43:36"},"nativeSrc":"19057:72:36","nodeType":"YulFunctionCall","src":"19057:72:36"},"nativeSrc":"19057:72:36","nodeType":"YulExpressionStatement","src":"19057:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19183:6:36","nodeType":"YulIdentifier","src":"19183:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19196:9:36","nodeType":"YulIdentifier","src":"19196:9:36"},{"kind":"number","nativeSrc":"19207:2:36","nodeType":"YulLiteral","src":"19207:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19192:3:36","nodeType":"YulIdentifier","src":"19192:3:36"},"nativeSrc":"19192:18:36","nodeType":"YulFunctionCall","src":"19192:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19139:43:36","nodeType":"YulIdentifier","src":"19139:43:36"},"nativeSrc":"19139:72:36","nodeType":"YulFunctionCall","src":"19139:72:36"},"nativeSrc":"19139:72:36","nodeType":"YulExpressionStatement","src":"19139:72:36"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"19265:6:36","nodeType":"YulIdentifier","src":"19265:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19278:9:36","nodeType":"YulIdentifier","src":"19278:9:36"},{"kind":"number","nativeSrc":"19289:2:36","nodeType":"YulLiteral","src":"19289:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19274:3:36","nodeType":"YulIdentifier","src":"19274:3:36"},"nativeSrc":"19274:18:36","nodeType":"YulFunctionCall","src":"19274:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19221:43:36","nodeType":"YulIdentifier","src":"19221:43:36"},"nativeSrc":"19221:72:36","nodeType":"YulFunctionCall","src":"19221:72:36"},"nativeSrc":"19221:72:36","nodeType":"YulExpressionStatement","src":"19221:72:36"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"19347:6:36","nodeType":"YulIdentifier","src":"19347:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19360:9:36","nodeType":"YulIdentifier","src":"19360:9:36"},{"kind":"number","nativeSrc":"19371:3:36","nodeType":"YulLiteral","src":"19371:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19356:3:36","nodeType":"YulIdentifier","src":"19356:3:36"},"nativeSrc":"19356:19:36","nodeType":"YulFunctionCall","src":"19356:19:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19303:43:36","nodeType":"YulIdentifier","src":"19303:43:36"},"nativeSrc":"19303:73:36","nodeType":"YulFunctionCall","src":"19303:73:36"},"nativeSrc":"19303:73:36","nodeType":"YulExpressionStatement","src":"19303:73:36"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"19430:6:36","nodeType":"YulIdentifier","src":"19430:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19443:9:36","nodeType":"YulIdentifier","src":"19443:9:36"},{"kind":"number","nativeSrc":"19454:3:36","nodeType":"YulLiteral","src":"19454:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"19439:3:36","nodeType":"YulIdentifier","src":"19439:3:36"},"nativeSrc":"19439:19:36","nodeType":"YulFunctionCall","src":"19439:19:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19386:43:36","nodeType":"YulIdentifier","src":"19386:43:36"},"nativeSrc":"19386:73:36","nodeType":"YulFunctionCall","src":"19386:73:36"},"nativeSrc":"19386:73:36","nodeType":"YulExpressionStatement","src":"19386:73:36"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"18691:775:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18861:9:36","nodeType":"YulTypedName","src":"18861:9:36","type":""},{"name":"value5","nativeSrc":"18873:6:36","nodeType":"YulTypedName","src":"18873:6:36","type":""},{"name":"value4","nativeSrc":"18881:6:36","nodeType":"YulTypedName","src":"18881:6:36","type":""},{"name":"value3","nativeSrc":"18889:6:36","nodeType":"YulTypedName","src":"18889:6:36","type":""},{"name":"value2","nativeSrc":"18897:6:36","nodeType":"YulTypedName","src":"18897:6:36","type":""},{"name":"value1","nativeSrc":"18905:6:36","nodeType":"YulTypedName","src":"18905:6:36","type":""},{"name":"value0","nativeSrc":"18913:6:36","nodeType":"YulTypedName","src":"18913:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18924:4:36","nodeType":"YulTypedName","src":"18924:4:36","type":""}],"src":"18691:775:36"},{"body":{"nativeSrc":"19598:206:36","nodeType":"YulBlock","src":"19598:206:36","statements":[{"nativeSrc":"19608:26:36","nodeType":"YulAssignment","src":"19608:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"19620:9:36","nodeType":"YulIdentifier","src":"19620:9:36"},{"kind":"number","nativeSrc":"19631:2:36","nodeType":"YulLiteral","src":"19631:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19616:3:36","nodeType":"YulIdentifier","src":"19616:3:36"},"nativeSrc":"19616:18:36","nodeType":"YulFunctionCall","src":"19616:18:36"},"variableNames":[{"name":"tail","nativeSrc":"19608:4:36","nodeType":"YulIdentifier","src":"19608:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19688:6:36","nodeType":"YulIdentifier","src":"19688:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19701:9:36","nodeType":"YulIdentifier","src":"19701:9:36"},{"kind":"number","nativeSrc":"19712:1:36","nodeType":"YulLiteral","src":"19712:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19697:3:36","nodeType":"YulIdentifier","src":"19697:3:36"},"nativeSrc":"19697:17:36","nodeType":"YulFunctionCall","src":"19697:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19644:43:36","nodeType":"YulIdentifier","src":"19644:43:36"},"nativeSrc":"19644:71:36","nodeType":"YulFunctionCall","src":"19644:71:36"},"nativeSrc":"19644:71:36","nodeType":"YulExpressionStatement","src":"19644:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19769:6:36","nodeType":"YulIdentifier","src":"19769:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"19782:9:36","nodeType":"YulIdentifier","src":"19782:9:36"},{"kind":"number","nativeSrc":"19793:2:36","nodeType":"YulLiteral","src":"19793:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19778:3:36","nodeType":"YulIdentifier","src":"19778:3:36"},"nativeSrc":"19778:18:36","nodeType":"YulFunctionCall","src":"19778:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19725:43:36","nodeType":"YulIdentifier","src":"19725:43:36"},"nativeSrc":"19725:72:36","nodeType":"YulFunctionCall","src":"19725:72:36"},"nativeSrc":"19725:72:36","nodeType":"YulExpressionStatement","src":"19725:72:36"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"19472:332:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19562:9:36","nodeType":"YulTypedName","src":"19562:9:36","type":""},{"name":"value1","nativeSrc":"19574:6:36","nodeType":"YulTypedName","src":"19574:6:36","type":""},{"name":"value0","nativeSrc":"19582:6:36","nodeType":"YulTypedName","src":"19582:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19593:4:36","nodeType":"YulTypedName","src":"19593:4:36","type":""}],"src":"19472:332:36"},{"body":{"nativeSrc":"19964:288:36","nodeType":"YulBlock","src":"19964:288:36","statements":[{"nativeSrc":"19974:26:36","nodeType":"YulAssignment","src":"19974:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"19986:9:36","nodeType":"YulIdentifier","src":"19986:9:36"},{"kind":"number","nativeSrc":"19997:2:36","nodeType":"YulLiteral","src":"19997:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19982:3:36","nodeType":"YulIdentifier","src":"19982:3:36"},"nativeSrc":"19982:18:36","nodeType":"YulFunctionCall","src":"19982:18:36"},"variableNames":[{"name":"tail","nativeSrc":"19974:4:36","nodeType":"YulIdentifier","src":"19974:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20054:6:36","nodeType":"YulIdentifier","src":"20054:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"20067:9:36","nodeType":"YulIdentifier","src":"20067:9:36"},{"kind":"number","nativeSrc":"20078:1:36","nodeType":"YulLiteral","src":"20078:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20063:3:36","nodeType":"YulIdentifier","src":"20063:3:36"},"nativeSrc":"20063:17:36","nodeType":"YulFunctionCall","src":"20063:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20010:43:36","nodeType":"YulIdentifier","src":"20010:43:36"},"nativeSrc":"20010:71:36","nodeType":"YulFunctionCall","src":"20010:71:36"},"nativeSrc":"20010:71:36","nodeType":"YulExpressionStatement","src":"20010:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20135:6:36","nodeType":"YulIdentifier","src":"20135:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"20148:9:36","nodeType":"YulIdentifier","src":"20148:9:36"},{"kind":"number","nativeSrc":"20159:2:36","nodeType":"YulLiteral","src":"20159:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20144:3:36","nodeType":"YulIdentifier","src":"20144:3:36"},"nativeSrc":"20144:18:36","nodeType":"YulFunctionCall","src":"20144:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20091:43:36","nodeType":"YulIdentifier","src":"20091:43:36"},"nativeSrc":"20091:72:36","nodeType":"YulFunctionCall","src":"20091:72:36"},"nativeSrc":"20091:72:36","nodeType":"YulExpressionStatement","src":"20091:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"20217:6:36","nodeType":"YulIdentifier","src":"20217:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"20230:9:36","nodeType":"YulIdentifier","src":"20230:9:36"},{"kind":"number","nativeSrc":"20241:2:36","nodeType":"YulLiteral","src":"20241:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20226:3:36","nodeType":"YulIdentifier","src":"20226:3:36"},"nativeSrc":"20226:18:36","nodeType":"YulFunctionCall","src":"20226:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20173:43:36","nodeType":"YulIdentifier","src":"20173:43:36"},"nativeSrc":"20173:72:36","nodeType":"YulFunctionCall","src":"20173:72:36"},"nativeSrc":"20173:72:36","nodeType":"YulExpressionStatement","src":"20173:72:36"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"19810:442:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19920:9:36","nodeType":"YulTypedName","src":"19920:9:36","type":""},{"name":"value2","nativeSrc":"19932:6:36","nodeType":"YulTypedName","src":"19932:6:36","type":""},{"name":"value1","nativeSrc":"19940:6:36","nodeType":"YulTypedName","src":"19940:6:36","type":""},{"name":"value0","nativeSrc":"19948:6:36","nodeType":"YulTypedName","src":"19948:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19959:4:36","nodeType":"YulTypedName","src":"19959:4:36","type":""}],"src":"19810:442:36"},{"body":{"nativeSrc":"20286:152:36","nodeType":"YulBlock","src":"20286:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20303:1:36","nodeType":"YulLiteral","src":"20303:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"20306:77:36","nodeType":"YulLiteral","src":"20306:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20296:6:36","nodeType":"YulIdentifier","src":"20296:6:36"},"nativeSrc":"20296:88:36","nodeType":"YulFunctionCall","src":"20296:88:36"},"nativeSrc":"20296:88:36","nodeType":"YulExpressionStatement","src":"20296:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20400:1:36","nodeType":"YulLiteral","src":"20400:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"20403:4:36","nodeType":"YulLiteral","src":"20403:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"20393:6:36","nodeType":"YulIdentifier","src":"20393:6:36"},"nativeSrc":"20393:15:36","nodeType":"YulFunctionCall","src":"20393:15:36"},"nativeSrc":"20393:15:36","nodeType":"YulExpressionStatement","src":"20393:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20424:1:36","nodeType":"YulLiteral","src":"20424:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"20427:4:36","nodeType":"YulLiteral","src":"20427:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20417:6:36","nodeType":"YulIdentifier","src":"20417:6:36"},"nativeSrc":"20417:15:36","nodeType":"YulFunctionCall","src":"20417:15:36"},"nativeSrc":"20417:15:36","nodeType":"YulExpressionStatement","src":"20417:15:36"}]},"name":"panic_error_0x11","nativeSrc":"20258:180:36","nodeType":"YulFunctionDefinition","src":"20258:180:36"},{"body":{"nativeSrc":"20488:147:36","nodeType":"YulBlock","src":"20488:147:36","statements":[{"nativeSrc":"20498:25:36","nodeType":"YulAssignment","src":"20498:25:36","value":{"arguments":[{"name":"x","nativeSrc":"20521:1:36","nodeType":"YulIdentifier","src":"20521:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20503:17:36","nodeType":"YulIdentifier","src":"20503:17:36"},"nativeSrc":"20503:20:36","nodeType":"YulFunctionCall","src":"20503:20:36"},"variableNames":[{"name":"x","nativeSrc":"20498:1:36","nodeType":"YulIdentifier","src":"20498:1:36"}]},{"nativeSrc":"20532:25:36","nodeType":"YulAssignment","src":"20532:25:36","value":{"arguments":[{"name":"y","nativeSrc":"20555:1:36","nodeType":"YulIdentifier","src":"20555:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20537:17:36","nodeType":"YulIdentifier","src":"20537:17:36"},"nativeSrc":"20537:20:36","nodeType":"YulFunctionCall","src":"20537:20:36"},"variableNames":[{"name":"y","nativeSrc":"20532:1:36","nodeType":"YulIdentifier","src":"20532:1:36"}]},{"nativeSrc":"20566:16:36","nodeType":"YulAssignment","src":"20566:16:36","value":{"arguments":[{"name":"x","nativeSrc":"20577:1:36","nodeType":"YulIdentifier","src":"20577:1:36"},{"name":"y","nativeSrc":"20580:1:36","nodeType":"YulIdentifier","src":"20580:1:36"}],"functionName":{"name":"add","nativeSrc":"20573:3:36","nodeType":"YulIdentifier","src":"20573:3:36"},"nativeSrc":"20573:9:36","nodeType":"YulFunctionCall","src":"20573:9:36"},"variableNames":[{"name":"sum","nativeSrc":"20566:3:36","nodeType":"YulIdentifier","src":"20566:3:36"}]},{"body":{"nativeSrc":"20606:22:36","nodeType":"YulBlock","src":"20606:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20608:16:36","nodeType":"YulIdentifier","src":"20608:16:36"},"nativeSrc":"20608:18:36","nodeType":"YulFunctionCall","src":"20608:18:36"},"nativeSrc":"20608:18:36","nodeType":"YulExpressionStatement","src":"20608:18:36"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"20598:1:36","nodeType":"YulIdentifier","src":"20598:1:36"},{"name":"sum","nativeSrc":"20601:3:36","nodeType":"YulIdentifier","src":"20601:3:36"}],"functionName":{"name":"gt","nativeSrc":"20595:2:36","nodeType":"YulIdentifier","src":"20595:2:36"},"nativeSrc":"20595:10:36","nodeType":"YulFunctionCall","src":"20595:10:36"},"nativeSrc":"20592:36:36","nodeType":"YulIf","src":"20592:36:36"}]},"name":"checked_add_t_uint256","nativeSrc":"20444:191:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"20475:1:36","nodeType":"YulTypedName","src":"20475:1:36","type":""},{"name":"y","nativeSrc":"20478:1:36","nodeType":"YulTypedName","src":"20478:1:36","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"20484:3:36","nodeType":"YulTypedName","src":"20484:3:36","type":""}],"src":"20444:191:36"},{"body":{"nativeSrc":"20851:454:36","nodeType":"YulBlock","src":"20851:454:36","statements":[{"nativeSrc":"20861:27:36","nodeType":"YulAssignment","src":"20861:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"20873:9:36","nodeType":"YulIdentifier","src":"20873:9:36"},{"kind":"number","nativeSrc":"20884:3:36","nodeType":"YulLiteral","src":"20884:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"20869:3:36","nodeType":"YulIdentifier","src":"20869:3:36"},"nativeSrc":"20869:19:36","nodeType":"YulFunctionCall","src":"20869:19:36"},"variableNames":[{"name":"tail","nativeSrc":"20861:4:36","nodeType":"YulIdentifier","src":"20861:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20942:6:36","nodeType":"YulIdentifier","src":"20942:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"20955:9:36","nodeType":"YulIdentifier","src":"20955:9:36"},{"kind":"number","nativeSrc":"20966:1:36","nodeType":"YulLiteral","src":"20966:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20951:3:36","nodeType":"YulIdentifier","src":"20951:3:36"},"nativeSrc":"20951:17:36","nodeType":"YulFunctionCall","src":"20951:17:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20898:43:36","nodeType":"YulIdentifier","src":"20898:43:36"},"nativeSrc":"20898:71:36","nodeType":"YulFunctionCall","src":"20898:71:36"},"nativeSrc":"20898:71:36","nodeType":"YulExpressionStatement","src":"20898:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21023:6:36","nodeType":"YulIdentifier","src":"21023:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21036:9:36","nodeType":"YulIdentifier","src":"21036:9:36"},{"kind":"number","nativeSrc":"21047:2:36","nodeType":"YulLiteral","src":"21047:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21032:3:36","nodeType":"YulIdentifier","src":"21032:3:36"},"nativeSrc":"21032:18:36","nodeType":"YulFunctionCall","src":"21032:18:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20979:43:36","nodeType":"YulIdentifier","src":"20979:43:36"},"nativeSrc":"20979:72:36","nodeType":"YulFunctionCall","src":"20979:72:36"},"nativeSrc":"20979:72:36","nodeType":"YulExpressionStatement","src":"20979:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21105:6:36","nodeType":"YulIdentifier","src":"21105:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21118:9:36","nodeType":"YulIdentifier","src":"21118:9:36"},{"kind":"number","nativeSrc":"21129:2:36","nodeType":"YulLiteral","src":"21129:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21114:3:36","nodeType":"YulIdentifier","src":"21114:3:36"},"nativeSrc":"21114:18:36","nodeType":"YulFunctionCall","src":"21114:18:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21061:43:36","nodeType":"YulIdentifier","src":"21061:43:36"},"nativeSrc":"21061:72:36","nodeType":"YulFunctionCall","src":"21061:72:36"},"nativeSrc":"21061:72:36","nodeType":"YulExpressionStatement","src":"21061:72:36"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"21187:6:36","nodeType":"YulIdentifier","src":"21187:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21200:9:36","nodeType":"YulIdentifier","src":"21200:9:36"},{"kind":"number","nativeSrc":"21211:2:36","nodeType":"YulLiteral","src":"21211:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21196:3:36","nodeType":"YulIdentifier","src":"21196:3:36"},"nativeSrc":"21196:18:36","nodeType":"YulFunctionCall","src":"21196:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21143:43:36","nodeType":"YulIdentifier","src":"21143:43:36"},"nativeSrc":"21143:72:36","nodeType":"YulFunctionCall","src":"21143:72:36"},"nativeSrc":"21143:72:36","nodeType":"YulExpressionStatement","src":"21143:72:36"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"21269:6:36","nodeType":"YulIdentifier","src":"21269:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21282:9:36","nodeType":"YulIdentifier","src":"21282:9:36"},{"kind":"number","nativeSrc":"21293:3:36","nodeType":"YulLiteral","src":"21293:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21278:3:36","nodeType":"YulIdentifier","src":"21278:3:36"},"nativeSrc":"21278:19:36","nodeType":"YulFunctionCall","src":"21278:19:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21225:43:36","nodeType":"YulIdentifier","src":"21225:43:36"},"nativeSrc":"21225:73:36","nodeType":"YulFunctionCall","src":"21225:73:36"},"nativeSrc":"21225:73:36","nodeType":"YulExpressionStatement","src":"21225:73:36"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"20641:664:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20791:9:36","nodeType":"YulTypedName","src":"20791:9:36","type":""},{"name":"value4","nativeSrc":"20803:6:36","nodeType":"YulTypedName","src":"20803:6:36","type":""},{"name":"value3","nativeSrc":"20811:6:36","nodeType":"YulTypedName","src":"20811:6:36","type":""},{"name":"value2","nativeSrc":"20819:6:36","nodeType":"YulTypedName","src":"20819:6:36","type":""},{"name":"value1","nativeSrc":"20827:6:36","nodeType":"YulTypedName","src":"20827:6:36","type":""},{"name":"value0","nativeSrc":"20835:6:36","nodeType":"YulTypedName","src":"20835:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20846:4:36","nodeType":"YulTypedName","src":"20846:4:36","type":""}],"src":"20641:664:36"},{"body":{"nativeSrc":"21489:367:36","nodeType":"YulBlock","src":"21489:367:36","statements":[{"nativeSrc":"21499:27:36","nodeType":"YulAssignment","src":"21499:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"21511:9:36","nodeType":"YulIdentifier","src":"21511:9:36"},{"kind":"number","nativeSrc":"21522:3:36","nodeType":"YulLiteral","src":"21522:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21507:3:36","nodeType":"YulIdentifier","src":"21507:3:36"},"nativeSrc":"21507:19:36","nodeType":"YulFunctionCall","src":"21507:19:36"},"variableNames":[{"name":"tail","nativeSrc":"21499:4:36","nodeType":"YulIdentifier","src":"21499:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21580:6:36","nodeType":"YulIdentifier","src":"21580:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21593:9:36","nodeType":"YulIdentifier","src":"21593:9:36"},{"kind":"number","nativeSrc":"21604:1:36","nodeType":"YulLiteral","src":"21604:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21589:3:36","nodeType":"YulIdentifier","src":"21589:3:36"},"nativeSrc":"21589:17:36","nodeType":"YulFunctionCall","src":"21589:17:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21536:43:36","nodeType":"YulIdentifier","src":"21536:43:36"},"nativeSrc":"21536:71:36","nodeType":"YulFunctionCall","src":"21536:71:36"},"nativeSrc":"21536:71:36","nodeType":"YulExpressionStatement","src":"21536:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21657:6:36","nodeType":"YulIdentifier","src":"21657:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21670:9:36","nodeType":"YulIdentifier","src":"21670:9:36"},{"kind":"number","nativeSrc":"21681:2:36","nodeType":"YulLiteral","src":"21681:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21666:3:36","nodeType":"YulIdentifier","src":"21666:3:36"},"nativeSrc":"21666:18:36","nodeType":"YulFunctionCall","src":"21666:18:36"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"21617:39:36","nodeType":"YulIdentifier","src":"21617:39:36"},"nativeSrc":"21617:68:36","nodeType":"YulFunctionCall","src":"21617:68:36"},"nativeSrc":"21617:68:36","nodeType":"YulExpressionStatement","src":"21617:68:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21739:6:36","nodeType":"YulIdentifier","src":"21739:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21752:9:36","nodeType":"YulIdentifier","src":"21752:9:36"},{"kind":"number","nativeSrc":"21763:2:36","nodeType":"YulLiteral","src":"21763:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21748:3:36","nodeType":"YulIdentifier","src":"21748:3:36"},"nativeSrc":"21748:18:36","nodeType":"YulFunctionCall","src":"21748:18:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21695:43:36","nodeType":"YulIdentifier","src":"21695:43:36"},"nativeSrc":"21695:72:36","nodeType":"YulFunctionCall","src":"21695:72:36"},"nativeSrc":"21695:72:36","nodeType":"YulExpressionStatement","src":"21695:72:36"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"21821:6:36","nodeType":"YulIdentifier","src":"21821:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21834:9:36","nodeType":"YulIdentifier","src":"21834:9:36"},{"kind":"number","nativeSrc":"21845:2:36","nodeType":"YulLiteral","src":"21845:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21830:3:36","nodeType":"YulIdentifier","src":"21830:3:36"},"nativeSrc":"21830:18:36","nodeType":"YulFunctionCall","src":"21830:18:36"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21777:43:36","nodeType":"YulIdentifier","src":"21777:43:36"},"nativeSrc":"21777:72:36","nodeType":"YulFunctionCall","src":"21777:72:36"},"nativeSrc":"21777:72:36","nodeType":"YulExpressionStatement","src":"21777:72:36"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"21311:545:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21437:9:36","nodeType":"YulTypedName","src":"21437:9:36","type":""},{"name":"value3","nativeSrc":"21449:6:36","nodeType":"YulTypedName","src":"21449:6:36","type":""},{"name":"value2","nativeSrc":"21457:6:36","nodeType":"YulTypedName","src":"21457:6:36","type":""},{"name":"value1","nativeSrc":"21465:6:36","nodeType":"YulTypedName","src":"21465:6:36","type":""},{"name":"value0","nativeSrc":"21473:6:36","nodeType":"YulTypedName","src":"21473:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21484:4:36","nodeType":"YulTypedName","src":"21484:4:36","type":""}],"src":"21311:545:36"},{"body":{"nativeSrc":"21890:152:36","nodeType":"YulBlock","src":"21890:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21907:1:36","nodeType":"YulLiteral","src":"21907:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"21910:77:36","nodeType":"YulLiteral","src":"21910:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21900:6:36","nodeType":"YulIdentifier","src":"21900:6:36"},"nativeSrc":"21900:88:36","nodeType":"YulFunctionCall","src":"21900:88:36"},"nativeSrc":"21900:88:36","nodeType":"YulExpressionStatement","src":"21900:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22004:1:36","nodeType":"YulLiteral","src":"22004:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"22007:4:36","nodeType":"YulLiteral","src":"22007:4:36","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"21997:6:36","nodeType":"YulIdentifier","src":"21997:6:36"},"nativeSrc":"21997:15:36","nodeType":"YulFunctionCall","src":"21997:15:36"},"nativeSrc":"21997:15:36","nodeType":"YulExpressionStatement","src":"21997:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22028:1:36","nodeType":"YulLiteral","src":"22028:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"22031:4:36","nodeType":"YulLiteral","src":"22031:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"22021:6:36","nodeType":"YulIdentifier","src":"22021:6:36"},"nativeSrc":"22021:15:36","nodeType":"YulFunctionCall","src":"22021:15:36"},"nativeSrc":"22021:15:36","nodeType":"YulExpressionStatement","src":"22021:15:36"}]},"name":"panic_error_0x21","nativeSrc":"21862:180:36","nodeType":"YulFunctionDefinition","src":"21862:180:36"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$2224_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$2224_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$2224_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$2224__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$2224_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Certificate already fractionaliz\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2f855635cdd263156facb056cbe621c207f65faeb79bdcf3f988b8bbffb12af4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4629":[{"length":32,"start":3614}],"4631":[{"length":32,"start":3573}],"4633":[{"length":32,"start":3487}],"4635":[{"length":32,"start":5408}],"4637":[{"length":32,"start":5441}],"4640":[{"length":32,"start":4081}],"4643":[{"length":32,"start":4140}],"8478":[{"length":32,"start":1577},{"length":32,"start":2331},{"length":32,"start":2970}],"8480":[{"length":32,"start":1381},{"length":32,"start":1639},{"length":32,"start":1835},{"length":32,"start":3003}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063a9059cbb1161007c578063a9059cbb1461035f578063b01d6d821461038f578063d505accf146103ad578063dd62ed3e146103c9578063f2fde38b146103f9578063fb647cd91461041557610142565b8063715018a6146102c55780637ecebe00146102cf57806384b0196e146102ff5780638da5cb5b1461032357806395d89b411461034157610142565b8063313ce5671161010a578063313ce567146102135780633644e515146102315780633fb3ca201461024f5780634b24691f1461026d57806370a082311461028b57806370be42a6146102bb57610142565b806306fdde0314610147578063095ea7b314610165578063150b7a021461019557806318160ddd146101c557806323b872dd146101e3575b600080fd5b61014f610436565b60405161015c9190611a2e565b60405180910390f35b61017f600480360381019061017a9190611af8565b6104c8565b60405161018c9190611b53565b60405180910390f35b6101af60048036038101906101aa9190611ca3565b6104eb565b6040516101bc9190611d61565b60405180910390f35b6101cd6104ff565b6040516101da9190611d8b565b60405180910390f35b6101fd60048036038101906101f89190611da6565b610509565b60405161020a9190611b53565b60405180910390f35b61021b610538565b6040516102289190611e15565b60405180910390f35b610239610541565b6040516102469190611e49565b60405180910390f35b610257610550565b6040516102649190611b53565b60405180910390f35b610275610563565b6040516102829190611d8b565b60405180910390f35b6102a560048036038101906102a09190611e64565b610587565b6040516102b29190611d8b565b60405180910390f35b6102c36105cf565b005b6102cd61076a565b005b6102e960048036038101906102e49190611e64565b61077e565b6040516102f69190611d8b565b60405180910390f35b610307610790565b60405161031a9796959493929190611f99565b60405180910390f35b61032b61083a565b604051610338919061201d565b60405180910390f35b610349610864565b6040516103569190611a2e565b60405180910390f35b61037960048036038101906103749190611af8565b6108f6565b6040516103869190611b53565b60405180910390f35b610397610919565b6040516103a49190612097565b60405180910390f35b6103c760048036038101906103c2919061210a565b61093d565b005b6103e360048036038101906103de91906121ac565b610a85565b6040516103f09190611d8b565b60405180910390f35b610413600480360381019061040e9190611e64565b610b0c565b005b61041d610b92565b60405161042d94939291906121ec565b60405180910390f35b60606003805461044590612260565b80601f016020809104026020016040519081016040528092919081815260200182805461047190612260565b80156104be5780601f10610493576101008083540402835291602001916104be565b820191906000526020600020905b8154815290600101906020018083116104a157829003601f168201915b5050505050905090565b6000806104d3610bf8565b90506104e0818585610c00565b600191505092915050565b600063150b7a0260e01b9050949350505050565b6000600254905090565b600080610514610bf8565b9050610521858285610c12565b61052c858585610ca7565b60019150509392505050565b60006012905090565b600061054b610d9b565b905090565b600960009054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105d7610e52565b600960009054906101000a900460ff1615610627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061e90612303565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342842e0e33307f00000000000000000000000000000000000000000000000000000000000000006040518463ffffffff1660e01b81526004016106a493929190612323565b600060405180830381600087803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b505050506001600960006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f467dbdf4e2cf848cda2e91cd4fe12eed702c327975f0ca15fc227e822e72ca5b7f00000000000000000000000000000000000000000000000000000000000000006107526104ff565b60405161076092919061235a565b60405180910390a2565b610772610e52565b61077c6000610ed9565b565b600061078982610f9f565b9050919050565b6000606080600080600060606107a4610fe8565b6107ac611023565b46306000801b600067ffffffffffffffff8111156107cd576107cc611b78565b5b6040519080825280602002602001820160405280156107fb5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461087390612260565b80601f016020809104026020016040519081016040528092919081815260200182805461089f90612260565b80156108ec5780601f106108c1576101008083540402835291602001916108ec565b820191906000526020600020905b8154815290600101906020018083116108cf57829003601f168201915b5050505050905090565b600080610901610bf8565b905061090e818585610ca7565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b8342111561098257836040517f627913020000000000000000000000000000000000000000000000000000000081526004016109799190611d8b565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109b18c61105e565b896040516020016109c796959493929190612383565b60405160208183030381529060405280519060200120905060006109ea826110b5565b905060006109fa828787876110cf565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a6e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610a659291906123e4565b60405180910390fd5b610a798a8a8a610c00565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b14610e52565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b865760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b7d919061201d565b60405180910390fd5b610b8f81610ed9565b50565b6000806000807f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610be26104ff565b610bea61083a565b935093509350935090919293565b600033905090565b610c0d83838360016110ff565b505050565b6000610c1e8484610a85565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ca15781811015610c91578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c889392919061240d565b60405180910390fd5b610ca0848484840360006110ff565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d195760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d10919061201d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d8b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d82919061201d565b60405180910390fd5b610d968383836112d6565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610e1757507f000000000000000000000000000000000000000000000000000000000000000046145b15610e44577f00000000000000000000000000000000000000000000000000000000000000009050610e4f565b610e4c6114fb565b90505b90565b610e5a610bf8565b73ffffffffffffffffffffffffffffffffffffffff16610e7861083a565b73ffffffffffffffffffffffffffffffffffffffff1614610ed757610e9b610bf8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ece919061201d565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061101e60067f000000000000000000000000000000000000000000000000000000000000000061159190919063ffffffff16565b905090565b606061105960077f000000000000000000000000000000000000000000000000000000000000000061159190919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006110c86110c2610d9b565b83611641565b9050919050565b6000806000806110e188888888611682565b9250925092506110f18282611776565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111715760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611168919061201d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111e35760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111da919061201d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156112d0578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112c79190611d8b565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361132857806002600082825461131c9190612473565b925050819055506113fb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113b4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113ab9392919061240d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114445780600260008282540392505081905550611491565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114ee9190611d8b565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016115769594939291906124a7565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146115ae576115a7836118da565b905061163b565b8180546115ba90612260565b80601f01602080910402602001604051908101604052809291908181526020018280546115e690612260565b80156116335780601f1061160857610100808354040283529160200191611633565b820191906000526020600020905b81548152906001019060200180831161161657829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156116c257600060038592509250925061176c565b6000600188888888604051600081526020016040526040516116e794939291906124fa565b6020604051602081039080840390855afa158015611709573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361175d57600060016000801b9350935093505061176c565b8060008060001b935093509350505b9450945094915050565b6000600381111561178a5761178961253f565b5b82600381111561179d5761179c61253f565b5b03156118d657600160038111156117b7576117b661253f565b5b8260038111156117ca576117c961253f565b5b03611801576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156118155761181461253f565b5b8260038111156118285761182761253f565b5b0361186d578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016118649190611d8b565b60405180910390fd5b6003808111156118805761187f61253f565b5b8260038111156118935761189261253f565b5b036118d557806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016118cc9190611e49565b60405180910390fd5b5b5050565b606060006118e78361194e565b90506000602067ffffffffffffffff81111561190657611905611b78565b5b6040519080825280601f01601f1916602001820160405280156119385781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115611995576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119d85780820151818401526020810190506119bd565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a008261199e565b611a0a81856119a9565b9350611a1a8185602086016119ba565b611a23816119e4565b840191505092915050565b60006020820190508181036000830152611a4881846119f5565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a8f82611a64565b9050919050565b611a9f81611a84565b8114611aaa57600080fd5b50565b600081359050611abc81611a96565b92915050565b6000819050919050565b611ad581611ac2565b8114611ae057600080fd5b50565b600081359050611af281611acc565b92915050565b60008060408385031215611b0f57611b0e611a5a565b5b6000611b1d85828601611aad565b9250506020611b2e85828601611ae3565b9150509250929050565b60008115159050919050565b611b4d81611b38565b82525050565b6000602082019050611b686000830184611b44565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611bb0826119e4565b810181811067ffffffffffffffff82111715611bcf57611bce611b78565b5b80604052505050565b6000611be2611a50565b9050611bee8282611ba7565b919050565b600067ffffffffffffffff821115611c0e57611c0d611b78565b5b611c17826119e4565b9050602081019050919050565b82818337600083830152505050565b6000611c46611c4184611bf3565b611bd8565b905082815260208101848484011115611c6257611c61611b73565b5b611c6d848285611c24565b509392505050565b600082601f830112611c8a57611c89611b6e565b5b8135611c9a848260208601611c33565b91505092915050565b60008060008060808587031215611cbd57611cbc611a5a565b5b6000611ccb87828801611aad565b9450506020611cdc87828801611aad565b9350506040611ced87828801611ae3565b925050606085013567ffffffffffffffff811115611d0e57611d0d611a5f565b5b611d1a87828801611c75565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d5b81611d26565b82525050565b6000602082019050611d766000830184611d52565b92915050565b611d8581611ac2565b82525050565b6000602082019050611da06000830184611d7c565b92915050565b600080600060608486031215611dbf57611dbe611a5a565b5b6000611dcd86828701611aad565b9350506020611dde86828701611aad565b9250506040611def86828701611ae3565b9150509250925092565b600060ff82169050919050565b611e0f81611df9565b82525050565b6000602082019050611e2a6000830184611e06565b92915050565b6000819050919050565b611e4381611e30565b82525050565b6000602082019050611e5e6000830184611e3a565b92915050565b600060208284031215611e7a57611e79611a5a565b5b6000611e8884828501611aad565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611ec681611e91565b82525050565b611ed581611a84565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f1081611ac2565b82525050565b6000611f228383611f07565b60208301905092915050565b6000602082019050919050565b6000611f4682611edb565b611f508185611ee6565b9350611f5b83611ef7565b8060005b83811015611f8c578151611f738882611f16565b9750611f7e83611f2e565b925050600181019050611f5f565b5085935050505092915050565b600060e082019050611fae600083018a611ebd565b8181036020830152611fc081896119f5565b90508181036040830152611fd481886119f5565b9050611fe36060830187611d7c565b611ff06080830186611ecc565b611ffd60a0830185611e3a565b81810360c083015261200f8184611f3b565b905098975050505050505050565b60006020820190506120326000830184611ecc565b92915050565b6000819050919050565b600061205d61205861205384611a64565b612038565b611a64565b9050919050565b600061206f82612042565b9050919050565b600061208182612064565b9050919050565b61209181612076565b82525050565b60006020820190506120ac6000830184612088565b92915050565b6120bb81611df9565b81146120c657600080fd5b50565b6000813590506120d8816120b2565b92915050565b6120e781611e30565b81146120f257600080fd5b50565b600081359050612104816120de565b92915050565b600080600080600080600060e0888a03121561212957612128611a5a565b5b60006121378a828b01611aad565b97505060206121488a828b01611aad565b96505060406121598a828b01611ae3565b955050606061216a8a828b01611ae3565b945050608061217b8a828b016120c9565b93505060a061218c8a828b016120f5565b92505060c061219d8a828b016120f5565b91505092959891949750929550565b600080604083850312156121c3576121c2611a5a565b5b60006121d185828601611aad565b92505060206121e285828601611aad565b9150509250929050565b60006080820190506122016000830187611ecc565b61220e6020830186611d7c565b61221b6040830185611d7c565b6122286060830184611ecc565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061227857607f821691505b60208210810361228b5761228a612231565b5b50919050565b7f436572746966696361746520616c7265616479206672616374696f6e616c697a60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006122ed6022836119a9565b91506122f882612291565b604082019050919050565b6000602082019050818103600083015261231c816122e0565b9050919050565b60006060820190506123386000830186611ecc565b6123456020830185611ecc565b6123526040830184611d7c565b949350505050565b600060408201905061236f6000830185611d7c565b61237c6020830184611d7c565b9392505050565b600060c0820190506123986000830189611e3a565b6123a56020830188611ecc565b6123b26040830187611ecc565b6123bf6060830186611d7c565b6123cc6080830185611d7c565b6123d960a0830184611d7c565b979650505050505050565b60006040820190506123f96000830185611ecc565b6124066020830184611ecc565b9392505050565b60006060820190506124226000830186611ecc565b61242f6020830185611d7c565b61243c6040830184611d7c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061247e82611ac2565b915061248983611ac2565b92508282019050808211156124a1576124a0612444565b5b92915050565b600060a0820190506124bc6000830188611e3a565b6124c96020830187611e3a565b6124d66040830186611e3a565b6124e36060830185611d7c565b6124f06080830184611ecc565b9695505050505050565b600060808201905061250f6000830187611e3a565b61251c6020830186611e06565b6125296040830185611e3a565b6125366060830184611e3a565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122018d1336427f0c98878277d4ffa8935600a098749af3405a62d20ef13749ed50e64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xB01D6D82 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xFB647CD9 EQ PUSH2 0x415 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x341 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x3FB3CA20 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x4B24691F EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x70BE42A6 EQ PUSH2 0x2BB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x76A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41D PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x445 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x471 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x493 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D3 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x514 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x521 DUP6 DUP3 DUP6 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x52C DUP6 DUP6 DUP6 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B PUSH2 0xD9B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS PUSH32 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x467DBDF4E2CF848CDA2E91CD4FE12EED702C327975F0CA15FC227E822E72CA5B PUSH32 0x0 PUSH2 0x752 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x760 SWAP3 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x772 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x0 PUSH2 0xED9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x789 DUP3 PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x7A4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x1023 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CD JUMPI PUSH2 0x7CC PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x873 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89F SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x901 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x90E DUP2 DUP6 DUP6 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x982 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x9B1 DUP13 PUSH2 0x105E JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C7 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x9EA DUP3 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9FA DUP3 DUP8 DUP8 DUP8 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA6E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP3 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA79 DUP11 DUP11 DUP11 PUSH2 0xC00 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB14 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB86 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xED9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH32 0x0 PUSH2 0xBE2 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0xBEA PUSH2 0x83A JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC0D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1E DUP5 DUP5 PUSH2 0xA85 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC91 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x10FF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD19 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD96 DUP4 DUP4 DUP4 PUSH2 0x12D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE17 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xE44 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xE4F JUMP JUMPDEST PUSH2 0xE4C PUSH2 0x14FB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE5A PUSH2 0xBF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE78 PUSH2 0x83A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED7 JUMPI PUSH2 0xE9B PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x101E PUSH1 0x6 PUSH32 0x0 PUSH2 0x1591 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1059 PUSH1 0x7 PUSH32 0x0 PUSH2 0x1591 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C8 PUSH2 0x10C2 PUSH2 0xD9B JUMP JUMPDEST DUP4 PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x10E1 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1682 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10F1 DUP3 DUP3 PUSH2 0x1776 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12D0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1328 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x2473 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13B4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1444 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1491 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1576 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x15AE JUMPI PUSH2 0x15A7 DUP4 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH2 0x163B JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x15BA SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E6 SWAP1 PUSH2 0x2260 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1633 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1608 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1633 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1616 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x16C2 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x16E7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1709 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175D JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x176C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1801 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1828 JUMPI PUSH2 0x1827 PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x186D JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1864 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1880 JUMPI PUSH2 0x187F PUSH2 0x253F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1893 JUMPI PUSH2 0x1892 PUSH2 0x253F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x18D5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CC SWAP2 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x18E7 DUP4 PUSH2 0x194E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1938 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1995 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A00 DUP3 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x1A0A DUP2 DUP6 PUSH2 0x19A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x1A23 DUP2 PUSH2 0x19E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A48 DUP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8F DUP3 PUSH2 0x1A64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ABC DUP2 PUSH2 0x1A96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD5 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF2 DUP2 PUSH2 0x1ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP6 DUP3 DUP7 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2E DUP6 DUP3 DUP7 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4D DUP2 PUSH2 0x1B38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1BB0 DUP3 PUSH2 0x19E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE2 PUSH2 0x1A50 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEE DUP3 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST PUSH2 0x1C17 DUP3 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C46 PUSH2 0x1C41 DUP5 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH2 0x1C6D DUP5 DUP3 DUP6 PUSH2 0x1C24 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CCB DUP8 DUP3 DUP9 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CDC DUP8 DUP3 DUP9 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CED DUP8 DUP3 DUP9 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x1A5F JUMP JUMPDEST JUMPDEST PUSH2 0x1D1A DUP8 DUP3 DUP9 ADD PUSH2 0x1C75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D5B DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D85 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBF JUMPI PUSH2 0x1DBE PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DCD DUP7 DUP3 DUP8 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DDE DUP7 DUP3 DUP8 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DEF DUP7 DUP3 DUP8 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E0F DUP2 PUSH2 0x1DF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E43 DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E7A JUMPI PUSH2 0x1E79 PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E88 DUP5 DUP3 DUP6 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC6 DUP2 PUSH2 0x1E91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ED5 DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F10 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F22 DUP4 DUP4 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F46 DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH2 0x1F50 DUP2 DUP6 PUSH2 0x1EE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F5B DUP4 PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F8C JUMPI DUP2 MLOAD PUSH2 0x1F73 DUP9 DUP3 PUSH2 0x1F16 JUMP JUMPDEST SWAP8 POP PUSH2 0x1F7E DUP4 PUSH2 0x1F2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F5F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1FAE PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1EBD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1FC0 DUP2 DUP10 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FD4 DUP2 DUP9 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE3 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1FF0 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x1FFD PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1E3A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x200F DUP2 DUP5 PUSH2 0x1F3B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2032 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205D PUSH2 0x2058 PUSH2 0x2053 DUP5 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x1A64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206F DUP3 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2081 DUP3 PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x2076 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20BB DUP2 PUSH2 0x1DF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x20C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D8 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E7 DUP2 PUSH2 0x1E30 JUMP JUMPDEST DUP2 EQ PUSH2 0x20F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2104 DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2129 JUMPI PUSH2 0x2128 PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP11 DUP3 DUP12 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2148 DUP11 DUP3 DUP12 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2159 DUP11 DUP3 DUP12 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x216A DUP11 DUP3 DUP12 ADD PUSH2 0x1AE3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x217B DUP11 DUP3 DUP12 ADD PUSH2 0x20C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x218C DUP11 DUP3 DUP12 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x219D DUP11 DUP3 DUP12 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C3 JUMPI PUSH2 0x21C2 PUSH2 0x1A5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2201 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x220E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x221B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x2228 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2278 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x2231 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436572746966696361746520616C7265616479206672616374696F6E616C697A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22ED PUSH1 0x22 DUP4 PUSH2 0x19A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F8 DUP3 PUSH2 0x2291 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231C DUP2 PUSH2 0x22E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2338 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x2345 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x2352 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x236F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x237C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2398 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x23A5 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x23B2 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x23BF PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x23CC PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x23D9 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x2406 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2422 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x242F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x243C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x247E DUP3 PUSH2 0x1AC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2489 DUP4 PUSH2 0x1AC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x24A1 JUMPI PUSH2 0x24A0 PUSH2 0x2444 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24BC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x24C9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x24D6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x24E3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x24F0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x250F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x251C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E06 JUMP JUMPDEST PUSH2 0x2529 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x2536 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E3A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xD1 CALLER PUSH5 0x27F0C98878 0x27 PUSH30 0x4FFA8935600A098749AF3405A62D20EF13749ED50E64736F6C634300081C STOP CALLER ","sourceMap":"381:1905:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;639:153:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2659:112:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:28:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;585:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1419:425:33;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;2409:143:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:26;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:48:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:672:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1940:343:33;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1779:89:6;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;639:153:16:-;730:6;755:30;;;748:37;;639:153;;;;;;:::o;2849:97:6:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;2659:112:8:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;635:28:33:-;;;;;;;;;;;;;:::o;585:43::-;;;:::o;3004:116:6:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1419:425:33:-;1531:13:0;:11;:13::i;:::-;1494:16:33::1;;;;;;;;;;;1493:17;1485:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1623:23;:40;;;1664:10;1684:4;1691:18;1623:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1742:4;1723:16;;:23;;;;;;;;;;;;;;;;;;1825:10;1764:72;;;1790:18;1810:13;:11;:13::i;:::-;1764:72;;;;;;;:::i;:::-;;;;;;;;1419:425::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2409:143:8:-;2500:7;2526:19;2539:5;2526:12;:19::i;:::-;2519:26;;2409:143;;;:::o;5144:557:26:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:6:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;522:48:33:-;;;:::o;1683:672:8:-;1904:8;1886:15;:26;1882:97;;;1959:8;1935:33;;;;;;;;;;;:::i;:::-;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;2071:9;:16::i;:::-;2089:8;2020:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;2223:15;;:6;:15;;;2219:88;;2282:6;2290:5;2261:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2219:88;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;3551:140:6:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1940:343:33:-;2000:18;2029:15;2055:22;2088:20;2157:23;2196:18;2229:13;:11;:13::i;:::-;2257:7;:5;:7::i;:::-;2127:148;;;;;;;;1940:343;;;;:::o;656:96:18:-;709:7;735:10;728:17;;656:96;:::o;8726:128:6:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3845:262:26:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:19:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:26:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:19:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:26:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6887:260:25:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;9701:432:6:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;4113:179:26:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3358:267:22:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3326:374:27:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;5203:1551:25:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:22:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2528:245::-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;7:99:36:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:75::-;1384:6;1417:2;1411:9;1401:19;;1351:75;:::o;1432:117::-;1541:1;1538;1531:12;1555:117;1664:1;1661;1654:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:117::-;3557:1;3554;3547:12;3571:117;3680:1;3677;3670:12;3694:180;3742:77;3739:1;3732:88;3839:4;3836:1;3829:15;3863:4;3860:1;3853:15;3880:281;3963:27;3985:4;3963:27;:::i;:::-;3955:6;3951:40;4093:6;4081:10;4078:22;4057:18;4045:10;4042:34;4039:62;4036:88;;;4104:18;;:::i;:::-;4036:88;4144:10;4140:2;4133:22;3923:238;3880:281;;:::o;4167:129::-;4201:6;4228:20;;:::i;:::-;4218:30;;4257:33;4285:4;4277:6;4257:33;:::i;:::-;4167:129;;;:::o;4302:307::-;4363:4;4453:18;4445:6;4442:30;4439:56;;;4475:18;;:::i;:::-;4439:56;4513:29;4535:6;4513:29;:::i;:::-;4505:37;;4597:4;4591;4587:15;4579:23;;4302:307;;;:::o;4615:148::-;4713:6;4708:3;4703;4690:30;4754:1;4745:6;4740:3;4736:16;4729:27;4615:148;;;:::o;4769:423::-;4846:5;4871:65;4887:48;4928:6;4887:48;:::i;:::-;4871:65;:::i;:::-;4862:74;;4959:6;4952:5;4945:21;4997:4;4990:5;4986:16;5035:3;5026:6;5021:3;5017:16;5014:25;5011:112;;;5042:79;;:::i;:::-;5011:112;5132:54;5179:6;5174:3;5169;5132:54;:::i;:::-;4852:340;4769:423;;;;;:::o;5211:338::-;5266:5;5315:3;5308:4;5300:6;5296:17;5292:27;5282:122;;5323:79;;:::i;:::-;5282:122;5440:6;5427:20;5465:78;5539:3;5531:6;5524:4;5516:6;5512:17;5465:78;:::i;:::-;5456:87;;5272:277;5211:338;;;;:::o;5555:943::-;5650:6;5658;5666;5674;5723:3;5711:9;5702:7;5698:23;5694:33;5691:120;;;5730:79;;:::i;:::-;5691:120;5850:1;5875:53;5920:7;5911:6;5900:9;5896:22;5875:53;:::i;:::-;5865:63;;5821:117;5977:2;6003:53;6048:7;6039:6;6028:9;6024:22;6003:53;:::i;:::-;5993:63;;5948:118;6105:2;6131:53;6176:7;6167:6;6156:9;6152:22;6131:53;:::i;:::-;6121:63;;6076:118;6261:2;6250:9;6246:18;6233:32;6292:18;6284:6;6281:30;6278:117;;;6314:79;;:::i;:::-;6278:117;6419:62;6473:7;6464:6;6453:9;6449:22;6419:62;:::i;:::-;6409:72;;6204:287;5555:943;;;;;;;:::o;6504:149::-;6540:7;6580:66;6573:5;6569:78;6558:89;;6504:149;;;:::o;6659:115::-;6744:23;6761:5;6744:23;:::i;:::-;6739:3;6732:36;6659:115;;:::o;6780:218::-;6871:4;6909:2;6898:9;6894:18;6886:26;;6922:69;6988:1;6977:9;6973:17;6964:6;6922:69;:::i;:::-;6780:218;;;;:::o;7004:118::-;7091:24;7109:5;7091:24;:::i;:::-;7086:3;7079:37;7004:118;;:::o;7128:222::-;7221:4;7259:2;7248:9;7244:18;7236:26;;7272:71;7340:1;7329:9;7325:17;7316:6;7272:71;:::i;:::-;7128:222;;;;:::o;7356:619::-;7433:6;7441;7449;7498:2;7486:9;7477:7;7473:23;7469:32;7466:119;;;7504:79;;:::i;:::-;7466:119;7624:1;7649:53;7694:7;7685:6;7674:9;7670:22;7649:53;:::i;:::-;7639:63;;7595:117;7751:2;7777:53;7822:7;7813:6;7802:9;7798:22;7777:53;:::i;:::-;7767:63;;7722:118;7879:2;7905:53;7950:7;7941:6;7930:9;7926:22;7905:53;:::i;:::-;7895:63;;7850:118;7356:619;;;;;:::o;7981:86::-;8016:7;8056:4;8049:5;8045:16;8034:27;;7981:86;;;:::o;8073:112::-;8156:22;8172:5;8156:22;:::i;:::-;8151:3;8144:35;8073:112;;:::o;8191:214::-;8280:4;8318:2;8307:9;8303:18;8295:26;;8331:67;8395:1;8384:9;8380:17;8371:6;8331:67;:::i;:::-;8191:214;;;;:::o;8411:77::-;8448:7;8477:5;8466:16;;8411:77;;;:::o;8494:118::-;8581:24;8599:5;8581:24;:::i;:::-;8576:3;8569:37;8494:118;;:::o;8618:222::-;8711:4;8749:2;8738:9;8734:18;8726:26;;8762:71;8830:1;8819:9;8815:17;8806:6;8762:71;:::i;:::-;8618:222;;;;:::o;8846:329::-;8905:6;8954:2;8942:9;8933:7;8929:23;8925:32;8922:119;;;8960:79;;:::i;:::-;8922:119;9080:1;9105:53;9150:7;9141:6;9130:9;9126:22;9105:53;:::i;:::-;9095:63;;9051:117;8846:329;;;;:::o;9181:149::-;9217:7;9257:66;9250:5;9246:78;9235:89;;9181:149;;;:::o;9336:115::-;9421:23;9438:5;9421:23;:::i;:::-;9416:3;9409:36;9336:115;;:::o;9457:118::-;9544:24;9562:5;9544:24;:::i;:::-;9539:3;9532:37;9457:118;;:::o;9581:114::-;9648:6;9682:5;9676:12;9666:22;;9581:114;;;:::o;9701:184::-;9800:11;9834:6;9829:3;9822:19;9874:4;9869:3;9865:14;9850:29;;9701:184;;;;:::o;9891:132::-;9958:4;9981:3;9973:11;;10011:4;10006:3;10002:14;9994:22;;9891:132;;;:::o;10029:108::-;10106:24;10124:5;10106:24;:::i;:::-;10101:3;10094:37;10029:108;;:::o;10143:179::-;10212:10;10233:46;10275:3;10267:6;10233:46;:::i;:::-;10311:4;10306:3;10302:14;10288:28;;10143:179;;;;:::o;10328:113::-;10398:4;10430;10425:3;10421:14;10413:22;;10328:113;;;:::o;10477:732::-;10596:3;10625:54;10673:5;10625:54;:::i;:::-;10695:86;10774:6;10769:3;10695:86;:::i;:::-;10688:93;;10805:56;10855:5;10805:56;:::i;:::-;10884:7;10915:1;10900:284;10925:6;10922:1;10919:13;10900:284;;;11001:6;10995:13;11028:63;11087:3;11072:13;11028:63;:::i;:::-;11021:70;;11114:60;11167:6;11114:60;:::i;:::-;11104:70;;10960:224;10947:1;10944;10940:9;10935:14;;10900:284;;;10904:14;11200:3;11193:10;;10601:608;;;10477:732;;;;:::o;11215:1215::-;11564:4;11602:3;11591:9;11587:19;11579:27;;11616:69;11682:1;11671:9;11667:17;11658:6;11616:69;:::i;:::-;11732:9;11726:4;11722:20;11717:2;11706:9;11702:18;11695:48;11760:78;11833:4;11824:6;11760:78;:::i;:::-;11752:86;;11885:9;11879:4;11875:20;11870:2;11859:9;11855:18;11848:48;11913:78;11986:4;11977:6;11913:78;:::i;:::-;11905:86;;12001:72;12069:2;12058:9;12054:18;12045:6;12001:72;:::i;:::-;12083:73;12151:3;12140:9;12136:19;12127:6;12083:73;:::i;:::-;12166;12234:3;12223:9;12219:19;12210:6;12166:73;:::i;:::-;12287:9;12281:4;12277:20;12271:3;12260:9;12256:19;12249:49;12315:108;12418:4;12409:6;12315:108;:::i;:::-;12307:116;;11215:1215;;;;;;;;;;:::o;12436:222::-;12529:4;12567:2;12556:9;12552:18;12544:26;;12580:71;12648:1;12637:9;12633:17;12624:6;12580:71;:::i;:::-;12436:222;;;;:::o;12664:60::-;12692:3;12713:5;12706:12;;12664:60;;;:::o;12730:142::-;12780:9;12813:53;12831:34;12840:24;12858:5;12840:24;:::i;:::-;12831:34;:::i;:::-;12813:53;:::i;:::-;12800:66;;12730:142;;;:::o;12878:126::-;12928:9;12961:37;12992:5;12961:37;:::i;:::-;12948:50;;12878:126;;;:::o;13010:142::-;13076:9;13109:37;13140:5;13109:37;:::i;:::-;13096:50;;13010:142;;;:::o;13158:163::-;13261:53;13308:5;13261:53;:::i;:::-;13256:3;13249:66;13158:163;;:::o;13327:254::-;13436:4;13474:2;13463:9;13459:18;13451:26;;13487:87;13571:1;13560:9;13556:17;13547:6;13487:87;:::i;:::-;13327:254;;;;:::o;13587:118::-;13658:22;13674:5;13658:22;:::i;:::-;13651:5;13648:33;13638:61;;13695:1;13692;13685:12;13638:61;13587:118;:::o;13711:135::-;13755:5;13793:6;13780:20;13771:29;;13809:31;13834:5;13809:31;:::i;:::-;13711:135;;;;:::o;13852:122::-;13925:24;13943:5;13925:24;:::i;:::-;13918:5;13915:35;13905:63;;13964:1;13961;13954:12;13905:63;13852:122;:::o;13980:139::-;14026:5;14064:6;14051:20;14042:29;;14080:33;14107:5;14080:33;:::i;:::-;13980:139;;;;:::o;14125:1199::-;14236:6;14244;14252;14260;14268;14276;14284;14333:3;14321:9;14312:7;14308:23;14304:33;14301:120;;;14340:79;;:::i;:::-;14301:120;14460:1;14485:53;14530:7;14521:6;14510:9;14506:22;14485:53;:::i;:::-;14475:63;;14431:117;14587:2;14613:53;14658:7;14649:6;14638:9;14634:22;14613:53;:::i;:::-;14603:63;;14558:118;14715:2;14741:53;14786:7;14777:6;14766:9;14762:22;14741:53;:::i;:::-;14731:63;;14686:118;14843:2;14869:53;14914:7;14905:6;14894:9;14890:22;14869:53;:::i;:::-;14859:63;;14814:118;14971:3;14998:51;15041:7;15032:6;15021:9;15017:22;14998:51;:::i;:::-;14988:61;;14942:117;15098:3;15125:53;15170:7;15161:6;15150:9;15146:22;15125:53;:::i;:::-;15115:63;;15069:119;15227:3;15254:53;15299:7;15290:6;15279:9;15275:22;15254:53;:::i;:::-;15244:63;;15198:119;14125:1199;;;;;;;;;;:::o;15330:474::-;15398:6;15406;15455:2;15443:9;15434:7;15430:23;15426:32;15423:119;;;15461:79;;:::i;:::-;15423:119;15581:1;15606:53;15651:7;15642:6;15631:9;15627:22;15606:53;:::i;:::-;15596:63;;15552:117;15708:2;15734:53;15779:7;15770:6;15759:9;15755:22;15734:53;:::i;:::-;15724:63;;15679:118;15330:474;;;;;:::o;15810:553::-;15987:4;16025:3;16014:9;16010:19;16002:27;;16039:71;16107:1;16096:9;16092:17;16083:6;16039:71;:::i;:::-;16120:72;16188:2;16177:9;16173:18;16164:6;16120:72;:::i;:::-;16202;16270:2;16259:9;16255:18;16246:6;16202:72;:::i;:::-;16284;16352:2;16341:9;16337:18;16328:6;16284:72;:::i;:::-;15810:553;;;;;;;:::o;16369:180::-;16417:77;16414:1;16407:88;16514:4;16511:1;16504:15;16538:4;16535:1;16528:15;16555:320;16599:6;16636:1;16630:4;16626:12;16616:22;;16683:1;16677:4;16673:12;16704:18;16694:81;;16760:4;16752:6;16748:17;16738:27;;16694:81;16822:2;16814:6;16811:14;16791:18;16788:38;16785:84;;16841:18;;:::i;:::-;16785:84;16606:269;16555:320;;;:::o;16881:221::-;17021:34;17017:1;17009:6;17005:14;16998:58;17090:4;17085:2;17077:6;17073:15;17066:29;16881:221;:::o;17108:366::-;17250:3;17271:67;17335:2;17330:3;17271:67;:::i;:::-;17264:74;;17347:93;17436:3;17347:93;:::i;:::-;17465:2;17460:3;17456:12;17449:19;;17108:366;;;:::o;17480:419::-;17646:4;17684:2;17673:9;17669:18;17661:26;;17733:9;17727:4;17723:20;17719:1;17708:9;17704:17;17697:47;17761:131;17887:4;17761:131;:::i;:::-;17753:139;;17480:419;;;:::o;17905:442::-;18054:4;18092:2;18081:9;18077:18;18069:26;;18105:71;18173:1;18162:9;18158:17;18149:6;18105:71;:::i;:::-;18186:72;18254:2;18243:9;18239:18;18230:6;18186:72;:::i;:::-;18268;18336:2;18325:9;18321:18;18312:6;18268:72;:::i;:::-;17905:442;;;;;;:::o;18353:332::-;18474:4;18512:2;18501:9;18497:18;18489:26;;18525:71;18593:1;18582:9;18578:17;18569:6;18525:71;:::i;:::-;18606:72;18674:2;18663:9;18659:18;18650:6;18606:72;:::i;:::-;18353:332;;;;;:::o;18691:775::-;18924:4;18962:3;18951:9;18947:19;18939:27;;18976:71;19044:1;19033:9;19029:17;19020:6;18976:71;:::i;:::-;19057:72;19125:2;19114:9;19110:18;19101:6;19057:72;:::i;:::-;19139;19207:2;19196:9;19192:18;19183:6;19139:72;:::i;:::-;19221;19289:2;19278:9;19274:18;19265:6;19221:72;:::i;:::-;19303:73;19371:3;19360:9;19356:19;19347:6;19303:73;:::i;:::-;19386;19454:3;19443:9;19439:19;19430:6;19386:73;:::i;:::-;18691:775;;;;;;;;;:::o;19472:332::-;19593:4;19631:2;19620:9;19616:18;19608:26;;19644:71;19712:1;19701:9;19697:17;19688:6;19644:71;:::i;:::-;19725:72;19793:2;19782:9;19778:18;19769:6;19725:72;:::i;:::-;19472:332;;;;;:::o;19810:442::-;19959:4;19997:2;19986:9;19982:18;19974:26;;20010:71;20078:1;20067:9;20063:17;20054:6;20010:71;:::i;:::-;20091:72;20159:2;20148:9;20144:18;20135:6;20091:72;:::i;:::-;20173;20241:2;20230:9;20226:18;20217:6;20173:72;:::i;:::-;19810:442;;;;;;:::o;20258:180::-;20306:77;20303:1;20296:88;20403:4;20400:1;20393:15;20427:4;20424:1;20417:15;20444:191;20484:3;20503:20;20521:1;20503:20;:::i;:::-;20498:25;;20537:20;20555:1;20537:20;:::i;:::-;20532:25;;20580:1;20577;20573:9;20566:16;;20601:3;20598:1;20595:10;20592:36;;;20608:18;;:::i;:::-;20592:36;20444:191;;;;:::o;20641:664::-;20846:4;20884:3;20873:9;20869:19;20861:27;;20898:71;20966:1;20955:9;20951:17;20942:6;20898:71;:::i;:::-;20979:72;21047:2;21036:9;21032:18;21023:6;20979:72;:::i;:::-;21061;21129:2;21118:9;21114:18;21105:6;21061:72;:::i;:::-;21143;21211:2;21200:9;21196:18;21187:6;21143:72;:::i;:::-;21225:73;21293:3;21282:9;21278:19;21269:6;21225:73;:::i;:::-;20641:664;;;;;;;;:::o;21311:545::-;21484:4;21522:3;21511:9;21507:19;21499:27;;21536:71;21604:1;21593:9;21589:17;21580:6;21536:71;:::i;:::-;21617:68;21681:2;21670:9;21666:18;21657:6;21617:68;:::i;:::-;21695:72;21763:2;21752:9;21748:18;21739:6;21695:72;:::i;:::-;21777;21845:2;21834:9;21830:18;21821:6;21777:72;:::i;:::-;21311:545;;;;;;;:::o;21862:180::-;21910:77;21907:1;21900:88;22007:4;22004:1;21997:15;22031:4;22028:1;22021:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","certificateTokenId()":"4b24691f","decimals()":"313ce567","eip712Domain()":"84b0196e","fractionalizeCertificate()":"70be42a6","getFractionInfo()":"fb647cd9","iRecCertificateContract()":"b01d6d82","isFractionalized()":"3fb3ca20","name()":"06fdde03","nonces(address)":"7ecebe00","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalFractions\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"certificateContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"certificateTokenId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFractions\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"}],\"name\":\"CertificateFractionalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"certificateTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fractionalizeCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFractionInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFractions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iRecCertificateContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFractionalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"fractionalizeCertificate()\":{\"details\":\"Locks the NFT (green energy certificate) inside this contract to fractionalize it.\"},\"getFractionInfo()\":{\"details\":\"Returns information about the fractionalized certificate\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FractionalCertificateToken.sol\":\"FractionalCertificateToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/FractionalCertificateToken.sol\":{\"keccak256\":\"0xcbf33f78c2001e6975e56e52d257a381ad5292aca8cf7b2da855edf0e5ee6e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66fa96fa372b8ea6035f6ba639ba689bf20eb4a319387553963292e9b5896588\",\"dweb:/ipfs/QmV4zQNsQu9A1x3Q9DgPiYaFrwCU9Exm1kFkJb5nV3gh3K\"]}},\"version\":1}"}},"contracts/IReCCertificate.sol":{"IReCCertificate":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"initialBaseURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"burner","type":"address"},{"indexed":false,"internalType":"uint256","name":"energyAmount","type":"uint256"}],"name":"CertificateBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"CertificateDetailsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"energyAmount","type":"uint256"}],"name":"CertificateMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burnCertificate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"certificates","outputs":[{"internalType":"string","name":"facilityName","type":"string"},{"internalType":"string","name":"energySource","type":"string"},{"internalType":"uint256","name":"productionDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"energyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getCertificateDetails","outputs":[{"internalType":"string","name":"facilityName","type":"string"},{"internalType":"string","name":"energySource","type":"string"},{"internalType":"uint256","name":"productionDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"energyAmount","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"string","name":"facilityName","type":"string"},{"internalType":"string","name":"energySource","type":"string"},{"internalType":"uint256","name":"productionDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"newItemId","type":"uint256"}],"name":"mintCertificate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1220":{"entryPoint":null,"id":1220,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8666":{"entryPoint":null,"id":8666,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":241,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":700,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":812,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1784,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1799,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":582,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":439,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":609,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1086,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":979,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1383,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1766,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1734,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1218,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1348,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1238,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1524,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":658,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1107,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1037,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1496,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":533,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1228,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1466,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":990,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":486,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1272,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":459,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":464,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":454,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":449,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":469,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1123,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1453,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1324,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1136,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1282,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1319,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:9491:36","nodeType":"YulBlock","src":"0:9491:36","statements":[{"body":{"nativeSrc":"47:35:36","nodeType":"YulBlock","src":"47:35:36","statements":[{"nativeSrc":"57:19:36","nodeType":"YulAssignment","src":"57:19:36","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:36","nodeType":"YulLiteral","src":"73:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:36","nodeType":"YulIdentifier","src":"67:5:36"},"nativeSrc":"67:9:36","nodeType":"YulFunctionCall","src":"67:9:36"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:36","nodeType":"YulIdentifier","src":"57:6:36"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:36","nodeType":"YulTypedName","src":"40:6:36","type":""}],"src":"7:75:36"},{"body":{"nativeSrc":"177:28:36","nodeType":"YulBlock","src":"177:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:36","nodeType":"YulLiteral","src":"194:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:36","nodeType":"YulLiteral","src":"197:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:36","nodeType":"YulIdentifier","src":"187:6:36"},"nativeSrc":"187:12:36","nodeType":"YulFunctionCall","src":"187:12:36"},"nativeSrc":"187:12:36","nodeType":"YulExpressionStatement","src":"187:12:36"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:36","nodeType":"YulFunctionDefinition","src":"88:117:36"},{"body":{"nativeSrc":"300:28:36","nodeType":"YulBlock","src":"300:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:36","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:36","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:36","nodeType":"YulIdentifier","src":"310:6:36"},"nativeSrc":"310:12:36","nodeType":"YulFunctionCall","src":"310:12:36"},"nativeSrc":"310:12:36","nodeType":"YulExpressionStatement","src":"310:12:36"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:36","nodeType":"YulFunctionDefinition","src":"211:117:36"},{"body":{"nativeSrc":"423:28:36","nodeType":"YulBlock","src":"423:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:36","nodeType":"YulLiteral","src":"440:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:36","nodeType":"YulLiteral","src":"443:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:36","nodeType":"YulIdentifier","src":"433:6:36"},"nativeSrc":"433:12:36","nodeType":"YulFunctionCall","src":"433:12:36"},"nativeSrc":"433:12:36","nodeType":"YulExpressionStatement","src":"433:12:36"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:36","nodeType":"YulFunctionDefinition","src":"334:117:36"},{"body":{"nativeSrc":"546:28:36","nodeType":"YulBlock","src":"546:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:36","nodeType":"YulLiteral","src":"563:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:36","nodeType":"YulLiteral","src":"566:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:36","nodeType":"YulIdentifier","src":"556:6:36"},"nativeSrc":"556:12:36","nodeType":"YulFunctionCall","src":"556:12:36"},"nativeSrc":"556:12:36","nodeType":"YulExpressionStatement","src":"556:12:36"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:36","nodeType":"YulFunctionDefinition","src":"457:117:36"},{"body":{"nativeSrc":"628:54:36","nodeType":"YulBlock","src":"628:54:36","statements":[{"nativeSrc":"638:38:36","nodeType":"YulAssignment","src":"638:38:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:36","nodeType":"YulIdentifier","src":"656:5:36"},{"kind":"number","nativeSrc":"663:2:36","nodeType":"YulLiteral","src":"663:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:36","nodeType":"YulIdentifier","src":"652:3:36"},"nativeSrc":"652:14:36","nodeType":"YulFunctionCall","src":"652:14:36"},{"arguments":[{"kind":"number","nativeSrc":"672:2:36","nodeType":"YulLiteral","src":"672:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:36","nodeType":"YulIdentifier","src":"668:3:36"},"nativeSrc":"668:7:36","nodeType":"YulFunctionCall","src":"668:7:36"}],"functionName":{"name":"and","nativeSrc":"648:3:36","nodeType":"YulIdentifier","src":"648:3:36"},"nativeSrc":"648:28:36","nodeType":"YulFunctionCall","src":"648:28:36"},"variableNames":[{"name":"result","nativeSrc":"638:6:36","nodeType":"YulIdentifier","src":"638:6:36"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:36","nodeType":"YulTypedName","src":"611:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:36","nodeType":"YulTypedName","src":"621:6:36","type":""}],"src":"580:102:36"},{"body":{"nativeSrc":"716:152:36","nodeType":"YulBlock","src":"716:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:36","nodeType":"YulLiteral","src":"733:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:36","nodeType":"YulLiteral","src":"736:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:36","nodeType":"YulIdentifier","src":"726:6:36"},"nativeSrc":"726:88:36","nodeType":"YulFunctionCall","src":"726:88:36"},"nativeSrc":"726:88:36","nodeType":"YulExpressionStatement","src":"726:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:36","nodeType":"YulLiteral","src":"830:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:36","nodeType":"YulLiteral","src":"833:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:36","nodeType":"YulIdentifier","src":"823:6:36"},"nativeSrc":"823:15:36","nodeType":"YulFunctionCall","src":"823:15:36"},"nativeSrc":"823:15:36","nodeType":"YulExpressionStatement","src":"823:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:36","nodeType":"YulLiteral","src":"854:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:36","nodeType":"YulLiteral","src":"857:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:36","nodeType":"YulIdentifier","src":"847:6:36"},"nativeSrc":"847:15:36","nodeType":"YulFunctionCall","src":"847:15:36"},"nativeSrc":"847:15:36","nodeType":"YulExpressionStatement","src":"847:15:36"}]},"name":"panic_error_0x41","nativeSrc":"688:180:36","nodeType":"YulFunctionDefinition","src":"688:180:36"},{"body":{"nativeSrc":"917:238:36","nodeType":"YulBlock","src":"917:238:36","statements":[{"nativeSrc":"927:58:36","nodeType":"YulVariableDeclaration","src":"927:58:36","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:36","nodeType":"YulIdentifier","src":"949:6:36"},{"arguments":[{"name":"size","nativeSrc":"979:4:36","nodeType":"YulIdentifier","src":"979:4:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:36","nodeType":"YulIdentifier","src":"957:21:36"},"nativeSrc":"957:27:36","nodeType":"YulFunctionCall","src":"957:27:36"}],"functionName":{"name":"add","nativeSrc":"945:3:36","nodeType":"YulIdentifier","src":"945:3:36"},"nativeSrc":"945:40:36","nodeType":"YulFunctionCall","src":"945:40:36"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:36","nodeType":"YulTypedName","src":"931:10:36","type":""}]},{"body":{"nativeSrc":"1096:22:36","nodeType":"YulBlock","src":"1096:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:36","nodeType":"YulIdentifier","src":"1098:16:36"},"nativeSrc":"1098:18:36","nodeType":"YulFunctionCall","src":"1098:18:36"},"nativeSrc":"1098:18:36","nodeType":"YulExpressionStatement","src":"1098:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:36","nodeType":"YulIdentifier","src":"1039:10:36"},{"kind":"number","nativeSrc":"1051:18:36","nodeType":"YulLiteral","src":"1051:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:36","nodeType":"YulIdentifier","src":"1036:2:36"},"nativeSrc":"1036:34:36","nodeType":"YulFunctionCall","src":"1036:34:36"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:36","nodeType":"YulIdentifier","src":"1075:10:36"},{"name":"memPtr","nativeSrc":"1087:6:36","nodeType":"YulIdentifier","src":"1087:6:36"}],"functionName":{"name":"lt","nativeSrc":"1072:2:36","nodeType":"YulIdentifier","src":"1072:2:36"},"nativeSrc":"1072:22:36","nodeType":"YulFunctionCall","src":"1072:22:36"}],"functionName":{"name":"or","nativeSrc":"1033:2:36","nodeType":"YulIdentifier","src":"1033:2:36"},"nativeSrc":"1033:62:36","nodeType":"YulFunctionCall","src":"1033:62:36"},"nativeSrc":"1030:88:36","nodeType":"YulIf","src":"1030:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:36","nodeType":"YulLiteral","src":"1134:2:36","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:36","nodeType":"YulIdentifier","src":"1138:10:36"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:36","nodeType":"YulIdentifier","src":"1127:6:36"},"nativeSrc":"1127:22:36","nodeType":"YulFunctionCall","src":"1127:22:36"},"nativeSrc":"1127:22:36","nodeType":"YulExpressionStatement","src":"1127:22:36"}]},"name":"finalize_allocation","nativeSrc":"874:281:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:36","nodeType":"YulTypedName","src":"903:6:36","type":""},{"name":"size","nativeSrc":"911:4:36","nodeType":"YulTypedName","src":"911:4:36","type":""}],"src":"874:281:36"},{"body":{"nativeSrc":"1202:88:36","nodeType":"YulBlock","src":"1202:88:36","statements":[{"nativeSrc":"1212:30:36","nodeType":"YulAssignment","src":"1212:30:36","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:36","nodeType":"YulIdentifier","src":"1222:18:36"},"nativeSrc":"1222:20:36","nodeType":"YulFunctionCall","src":"1222:20:36"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:36","nodeType":"YulIdentifier","src":"1212:6:36"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:36","nodeType":"YulIdentifier","src":"1271:6:36"},{"name":"size","nativeSrc":"1279:4:36","nodeType":"YulIdentifier","src":"1279:4:36"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:36","nodeType":"YulIdentifier","src":"1251:19:36"},"nativeSrc":"1251:33:36","nodeType":"YulFunctionCall","src":"1251:33:36"},"nativeSrc":"1251:33:36","nodeType":"YulExpressionStatement","src":"1251:33:36"}]},"name":"allocate_memory","nativeSrc":"1161:129:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:36","nodeType":"YulTypedName","src":"1186:4:36","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:36","nodeType":"YulTypedName","src":"1195:6:36","type":""}],"src":"1161:129:36"},{"body":{"nativeSrc":"1363:241:36","nodeType":"YulBlock","src":"1363:241:36","statements":[{"body":{"nativeSrc":"1468:22:36","nodeType":"YulBlock","src":"1468:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:36","nodeType":"YulIdentifier","src":"1470:16:36"},"nativeSrc":"1470:18:36","nodeType":"YulFunctionCall","src":"1470:18:36"},"nativeSrc":"1470:18:36","nodeType":"YulExpressionStatement","src":"1470:18:36"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:36","nodeType":"YulIdentifier","src":"1440:6:36"},{"kind":"number","nativeSrc":"1448:18:36","nodeType":"YulLiteral","src":"1448:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:36","nodeType":"YulIdentifier","src":"1437:2:36"},"nativeSrc":"1437:30:36","nodeType":"YulFunctionCall","src":"1437:30:36"},"nativeSrc":"1434:56:36","nodeType":"YulIf","src":"1434:56:36"},{"nativeSrc":"1500:37:36","nodeType":"YulAssignment","src":"1500:37:36","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:36","nodeType":"YulIdentifier","src":"1530:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:36","nodeType":"YulIdentifier","src":"1508:21:36"},"nativeSrc":"1508:29:36","nodeType":"YulFunctionCall","src":"1508:29:36"},"variableNames":[{"name":"size","nativeSrc":"1500:4:36","nodeType":"YulIdentifier","src":"1500:4:36"}]},{"nativeSrc":"1574:23:36","nodeType":"YulAssignment","src":"1574:23:36","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:36","nodeType":"YulIdentifier","src":"1586:4:36"},{"kind":"number","nativeSrc":"1592:4:36","nodeType":"YulLiteral","src":"1592:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:36","nodeType":"YulIdentifier","src":"1582:3:36"},"nativeSrc":"1582:15:36","nodeType":"YulFunctionCall","src":"1582:15:36"},"variableNames":[{"name":"size","nativeSrc":"1574:4:36","nodeType":"YulIdentifier","src":"1574:4:36"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:36","nodeType":"YulTypedName","src":"1347:6:36","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:36","nodeType":"YulTypedName","src":"1358:4:36","type":""}],"src":"1296:308:36"},{"body":{"nativeSrc":"1672:186:36","nodeType":"YulBlock","src":"1672:186:36","statements":[{"nativeSrc":"1683:10:36","nodeType":"YulVariableDeclaration","src":"1683:10:36","value":{"kind":"number","nativeSrc":"1692:1:36","nodeType":"YulLiteral","src":"1692:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1687:1:36","nodeType":"YulTypedName","src":"1687:1:36","type":""}]},{"body":{"nativeSrc":"1752:63:36","nodeType":"YulBlock","src":"1752:63:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1777:3:36","nodeType":"YulIdentifier","src":"1777:3:36"},{"name":"i","nativeSrc":"1782:1:36","nodeType":"YulIdentifier","src":"1782:1:36"}],"functionName":{"name":"add","nativeSrc":"1773:3:36","nodeType":"YulIdentifier","src":"1773:3:36"},"nativeSrc":"1773:11:36","nodeType":"YulFunctionCall","src":"1773:11:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1796:3:36","nodeType":"YulIdentifier","src":"1796:3:36"},{"name":"i","nativeSrc":"1801:1:36","nodeType":"YulIdentifier","src":"1801:1:36"}],"functionName":{"name":"add","nativeSrc":"1792:3:36","nodeType":"YulIdentifier","src":"1792:3:36"},"nativeSrc":"1792:11:36","nodeType":"YulFunctionCall","src":"1792:11:36"}],"functionName":{"name":"mload","nativeSrc":"1786:5:36","nodeType":"YulIdentifier","src":"1786:5:36"},"nativeSrc":"1786:18:36","nodeType":"YulFunctionCall","src":"1786:18:36"}],"functionName":{"name":"mstore","nativeSrc":"1766:6:36","nodeType":"YulIdentifier","src":"1766:6:36"},"nativeSrc":"1766:39:36","nodeType":"YulFunctionCall","src":"1766:39:36"},"nativeSrc":"1766:39:36","nodeType":"YulExpressionStatement","src":"1766:39:36"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1713:1:36","nodeType":"YulIdentifier","src":"1713:1:36"},{"name":"length","nativeSrc":"1716:6:36","nodeType":"YulIdentifier","src":"1716:6:36"}],"functionName":{"name":"lt","nativeSrc":"1710:2:36","nodeType":"YulIdentifier","src":"1710:2:36"},"nativeSrc":"1710:13:36","nodeType":"YulFunctionCall","src":"1710:13:36"},"nativeSrc":"1702:113:36","nodeType":"YulForLoop","post":{"nativeSrc":"1724:19:36","nodeType":"YulBlock","src":"1724:19:36","statements":[{"nativeSrc":"1726:15:36","nodeType":"YulAssignment","src":"1726:15:36","value":{"arguments":[{"name":"i","nativeSrc":"1735:1:36","nodeType":"YulIdentifier","src":"1735:1:36"},{"kind":"number","nativeSrc":"1738:2:36","nodeType":"YulLiteral","src":"1738:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1731:3:36","nodeType":"YulIdentifier","src":"1731:3:36"},"nativeSrc":"1731:10:36","nodeType":"YulFunctionCall","src":"1731:10:36"},"variableNames":[{"name":"i","nativeSrc":"1726:1:36","nodeType":"YulIdentifier","src":"1726:1:36"}]}]},"pre":{"nativeSrc":"1706:3:36","nodeType":"YulBlock","src":"1706:3:36","statements":[]},"src":"1702:113:36"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1835:3:36","nodeType":"YulIdentifier","src":"1835:3:36"},{"name":"length","nativeSrc":"1840:6:36","nodeType":"YulIdentifier","src":"1840:6:36"}],"functionName":{"name":"add","nativeSrc":"1831:3:36","nodeType":"YulIdentifier","src":"1831:3:36"},"nativeSrc":"1831:16:36","nodeType":"YulFunctionCall","src":"1831:16:36"},{"kind":"number","nativeSrc":"1849:1:36","nodeType":"YulLiteral","src":"1849:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:36","nodeType":"YulIdentifier","src":"1824:6:36"},"nativeSrc":"1824:27:36","nodeType":"YulFunctionCall","src":"1824:27:36"},"nativeSrc":"1824:27:36","nodeType":"YulExpressionStatement","src":"1824:27:36"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1610:248:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1654:3:36","nodeType":"YulTypedName","src":"1654:3:36","type":""},{"name":"dst","nativeSrc":"1659:3:36","nodeType":"YulTypedName","src":"1659:3:36","type":""},{"name":"length","nativeSrc":"1664:6:36","nodeType":"YulTypedName","src":"1664:6:36","type":""}],"src":"1610:248:36"},{"body":{"nativeSrc":"1959:339:36","nodeType":"YulBlock","src":"1959:339:36","statements":[{"nativeSrc":"1969:75:36","nodeType":"YulAssignment","src":"1969:75:36","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2036:6:36","nodeType":"YulIdentifier","src":"2036:6:36"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1994:41:36","nodeType":"YulIdentifier","src":"1994:41:36"},"nativeSrc":"1994:49:36","nodeType":"YulFunctionCall","src":"1994:49:36"}],"functionName":{"name":"allocate_memory","nativeSrc":"1978:15:36","nodeType":"YulIdentifier","src":"1978:15:36"},"nativeSrc":"1978:66:36","nodeType":"YulFunctionCall","src":"1978:66:36"},"variableNames":[{"name":"array","nativeSrc":"1969:5:36","nodeType":"YulIdentifier","src":"1969:5:36"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2060:5:36","nodeType":"YulIdentifier","src":"2060:5:36"},{"name":"length","nativeSrc":"2067:6:36","nodeType":"YulIdentifier","src":"2067:6:36"}],"functionName":{"name":"mstore","nativeSrc":"2053:6:36","nodeType":"YulIdentifier","src":"2053:6:36"},"nativeSrc":"2053:21:36","nodeType":"YulFunctionCall","src":"2053:21:36"},"nativeSrc":"2053:21:36","nodeType":"YulExpressionStatement","src":"2053:21:36"},{"nativeSrc":"2083:27:36","nodeType":"YulVariableDeclaration","src":"2083:27:36","value":{"arguments":[{"name":"array","nativeSrc":"2098:5:36","nodeType":"YulIdentifier","src":"2098:5:36"},{"kind":"number","nativeSrc":"2105:4:36","nodeType":"YulLiteral","src":"2105:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2094:3:36","nodeType":"YulIdentifier","src":"2094:3:36"},"nativeSrc":"2094:16:36","nodeType":"YulFunctionCall","src":"2094:16:36"},"variables":[{"name":"dst","nativeSrc":"2087:3:36","nodeType":"YulTypedName","src":"2087:3:36","type":""}]},{"body":{"nativeSrc":"2148:83:36","nodeType":"YulBlock","src":"2148:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2150:77:36","nodeType":"YulIdentifier","src":"2150:77:36"},"nativeSrc":"2150:79:36","nodeType":"YulFunctionCall","src":"2150:79:36"},"nativeSrc":"2150:79:36","nodeType":"YulExpressionStatement","src":"2150:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2129:3:36","nodeType":"YulIdentifier","src":"2129:3:36"},{"name":"length","nativeSrc":"2134:6:36","nodeType":"YulIdentifier","src":"2134:6:36"}],"functionName":{"name":"add","nativeSrc":"2125:3:36","nodeType":"YulIdentifier","src":"2125:3:36"},"nativeSrc":"2125:16:36","nodeType":"YulFunctionCall","src":"2125:16:36"},{"name":"end","nativeSrc":"2143:3:36","nodeType":"YulIdentifier","src":"2143:3:36"}],"functionName":{"name":"gt","nativeSrc":"2122:2:36","nodeType":"YulIdentifier","src":"2122:2:36"},"nativeSrc":"2122:25:36","nodeType":"YulFunctionCall","src":"2122:25:36"},"nativeSrc":"2119:112:36","nodeType":"YulIf","src":"2119:112:36"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2275:3:36","nodeType":"YulIdentifier","src":"2275:3:36"},{"name":"dst","nativeSrc":"2280:3:36","nodeType":"YulIdentifier","src":"2280:3:36"},{"name":"length","nativeSrc":"2285:6:36","nodeType":"YulIdentifier","src":"2285:6:36"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2240:34:36","nodeType":"YulIdentifier","src":"2240:34:36"},"nativeSrc":"2240:52:36","nodeType":"YulFunctionCall","src":"2240:52:36"},"nativeSrc":"2240:52:36","nodeType":"YulExpressionStatement","src":"2240:52:36"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"1864:434:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1932:3:36","nodeType":"YulTypedName","src":"1932:3:36","type":""},{"name":"length","nativeSrc":"1937:6:36","nodeType":"YulTypedName","src":"1937:6:36","type":""},{"name":"end","nativeSrc":"1945:3:36","nodeType":"YulTypedName","src":"1945:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1953:5:36","nodeType":"YulTypedName","src":"1953:5:36","type":""}],"src":"1864:434:36"},{"body":{"nativeSrc":"2391:282:36","nodeType":"YulBlock","src":"2391:282:36","statements":[{"body":{"nativeSrc":"2440:83:36","nodeType":"YulBlock","src":"2440:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2442:77:36","nodeType":"YulIdentifier","src":"2442:77:36"},"nativeSrc":"2442:79:36","nodeType":"YulFunctionCall","src":"2442:79:36"},"nativeSrc":"2442:79:36","nodeType":"YulExpressionStatement","src":"2442:79:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2419:6:36","nodeType":"YulIdentifier","src":"2419:6:36"},{"kind":"number","nativeSrc":"2427:4:36","nodeType":"YulLiteral","src":"2427:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2415:3:36","nodeType":"YulIdentifier","src":"2415:3:36"},"nativeSrc":"2415:17:36","nodeType":"YulFunctionCall","src":"2415:17:36"},{"name":"end","nativeSrc":"2434:3:36","nodeType":"YulIdentifier","src":"2434:3:36"}],"functionName":{"name":"slt","nativeSrc":"2411:3:36","nodeType":"YulIdentifier","src":"2411:3:36"},"nativeSrc":"2411:27:36","nodeType":"YulFunctionCall","src":"2411:27:36"}],"functionName":{"name":"iszero","nativeSrc":"2404:6:36","nodeType":"YulIdentifier","src":"2404:6:36"},"nativeSrc":"2404:35:36","nodeType":"YulFunctionCall","src":"2404:35:36"},"nativeSrc":"2401:122:36","nodeType":"YulIf","src":"2401:122:36"},{"nativeSrc":"2532:27:36","nodeType":"YulVariableDeclaration","src":"2532:27:36","value":{"arguments":[{"name":"offset","nativeSrc":"2552:6:36","nodeType":"YulIdentifier","src":"2552:6:36"}],"functionName":{"name":"mload","nativeSrc":"2546:5:36","nodeType":"YulIdentifier","src":"2546:5:36"},"nativeSrc":"2546:13:36","nodeType":"YulFunctionCall","src":"2546:13:36"},"variables":[{"name":"length","nativeSrc":"2536:6:36","nodeType":"YulTypedName","src":"2536:6:36","type":""}]},{"nativeSrc":"2568:99:36","nodeType":"YulAssignment","src":"2568:99:36","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2640:6:36","nodeType":"YulIdentifier","src":"2640:6:36"},{"kind":"number","nativeSrc":"2648:4:36","nodeType":"YulLiteral","src":"2648:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2636:3:36","nodeType":"YulIdentifier","src":"2636:3:36"},"nativeSrc":"2636:17:36","nodeType":"YulFunctionCall","src":"2636:17:36"},{"name":"length","nativeSrc":"2655:6:36","nodeType":"YulIdentifier","src":"2655:6:36"},{"name":"end","nativeSrc":"2663:3:36","nodeType":"YulIdentifier","src":"2663:3:36"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2577:58:36","nodeType":"YulIdentifier","src":"2577:58:36"},"nativeSrc":"2577:90:36","nodeType":"YulFunctionCall","src":"2577:90:36"},"variableNames":[{"name":"array","nativeSrc":"2568:5:36","nodeType":"YulIdentifier","src":"2568:5:36"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2318:355:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2369:6:36","nodeType":"YulTypedName","src":"2369:6:36","type":""},{"name":"end","nativeSrc":"2377:3:36","nodeType":"YulTypedName","src":"2377:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2385:5:36","nodeType":"YulTypedName","src":"2385:5:36","type":""}],"src":"2318:355:36"},{"body":{"nativeSrc":"2820:1041:36","nodeType":"YulBlock","src":"2820:1041:36","statements":[{"body":{"nativeSrc":"2866:83:36","nodeType":"YulBlock","src":"2866:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2868:77:36","nodeType":"YulIdentifier","src":"2868:77:36"},"nativeSrc":"2868:79:36","nodeType":"YulFunctionCall","src":"2868:79:36"},"nativeSrc":"2868:79:36","nodeType":"YulExpressionStatement","src":"2868:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2841:7:36","nodeType":"YulIdentifier","src":"2841:7:36"},{"name":"headStart","nativeSrc":"2850:9:36","nodeType":"YulIdentifier","src":"2850:9:36"}],"functionName":{"name":"sub","nativeSrc":"2837:3:36","nodeType":"YulIdentifier","src":"2837:3:36"},"nativeSrc":"2837:23:36","nodeType":"YulFunctionCall","src":"2837:23:36"},{"kind":"number","nativeSrc":"2862:2:36","nodeType":"YulLiteral","src":"2862:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2833:3:36","nodeType":"YulIdentifier","src":"2833:3:36"},"nativeSrc":"2833:32:36","nodeType":"YulFunctionCall","src":"2833:32:36"},"nativeSrc":"2830:119:36","nodeType":"YulIf","src":"2830:119:36"},{"nativeSrc":"2959:291:36","nodeType":"YulBlock","src":"2959:291:36","statements":[{"nativeSrc":"2974:38:36","nodeType":"YulVariableDeclaration","src":"2974:38:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2998:9:36","nodeType":"YulIdentifier","src":"2998:9:36"},{"kind":"number","nativeSrc":"3009:1:36","nodeType":"YulLiteral","src":"3009:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2994:3:36","nodeType":"YulIdentifier","src":"2994:3:36"},"nativeSrc":"2994:17:36","nodeType":"YulFunctionCall","src":"2994:17:36"}],"functionName":{"name":"mload","nativeSrc":"2988:5:36","nodeType":"YulIdentifier","src":"2988:5:36"},"nativeSrc":"2988:24:36","nodeType":"YulFunctionCall","src":"2988:24:36"},"variables":[{"name":"offset","nativeSrc":"2978:6:36","nodeType":"YulTypedName","src":"2978:6:36","type":""}]},{"body":{"nativeSrc":"3059:83:36","nodeType":"YulBlock","src":"3059:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3061:77:36","nodeType":"YulIdentifier","src":"3061:77:36"},"nativeSrc":"3061:79:36","nodeType":"YulFunctionCall","src":"3061:79:36"},"nativeSrc":"3061:79:36","nodeType":"YulExpressionStatement","src":"3061:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3031:6:36","nodeType":"YulIdentifier","src":"3031:6:36"},{"kind":"number","nativeSrc":"3039:18:36","nodeType":"YulLiteral","src":"3039:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3028:2:36","nodeType":"YulIdentifier","src":"3028:2:36"},"nativeSrc":"3028:30:36","nodeType":"YulFunctionCall","src":"3028:30:36"},"nativeSrc":"3025:117:36","nodeType":"YulIf","src":"3025:117:36"},{"nativeSrc":"3156:84:36","nodeType":"YulAssignment","src":"3156:84:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3212:9:36","nodeType":"YulIdentifier","src":"3212:9:36"},{"name":"offset","nativeSrc":"3223:6:36","nodeType":"YulIdentifier","src":"3223:6:36"}],"functionName":{"name":"add","nativeSrc":"3208:3:36","nodeType":"YulIdentifier","src":"3208:3:36"},"nativeSrc":"3208:22:36","nodeType":"YulFunctionCall","src":"3208:22:36"},{"name":"dataEnd","nativeSrc":"3232:7:36","nodeType":"YulIdentifier","src":"3232:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3166:41:36","nodeType":"YulIdentifier","src":"3166:41:36"},"nativeSrc":"3166:74:36","nodeType":"YulFunctionCall","src":"3166:74:36"},"variableNames":[{"name":"value0","nativeSrc":"3156:6:36","nodeType":"YulIdentifier","src":"3156:6:36"}]}]},{"nativeSrc":"3260:292:36","nodeType":"YulBlock","src":"3260:292:36","statements":[{"nativeSrc":"3275:39:36","nodeType":"YulVariableDeclaration","src":"3275:39:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3299:9:36","nodeType":"YulIdentifier","src":"3299:9:36"},{"kind":"number","nativeSrc":"3310:2:36","nodeType":"YulLiteral","src":"3310:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3295:3:36","nodeType":"YulIdentifier","src":"3295:3:36"},"nativeSrc":"3295:18:36","nodeType":"YulFunctionCall","src":"3295:18:36"}],"functionName":{"name":"mload","nativeSrc":"3289:5:36","nodeType":"YulIdentifier","src":"3289:5:36"},"nativeSrc":"3289:25:36","nodeType":"YulFunctionCall","src":"3289:25:36"},"variables":[{"name":"offset","nativeSrc":"3279:6:36","nodeType":"YulTypedName","src":"3279:6:36","type":""}]},{"body":{"nativeSrc":"3361:83:36","nodeType":"YulBlock","src":"3361:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3363:77:36","nodeType":"YulIdentifier","src":"3363:77:36"},"nativeSrc":"3363:79:36","nodeType":"YulFunctionCall","src":"3363:79:36"},"nativeSrc":"3363:79:36","nodeType":"YulExpressionStatement","src":"3363:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3333:6:36","nodeType":"YulIdentifier","src":"3333:6:36"},{"kind":"number","nativeSrc":"3341:18:36","nodeType":"YulLiteral","src":"3341:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3330:2:36","nodeType":"YulIdentifier","src":"3330:2:36"},"nativeSrc":"3330:30:36","nodeType":"YulFunctionCall","src":"3330:30:36"},"nativeSrc":"3327:117:36","nodeType":"YulIf","src":"3327:117:36"},{"nativeSrc":"3458:84:36","nodeType":"YulAssignment","src":"3458:84:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3514:9:36","nodeType":"YulIdentifier","src":"3514:9:36"},{"name":"offset","nativeSrc":"3525:6:36","nodeType":"YulIdentifier","src":"3525:6:36"}],"functionName":{"name":"add","nativeSrc":"3510:3:36","nodeType":"YulIdentifier","src":"3510:3:36"},"nativeSrc":"3510:22:36","nodeType":"YulFunctionCall","src":"3510:22:36"},{"name":"dataEnd","nativeSrc":"3534:7:36","nodeType":"YulIdentifier","src":"3534:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3468:41:36","nodeType":"YulIdentifier","src":"3468:41:36"},"nativeSrc":"3468:74:36","nodeType":"YulFunctionCall","src":"3468:74:36"},"variableNames":[{"name":"value1","nativeSrc":"3458:6:36","nodeType":"YulIdentifier","src":"3458:6:36"}]}]},{"nativeSrc":"3562:292:36","nodeType":"YulBlock","src":"3562:292:36","statements":[{"nativeSrc":"3577:39:36","nodeType":"YulVariableDeclaration","src":"3577:39:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3601:9:36","nodeType":"YulIdentifier","src":"3601:9:36"},{"kind":"number","nativeSrc":"3612:2:36","nodeType":"YulLiteral","src":"3612:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3597:3:36","nodeType":"YulIdentifier","src":"3597:3:36"},"nativeSrc":"3597:18:36","nodeType":"YulFunctionCall","src":"3597:18:36"}],"functionName":{"name":"mload","nativeSrc":"3591:5:36","nodeType":"YulIdentifier","src":"3591:5:36"},"nativeSrc":"3591:25:36","nodeType":"YulFunctionCall","src":"3591:25:36"},"variables":[{"name":"offset","nativeSrc":"3581:6:36","nodeType":"YulTypedName","src":"3581:6:36","type":""}]},{"body":{"nativeSrc":"3663:83:36","nodeType":"YulBlock","src":"3663:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3665:77:36","nodeType":"YulIdentifier","src":"3665:77:36"},"nativeSrc":"3665:79:36","nodeType":"YulFunctionCall","src":"3665:79:36"},"nativeSrc":"3665:79:36","nodeType":"YulExpressionStatement","src":"3665:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3635:6:36","nodeType":"YulIdentifier","src":"3635:6:36"},{"kind":"number","nativeSrc":"3643:18:36","nodeType":"YulLiteral","src":"3643:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3632:2:36","nodeType":"YulIdentifier","src":"3632:2:36"},"nativeSrc":"3632:30:36","nodeType":"YulFunctionCall","src":"3632:30:36"},"nativeSrc":"3629:117:36","nodeType":"YulIf","src":"3629:117:36"},{"nativeSrc":"3760:84:36","nodeType":"YulAssignment","src":"3760:84:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3816:9:36","nodeType":"YulIdentifier","src":"3816:9:36"},{"name":"offset","nativeSrc":"3827:6:36","nodeType":"YulIdentifier","src":"3827:6:36"}],"functionName":{"name":"add","nativeSrc":"3812:3:36","nodeType":"YulIdentifier","src":"3812:3:36"},"nativeSrc":"3812:22:36","nodeType":"YulFunctionCall","src":"3812:22:36"},{"name":"dataEnd","nativeSrc":"3836:7:36","nodeType":"YulIdentifier","src":"3836:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3770:41:36","nodeType":"YulIdentifier","src":"3770:41:36"},"nativeSrc":"3770:74:36","nodeType":"YulFunctionCall","src":"3770:74:36"},"variableNames":[{"name":"value2","nativeSrc":"3760:6:36","nodeType":"YulIdentifier","src":"3760:6:36"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"2679:1182:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2774:9:36","nodeType":"YulTypedName","src":"2774:9:36","type":""},{"name":"dataEnd","nativeSrc":"2785:7:36","nodeType":"YulTypedName","src":"2785:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2797:6:36","nodeType":"YulTypedName","src":"2797:6:36","type":""},{"name":"value1","nativeSrc":"2805:6:36","nodeType":"YulTypedName","src":"2805:6:36","type":""},{"name":"value2","nativeSrc":"2813:6:36","nodeType":"YulTypedName","src":"2813:6:36","type":""}],"src":"2679:1182:36"},{"body":{"nativeSrc":"3926:40:36","nodeType":"YulBlock","src":"3926:40:36","statements":[{"nativeSrc":"3937:22:36","nodeType":"YulAssignment","src":"3937:22:36","value":{"arguments":[{"name":"value","nativeSrc":"3953:5:36","nodeType":"YulIdentifier","src":"3953:5:36"}],"functionName":{"name":"mload","nativeSrc":"3947:5:36","nodeType":"YulIdentifier","src":"3947:5:36"},"nativeSrc":"3947:12:36","nodeType":"YulFunctionCall","src":"3947:12:36"},"variableNames":[{"name":"length","nativeSrc":"3937:6:36","nodeType":"YulIdentifier","src":"3937:6:36"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3867:99:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3909:5:36","nodeType":"YulTypedName","src":"3909:5:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3919:6:36","nodeType":"YulTypedName","src":"3919:6:36","type":""}],"src":"3867:99:36"},{"body":{"nativeSrc":"4000:152:36","nodeType":"YulBlock","src":"4000:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4017:1:36","nodeType":"YulLiteral","src":"4017:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"4020:77:36","nodeType":"YulLiteral","src":"4020:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4010:6:36","nodeType":"YulIdentifier","src":"4010:6:36"},"nativeSrc":"4010:88:36","nodeType":"YulFunctionCall","src":"4010:88:36"},"nativeSrc":"4010:88:36","nodeType":"YulExpressionStatement","src":"4010:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4114:1:36","nodeType":"YulLiteral","src":"4114:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"4117:4:36","nodeType":"YulLiteral","src":"4117:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4107:6:36","nodeType":"YulIdentifier","src":"4107:6:36"},"nativeSrc":"4107:15:36","nodeType":"YulFunctionCall","src":"4107:15:36"},"nativeSrc":"4107:15:36","nodeType":"YulExpressionStatement","src":"4107:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4138:1:36","nodeType":"YulLiteral","src":"4138:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"4141:4:36","nodeType":"YulLiteral","src":"4141:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4131:6:36","nodeType":"YulIdentifier","src":"4131:6:36"},"nativeSrc":"4131:15:36","nodeType":"YulFunctionCall","src":"4131:15:36"},"nativeSrc":"4131:15:36","nodeType":"YulExpressionStatement","src":"4131:15:36"}]},"name":"panic_error_0x22","nativeSrc":"3972:180:36","nodeType":"YulFunctionDefinition","src":"3972:180:36"},{"body":{"nativeSrc":"4209:269:36","nodeType":"YulBlock","src":"4209:269:36","statements":[{"nativeSrc":"4219:22:36","nodeType":"YulAssignment","src":"4219:22:36","value":{"arguments":[{"name":"data","nativeSrc":"4233:4:36","nodeType":"YulIdentifier","src":"4233:4:36"},{"kind":"number","nativeSrc":"4239:1:36","nodeType":"YulLiteral","src":"4239:1:36","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4229:3:36","nodeType":"YulIdentifier","src":"4229:3:36"},"nativeSrc":"4229:12:36","nodeType":"YulFunctionCall","src":"4229:12:36"},"variableNames":[{"name":"length","nativeSrc":"4219:6:36","nodeType":"YulIdentifier","src":"4219:6:36"}]},{"nativeSrc":"4250:38:36","nodeType":"YulVariableDeclaration","src":"4250:38:36","value":{"arguments":[{"name":"data","nativeSrc":"4280:4:36","nodeType":"YulIdentifier","src":"4280:4:36"},{"kind":"number","nativeSrc":"4286:1:36","nodeType":"YulLiteral","src":"4286:1:36","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4276:3:36","nodeType":"YulIdentifier","src":"4276:3:36"},"nativeSrc":"4276:12:36","nodeType":"YulFunctionCall","src":"4276:12:36"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4254:18:36","nodeType":"YulTypedName","src":"4254:18:36","type":""}]},{"body":{"nativeSrc":"4327:51:36","nodeType":"YulBlock","src":"4327:51:36","statements":[{"nativeSrc":"4341:27:36","nodeType":"YulAssignment","src":"4341:27:36","value":{"arguments":[{"name":"length","nativeSrc":"4355:6:36","nodeType":"YulIdentifier","src":"4355:6:36"},{"kind":"number","nativeSrc":"4363:4:36","nodeType":"YulLiteral","src":"4363:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4351:3:36","nodeType":"YulIdentifier","src":"4351:3:36"},"nativeSrc":"4351:17:36","nodeType":"YulFunctionCall","src":"4351:17:36"},"variableNames":[{"name":"length","nativeSrc":"4341:6:36","nodeType":"YulIdentifier","src":"4341:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4307:18:36","nodeType":"YulIdentifier","src":"4307:18:36"}],"functionName":{"name":"iszero","nativeSrc":"4300:6:36","nodeType":"YulIdentifier","src":"4300:6:36"},"nativeSrc":"4300:26:36","nodeType":"YulFunctionCall","src":"4300:26:36"},"nativeSrc":"4297:81:36","nodeType":"YulIf","src":"4297:81:36"},{"body":{"nativeSrc":"4430:42:36","nodeType":"YulBlock","src":"4430:42:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4444:16:36","nodeType":"YulIdentifier","src":"4444:16:36"},"nativeSrc":"4444:18:36","nodeType":"YulFunctionCall","src":"4444:18:36"},"nativeSrc":"4444:18:36","nodeType":"YulExpressionStatement","src":"4444:18:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4394:18:36","nodeType":"YulIdentifier","src":"4394:18:36"},{"arguments":[{"name":"length","nativeSrc":"4417:6:36","nodeType":"YulIdentifier","src":"4417:6:36"},{"kind":"number","nativeSrc":"4425:2:36","nodeType":"YulLiteral","src":"4425:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4414:2:36","nodeType":"YulIdentifier","src":"4414:2:36"},"nativeSrc":"4414:14:36","nodeType":"YulFunctionCall","src":"4414:14:36"}],"functionName":{"name":"eq","nativeSrc":"4391:2:36","nodeType":"YulIdentifier","src":"4391:2:36"},"nativeSrc":"4391:38:36","nodeType":"YulFunctionCall","src":"4391:38:36"},"nativeSrc":"4388:84:36","nodeType":"YulIf","src":"4388:84:36"}]},"name":"extract_byte_array_length","nativeSrc":"4158:320:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4193:4:36","nodeType":"YulTypedName","src":"4193:4:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4202:6:36","nodeType":"YulTypedName","src":"4202:6:36","type":""}],"src":"4158:320:36"},{"body":{"nativeSrc":"4538:87:36","nodeType":"YulBlock","src":"4538:87:36","statements":[{"nativeSrc":"4548:11:36","nodeType":"YulAssignment","src":"4548:11:36","value":{"name":"ptr","nativeSrc":"4556:3:36","nodeType":"YulIdentifier","src":"4556:3:36"},"variableNames":[{"name":"data","nativeSrc":"4548:4:36","nodeType":"YulIdentifier","src":"4548:4:36"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4576:1:36","nodeType":"YulLiteral","src":"4576:1:36","type":"","value":"0"},{"name":"ptr","nativeSrc":"4579:3:36","nodeType":"YulIdentifier","src":"4579:3:36"}],"functionName":{"name":"mstore","nativeSrc":"4569:6:36","nodeType":"YulIdentifier","src":"4569:6:36"},"nativeSrc":"4569:14:36","nodeType":"YulFunctionCall","src":"4569:14:36"},"nativeSrc":"4569:14:36","nodeType":"YulExpressionStatement","src":"4569:14:36"},{"nativeSrc":"4592:26:36","nodeType":"YulAssignment","src":"4592:26:36","value":{"arguments":[{"kind":"number","nativeSrc":"4610:1:36","nodeType":"YulLiteral","src":"4610:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"4613:4:36","nodeType":"YulLiteral","src":"4613:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4600:9:36","nodeType":"YulIdentifier","src":"4600:9:36"},"nativeSrc":"4600:18:36","nodeType":"YulFunctionCall","src":"4600:18:36"},"variableNames":[{"name":"data","nativeSrc":"4592:4:36","nodeType":"YulIdentifier","src":"4592:4:36"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4484:141:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4525:3:36","nodeType":"YulTypedName","src":"4525:3:36","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4533:4:36","nodeType":"YulTypedName","src":"4533:4:36","type":""}],"src":"4484:141:36"},{"body":{"nativeSrc":"4675:49:36","nodeType":"YulBlock","src":"4675:49:36","statements":[{"nativeSrc":"4685:33:36","nodeType":"YulAssignment","src":"4685:33:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4703:5:36","nodeType":"YulIdentifier","src":"4703:5:36"},{"kind":"number","nativeSrc":"4710:2:36","nodeType":"YulLiteral","src":"4710:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4699:3:36","nodeType":"YulIdentifier","src":"4699:3:36"},"nativeSrc":"4699:14:36","nodeType":"YulFunctionCall","src":"4699:14:36"},{"kind":"number","nativeSrc":"4715:2:36","nodeType":"YulLiteral","src":"4715:2:36","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4695:3:36","nodeType":"YulIdentifier","src":"4695:3:36"},"nativeSrc":"4695:23:36","nodeType":"YulFunctionCall","src":"4695:23:36"},"variableNames":[{"name":"result","nativeSrc":"4685:6:36","nodeType":"YulIdentifier","src":"4685:6:36"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4631:93:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4658:5:36","nodeType":"YulTypedName","src":"4658:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4668:6:36","nodeType":"YulTypedName","src":"4668:6:36","type":""}],"src":"4631:93:36"},{"body":{"nativeSrc":"4783:54:36","nodeType":"YulBlock","src":"4783:54:36","statements":[{"nativeSrc":"4793:37:36","nodeType":"YulAssignment","src":"4793:37:36","value":{"arguments":[{"name":"bits","nativeSrc":"4818:4:36","nodeType":"YulIdentifier","src":"4818:4:36"},{"name":"value","nativeSrc":"4824:5:36","nodeType":"YulIdentifier","src":"4824:5:36"}],"functionName":{"name":"shl","nativeSrc":"4814:3:36","nodeType":"YulIdentifier","src":"4814:3:36"},"nativeSrc":"4814:16:36","nodeType":"YulFunctionCall","src":"4814:16:36"},"variableNames":[{"name":"newValue","nativeSrc":"4793:8:36","nodeType":"YulIdentifier","src":"4793:8:36"}]}]},"name":"shift_left_dynamic","nativeSrc":"4730:107:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4758:4:36","nodeType":"YulTypedName","src":"4758:4:36","type":""},{"name":"value","nativeSrc":"4764:5:36","nodeType":"YulTypedName","src":"4764:5:36","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4774:8:36","nodeType":"YulTypedName","src":"4774:8:36","type":""}],"src":"4730:107:36"},{"body":{"nativeSrc":"4919:317:36","nodeType":"YulBlock","src":"4919:317:36","statements":[{"nativeSrc":"4929:35:36","nodeType":"YulVariableDeclaration","src":"4929:35:36","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"4950:10:36","nodeType":"YulIdentifier","src":"4950:10:36"},{"kind":"number","nativeSrc":"4962:1:36","nodeType":"YulLiteral","src":"4962:1:36","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"4946:3:36","nodeType":"YulIdentifier","src":"4946:3:36"},"nativeSrc":"4946:18:36","nodeType":"YulFunctionCall","src":"4946:18:36"},"variables":[{"name":"shiftBits","nativeSrc":"4933:9:36","nodeType":"YulTypedName","src":"4933:9:36","type":""}]},{"nativeSrc":"4973:109:36","nodeType":"YulVariableDeclaration","src":"4973:109:36","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5004:9:36","nodeType":"YulIdentifier","src":"5004:9:36"},{"kind":"number","nativeSrc":"5015:66:36","nodeType":"YulLiteral","src":"5015:66:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4985:18:36","nodeType":"YulIdentifier","src":"4985:18:36"},"nativeSrc":"4985:97:36","nodeType":"YulFunctionCall","src":"4985:97:36"},"variables":[{"name":"mask","nativeSrc":"4977:4:36","nodeType":"YulTypedName","src":"4977:4:36","type":""}]},{"nativeSrc":"5091:51:36","nodeType":"YulAssignment","src":"5091:51:36","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5122:9:36","nodeType":"YulIdentifier","src":"5122:9:36"},{"name":"toInsert","nativeSrc":"5133:8:36","nodeType":"YulIdentifier","src":"5133:8:36"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5103:18:36","nodeType":"YulIdentifier","src":"5103:18:36"},"nativeSrc":"5103:39:36","nodeType":"YulFunctionCall","src":"5103:39:36"},"variableNames":[{"name":"toInsert","nativeSrc":"5091:8:36","nodeType":"YulIdentifier","src":"5091:8:36"}]},{"nativeSrc":"5151:30:36","nodeType":"YulAssignment","src":"5151:30:36","value":{"arguments":[{"name":"value","nativeSrc":"5164:5:36","nodeType":"YulIdentifier","src":"5164:5:36"},{"arguments":[{"name":"mask","nativeSrc":"5175:4:36","nodeType":"YulIdentifier","src":"5175:4:36"}],"functionName":{"name":"not","nativeSrc":"5171:3:36","nodeType":"YulIdentifier","src":"5171:3:36"},"nativeSrc":"5171:9:36","nodeType":"YulFunctionCall","src":"5171:9:36"}],"functionName":{"name":"and","nativeSrc":"5160:3:36","nodeType":"YulIdentifier","src":"5160:3:36"},"nativeSrc":"5160:21:36","nodeType":"YulFunctionCall","src":"5160:21:36"},"variableNames":[{"name":"value","nativeSrc":"5151:5:36","nodeType":"YulIdentifier","src":"5151:5:36"}]},{"nativeSrc":"5190:40:36","nodeType":"YulAssignment","src":"5190:40:36","value":{"arguments":[{"name":"value","nativeSrc":"5203:5:36","nodeType":"YulIdentifier","src":"5203:5:36"},{"arguments":[{"name":"toInsert","nativeSrc":"5214:8:36","nodeType":"YulIdentifier","src":"5214:8:36"},{"name":"mask","nativeSrc":"5224:4:36","nodeType":"YulIdentifier","src":"5224:4:36"}],"functionName":{"name":"and","nativeSrc":"5210:3:36","nodeType":"YulIdentifier","src":"5210:3:36"},"nativeSrc":"5210:19:36","nodeType":"YulFunctionCall","src":"5210:19:36"}],"functionName":{"name":"or","nativeSrc":"5200:2:36","nodeType":"YulIdentifier","src":"5200:2:36"},"nativeSrc":"5200:30:36","nodeType":"YulFunctionCall","src":"5200:30:36"},"variableNames":[{"name":"result","nativeSrc":"5190:6:36","nodeType":"YulIdentifier","src":"5190:6:36"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"4843:393:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4880:5:36","nodeType":"YulTypedName","src":"4880:5:36","type":""},{"name":"shiftBytes","nativeSrc":"4887:10:36","nodeType":"YulTypedName","src":"4887:10:36","type":""},{"name":"toInsert","nativeSrc":"4899:8:36","nodeType":"YulTypedName","src":"4899:8:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4912:6:36","nodeType":"YulTypedName","src":"4912:6:36","type":""}],"src":"4843:393:36"},{"body":{"nativeSrc":"5287:32:36","nodeType":"YulBlock","src":"5287:32:36","statements":[{"nativeSrc":"5297:16:36","nodeType":"YulAssignment","src":"5297:16:36","value":{"name":"value","nativeSrc":"5308:5:36","nodeType":"YulIdentifier","src":"5308:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"5297:7:36","nodeType":"YulIdentifier","src":"5297:7:36"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5242:77:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5269:5:36","nodeType":"YulTypedName","src":"5269:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5279:7:36","nodeType":"YulTypedName","src":"5279:7:36","type":""}],"src":"5242:77:36"},{"body":{"nativeSrc":"5357:28:36","nodeType":"YulBlock","src":"5357:28:36","statements":[{"nativeSrc":"5367:12:36","nodeType":"YulAssignment","src":"5367:12:36","value":{"name":"value","nativeSrc":"5374:5:36","nodeType":"YulIdentifier","src":"5374:5:36"},"variableNames":[{"name":"ret","nativeSrc":"5367:3:36","nodeType":"YulIdentifier","src":"5367:3:36"}]}]},"name":"identity","nativeSrc":"5325:60:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5343:5:36","nodeType":"YulTypedName","src":"5343:5:36","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5353:3:36","nodeType":"YulTypedName","src":"5353:3:36","type":""}],"src":"5325:60:36"},{"body":{"nativeSrc":"5451:82:36","nodeType":"YulBlock","src":"5451:82:36","statements":[{"nativeSrc":"5461:66:36","nodeType":"YulAssignment","src":"5461:66:36","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5519:5:36","nodeType":"YulIdentifier","src":"5519:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5501:17:36","nodeType":"YulIdentifier","src":"5501:17:36"},"nativeSrc":"5501:24:36","nodeType":"YulFunctionCall","src":"5501:24:36"}],"functionName":{"name":"identity","nativeSrc":"5492:8:36","nodeType":"YulIdentifier","src":"5492:8:36"},"nativeSrc":"5492:34:36","nodeType":"YulFunctionCall","src":"5492:34:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5474:17:36","nodeType":"YulIdentifier","src":"5474:17:36"},"nativeSrc":"5474:53:36","nodeType":"YulFunctionCall","src":"5474:53:36"},"variableNames":[{"name":"converted","nativeSrc":"5461:9:36","nodeType":"YulIdentifier","src":"5461:9:36"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5391:142:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5431:5:36","nodeType":"YulTypedName","src":"5431:5:36","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5441:9:36","nodeType":"YulTypedName","src":"5441:9:36","type":""}],"src":"5391:142:36"},{"body":{"nativeSrc":"5586:28:36","nodeType":"YulBlock","src":"5586:28:36","statements":[{"nativeSrc":"5596:12:36","nodeType":"YulAssignment","src":"5596:12:36","value":{"name":"value","nativeSrc":"5603:5:36","nodeType":"YulIdentifier","src":"5603:5:36"},"variableNames":[{"name":"ret","nativeSrc":"5596:3:36","nodeType":"YulIdentifier","src":"5596:3:36"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5539:75:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5572:5:36","nodeType":"YulTypedName","src":"5572:5:36","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5582:3:36","nodeType":"YulTypedName","src":"5582:3:36","type":""}],"src":"5539:75:36"},{"body":{"nativeSrc":"5696:193:36","nodeType":"YulBlock","src":"5696:193:36","statements":[{"nativeSrc":"5706:63:36","nodeType":"YulVariableDeclaration","src":"5706:63:36","value":{"arguments":[{"name":"value_0","nativeSrc":"5761:7:36","nodeType":"YulIdentifier","src":"5761:7:36"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5730:30:36","nodeType":"YulIdentifier","src":"5730:30:36"},"nativeSrc":"5730:39:36","nodeType":"YulFunctionCall","src":"5730:39:36"},"variables":[{"name":"convertedValue_0","nativeSrc":"5710:16:36","nodeType":"YulTypedName","src":"5710:16:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5785:4:36","nodeType":"YulIdentifier","src":"5785:4:36"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5825:4:36","nodeType":"YulIdentifier","src":"5825:4:36"}],"functionName":{"name":"sload","nativeSrc":"5819:5:36","nodeType":"YulIdentifier","src":"5819:5:36"},"nativeSrc":"5819:11:36","nodeType":"YulFunctionCall","src":"5819:11:36"},{"name":"offset","nativeSrc":"5832:6:36","nodeType":"YulIdentifier","src":"5832:6:36"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"5864:16:36","nodeType":"YulIdentifier","src":"5864:16:36"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"5840:23:36","nodeType":"YulIdentifier","src":"5840:23:36"},"nativeSrc":"5840:41:36","nodeType":"YulFunctionCall","src":"5840:41:36"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5791:27:36","nodeType":"YulIdentifier","src":"5791:27:36"},"nativeSrc":"5791:91:36","nodeType":"YulFunctionCall","src":"5791:91:36"}],"functionName":{"name":"sstore","nativeSrc":"5778:6:36","nodeType":"YulIdentifier","src":"5778:6:36"},"nativeSrc":"5778:105:36","nodeType":"YulFunctionCall","src":"5778:105:36"},"nativeSrc":"5778:105:36","nodeType":"YulExpressionStatement","src":"5778:105:36"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5620:269:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5673:4:36","nodeType":"YulTypedName","src":"5673:4:36","type":""},{"name":"offset","nativeSrc":"5679:6:36","nodeType":"YulTypedName","src":"5679:6:36","type":""},{"name":"value_0","nativeSrc":"5687:7:36","nodeType":"YulTypedName","src":"5687:7:36","type":""}],"src":"5620:269:36"},{"body":{"nativeSrc":"5944:24:36","nodeType":"YulBlock","src":"5944:24:36","statements":[{"nativeSrc":"5954:8:36","nodeType":"YulAssignment","src":"5954:8:36","value":{"kind":"number","nativeSrc":"5961:1:36","nodeType":"YulLiteral","src":"5961:1:36","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"5954:3:36","nodeType":"YulIdentifier","src":"5954:3:36"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"5895:73:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"5940:3:36","nodeType":"YulTypedName","src":"5940:3:36","type":""}],"src":"5895:73:36"},{"body":{"nativeSrc":"6027:136:36","nodeType":"YulBlock","src":"6027:136:36","statements":[{"nativeSrc":"6037:46:36","nodeType":"YulVariableDeclaration","src":"6037:46:36","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"6051:30:36","nodeType":"YulIdentifier","src":"6051:30:36"},"nativeSrc":"6051:32:36","nodeType":"YulFunctionCall","src":"6051:32:36"},"variables":[{"name":"zero_0","nativeSrc":"6041:6:36","nodeType":"YulTypedName","src":"6041:6:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6136:4:36","nodeType":"YulIdentifier","src":"6136:4:36"},{"name":"offset","nativeSrc":"6142:6:36","nodeType":"YulIdentifier","src":"6142:6:36"},{"name":"zero_0","nativeSrc":"6150:6:36","nodeType":"YulIdentifier","src":"6150:6:36"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6092:43:36","nodeType":"YulIdentifier","src":"6092:43:36"},"nativeSrc":"6092:65:36","nodeType":"YulFunctionCall","src":"6092:65:36"},"nativeSrc":"6092:65:36","nodeType":"YulExpressionStatement","src":"6092:65:36"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"5974:189:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6013:4:36","nodeType":"YulTypedName","src":"6013:4:36","type":""},{"name":"offset","nativeSrc":"6019:6:36","nodeType":"YulTypedName","src":"6019:6:36","type":""}],"src":"5974:189:36"},{"body":{"nativeSrc":"6219:136:36","nodeType":"YulBlock","src":"6219:136:36","statements":[{"body":{"nativeSrc":"6286:63:36","nodeType":"YulBlock","src":"6286:63:36","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6330:5:36","nodeType":"YulIdentifier","src":"6330:5:36"},{"kind":"number","nativeSrc":"6337:1:36","nodeType":"YulLiteral","src":"6337:1:36","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6300:29:36","nodeType":"YulIdentifier","src":"6300:29:36"},"nativeSrc":"6300:39:36","nodeType":"YulFunctionCall","src":"6300:39:36"},"nativeSrc":"6300:39:36","nodeType":"YulExpressionStatement","src":"6300:39:36"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6239:5:36","nodeType":"YulIdentifier","src":"6239:5:36"},{"name":"end","nativeSrc":"6246:3:36","nodeType":"YulIdentifier","src":"6246:3:36"}],"functionName":{"name":"lt","nativeSrc":"6236:2:36","nodeType":"YulIdentifier","src":"6236:2:36"},"nativeSrc":"6236:14:36","nodeType":"YulFunctionCall","src":"6236:14:36"},"nativeSrc":"6229:120:36","nodeType":"YulForLoop","post":{"nativeSrc":"6251:26:36","nodeType":"YulBlock","src":"6251:26:36","statements":[{"nativeSrc":"6253:22:36","nodeType":"YulAssignment","src":"6253:22:36","value":{"arguments":[{"name":"start","nativeSrc":"6266:5:36","nodeType":"YulIdentifier","src":"6266:5:36"},{"kind":"number","nativeSrc":"6273:1:36","nodeType":"YulLiteral","src":"6273:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6262:3:36","nodeType":"YulIdentifier","src":"6262:3:36"},"nativeSrc":"6262:13:36","nodeType":"YulFunctionCall","src":"6262:13:36"},"variableNames":[{"name":"start","nativeSrc":"6253:5:36","nodeType":"YulIdentifier","src":"6253:5:36"}]}]},"pre":{"nativeSrc":"6233:2:36","nodeType":"YulBlock","src":"6233:2:36","statements":[]},"src":"6229:120:36"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"6169:186:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"6207:5:36","nodeType":"YulTypedName","src":"6207:5:36","type":""},{"name":"end","nativeSrc":"6214:3:36","nodeType":"YulTypedName","src":"6214:3:36","type":""}],"src":"6169:186:36"},{"body":{"nativeSrc":"6440:464:36","nodeType":"YulBlock","src":"6440:464:36","statements":[{"body":{"nativeSrc":"6466:431:36","nodeType":"YulBlock","src":"6466:431:36","statements":[{"nativeSrc":"6480:54:36","nodeType":"YulVariableDeclaration","src":"6480:54:36","value":{"arguments":[{"name":"array","nativeSrc":"6528:5:36","nodeType":"YulIdentifier","src":"6528:5:36"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6496:31:36","nodeType":"YulIdentifier","src":"6496:31:36"},"nativeSrc":"6496:38:36","nodeType":"YulFunctionCall","src":"6496:38:36"},"variables":[{"name":"dataArea","nativeSrc":"6484:8:36","nodeType":"YulTypedName","src":"6484:8:36","type":""}]},{"nativeSrc":"6547:63:36","nodeType":"YulVariableDeclaration","src":"6547:63:36","value":{"arguments":[{"name":"dataArea","nativeSrc":"6570:8:36","nodeType":"YulIdentifier","src":"6570:8:36"},{"arguments":[{"name":"startIndex","nativeSrc":"6598:10:36","nodeType":"YulIdentifier","src":"6598:10:36"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6580:17:36","nodeType":"YulIdentifier","src":"6580:17:36"},"nativeSrc":"6580:29:36","nodeType":"YulFunctionCall","src":"6580:29:36"}],"functionName":{"name":"add","nativeSrc":"6566:3:36","nodeType":"YulIdentifier","src":"6566:3:36"},"nativeSrc":"6566:44:36","nodeType":"YulFunctionCall","src":"6566:44:36"},"variables":[{"name":"deleteStart","nativeSrc":"6551:11:36","nodeType":"YulTypedName","src":"6551:11:36","type":""}]},{"body":{"nativeSrc":"6767:27:36","nodeType":"YulBlock","src":"6767:27:36","statements":[{"nativeSrc":"6769:23:36","nodeType":"YulAssignment","src":"6769:23:36","value":{"name":"dataArea","nativeSrc":"6784:8:36","nodeType":"YulIdentifier","src":"6784:8:36"},"variableNames":[{"name":"deleteStart","nativeSrc":"6769:11:36","nodeType":"YulIdentifier","src":"6769:11:36"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6751:10:36","nodeType":"YulIdentifier","src":"6751:10:36"},{"kind":"number","nativeSrc":"6763:2:36","nodeType":"YulLiteral","src":"6763:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6748:2:36","nodeType":"YulIdentifier","src":"6748:2:36"},"nativeSrc":"6748:18:36","nodeType":"YulFunctionCall","src":"6748:18:36"},"nativeSrc":"6745:49:36","nodeType":"YulIf","src":"6745:49:36"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"6836:11:36","nodeType":"YulIdentifier","src":"6836:11:36"},{"arguments":[{"name":"dataArea","nativeSrc":"6853:8:36","nodeType":"YulIdentifier","src":"6853:8:36"},{"arguments":[{"name":"len","nativeSrc":"6881:3:36","nodeType":"YulIdentifier","src":"6881:3:36"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6863:17:36","nodeType":"YulIdentifier","src":"6863:17:36"},"nativeSrc":"6863:22:36","nodeType":"YulFunctionCall","src":"6863:22:36"}],"functionName":{"name":"add","nativeSrc":"6849:3:36","nodeType":"YulIdentifier","src":"6849:3:36"},"nativeSrc":"6849:37:36","nodeType":"YulFunctionCall","src":"6849:37:36"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6807:28:36","nodeType":"YulIdentifier","src":"6807:28:36"},"nativeSrc":"6807:80:36","nodeType":"YulFunctionCall","src":"6807:80:36"},"nativeSrc":"6807:80:36","nodeType":"YulExpressionStatement","src":"6807:80:36"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6457:3:36","nodeType":"YulIdentifier","src":"6457:3:36"},{"kind":"number","nativeSrc":"6462:2:36","nodeType":"YulLiteral","src":"6462:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6454:2:36","nodeType":"YulIdentifier","src":"6454:2:36"},"nativeSrc":"6454:11:36","nodeType":"YulFunctionCall","src":"6454:11:36"},"nativeSrc":"6451:446:36","nodeType":"YulIf","src":"6451:446:36"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6361:543:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6416:5:36","nodeType":"YulTypedName","src":"6416:5:36","type":""},{"name":"len","nativeSrc":"6423:3:36","nodeType":"YulTypedName","src":"6423:3:36","type":""},{"name":"startIndex","nativeSrc":"6428:10:36","nodeType":"YulTypedName","src":"6428:10:36","type":""}],"src":"6361:543:36"},{"body":{"nativeSrc":"6973:54:36","nodeType":"YulBlock","src":"6973:54:36","statements":[{"nativeSrc":"6983:37:36","nodeType":"YulAssignment","src":"6983:37:36","value":{"arguments":[{"name":"bits","nativeSrc":"7008:4:36","nodeType":"YulIdentifier","src":"7008:4:36"},{"name":"value","nativeSrc":"7014:5:36","nodeType":"YulIdentifier","src":"7014:5:36"}],"functionName":{"name":"shr","nativeSrc":"7004:3:36","nodeType":"YulIdentifier","src":"7004:3:36"},"nativeSrc":"7004:16:36","nodeType":"YulFunctionCall","src":"7004:16:36"},"variableNames":[{"name":"newValue","nativeSrc":"6983:8:36","nodeType":"YulIdentifier","src":"6983:8:36"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"6910:117:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"6948:4:36","nodeType":"YulTypedName","src":"6948:4:36","type":""},{"name":"value","nativeSrc":"6954:5:36","nodeType":"YulTypedName","src":"6954:5:36","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6964:8:36","nodeType":"YulTypedName","src":"6964:8:36","type":""}],"src":"6910:117:36"},{"body":{"nativeSrc":"7084:118:36","nodeType":"YulBlock","src":"7084:118:36","statements":[{"nativeSrc":"7094:68:36","nodeType":"YulVariableDeclaration","src":"7094:68:36","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7143:1:36","nodeType":"YulLiteral","src":"7143:1:36","type":"","value":"8"},{"name":"bytes","nativeSrc":"7146:5:36","nodeType":"YulIdentifier","src":"7146:5:36"}],"functionName":{"name":"mul","nativeSrc":"7139:3:36","nodeType":"YulIdentifier","src":"7139:3:36"},"nativeSrc":"7139:13:36","nodeType":"YulFunctionCall","src":"7139:13:36"},{"arguments":[{"kind":"number","nativeSrc":"7158:1:36","nodeType":"YulLiteral","src":"7158:1:36","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7154:3:36","nodeType":"YulIdentifier","src":"7154:3:36"},"nativeSrc":"7154:6:36","nodeType":"YulFunctionCall","src":"7154:6:36"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"7110:28:36","nodeType":"YulIdentifier","src":"7110:28:36"},"nativeSrc":"7110:51:36","nodeType":"YulFunctionCall","src":"7110:51:36"}],"functionName":{"name":"not","nativeSrc":"7106:3:36","nodeType":"YulIdentifier","src":"7106:3:36"},"nativeSrc":"7106:56:36","nodeType":"YulFunctionCall","src":"7106:56:36"},"variables":[{"name":"mask","nativeSrc":"7098:4:36","nodeType":"YulTypedName","src":"7098:4:36","type":""}]},{"nativeSrc":"7171:25:36","nodeType":"YulAssignment","src":"7171:25:36","value":{"arguments":[{"name":"data","nativeSrc":"7185:4:36","nodeType":"YulIdentifier","src":"7185:4:36"},{"name":"mask","nativeSrc":"7191:4:36","nodeType":"YulIdentifier","src":"7191:4:36"}],"functionName":{"name":"and","nativeSrc":"7181:3:36","nodeType":"YulIdentifier","src":"7181:3:36"},"nativeSrc":"7181:15:36","nodeType":"YulFunctionCall","src":"7181:15:36"},"variableNames":[{"name":"result","nativeSrc":"7171:6:36","nodeType":"YulIdentifier","src":"7171:6:36"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"7033:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7061:4:36","nodeType":"YulTypedName","src":"7061:4:36","type":""},{"name":"bytes","nativeSrc":"7067:5:36","nodeType":"YulTypedName","src":"7067:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7077:6:36","nodeType":"YulTypedName","src":"7077:6:36","type":""}],"src":"7033:169:36"},{"body":{"nativeSrc":"7288:214:36","nodeType":"YulBlock","src":"7288:214:36","statements":[{"nativeSrc":"7421:37:36","nodeType":"YulAssignment","src":"7421:37:36","value":{"arguments":[{"name":"data","nativeSrc":"7448:4:36","nodeType":"YulIdentifier","src":"7448:4:36"},{"name":"len","nativeSrc":"7454:3:36","nodeType":"YulIdentifier","src":"7454:3:36"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7429:18:36","nodeType":"YulIdentifier","src":"7429:18:36"},"nativeSrc":"7429:29:36","nodeType":"YulFunctionCall","src":"7429:29:36"},"variableNames":[{"name":"data","nativeSrc":"7421:4:36","nodeType":"YulIdentifier","src":"7421:4:36"}]},{"nativeSrc":"7467:29:36","nodeType":"YulAssignment","src":"7467:29:36","value":{"arguments":[{"name":"data","nativeSrc":"7478:4:36","nodeType":"YulIdentifier","src":"7478:4:36"},{"arguments":[{"kind":"number","nativeSrc":"7488:1:36","nodeType":"YulLiteral","src":"7488:1:36","type":"","value":"2"},{"name":"len","nativeSrc":"7491:3:36","nodeType":"YulIdentifier","src":"7491:3:36"}],"functionName":{"name":"mul","nativeSrc":"7484:3:36","nodeType":"YulIdentifier","src":"7484:3:36"},"nativeSrc":"7484:11:36","nodeType":"YulFunctionCall","src":"7484:11:36"}],"functionName":{"name":"or","nativeSrc":"7475:2:36","nodeType":"YulIdentifier","src":"7475:2:36"},"nativeSrc":"7475:21:36","nodeType":"YulFunctionCall","src":"7475:21:36"},"variableNames":[{"name":"used","nativeSrc":"7467:4:36","nodeType":"YulIdentifier","src":"7467:4:36"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7207:295:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7269:4:36","nodeType":"YulTypedName","src":"7269:4:36","type":""},{"name":"len","nativeSrc":"7275:3:36","nodeType":"YulTypedName","src":"7275:3:36","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7283:4:36","nodeType":"YulTypedName","src":"7283:4:36","type":""}],"src":"7207:295:36"},{"body":{"nativeSrc":"7599:1303:36","nodeType":"YulBlock","src":"7599:1303:36","statements":[{"nativeSrc":"7610:51:36","nodeType":"YulVariableDeclaration","src":"7610:51:36","value":{"arguments":[{"name":"src","nativeSrc":"7657:3:36","nodeType":"YulIdentifier","src":"7657:3:36"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7624:32:36","nodeType":"YulIdentifier","src":"7624:32:36"},"nativeSrc":"7624:37:36","nodeType":"YulFunctionCall","src":"7624:37:36"},"variables":[{"name":"newLen","nativeSrc":"7614:6:36","nodeType":"YulTypedName","src":"7614:6:36","type":""}]},{"body":{"nativeSrc":"7746:22:36","nodeType":"YulBlock","src":"7746:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7748:16:36","nodeType":"YulIdentifier","src":"7748:16:36"},"nativeSrc":"7748:18:36","nodeType":"YulFunctionCall","src":"7748:18:36"},"nativeSrc":"7748:18:36","nodeType":"YulExpressionStatement","src":"7748:18:36"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7718:6:36","nodeType":"YulIdentifier","src":"7718:6:36"},{"kind":"number","nativeSrc":"7726:18:36","nodeType":"YulLiteral","src":"7726:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7715:2:36","nodeType":"YulIdentifier","src":"7715:2:36"},"nativeSrc":"7715:30:36","nodeType":"YulFunctionCall","src":"7715:30:36"},"nativeSrc":"7712:56:36","nodeType":"YulIf","src":"7712:56:36"},{"nativeSrc":"7778:52:36","nodeType":"YulVariableDeclaration","src":"7778:52:36","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7824:4:36","nodeType":"YulIdentifier","src":"7824:4:36"}],"functionName":{"name":"sload","nativeSrc":"7818:5:36","nodeType":"YulIdentifier","src":"7818:5:36"},"nativeSrc":"7818:11:36","nodeType":"YulFunctionCall","src":"7818:11:36"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7792:25:36","nodeType":"YulIdentifier","src":"7792:25:36"},"nativeSrc":"7792:38:36","nodeType":"YulFunctionCall","src":"7792:38:36"},"variables":[{"name":"oldLen","nativeSrc":"7782:6:36","nodeType":"YulTypedName","src":"7782:6:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7923:4:36","nodeType":"YulIdentifier","src":"7923:4:36"},{"name":"oldLen","nativeSrc":"7929:6:36","nodeType":"YulIdentifier","src":"7929:6:36"},{"name":"newLen","nativeSrc":"7937:6:36","nodeType":"YulIdentifier","src":"7937:6:36"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7877:45:36","nodeType":"YulIdentifier","src":"7877:45:36"},"nativeSrc":"7877:67:36","nodeType":"YulFunctionCall","src":"7877:67:36"},"nativeSrc":"7877:67:36","nodeType":"YulExpressionStatement","src":"7877:67:36"},{"nativeSrc":"7954:18:36","nodeType":"YulVariableDeclaration","src":"7954:18:36","value":{"kind":"number","nativeSrc":"7971:1:36","nodeType":"YulLiteral","src":"7971:1:36","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"7958:9:36","nodeType":"YulTypedName","src":"7958:9:36","type":""}]},{"nativeSrc":"7982:17:36","nodeType":"YulAssignment","src":"7982:17:36","value":{"kind":"number","nativeSrc":"7995:4:36","nodeType":"YulLiteral","src":"7995:4:36","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"7982:9:36","nodeType":"YulIdentifier","src":"7982:9:36"}]},{"cases":[{"body":{"nativeSrc":"8046:611:36","nodeType":"YulBlock","src":"8046:611:36","statements":[{"nativeSrc":"8060:37:36","nodeType":"YulVariableDeclaration","src":"8060:37:36","value":{"arguments":[{"name":"newLen","nativeSrc":"8079:6:36","nodeType":"YulIdentifier","src":"8079:6:36"},{"arguments":[{"kind":"number","nativeSrc":"8091:4:36","nodeType":"YulLiteral","src":"8091:4:36","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"8087:3:36","nodeType":"YulIdentifier","src":"8087:3:36"},"nativeSrc":"8087:9:36","nodeType":"YulFunctionCall","src":"8087:9:36"}],"functionName":{"name":"and","nativeSrc":"8075:3:36","nodeType":"YulIdentifier","src":"8075:3:36"},"nativeSrc":"8075:22:36","nodeType":"YulFunctionCall","src":"8075:22:36"},"variables":[{"name":"loopEnd","nativeSrc":"8064:7:36","nodeType":"YulTypedName","src":"8064:7:36","type":""}]},{"nativeSrc":"8111:51:36","nodeType":"YulVariableDeclaration","src":"8111:51:36","value":{"arguments":[{"name":"slot","nativeSrc":"8157:4:36","nodeType":"YulIdentifier","src":"8157:4:36"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"8125:31:36","nodeType":"YulIdentifier","src":"8125:31:36"},"nativeSrc":"8125:37:36","nodeType":"YulFunctionCall","src":"8125:37:36"},"variables":[{"name":"dstPtr","nativeSrc":"8115:6:36","nodeType":"YulTypedName","src":"8115:6:36","type":""}]},{"nativeSrc":"8175:10:36","nodeType":"YulVariableDeclaration","src":"8175:10:36","value":{"kind":"number","nativeSrc":"8184:1:36","nodeType":"YulLiteral","src":"8184:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8179:1:36","nodeType":"YulTypedName","src":"8179:1:36","type":""}]},{"body":{"nativeSrc":"8243:163:36","nodeType":"YulBlock","src":"8243:163:36","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8268:6:36","nodeType":"YulIdentifier","src":"8268:6:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8286:3:36","nodeType":"YulIdentifier","src":"8286:3:36"},{"name":"srcOffset","nativeSrc":"8291:9:36","nodeType":"YulIdentifier","src":"8291:9:36"}],"functionName":{"name":"add","nativeSrc":"8282:3:36","nodeType":"YulIdentifier","src":"8282:3:36"},"nativeSrc":"8282:19:36","nodeType":"YulFunctionCall","src":"8282:19:36"}],"functionName":{"name":"mload","nativeSrc":"8276:5:36","nodeType":"YulIdentifier","src":"8276:5:36"},"nativeSrc":"8276:26:36","nodeType":"YulFunctionCall","src":"8276:26:36"}],"functionName":{"name":"sstore","nativeSrc":"8261:6:36","nodeType":"YulIdentifier","src":"8261:6:36"},"nativeSrc":"8261:42:36","nodeType":"YulFunctionCall","src":"8261:42:36"},"nativeSrc":"8261:42:36","nodeType":"YulExpressionStatement","src":"8261:42:36"},{"nativeSrc":"8320:24:36","nodeType":"YulAssignment","src":"8320:24:36","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8334:6:36","nodeType":"YulIdentifier","src":"8334:6:36"},{"kind":"number","nativeSrc":"8342:1:36","nodeType":"YulLiteral","src":"8342:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8330:3:36","nodeType":"YulIdentifier","src":"8330:3:36"},"nativeSrc":"8330:14:36","nodeType":"YulFunctionCall","src":"8330:14:36"},"variableNames":[{"name":"dstPtr","nativeSrc":"8320:6:36","nodeType":"YulIdentifier","src":"8320:6:36"}]},{"nativeSrc":"8361:31:36","nodeType":"YulAssignment","src":"8361:31:36","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8378:9:36","nodeType":"YulIdentifier","src":"8378:9:36"},{"kind":"number","nativeSrc":"8389:2:36","nodeType":"YulLiteral","src":"8389:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8374:3:36","nodeType":"YulIdentifier","src":"8374:3:36"},"nativeSrc":"8374:18:36","nodeType":"YulFunctionCall","src":"8374:18:36"},"variableNames":[{"name":"srcOffset","nativeSrc":"8361:9:36","nodeType":"YulIdentifier","src":"8361:9:36"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8209:1:36","nodeType":"YulIdentifier","src":"8209:1:36"},{"name":"loopEnd","nativeSrc":"8212:7:36","nodeType":"YulIdentifier","src":"8212:7:36"}],"functionName":{"name":"lt","nativeSrc":"8206:2:36","nodeType":"YulIdentifier","src":"8206:2:36"},"nativeSrc":"8206:14:36","nodeType":"YulFunctionCall","src":"8206:14:36"},"nativeSrc":"8198:208:36","nodeType":"YulForLoop","post":{"nativeSrc":"8221:21:36","nodeType":"YulBlock","src":"8221:21:36","statements":[{"nativeSrc":"8223:17:36","nodeType":"YulAssignment","src":"8223:17:36","value":{"arguments":[{"name":"i","nativeSrc":"8232:1:36","nodeType":"YulIdentifier","src":"8232:1:36"},{"kind":"number","nativeSrc":"8235:4:36","nodeType":"YulLiteral","src":"8235:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8228:3:36","nodeType":"YulIdentifier","src":"8228:3:36"},"nativeSrc":"8228:12:36","nodeType":"YulFunctionCall","src":"8228:12:36"},"variableNames":[{"name":"i","nativeSrc":"8223:1:36","nodeType":"YulIdentifier","src":"8223:1:36"}]}]},"pre":{"nativeSrc":"8202:3:36","nodeType":"YulBlock","src":"8202:3:36","statements":[]},"src":"8198:208:36"},{"body":{"nativeSrc":"8442:156:36","nodeType":"YulBlock","src":"8442:156:36","statements":[{"nativeSrc":"8460:43:36","nodeType":"YulVariableDeclaration","src":"8460:43:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8487:3:36","nodeType":"YulIdentifier","src":"8487:3:36"},{"name":"srcOffset","nativeSrc":"8492:9:36","nodeType":"YulIdentifier","src":"8492:9:36"}],"functionName":{"name":"add","nativeSrc":"8483:3:36","nodeType":"YulIdentifier","src":"8483:3:36"},"nativeSrc":"8483:19:36","nodeType":"YulFunctionCall","src":"8483:19:36"}],"functionName":{"name":"mload","nativeSrc":"8477:5:36","nodeType":"YulIdentifier","src":"8477:5:36"},"nativeSrc":"8477:26:36","nodeType":"YulFunctionCall","src":"8477:26:36"},"variables":[{"name":"lastValue","nativeSrc":"8464:9:36","nodeType":"YulTypedName","src":"8464:9:36","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8527:6:36","nodeType":"YulIdentifier","src":"8527:6:36"},{"arguments":[{"name":"lastValue","nativeSrc":"8554:9:36","nodeType":"YulIdentifier","src":"8554:9:36"},{"arguments":[{"name":"newLen","nativeSrc":"8569:6:36","nodeType":"YulIdentifier","src":"8569:6:36"},{"kind":"number","nativeSrc":"8577:4:36","nodeType":"YulLiteral","src":"8577:4:36","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8565:3:36","nodeType":"YulIdentifier","src":"8565:3:36"},"nativeSrc":"8565:17:36","nodeType":"YulFunctionCall","src":"8565:17:36"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8535:18:36","nodeType":"YulIdentifier","src":"8535:18:36"},"nativeSrc":"8535:48:36","nodeType":"YulFunctionCall","src":"8535:48:36"}],"functionName":{"name":"sstore","nativeSrc":"8520:6:36","nodeType":"YulIdentifier","src":"8520:6:36"},"nativeSrc":"8520:64:36","nodeType":"YulFunctionCall","src":"8520:64:36"},"nativeSrc":"8520:64:36","nodeType":"YulExpressionStatement","src":"8520:64:36"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8425:7:36","nodeType":"YulIdentifier","src":"8425:7:36"},{"name":"newLen","nativeSrc":"8434:6:36","nodeType":"YulIdentifier","src":"8434:6:36"}],"functionName":{"name":"lt","nativeSrc":"8422:2:36","nodeType":"YulIdentifier","src":"8422:2:36"},"nativeSrc":"8422:19:36","nodeType":"YulFunctionCall","src":"8422:19:36"},"nativeSrc":"8419:179:36","nodeType":"YulIf","src":"8419:179:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8618:4:36","nodeType":"YulIdentifier","src":"8618:4:36"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8632:6:36","nodeType":"YulIdentifier","src":"8632:6:36"},{"kind":"number","nativeSrc":"8640:1:36","nodeType":"YulLiteral","src":"8640:1:36","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8628:3:36","nodeType":"YulIdentifier","src":"8628:3:36"},"nativeSrc":"8628:14:36","nodeType":"YulFunctionCall","src":"8628:14:36"},{"kind":"number","nativeSrc":"8644:1:36","nodeType":"YulLiteral","src":"8644:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8624:3:36","nodeType":"YulIdentifier","src":"8624:3:36"},"nativeSrc":"8624:22:36","nodeType":"YulFunctionCall","src":"8624:22:36"}],"functionName":{"name":"sstore","nativeSrc":"8611:6:36","nodeType":"YulIdentifier","src":"8611:6:36"},"nativeSrc":"8611:36:36","nodeType":"YulFunctionCall","src":"8611:36:36"},"nativeSrc":"8611:36:36","nodeType":"YulExpressionStatement","src":"8611:36:36"}]},"nativeSrc":"8039:618:36","nodeType":"YulCase","src":"8039:618:36","value":{"kind":"number","nativeSrc":"8044:1:36","nodeType":"YulLiteral","src":"8044:1:36","type":"","value":"1"}},{"body":{"nativeSrc":"8674:222:36","nodeType":"YulBlock","src":"8674:222:36","statements":[{"nativeSrc":"8688:14:36","nodeType":"YulVariableDeclaration","src":"8688:14:36","value":{"kind":"number","nativeSrc":"8701:1:36","nodeType":"YulLiteral","src":"8701:1:36","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8692:5:36","nodeType":"YulTypedName","src":"8692:5:36","type":""}]},{"body":{"nativeSrc":"8725:67:36","nodeType":"YulBlock","src":"8725:67:36","statements":[{"nativeSrc":"8743:35:36","nodeType":"YulAssignment","src":"8743:35:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8762:3:36","nodeType":"YulIdentifier","src":"8762:3:36"},{"name":"srcOffset","nativeSrc":"8767:9:36","nodeType":"YulIdentifier","src":"8767:9:36"}],"functionName":{"name":"add","nativeSrc":"8758:3:36","nodeType":"YulIdentifier","src":"8758:3:36"},"nativeSrc":"8758:19:36","nodeType":"YulFunctionCall","src":"8758:19:36"}],"functionName":{"name":"mload","nativeSrc":"8752:5:36","nodeType":"YulIdentifier","src":"8752:5:36"},"nativeSrc":"8752:26:36","nodeType":"YulFunctionCall","src":"8752:26:36"},"variableNames":[{"name":"value","nativeSrc":"8743:5:36","nodeType":"YulIdentifier","src":"8743:5:36"}]}]},"condition":{"name":"newLen","nativeSrc":"8718:6:36","nodeType":"YulIdentifier","src":"8718:6:36"},"nativeSrc":"8715:77:36","nodeType":"YulIf","src":"8715:77:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8812:4:36","nodeType":"YulIdentifier","src":"8812:4:36"},{"arguments":[{"name":"value","nativeSrc":"8871:5:36","nodeType":"YulIdentifier","src":"8871:5:36"},{"name":"newLen","nativeSrc":"8878:6:36","nodeType":"YulIdentifier","src":"8878:6:36"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8818:52:36","nodeType":"YulIdentifier","src":"8818:52:36"},"nativeSrc":"8818:67:36","nodeType":"YulFunctionCall","src":"8818:67:36"}],"functionName":{"name":"sstore","nativeSrc":"8805:6:36","nodeType":"YulIdentifier","src":"8805:6:36"},"nativeSrc":"8805:81:36","nodeType":"YulFunctionCall","src":"8805:81:36"},"nativeSrc":"8805:81:36","nodeType":"YulExpressionStatement","src":"8805:81:36"}]},"nativeSrc":"8666:230:36","nodeType":"YulCase","src":"8666:230:36","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8019:6:36","nodeType":"YulIdentifier","src":"8019:6:36"},{"kind":"number","nativeSrc":"8027:2:36","nodeType":"YulLiteral","src":"8027:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8016:2:36","nodeType":"YulIdentifier","src":"8016:2:36"},"nativeSrc":"8016:14:36","nodeType":"YulFunctionCall","src":"8016:14:36"},"nativeSrc":"8009:887:36","nodeType":"YulSwitch","src":"8009:887:36"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7507:1395:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7588:4:36","nodeType":"YulTypedName","src":"7588:4:36","type":""},{"name":"src","nativeSrc":"7594:3:36","nodeType":"YulTypedName","src":"7594:3:36","type":""}],"src":"7507:1395:36"},{"body":{"nativeSrc":"8953:81:36","nodeType":"YulBlock","src":"8953:81:36","statements":[{"nativeSrc":"8963:65:36","nodeType":"YulAssignment","src":"8963:65:36","value":{"arguments":[{"name":"value","nativeSrc":"8978:5:36","nodeType":"YulIdentifier","src":"8978:5:36"},{"kind":"number","nativeSrc":"8985:42:36","nodeType":"YulLiteral","src":"8985:42:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8974:3:36","nodeType":"YulIdentifier","src":"8974:3:36"},"nativeSrc":"8974:54:36","nodeType":"YulFunctionCall","src":"8974:54:36"},"variableNames":[{"name":"cleaned","nativeSrc":"8963:7:36","nodeType":"YulIdentifier","src":"8963:7:36"}]}]},"name":"cleanup_t_uint160","nativeSrc":"8908:126:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8935:5:36","nodeType":"YulTypedName","src":"8935:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8945:7:36","nodeType":"YulTypedName","src":"8945:7:36","type":""}],"src":"8908:126:36"},{"body":{"nativeSrc":"9085:51:36","nodeType":"YulBlock","src":"9085:51:36","statements":[{"nativeSrc":"9095:35:36","nodeType":"YulAssignment","src":"9095:35:36","value":{"arguments":[{"name":"value","nativeSrc":"9124:5:36","nodeType":"YulIdentifier","src":"9124:5:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9106:17:36","nodeType":"YulIdentifier","src":"9106:17:36"},"nativeSrc":"9106:24:36","nodeType":"YulFunctionCall","src":"9106:24:36"},"variableNames":[{"name":"cleaned","nativeSrc":"9095:7:36","nodeType":"YulIdentifier","src":"9095:7:36"}]}]},"name":"cleanup_t_address","nativeSrc":"9040:96:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9067:5:36","nodeType":"YulTypedName","src":"9067:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9077:7:36","nodeType":"YulTypedName","src":"9077:7:36","type":""}],"src":"9040:96:36"},{"body":{"nativeSrc":"9207:53:36","nodeType":"YulBlock","src":"9207:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9224:3:36","nodeType":"YulIdentifier","src":"9224:3:36"},{"arguments":[{"name":"value","nativeSrc":"9247:5:36","nodeType":"YulIdentifier","src":"9247:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9229:17:36","nodeType":"YulIdentifier","src":"9229:17:36"},"nativeSrc":"9229:24:36","nodeType":"YulFunctionCall","src":"9229:24:36"}],"functionName":{"name":"mstore","nativeSrc":"9217:6:36","nodeType":"YulIdentifier","src":"9217:6:36"},"nativeSrc":"9217:37:36","nodeType":"YulFunctionCall","src":"9217:37:36"},"nativeSrc":"9217:37:36","nodeType":"YulExpressionStatement","src":"9217:37:36"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9142:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9195:5:36","nodeType":"YulTypedName","src":"9195:5:36","type":""},{"name":"pos","nativeSrc":"9202:3:36","nodeType":"YulTypedName","src":"9202:3:36","type":""}],"src":"9142:118:36"},{"body":{"nativeSrc":"9364:124:36","nodeType":"YulBlock","src":"9364:124:36","statements":[{"nativeSrc":"9374:26:36","nodeType":"YulAssignment","src":"9374:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"9386:9:36","nodeType":"YulIdentifier","src":"9386:9:36"},{"kind":"number","nativeSrc":"9397:2:36","nodeType":"YulLiteral","src":"9397:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9382:3:36","nodeType":"YulIdentifier","src":"9382:3:36"},"nativeSrc":"9382:18:36","nodeType":"YulFunctionCall","src":"9382:18:36"},"variableNames":[{"name":"tail","nativeSrc":"9374:4:36","nodeType":"YulIdentifier","src":"9374:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9454:6:36","nodeType":"YulIdentifier","src":"9454:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"9467:9:36","nodeType":"YulIdentifier","src":"9467:9:36"},{"kind":"number","nativeSrc":"9478:1:36","nodeType":"YulLiteral","src":"9478:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9463:3:36","nodeType":"YulIdentifier","src":"9463:3:36"},"nativeSrc":"9463:17:36","nodeType":"YulFunctionCall","src":"9463:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9410:43:36","nodeType":"YulIdentifier","src":"9410:43:36"},"nativeSrc":"9410:71:36","nodeType":"YulFunctionCall","src":"9410:71:36"},"nativeSrc":"9410:71:36","nodeType":"YulExpressionStatement","src":"9410:71:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9266:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9336:9:36","nodeType":"YulTypedName","src":"9336:9:36","type":""},{"name":"value0","nativeSrc":"9348:6:36","nodeType":"YulTypedName","src":"9348:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9359:4:36","nodeType":"YulTypedName","src":"9359:4:36","type":""}],"src":"9266:222:36"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516138793803806138798339818101604052810190610032919061032c565b338383816000908161004491906105f4565b50806001908161005491906105f4565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c09190610707565b60405180910390fd5b6100d8816100f160201b60201c565b5080600a90816100e891906105f4565b50505050610722565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61021e826101d5565b810181811067ffffffffffffffff8211171561023d5761023c6101e6565b5b80604052505050565b60006102506101b7565b905061025c8282610215565b919050565b600067ffffffffffffffff82111561027c5761027b6101e6565b5b610285826101d5565b9050602081019050919050565b60005b838110156102b0578082015181840152602081019050610295565b60008484015250505050565b60006102cf6102ca84610261565b610246565b9050828152602081018484840111156102eb576102ea6101d0565b5b6102f6848285610292565b509392505050565b600082601f830112610313576103126101cb565b5b81516103238482602086016102bc565b91505092915050565b600080600060608486031215610345576103446101c1565b5b600084015167ffffffffffffffff811115610363576103626101c6565b5b61036f868287016102fe565b935050602084015167ffffffffffffffff8111156103905761038f6101c6565b5b61039c868287016102fe565b925050604084015167ffffffffffffffff8111156103bd576103bc6101c6565b5b6103c9868287016102fe565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061042557607f821691505b602082108103610438576104376103de565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610463565b6104aa8683610463565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006104f16104ec6104e7846104c2565b6104cc565b6104c2565b9050919050565b6000819050919050565b61050b836104d6565b61051f610517826104f8565b848454610470565b825550505050565b600090565b610534610527565b61053f818484610502565b505050565b5b818110156105635761055860008261052c565b600181019050610545565b5050565b601f8211156105a8576105798161043e565b61058284610453565b81016020851015610591578190505b6105a561059d85610453565b830182610544565b50505b505050565b600082821c905092915050565b60006105cb600019846008026105ad565b1980831691505092915050565b60006105e483836105ba565b9150826002028217905092915050565b6105fd826103d3565b67ffffffffffffffff811115610616576106156101e6565b5b610620825461040d565b61062b828285610567565b600060209050601f83116001811461065e576000841561064c578287015190505b61065685826105d8565b8655506106be565b601f19841661066c8661043e565b60005b828110156106945784890151825560018201915060208501945060208101905061066f565b868310156106b157848901516106ad601f8916826105ba565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106f1826106c6565b9050919050565b610701816106e6565b82525050565b600060208201905061071c60008301846106f8565b92915050565b613148806107316000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb46514610350578063a901fe5e1461036c578063b88d4fde146103a1578063c87b56dd146103bd578063e985e9c5146103ed578063f2fde38b1461041d57610137565b806370a08231146102be578063715018a6146102ee5780638da5cb5b146102f857806393b16b451461031657806395d89b411461033257610137565b806342842e0e116100ff57806342842e0e146101f257806342eaa6f41461020e57806355f804b31461023e5780636352211e1461025a578063663b3e221461028a57610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806323b872dd146101d6575b600080fd5b610156600480360381019061015191906122bd565b610439565b6040516101639190612305565b60405180910390f35b61017461049a565b60405161018191906123b0565b60405180910390f35b6101a4600480360381019061019f9190612408565b61052c565b6040516101b19190612476565b60405180910390f35b6101d460048036038101906101cf91906124bd565b610548565b005b6101f060048036038101906101eb91906124fd565b61055e565b005b61020c600480360381019061020791906124fd565b610660565b005b61022860048036038101906102239190612685565b610680565b604051610235919061278a565b60405180910390f35b610258600480360381019061025391906127a5565b6107c6565b005b610274600480360381019061026f9190612408565b6107e1565b6040516102819190612476565b60405180910390f35b6102a4600480360381019061029f9190612408565b6107f3565b6040516102b59594939291906127ee565b60405180910390f35b6102d860048036038101906102d3919061284f565b610939565b6040516102e5919061278a565b60405180910390f35b6102f66109f3565b005b610300610a07565b60405161030d9190612476565b60405180910390f35b610330600480360381019061032b9190612408565b610a31565b005b61033a610b83565b60405161034791906123b0565b60405180910390f35b61036a600480360381019061036591906128a8565b610c15565b005b61038660048036038101906103819190612408565b610c2b565b604051610398969594939291906128e8565b60405180910390f35b6103bb60048036038101906103b691906129f8565b610e72565b005b6103d760048036038101906103d29190612408565b610e97565b6040516103e491906123b0565b60405180910390f35b61040760048036038101906104029190612a7b565b610faa565b6040516104149190612305565b60405180910390f35b6104376004803603810190610432919061284f565b61103e565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104935750610492826110c4565b5b9050919050565b6060600080546104a990612aea565b80601f01602080910402602001604051908101604052809291908181526020018280546104d590612aea565b80156105225780601f106104f757610100808354040283529160200191610522565b820191906000526020600020905b81548152906001019060200180831161050557829003601f168201915b5050505050905090565b6000610537826111a6565b506105418261122e565b9050919050565b61055a828261055561126b565b611273565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d05760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105c79190612476565b60405180910390fd5b60006105e483836105df61126b565b611285565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065a578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065193929190612b1b565b60405180910390fd5b50505050565b61067b83838360405180602001604052806000815250610e72565b505050565b600061068a61149f565b6106948883611526565b61069e828861161f565b6040518060a00160405280878152602001868152602001858152602001848152602001620f42408152506008600084815260200190815260200160002060008201518160000190816106f09190612cfe565b5060208201518160010190816107069190612cfe565b50604082015181600201556060820151816003015560808201518160040155905050876009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4d660303f3cf5c0e9d967870d281fc77f88bb1d50331ac1af95e18cce14ef1f98289620f42406040516107b093929190612e0b565b60405180910390a1819050979650505050505050565b6107ce61149f565b80600a90816107dd9190612cfe565b5050565b60006107ec826111a6565b9050919050565b600860205280600052604060002060009150905080600001805461081690612aea565b80601f016020809104026020016040519081016040528092919081815260200182805461084290612aea565b801561088f5780601f106108645761010080835404028352916020019161088f565b820191906000526020600020905b81548152906001019060200180831161087257829003601f168201915b5050505050908060010180546108a490612aea565b80601f01602080910402602001604051908101604052809291908181526020018280546108d090612aea565b801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b5050505050908060020154908060030154908060040154905085565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ac5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016109a39190612476565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109fb61149f565b610a05600061167b565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6009600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac990612eb4565b60405180910390fd5b6000600860008381526020019081526020016000206004015490506008600083815260200190815260200160002060008082016000610b1191906121f4565b600182016000610b2191906121f4565b6002820160009055600382016000905560048201600090555050610b4482611741565b7f35f384066bf07b6616bbf730515dc81145006942534dbfaa17eee53f248b532f823383604051610b7793929190612ed4565b60405180910390a15050565b606060018054610b9290612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbe90612aea565b8015610c0b5780601f10610be057610100808354040283529160200191610c0b565b820191906000526020600020905b815481529060010190602001808311610bee57829003601f168201915b5050505050905090565b610c27610c2061126b565b83836117c7565b5050565b606080600080600080600073ffffffffffffffffffffffffffffffffffffffff166009600089815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90612f57565b60405180910390fd5b6000600860008981526020019081526020016000206040518060a0016040529081600082018054610d0690612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3290612aea565b8015610d7f5780601f10610d5457610100808354040283529160200191610d7f565b820191906000526020600020905b815481529060010190602001808311610d6257829003601f168201915b50505050508152602001600182018054610d9890612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc490612aea565b8015610e115780601f10610de657610100808354040283529160200191610e11565b820191906000526020600020905b815481529060010190602001808311610df457829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481525050905080600001518160200151826040015183606001518460800151610e5c8d6107e1565b9650965096509650965096505091939550919395565b610e7d84848461055e565b610e91610e8861126b565b85858585611936565b50505050565b6060610ea2826111a6565b506000600660008481526020019081526020016000208054610ec390612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610eef90612aea565b8015610f3c5780601f10610f1157610100808354040283529160200191610f3c565b820191906000526020600020905b815481529060010190602001808311610f1f57829003601f168201915b505050505090506000610f4d611ae7565b90506000815103610f62578192505050610fa5565b600082511115610f97578082604051602001610f7f929190612fb3565b60405160208183030381529060405292505050610fa5565b610fa084611b79565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61104661149f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110b85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110af9190612476565b60405180910390fd5b6110c18161167b565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061118f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061119f575061119e82611be2565b5b9050919050565b6000806111b283611c4c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361122557826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161121c919061278a565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6112808383836001611c89565b505050565b60008061129184611c4c565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112d3576112d2818486611e4e565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461136457611315600085600080611c89565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146113e7576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6114a761126b565b73ffffffffffffffffffffffffffffffffffffffff166114c5610a07565b73ffffffffffffffffffffffffffffffffffffffff1614611524576114e861126b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161151b9190612476565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115985760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161158f9190612476565b60405180910390fd5b60006115a683836000611285565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461161a5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016116119190612476565b60405180910390fd5b505050565b8060066000848152602001908152602001600020908161163f9190612cfe565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161166f919061278a565b60405180910390a15050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006117506000836000611285565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117c357816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117ba919061278a565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361183857816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161182f9190612476565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516119299190612305565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611ae0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611995949392919061302c565b6020604051808303816000875af19250505080156119d157506040513d601f19601f820116820180604052508101906119ce919061308d565b60015b611a55573d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b506000815103611a4d57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a449190612476565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ade57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ad59190612476565b60405180910390fd5b505b5050505050565b6060600a8054611af690612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2290612aea565b8015611b6f5780601f10611b4457610100808354040283529160200191611b6f565b820191906000526020600020905b815481529060010190602001808311611b5257829003601f168201915b5050505050905090565b6060611b84826111a6565b506000611b8f611ae7565b90506000815111611baf5760405180602001604052806000815250611bda565b80611bb984611f12565b604051602001611bca929190612fb3565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611cc25750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611df6576000611cd2846111a6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611d3d57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611d505750611d4e8184610faa565b155b15611d9257826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611d899190612476565b60405180910390fd5b8115611df457838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611e59838383611fe0565b611f0d57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ece57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611ec5919061278a565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611f049291906130ba565b60405180910390fd5b505050565b606060006001611f21846120a1565b01905060008167ffffffffffffffff811115611f4057611f3f61255a565b5b6040519080825280601f01601f191660200182016040528015611f725781602001600182028036833780820191505090505b509050600082602001820190505b600115611fd5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611fc957611fc86130e3565b5b04945060008503611f80575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561209857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061205957506120588484610faa565b5b8061209757508273ffffffffffffffffffffffffffffffffffffffff1661207f8361122e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106120ff577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816120f5576120f46130e3565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061213c576d04ee2d6d415b85acef81000000008381612132576121316130e3565b5b0492506020810190505b662386f26fc10000831061216b57662386f26fc100008381612161576121606130e3565b5b0492506010810190505b6305f5e1008310612194576305f5e100838161218a576121896130e3565b5b0492506008810190505b61271083106121b95761271083816121af576121ae6130e3565b5b0492506004810190505b606483106121dc57606483816121d2576121d16130e3565b5b0492506002810190505b600a83106121eb576001810190505b80915050919050565b50805461220090612aea565b6000825580601f106122125750612231565b601f0160209004906000526020600020908101906122309190612234565b5b50565b5b8082111561224d576000816000905550600101612235565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61229a81612265565b81146122a557600080fd5b50565b6000813590506122b781612291565b92915050565b6000602082840312156122d3576122d261225b565b5b60006122e1848285016122a8565b91505092915050565b60008115159050919050565b6122ff816122ea565b82525050565b600060208201905061231a60008301846122f6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561235a57808201518184015260208101905061233f565b60008484015250505050565b6000601f19601f8301169050919050565b600061238282612320565b61238c818561232b565b935061239c81856020860161233c565b6123a581612366565b840191505092915050565b600060208201905081810360008301526123ca8184612377565b905092915050565b6000819050919050565b6123e5816123d2565b81146123f057600080fd5b50565b600081359050612402816123dc565b92915050565b60006020828403121561241e5761241d61225b565b5b600061242c848285016123f3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061246082612435565b9050919050565b61247081612455565b82525050565b600060208201905061248b6000830184612467565b92915050565b61249a81612455565b81146124a557600080fd5b50565b6000813590506124b781612491565b92915050565b600080604083850312156124d4576124d361225b565b5b60006124e2858286016124a8565b92505060206124f3858286016123f3565b9150509250929050565b6000806000606084860312156125165761251561225b565b5b6000612524868287016124a8565b9350506020612535868287016124a8565b9250506040612546868287016123f3565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61259282612366565b810181811067ffffffffffffffff821117156125b1576125b061255a565b5b80604052505050565b60006125c4612251565b90506125d08282612589565b919050565b600067ffffffffffffffff8211156125f0576125ef61255a565b5b6125f982612366565b9050602081019050919050565b82818337600083830152505050565b6000612628612623846125d5565b6125ba565b90508281526020810184848401111561264457612643612555565b5b61264f848285612606565b509392505050565b600082601f83011261266c5761266b612550565b5b813561267c848260208601612615565b91505092915050565b600080600080600080600060e0888a0312156126a4576126a361225b565b5b60006126b28a828b016124a8565b975050602088013567ffffffffffffffff8111156126d3576126d2612260565b5b6126df8a828b01612657565b965050604088013567ffffffffffffffff811115612700576126ff612260565b5b61270c8a828b01612657565b955050606088013567ffffffffffffffff81111561272d5761272c612260565b5b6127398a828b01612657565b945050608061274a8a828b016123f3565b93505060a061275b8a828b016123f3565b92505060c061276c8a828b016123f3565b91505092959891949750929550565b612784816123d2565b82525050565b600060208201905061279f600083018461277b565b92915050565b6000602082840312156127bb576127ba61225b565b5b600082013567ffffffffffffffff8111156127d9576127d8612260565b5b6127e584828501612657565b91505092915050565b600060a08201905081810360008301526128088188612377565b9050818103602083015261281c8187612377565b905061282b604083018661277b565b612838606083018561277b565b612845608083018461277b565b9695505050505050565b6000602082840312156128655761286461225b565b5b6000612873848285016124a8565b91505092915050565b612885816122ea565b811461289057600080fd5b50565b6000813590506128a28161287c565b92915050565b600080604083850312156128bf576128be61225b565b5b60006128cd858286016124a8565b92505060206128de85828601612893565b9150509250929050565b600060c08201905081810360008301526129028189612377565b905081810360208301526129168188612377565b9050612925604083018761277b565b612932606083018661277b565b61293f608083018561277b565b61294c60a0830184612467565b979650505050505050565b600067ffffffffffffffff8211156129725761297161255a565b5b61297b82612366565b9050602081019050919050565b600061299b61299684612957565b6125ba565b9050828152602081018484840111156129b7576129b6612555565b5b6129c2848285612606565b509392505050565b600082601f8301126129df576129de612550565b5b81356129ef848260208601612988565b91505092915050565b60008060008060808587031215612a1257612a1161225b565b5b6000612a20878288016124a8565b9450506020612a31878288016124a8565b9350506040612a42878288016123f3565b925050606085013567ffffffffffffffff811115612a6357612a62612260565b5b612a6f878288016129ca565b91505092959194509250565b60008060408385031215612a9257612a9161225b565b5b6000612aa0858286016124a8565b9250506020612ab1858286016124a8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612b0257607f821691505b602082108103612b1557612b14612abb565b5b50919050565b6000606082019050612b306000830186612467565b612b3d602083018561277b565b612b4a6040830184612467565b949350505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612bb47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612b77565b612bbe8683612b77565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612bfb612bf6612bf1846123d2565b612bd6565b6123d2565b9050919050565b6000819050919050565b612c1583612be0565b612c29612c2182612c02565b848454612b84565b825550505050565b600090565b612c3e612c31565b612c49818484612c0c565b505050565b5b81811015612c6d57612c62600082612c36565b600181019050612c4f565b5050565b601f821115612cb257612c8381612b52565b612c8c84612b67565b81016020851015612c9b578190505b612caf612ca785612b67565b830182612c4e565b50505b505050565b600082821c905092915050565b6000612cd560001984600802612cb7565b1980831691505092915050565b6000612cee8383612cc4565b9150826002028217905092915050565b612d0782612320565b67ffffffffffffffff811115612d2057612d1f61255a565b5b612d2a8254612aea565b612d35828285612c71565b600060209050601f831160018114612d685760008415612d56578287015190505b612d608582612ce2565b865550612dc8565b601f198416612d7686612b52565b60005b82811015612d9e57848901518255600182019150602085019450602081019050612d79565b86831015612dbb5784890151612db7601f891682612cc4565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b6000612df5612df0612deb84612dd0565b612bd6565b6123d2565b9050919050565b612e0581612dda565b82525050565b6000606082019050612e20600083018661277b565b612e2d6020830185612467565b612e3a6040830184612dfc565b949350505050565b7f4952654343657274696669636174653a2063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000612e9e60318361232b565b9150612ea982612e42565b604082019050919050565b60006020820190508181036000830152612ecd81612e91565b9050919050565b6000606082019050612ee9600083018661277b565b612ef66020830185612467565b612f03604083018461277b565b949350505050565b7f436572746966696361746520646f6573206e6f74206578697374000000000000600082015250565b6000612f41601a8361232b565b9150612f4c82612f0b565b602082019050919050565b60006020820190508181036000830152612f7081612f34565b9050919050565b600081905092915050565b6000612f8d82612320565b612f978185612f77565b9350612fa781856020860161233c565b80840191505092915050565b6000612fbf8285612f82565b9150612fcb8284612f82565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612ffe82612fd7565b6130088185612fe2565b935061301881856020860161233c565b61302181612366565b840191505092915050565b60006080820190506130416000830187612467565b61304e6020830186612467565b61305b604083018561277b565b818103606083015261306d8184612ff3565b905095945050505050565b60008151905061308781612291565b92915050565b6000602082840312156130a3576130a261225b565b5b60006130b184828501613078565b91505092915050565b60006040820190506130cf6000830185612467565b6130dc602083018461277b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212208f8249af9b29b6b8eb9045e19389014a879a7250f6d3121886782c5e811fb3f364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3879 CODESIZE SUB DUP1 PUSH2 0x3879 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST CALLER DUP4 DUP4 DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x44 SWAP2 SWAP1 PUSH2 0x5F4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x5F4 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8 DUP2 PUSH2 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0xA SWAP1 DUP2 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x5F4 JUMP JUMPDEST POP POP POP POP PUSH2 0x722 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21E DUP3 PUSH2 0x1D5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23D JUMPI PUSH2 0x23C PUSH2 0x1E6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250 PUSH2 0x1B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x25C DUP3 DUP3 PUSH2 0x215 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x1E6 JUMP JUMPDEST JUMPDEST PUSH2 0x285 DUP3 PUSH2 0x1D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x295 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF PUSH2 0x2CA DUP5 PUSH2 0x261 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2EB JUMPI PUSH2 0x2EA PUSH2 0x1D0 JUMP JUMPDEST JUMPDEST PUSH2 0x2F6 DUP5 DUP3 DUP6 PUSH2 0x292 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x313 JUMPI PUSH2 0x312 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x323 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x345 JUMPI PUSH2 0x344 PUSH2 0x1C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x363 JUMPI PUSH2 0x362 PUSH2 0x1C6 JUMP JUMPDEST JUMPDEST PUSH2 0x36F DUP7 DUP3 DUP8 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x390 JUMPI PUSH2 0x38F PUSH2 0x1C6 JUMP JUMPDEST JUMPDEST PUSH2 0x39C DUP7 DUP3 DUP8 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x1C6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C9 DUP7 DUP3 DUP8 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x425 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x3DE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x4AA DUP7 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F1 PUSH2 0x4EC PUSH2 0x4E7 DUP5 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50B DUP4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x51F PUSH2 0x517 DUP3 PUSH2 0x4F8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x470 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x534 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x53F DUP2 DUP5 DUP5 PUSH2 0x502 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x563 JUMPI PUSH2 0x558 PUSH1 0x0 DUP3 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x545 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x579 DUP2 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x582 DUP5 PUSH2 0x453 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x591 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5A5 PUSH2 0x59D DUP6 PUSH2 0x453 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x544 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5AD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 DUP4 DUP4 PUSH2 0x5BA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FD DUP3 PUSH2 0x3D3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x1E6 JUMP JUMPDEST JUMPDEST PUSH2 0x620 DUP3 SLOAD PUSH2 0x40D JUMP JUMPDEST PUSH2 0x62B DUP3 DUP3 DUP6 PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x65E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x64C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x656 DUP6 DUP3 PUSH2 0x5D8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x66C DUP7 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x694 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5BA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x6E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3148 DUP1 PUSH2 0x731 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xA901FE5E EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41D JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x93B16B45 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x332 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x42EAA6F4 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x663B3E22 EQ PUSH2 0x28A JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x9F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x493 JUMPI POP PUSH2 0x492 DUP3 PUSH2 0x10C4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4A9 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D5 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x522 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x522 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x505 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP3 PUSH2 0x11A6 JUMP JUMPDEST POP PUSH2 0x541 DUP3 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55A DUP3 DUP3 PUSH2 0x555 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x1273 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5E4 DUP4 DUP4 PUSH2 0x5DF PUSH2 0x126B JUMP JUMPDEST PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x651 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x67B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A PUSH2 0x149F JUMP JUMPDEST PUSH2 0x694 DUP9 DUP4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x69E DUP3 DUP9 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xF4240 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP8 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4D660303F3CF5C0E9D967870D281FC77F88BB1D50331AC1AF95E18CCE14EF1F9 DUP3 DUP10 PUSH3 0xF4240 PUSH1 0x40 MLOAD PUSH2 0x7B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x149F JUMP JUMPDEST DUP1 PUSH1 0xA SWAP1 DUP2 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EC DUP3 PUSH2 0x11A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x816 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x842 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x88F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x864 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x88F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x872 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x8A4 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D0 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x91D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x91D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x900 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB PUSH2 0x149F JUMP JUMPDEST PUSH2 0xA05 PUSH1 0x0 PUSH2 0x167B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC9 SWAP1 PUSH2 0x2EB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0xB44 DUP3 PUSH2 0x1741 JUMP JUMPDEST PUSH32 0x35F384066BF07B6616BBF730515DC81145006942534DBFAA17EEE53F248B532F DUP3 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xB77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB92 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBE SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC0B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC27 PUSH2 0xC20 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP4 PUSH2 0x17C7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x2F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xD06 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD32 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD7F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD54 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD7F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD62 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD98 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDC4 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE11 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDE6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE11 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDF4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0xE5C DUP14 PUSH2 0x7E1 JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH2 0xE7D DUP5 DUP5 DUP5 PUSH2 0x55E JUMP JUMPDEST PUSH2 0xE91 PUSH2 0xE88 PUSH2 0x126B JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1936 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEA2 DUP3 PUSH2 0x11A6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xEC3 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEEF SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF4D PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xF62 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xF97 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7F SWAP3 SWAP2 SWAP1 PUSH2 0x2FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0xFA0 DUP5 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C1 DUP2 PUSH2 0x167B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x118F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x119F JUMPI POP PUSH2 0x119E DUP3 PUSH2 0x1BE2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11B2 DUP4 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1225 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1280 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1291 DUP5 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12D3 JUMPI PUSH2 0x12D2 DUP2 DUP5 DUP7 PUSH2 0x1E4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1364 JUMPI PUSH2 0x1315 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E7 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14A7 PUSH2 0x126B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14C5 PUSH2 0xA07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1524 JUMPI PUSH2 0x14E8 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1598 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158F SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15A6 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x161A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x163F SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x166F SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1750 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17C3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BA SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1838 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1929 SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1AE0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1995 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19D1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x308D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A55 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A4D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A44 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1ADE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x1AF6 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B22 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B6F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B44 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B6F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B52 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B84 DUP3 PUSH2 0x11A6 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1B8F PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BDA JUMP JUMPDEST DUP1 PUSH2 0x1BB9 DUP5 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BCA SWAP3 SWAP2 SWAP1 PUSH2 0x2FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1CC2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DF6 JUMPI PUSH1 0x0 PUSH2 0x1CD2 DUP5 PUSH2 0x11A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D3D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D50 JUMPI POP PUSH2 0x1D4E DUP2 DUP5 PUSH2 0xFAA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D92 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D89 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1DF4 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E59 DUP4 DUP4 DUP4 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1F0D JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC5 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F04 SWAP3 SWAP2 SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1F21 DUP5 PUSH2 0x20A1 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F72 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1FD5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1FC9 JUMPI PUSH2 0x1FC8 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1F80 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2098 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2059 JUMPI POP PUSH2 0x2058 DUP5 DUP5 PUSH2 0xFAA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2097 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x207F DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x20FF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x213C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2132 JUMPI PUSH2 0x2131 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x216B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2161 JUMPI PUSH2 0x2160 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2194 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x218A JUMPI PUSH2 0x2189 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x21B9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x21AF JUMPI PUSH2 0x21AE PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x21DC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x21D2 JUMPI PUSH2 0x21D1 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x21EB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2200 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2212 JUMPI POP PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2230 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x224D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2235 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x2265 JUMP JUMPDEST DUP2 EQ PUSH2 0x22A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22B7 DUP2 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D3 JUMPI PUSH2 0x22D2 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E1 DUP5 DUP3 DUP6 ADD PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22FF DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x231A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x235A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x233F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2382 DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH2 0x238C DUP2 DUP6 PUSH2 0x232B JUMP JUMPDEST SWAP4 POP PUSH2 0x239C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x233C JUMP JUMPDEST PUSH2 0x23A5 DUP2 PUSH2 0x2366 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CA DUP2 DUP5 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E5 DUP2 PUSH2 0x23D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x23F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2402 DUP2 PUSH2 0x23DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH2 0x241D PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x242C DUP5 DUP3 DUP6 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 DUP3 PUSH2 0x2435 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2470 DUP2 PUSH2 0x2455 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x249A DUP2 PUSH2 0x2455 JUMP JUMPDEST DUP2 EQ PUSH2 0x24A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24B7 DUP2 PUSH2 0x2491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24D4 JUMPI PUSH2 0x24D3 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E2 DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24F3 DUP6 DUP3 DUP7 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2524 DUP7 DUP3 DUP8 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2535 DUP7 DUP3 DUP8 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2546 DUP7 DUP3 DUP8 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2592 DUP3 PUSH2 0x2366 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25B1 JUMPI PUSH2 0x25B0 PUSH2 0x255A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C4 PUSH2 0x2251 JUMP JUMPDEST SWAP1 POP PUSH2 0x25D0 DUP3 DUP3 PUSH2 0x2589 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25F0 JUMPI PUSH2 0x25EF PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH2 0x25F9 DUP3 PUSH2 0x2366 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2628 PUSH2 0x2623 DUP5 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2644 JUMPI PUSH2 0x2643 PUSH2 0x2555 JUMP JUMPDEST JUMPDEST PUSH2 0x264F DUP5 DUP3 DUP6 PUSH2 0x2606 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x266C JUMPI PUSH2 0x266B PUSH2 0x2550 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x267C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x26A4 JUMPI PUSH2 0x26A3 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26B2 DUP11 DUP3 DUP12 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D3 JUMPI PUSH2 0x26D2 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x26DF DUP11 DUP3 DUP12 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2700 JUMPI PUSH2 0x26FF PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x270C DUP11 DUP3 DUP12 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x272D JUMPI PUSH2 0x272C PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x2739 DUP11 DUP3 DUP12 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x274A DUP11 DUP3 DUP12 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x275B DUP11 DUP3 DUP12 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x276C DUP11 DUP3 DUP12 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x2784 DUP2 PUSH2 0x23D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x279F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x27E5 DUP5 DUP3 DUP6 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2808 DUP2 DUP9 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x281C DUP2 DUP8 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP PUSH2 0x282B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2838 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2845 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2865 JUMPI PUSH2 0x2864 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2873 DUP5 DUP3 DUP6 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2885 DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP2 EQ PUSH2 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28A2 DUP2 PUSH2 0x287C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28BF JUMPI PUSH2 0x28BE PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28CD DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28DE DUP6 DUP3 DUP7 ADD PUSH2 0x2893 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 DUP10 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2916 DUP2 DUP9 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP PUSH2 0x2925 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2932 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x293F PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x294C PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2972 JUMPI PUSH2 0x2971 PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH2 0x297B DUP3 PUSH2 0x2366 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299B PUSH2 0x2996 DUP5 PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x2555 JUMP JUMPDEST JUMPDEST PUSH2 0x29C2 DUP5 DUP3 DUP6 PUSH2 0x2606 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29DF JUMPI PUSH2 0x29DE PUSH2 0x2550 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29EF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2988 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A12 JUMPI PUSH2 0x2A11 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A20 DUP8 DUP3 DUP9 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A31 DUP8 DUP3 DUP9 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A42 DUP8 DUP3 DUP9 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A63 JUMPI PUSH2 0x2A62 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x2A6F DUP8 DUP3 DUP9 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A92 JUMPI PUSH2 0x2A91 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AA0 DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AB1 DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B02 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B15 JUMPI PUSH2 0x2B14 PUSH2 0x2ABB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B30 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2B4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2BB4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x2BBE DUP7 DUP4 PUSH2 0x2B77 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFB PUSH2 0x2BF6 PUSH2 0x2BF1 DUP5 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x23D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C15 DUP4 PUSH2 0x2BE0 JUMP JUMPDEST PUSH2 0x2C29 PUSH2 0x2C21 DUP3 PUSH2 0x2C02 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B84 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2C3E PUSH2 0x2C31 JUMP JUMPDEST PUSH2 0x2C49 DUP2 DUP5 DUP5 PUSH2 0x2C0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C6D JUMPI PUSH2 0x2C62 PUSH1 0x0 DUP3 PUSH2 0x2C36 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2CB2 JUMPI PUSH2 0x2C83 DUP2 PUSH2 0x2B52 JUMP JUMPDEST PUSH2 0x2C8C DUP5 PUSH2 0x2B67 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2C9B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2CAF PUSH2 0x2CA7 DUP6 PUSH2 0x2B67 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2C4E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CD5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2CB7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CEE DUP4 DUP4 PUSH2 0x2CC4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D07 DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D20 JUMPI PUSH2 0x2D1F PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH2 0x2D2A DUP3 SLOAD PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x2D35 DUP3 DUP3 DUP6 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2D68 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2D56 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2D60 DUP6 DUP3 PUSH2 0x2CE2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2D76 DUP7 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D9E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D79 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2DBB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2DB7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2CC4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DF5 PUSH2 0x2DF0 PUSH2 0x2DEB DUP5 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x23D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E05 DUP2 PUSH2 0x2DDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E20 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2E2D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x2E3A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2DFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4952654343657274696669636174653A2063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9E PUSH1 0x31 DUP4 PUSH2 0x232B JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA9 DUP3 PUSH2 0x2E42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ECD DUP2 PUSH2 0x2E91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EE9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2EF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x2F03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436572746966696361746520646F6573206E6F74206578697374000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F41 PUSH1 0x1A DUP4 PUSH2 0x232B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4C DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F70 DUP2 PUSH2 0x2F34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8D DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH2 0x2F97 DUP2 DUP6 PUSH2 0x2F77 JUMP JUMPDEST SWAP4 POP PUSH2 0x2FA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x233C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBF DUP3 DUP6 PUSH2 0x2F82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCB DUP3 DUP5 PUSH2 0x2F82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FFE DUP3 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x3008 DUP2 DUP6 PUSH2 0x2FE2 JUMP JUMPDEST SWAP4 POP PUSH2 0x3018 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x233C JUMP JUMPDEST PUSH2 0x3021 DUP2 PUSH2 0x2366 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3041 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x304E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x305B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x306D DUP2 DUP5 PUSH2 0x2FF3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3087 DUP2 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A3 JUMPI PUSH2 0x30A2 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30B1 DUP5 DUP3 DUP6 ADD PUSH2 0x3078 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x30CF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x30DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 DUP3 BLOBHASH 0xAF SWAP12 0x29 0xB6 0xB8 0xEB SWAP1 GASLIMIT 0xE1 SWAP4 DUP10 ADD BLOBBASEFEE DUP8 SWAP11 PUSH19 0x50F6D3121886782C5E811FB3F364736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"290:3814:34:-:0;;;1004:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1117:10;1095:4;1101:6;1454:5:11;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1154:14:34::2;1139:12;:29;;;;;;:::i;:::-;;1004:171:::0;;;290:3814;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:36:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:1182::-;2797:6;2805;2813;2862:2;2850:9;2841:7;2837:23;2833:32;2830:119;;;2868:79;;:::i;:::-;2830:119;3009:1;2998:9;2994:17;2988:24;3039:18;3031:6;3028:30;3025:117;;;3061:79;;:::i;:::-;3025:117;3166:74;3232:7;3223:6;3212:9;3208:22;3166:74;:::i;:::-;3156:84;;2959:291;3310:2;3299:9;3295:18;3289:25;3341:18;3333:6;3330:30;3327:117;;;3363:79;;:::i;:::-;3327:117;3468:74;3534:7;3525:6;3514:9;3510:22;3468:74;:::i;:::-;3458:84;;3260:292;3612:2;3601:9;3597:18;3591:25;3643:18;3635:6;3632:30;3629:117;;;3665:79;;:::i;:::-;3629:117;3770:74;3836:7;3827:6;3816:9;3812:22;3770:74;:::i;:::-;3760:84;;3562:292;2679:1182;;;;;:::o;3867:99::-;3919:6;3953:5;3947:12;3937:22;;3867:99;;;:::o;3972:180::-;4020:77;4017:1;4010:88;4117:4;4114:1;4107:15;4141:4;4138:1;4131:15;4158:320;4202:6;4239:1;4233:4;4229:12;4219:22;;4286:1;4280:4;4276:12;4307:18;4297:81;;4363:4;4355:6;4351:17;4341:27;;4297:81;4425:2;4417:6;4414:14;4394:18;4391:38;4388:84;;4444:18;;:::i;:::-;4388:84;4209:269;4158:320;;;:::o;4484:141::-;4533:4;4556:3;4548:11;;4579:3;4576:1;4569:14;4613:4;4610:1;4600:18;4592:26;;4484:141;;;:::o;4631:93::-;4668:6;4715:2;4710;4703:5;4699:14;4695:23;4685:33;;4631:93;;;:::o;4730:107::-;4774:8;4824:5;4818:4;4814:16;4793:37;;4730:107;;;;:::o;4843:393::-;4912:6;4962:1;4950:10;4946:18;4985:97;5015:66;5004:9;4985:97;:::i;:::-;5103:39;5133:8;5122:9;5103:39;:::i;:::-;5091:51;;5175:4;5171:9;5164:5;5160:21;5151:30;;5224:4;5214:8;5210:19;5203:5;5200:30;5190:40;;4919:317;;4843:393;;;;;:::o;5242:77::-;5279:7;5308:5;5297:16;;5242:77;;;:::o;5325:60::-;5353:3;5374:5;5367:12;;5325:60;;;:::o;5391:142::-;5441:9;5474:53;5492:34;5501:24;5519:5;5501:24;:::i;:::-;5492:34;:::i;:::-;5474:53;:::i;:::-;5461:66;;5391:142;;;:::o;5539:75::-;5582:3;5603:5;5596:12;;5539:75;;;:::o;5620:269::-;5730:39;5761:7;5730:39;:::i;:::-;5791:91;5840:41;5864:16;5840:41;:::i;:::-;5832:6;5825:4;5819:11;5791:91;:::i;:::-;5785:4;5778:105;5696:193;5620:269;;;:::o;5895:73::-;5940:3;5895:73;:::o;5974:189::-;6051:32;;:::i;:::-;6092:65;6150:6;6142;6136:4;6092:65;:::i;:::-;6027:136;5974:189;;:::o;6169:186::-;6229:120;6246:3;6239:5;6236:14;6229:120;;;6300:39;6337:1;6330:5;6300:39;:::i;:::-;6273:1;6266:5;6262:13;6253:22;;6229:120;;;6169:186;;:::o;6361:543::-;6462:2;6457:3;6454:11;6451:446;;;6496:38;6528:5;6496:38;:::i;:::-;6580:29;6598:10;6580:29;:::i;:::-;6570:8;6566:44;6763:2;6751:10;6748:18;6745:49;;;6784:8;6769:23;;6745:49;6807:80;6863:22;6881:3;6863:22;:::i;:::-;6853:8;6849:37;6836:11;6807:80;:::i;:::-;6466:431;;6451:446;6361:543;;;:::o;6910:117::-;6964:8;7014:5;7008:4;7004:16;6983:37;;6910:117;;;;:::o;7033:169::-;7077:6;7110:51;7158:1;7154:6;7146:5;7143:1;7139:13;7110:51;:::i;:::-;7106:56;7191:4;7185;7181:15;7171:25;;7084:118;7033:169;;;;:::o;7207:295::-;7283:4;7429:29;7454:3;7448:4;7429:29;:::i;:::-;7421:37;;7491:3;7488:1;7484:11;7478:4;7475:21;7467:29;;7207:295;;;;:::o;7507:1395::-;7624:37;7657:3;7624:37;:::i;:::-;7726:18;7718:6;7715:30;7712:56;;;7748:18;;:::i;:::-;7712:56;7792:38;7824:4;7818:11;7792:38;:::i;:::-;7877:67;7937:6;7929;7923:4;7877:67;:::i;:::-;7971:1;7995:4;7982:17;;8027:2;8019:6;8016:14;8044:1;8039:618;;;;8701:1;8718:6;8715:77;;;8767:9;8762:3;8758:19;8752:26;8743:35;;8715:77;8818:67;8878:6;8871:5;8818:67;:::i;:::-;8812:4;8805:81;8674:222;8009:887;;8039:618;8091:4;8087:9;8079:6;8075:22;8125:37;8157:4;8125:37;:::i;:::-;8184:1;8198:208;8212:7;8209:1;8206:14;8198:208;;;8291:9;8286:3;8282:19;8276:26;8268:6;8261:42;8342:1;8334:6;8330:14;8320:24;;8389:2;8378:9;8374:18;8361:31;;8235:4;8232:1;8228:12;8223:17;;8198:208;;;8434:6;8425:7;8422:19;8419:179;;;8492:9;8487:3;8483:19;8477:26;8535:48;8577:4;8569:6;8565:17;8554:9;8535:48;:::i;:::-;8527:6;8520:64;8442:156;8419:179;8644:1;8640;8632:6;8628:14;8624:22;8618:4;8611:36;8046:611;;;8009:887;;7599:1303;;;7507:1395;;:::o;8908:126::-;8945:7;8985:42;8978:5;8974:54;8963:65;;8908:126;;;:::o;9040:96::-;9077:7;9106:24;9124:5;9106:24;:::i;:::-;9095:35;;9040:96;;;:::o;9142:118::-;9229:24;9247:5;9229:24;:::i;:::-;9224:3;9217:37;9142:118;;:::o;9266:222::-;9359:4;9397:2;9386:9;9382:18;9374:26;;9410:71;9478:1;9467:9;9463:17;9454:6;9410:71;:::i;:::-;9266:222;;;;:::o;290:3814:34:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1974":{"entryPoint":4723,"id":1974,"parameterSlots":3,"returnSlots":0},"@_approve_2040":{"entryPoint":7305,"id":2040,"parameterSlots":4,"returnSlots":0},"@_baseURI_8676":{"entryPoint":6887,"id":8676,"parameterSlots":0,"returnSlots":1},"@_burn_1848":{"entryPoint":5953,"id":1848,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_1614":{"entryPoint":7758,"id":1614,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":5279,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1541":{"entryPoint":4654,"id":1541,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1577":{"entryPoint":8160,"id":1577,"parameterSlots":3,"returnSlots":1},"@_mint_1770":{"entryPoint":5414,"id":1770,"parameterSlots":2,"returnSlots":0},"@_msgSender_2512":{"entryPoint":4715,"id":2512,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1528":{"entryPoint":7244,"id":1528,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2106":{"entryPoint":4518,"id":2106,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_2077":{"entryPoint":6087,"id":2077,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2367":{"entryPoint":5663,"id":2367,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5755,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1720":{"entryPoint":4741,"id":1720,"parameterSlots":3,"returnSlots":1},"@approve_1371":{"entryPoint":1352,"id":1371,"parameterSlots":2,"returnSlots":0},"@balanceOf_1279":{"entryPoint":2361,"id":1279,"parameterSlots":1,"returnSlots":1},"@burnCertificate_8788":{"entryPoint":2609,"id":8788,"parameterSlots":1,"returnSlots":0},"@certificates_8618":{"entryPoint":2035,"id":8618,"parameterSlots":0,"returnSlots":0},"@checkOnERC721Received_2499":{"entryPoint":6454,"id":2499,"parameterSlots":5,"returnSlots":0},"@getApproved_1388":{"entryPoint":1324,"id":1388,"parameterSlots":1,"returnSlots":1},"@getCertificateDetails_8841":{"entryPoint":3115,"id":8841,"parameterSlots":1,"returnSlots":6},"@isApprovedForAll_1421":{"entryPoint":4010,"id":1421,"parameterSlots":2,"returnSlots":1},"@log10_6323":{"entryPoint":8353,"id":6323,"parameterSlots":1,"returnSlots":1},"@mintCertificate_8748":{"entryPoint":1664,"id":8748,"parameterSlots":7,"returnSlots":1},"@name_1301":{"entryPoint":1178,"id":1301,"parameterSlots":0,"returnSlots":1},"@ownerOf_1292":{"entryPoint":2017,"id":1292,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2567,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2547,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1485":{"entryPoint":1632,"id":1485,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1515":{"entryPoint":3698,"id":1515,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1404":{"entryPoint":3093,"id":1404,"parameterSlots":2,"returnSlots":0},"@setBaseURI_8689":{"entryPoint":1990,"id":8689,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1251":{"entryPoint":4292,"id":1251,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2291":{"entryPoint":1081,"id":2291,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4932":{"entryPoint":7138,"id":4932,"parameterSlots":1,"returnSlots":1},"@symbol_1310":{"entryPoint":2947,"id":1310,"parameterSlots":0,"returnSlots":1},"@toString_3138":{"entryPoint":7954,"id":3138,"parameterSlots":1,"returnSlots":1},"@tokenURI_1346":{"entryPoint":7033,"id":1346,"parameterSlots":1,"returnSlots":1},"@tokenURI_2348":{"entryPoint":3735,"id":2348,"parameterSlots":1,"returnSlots":1},"@transferFrom_1467":{"entryPoint":1374,"id":1467,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":4158,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":10632,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":9749,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":8872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":10698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":9815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10319,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10875,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9469,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":10744,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10408,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256":{"entryPoint":9861,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9405,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":8893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":10149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9319,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack":{"entryPoint":11772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b_to_t_string_memory_ptr_fromStack":{"entryPoint":11921,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf_to_t_string_memory_ptr_fromStack":{"entryPoint":12084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10107,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12211,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12332,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":12474,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":11035,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10222,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":10472,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11956,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_rational_1000000_by_1__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":11787,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":11988,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":9658,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8785,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":10583,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":9685,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":11090,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12247,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8992,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12258,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9003,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12151,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":11377,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9301,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8938,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8805,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1000000_by_1":{"entryPoint":11728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9269,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9170,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":11342,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1000000_by_1_to_t_uint256":{"entryPoint":11738,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":11232,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11518,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9734,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9020,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":11111,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10986,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":11490,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9609,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11222,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":11460,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":12515,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10939,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9562,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":11266,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9552,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9557,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8800,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8795,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9062,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":11127,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":11447,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":11318,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b":{"entryPoint":11842,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf":{"entryPoint":12043,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":11140,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":11276,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9361,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10364,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8849,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9180,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":11313,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:27657:36","nodeType":"YulBlock","src":"0:27657:36","statements":[{"body":{"nativeSrc":"47:35:36","nodeType":"YulBlock","src":"47:35:36","statements":[{"nativeSrc":"57:19:36","nodeType":"YulAssignment","src":"57:19:36","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:36","nodeType":"YulLiteral","src":"73:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:36","nodeType":"YulIdentifier","src":"67:5:36"},"nativeSrc":"67:9:36","nodeType":"YulFunctionCall","src":"67:9:36"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:36","nodeType":"YulIdentifier","src":"57:6:36"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:36","nodeType":"YulTypedName","src":"40:6:36","type":""}],"src":"7:75:36"},{"body":{"nativeSrc":"177:28:36","nodeType":"YulBlock","src":"177:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:36","nodeType":"YulLiteral","src":"194:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:36","nodeType":"YulLiteral","src":"197:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:36","nodeType":"YulIdentifier","src":"187:6:36"},"nativeSrc":"187:12:36","nodeType":"YulFunctionCall","src":"187:12:36"},"nativeSrc":"187:12:36","nodeType":"YulExpressionStatement","src":"187:12:36"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:36","nodeType":"YulFunctionDefinition","src":"88:117:36"},{"body":{"nativeSrc":"300:28:36","nodeType":"YulBlock","src":"300:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:36","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:36","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:36","nodeType":"YulIdentifier","src":"310:6:36"},"nativeSrc":"310:12:36","nodeType":"YulFunctionCall","src":"310:12:36"},"nativeSrc":"310:12:36","nodeType":"YulExpressionStatement","src":"310:12:36"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:36","nodeType":"YulFunctionDefinition","src":"211:117:36"},{"body":{"nativeSrc":"378:105:36","nodeType":"YulBlock","src":"378:105:36","statements":[{"nativeSrc":"388:89:36","nodeType":"YulAssignment","src":"388:89:36","value":{"arguments":[{"name":"value","nativeSrc":"403:5:36","nodeType":"YulIdentifier","src":"403:5:36"},{"kind":"number","nativeSrc":"410:66:36","nodeType":"YulLiteral","src":"410:66:36","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:36","nodeType":"YulIdentifier","src":"399:3:36"},"nativeSrc":"399:78:36","nodeType":"YulFunctionCall","src":"399:78:36"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:36","nodeType":"YulIdentifier","src":"388:7:36"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:36","nodeType":"YulTypedName","src":"360:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:36","nodeType":"YulTypedName","src":"370:7:36","type":""}],"src":"334:149:36"},{"body":{"nativeSrc":"531:78:36","nodeType":"YulBlock","src":"531:78:36","statements":[{"body":{"nativeSrc":"587:16:36","nodeType":"YulBlock","src":"587:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:36","nodeType":"YulLiteral","src":"596:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:36","nodeType":"YulLiteral","src":"599:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:36","nodeType":"YulIdentifier","src":"589:6:36"},"nativeSrc":"589:12:36","nodeType":"YulFunctionCall","src":"589:12:36"},"nativeSrc":"589:12:36","nodeType":"YulExpressionStatement","src":"589:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:36","nodeType":"YulIdentifier","src":"554:5:36"},{"arguments":[{"name":"value","nativeSrc":"578:5:36","nodeType":"YulIdentifier","src":"578:5:36"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:36","nodeType":"YulIdentifier","src":"561:16:36"},"nativeSrc":"561:23:36","nodeType":"YulFunctionCall","src":"561:23:36"}],"functionName":{"name":"eq","nativeSrc":"551:2:36","nodeType":"YulIdentifier","src":"551:2:36"},"nativeSrc":"551:34:36","nodeType":"YulFunctionCall","src":"551:34:36"}],"functionName":{"name":"iszero","nativeSrc":"544:6:36","nodeType":"YulIdentifier","src":"544:6:36"},"nativeSrc":"544:42:36","nodeType":"YulFunctionCall","src":"544:42:36"},"nativeSrc":"541:62:36","nodeType":"YulIf","src":"541:62:36"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:36","nodeType":"YulTypedName","src":"524:5:36","type":""}],"src":"489:120:36"},{"body":{"nativeSrc":"666:86:36","nodeType":"YulBlock","src":"666:86:36","statements":[{"nativeSrc":"676:29:36","nodeType":"YulAssignment","src":"676:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:36","nodeType":"YulIdentifier","src":"698:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:36","nodeType":"YulIdentifier","src":"685:12:36"},"nativeSrc":"685:20:36","nodeType":"YulFunctionCall","src":"685:20:36"},"variableNames":[{"name":"value","nativeSrc":"676:5:36","nodeType":"YulIdentifier","src":"676:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:36","nodeType":"YulIdentifier","src":"740:5:36"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:36","nodeType":"YulIdentifier","src":"714:25:36"},"nativeSrc":"714:32:36","nodeType":"YulFunctionCall","src":"714:32:36"},"nativeSrc":"714:32:36","nodeType":"YulExpressionStatement","src":"714:32:36"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:36","nodeType":"YulTypedName","src":"644:6:36","type":""},{"name":"end","nativeSrc":"652:3:36","nodeType":"YulTypedName","src":"652:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:36","nodeType":"YulTypedName","src":"660:5:36","type":""}],"src":"615:137:36"},{"body":{"nativeSrc":"823:262:36","nodeType":"YulBlock","src":"823:262:36","statements":[{"body":{"nativeSrc":"869:83:36","nodeType":"YulBlock","src":"869:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:36","nodeType":"YulIdentifier","src":"871:77:36"},"nativeSrc":"871:79:36","nodeType":"YulFunctionCall","src":"871:79:36"},"nativeSrc":"871:79:36","nodeType":"YulExpressionStatement","src":"871:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:36","nodeType":"YulIdentifier","src":"844:7:36"},{"name":"headStart","nativeSrc":"853:9:36","nodeType":"YulIdentifier","src":"853:9:36"}],"functionName":{"name":"sub","nativeSrc":"840:3:36","nodeType":"YulIdentifier","src":"840:3:36"},"nativeSrc":"840:23:36","nodeType":"YulFunctionCall","src":"840:23:36"},{"kind":"number","nativeSrc":"865:2:36","nodeType":"YulLiteral","src":"865:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:36","nodeType":"YulIdentifier","src":"836:3:36"},"nativeSrc":"836:32:36","nodeType":"YulFunctionCall","src":"836:32:36"},"nativeSrc":"833:119:36","nodeType":"YulIf","src":"833:119:36"},{"nativeSrc":"962:116:36","nodeType":"YulBlock","src":"962:116:36","statements":[{"nativeSrc":"977:15:36","nodeType":"YulVariableDeclaration","src":"977:15:36","value":{"kind":"number","nativeSrc":"991:1:36","nodeType":"YulLiteral","src":"991:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:36","nodeType":"YulTypedName","src":"981:6:36","type":""}]},{"nativeSrc":"1006:62:36","nodeType":"YulAssignment","src":"1006:62:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:36","nodeType":"YulIdentifier","src":"1040:9:36"},{"name":"offset","nativeSrc":"1051:6:36","nodeType":"YulIdentifier","src":"1051:6:36"}],"functionName":{"name":"add","nativeSrc":"1036:3:36","nodeType":"YulIdentifier","src":"1036:3:36"},"nativeSrc":"1036:22:36","nodeType":"YulFunctionCall","src":"1036:22:36"},{"name":"dataEnd","nativeSrc":"1060:7:36","nodeType":"YulIdentifier","src":"1060:7:36"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:36","nodeType":"YulIdentifier","src":"1016:19:36"},"nativeSrc":"1016:52:36","nodeType":"YulFunctionCall","src":"1016:52:36"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:36","nodeType":"YulIdentifier","src":"1006:6:36"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:36","nodeType":"YulTypedName","src":"793:9:36","type":""},{"name":"dataEnd","nativeSrc":"804:7:36","nodeType":"YulTypedName","src":"804:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:36","nodeType":"YulTypedName","src":"816:6:36","type":""}],"src":"758:327:36"},{"body":{"nativeSrc":"1133:48:36","nodeType":"YulBlock","src":"1133:48:36","statements":[{"nativeSrc":"1143:32:36","nodeType":"YulAssignment","src":"1143:32:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:36","nodeType":"YulIdentifier","src":"1168:5:36"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:36","nodeType":"YulIdentifier","src":"1161:6:36"},"nativeSrc":"1161:13:36","nodeType":"YulFunctionCall","src":"1161:13:36"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:36","nodeType":"YulIdentifier","src":"1154:6:36"},"nativeSrc":"1154:21:36","nodeType":"YulFunctionCall","src":"1154:21:36"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:36","nodeType":"YulIdentifier","src":"1143:7:36"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:36","nodeType":"YulTypedName","src":"1115:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:36","nodeType":"YulTypedName","src":"1125:7:36","type":""}],"src":"1091:90:36"},{"body":{"nativeSrc":"1246:50:36","nodeType":"YulBlock","src":"1246:50:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:36","nodeType":"YulIdentifier","src":"1263:3:36"},{"arguments":[{"name":"value","nativeSrc":"1283:5:36","nodeType":"YulIdentifier","src":"1283:5:36"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:36","nodeType":"YulIdentifier","src":"1268:14:36"},"nativeSrc":"1268:21:36","nodeType":"YulFunctionCall","src":"1268:21:36"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:36","nodeType":"YulIdentifier","src":"1256:6:36"},"nativeSrc":"1256:34:36","nodeType":"YulFunctionCall","src":"1256:34:36"},"nativeSrc":"1256:34:36","nodeType":"YulExpressionStatement","src":"1256:34:36"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:36","nodeType":"YulTypedName","src":"1234:5:36","type":""},{"name":"pos","nativeSrc":"1241:3:36","nodeType":"YulTypedName","src":"1241:3:36","type":""}],"src":"1187:109:36"},{"body":{"nativeSrc":"1394:118:36","nodeType":"YulBlock","src":"1394:118:36","statements":[{"nativeSrc":"1404:26:36","nodeType":"YulAssignment","src":"1404:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:36","nodeType":"YulIdentifier","src":"1416:9:36"},{"kind":"number","nativeSrc":"1427:2:36","nodeType":"YulLiteral","src":"1427:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:36","nodeType":"YulIdentifier","src":"1412:3:36"},"nativeSrc":"1412:18:36","nodeType":"YulFunctionCall","src":"1412:18:36"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:36","nodeType":"YulIdentifier","src":"1404:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:36","nodeType":"YulIdentifier","src":"1478:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:36","nodeType":"YulIdentifier","src":"1491:9:36"},{"kind":"number","nativeSrc":"1502:1:36","nodeType":"YulLiteral","src":"1502:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:36","nodeType":"YulIdentifier","src":"1487:3:36"},"nativeSrc":"1487:17:36","nodeType":"YulFunctionCall","src":"1487:17:36"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:36","nodeType":"YulIdentifier","src":"1440:37:36"},"nativeSrc":"1440:65:36","nodeType":"YulFunctionCall","src":"1440:65:36"},"nativeSrc":"1440:65:36","nodeType":"YulExpressionStatement","src":"1440:65:36"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:36","nodeType":"YulTypedName","src":"1366:9:36","type":""},{"name":"value0","nativeSrc":"1378:6:36","nodeType":"YulTypedName","src":"1378:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:36","nodeType":"YulTypedName","src":"1389:4:36","type":""}],"src":"1302:210:36"},{"body":{"nativeSrc":"1577:40:36","nodeType":"YulBlock","src":"1577:40:36","statements":[{"nativeSrc":"1588:22:36","nodeType":"YulAssignment","src":"1588:22:36","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:36","nodeType":"YulIdentifier","src":"1604:5:36"}],"functionName":{"name":"mload","nativeSrc":"1598:5:36","nodeType":"YulIdentifier","src":"1598:5:36"},"nativeSrc":"1598:12:36","nodeType":"YulFunctionCall","src":"1598:12:36"},"variableNames":[{"name":"length","nativeSrc":"1588:6:36","nodeType":"YulIdentifier","src":"1588:6:36"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:36","nodeType":"YulTypedName","src":"1560:5:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:36","nodeType":"YulTypedName","src":"1570:6:36","type":""}],"src":"1518:99:36"},{"body":{"nativeSrc":"1719:73:36","nodeType":"YulBlock","src":"1719:73:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:36","nodeType":"YulIdentifier","src":"1736:3:36"},{"name":"length","nativeSrc":"1741:6:36","nodeType":"YulIdentifier","src":"1741:6:36"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:36","nodeType":"YulIdentifier","src":"1729:6:36"},"nativeSrc":"1729:19:36","nodeType":"YulFunctionCall","src":"1729:19:36"},"nativeSrc":"1729:19:36","nodeType":"YulExpressionStatement","src":"1729:19:36"},{"nativeSrc":"1757:29:36","nodeType":"YulAssignment","src":"1757:29:36","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:36","nodeType":"YulIdentifier","src":"1776:3:36"},{"kind":"number","nativeSrc":"1781:4:36","nodeType":"YulLiteral","src":"1781:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:36","nodeType":"YulIdentifier","src":"1772:3:36"},"nativeSrc":"1772:14:36","nodeType":"YulFunctionCall","src":"1772:14:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:36","nodeType":"YulIdentifier","src":"1757:11:36"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:36","nodeType":"YulTypedName","src":"1691:3:36","type":""},{"name":"length","nativeSrc":"1696:6:36","nodeType":"YulTypedName","src":"1696:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:36","nodeType":"YulTypedName","src":"1707:11:36","type":""}],"src":"1623:169:36"},{"body":{"nativeSrc":"1860:186:36","nodeType":"YulBlock","src":"1860:186:36","statements":[{"nativeSrc":"1871:10:36","nodeType":"YulVariableDeclaration","src":"1871:10:36","value":{"kind":"number","nativeSrc":"1880:1:36","nodeType":"YulLiteral","src":"1880:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:36","nodeType":"YulTypedName","src":"1875:1:36","type":""}]},{"body":{"nativeSrc":"1940:63:36","nodeType":"YulBlock","src":"1940:63:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:36","nodeType":"YulIdentifier","src":"1965:3:36"},{"name":"i","nativeSrc":"1970:1:36","nodeType":"YulIdentifier","src":"1970:1:36"}],"functionName":{"name":"add","nativeSrc":"1961:3:36","nodeType":"YulIdentifier","src":"1961:3:36"},"nativeSrc":"1961:11:36","nodeType":"YulFunctionCall","src":"1961:11:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:36","nodeType":"YulIdentifier","src":"1984:3:36"},{"name":"i","nativeSrc":"1989:1:36","nodeType":"YulIdentifier","src":"1989:1:36"}],"functionName":{"name":"add","nativeSrc":"1980:3:36","nodeType":"YulIdentifier","src":"1980:3:36"},"nativeSrc":"1980:11:36","nodeType":"YulFunctionCall","src":"1980:11:36"}],"functionName":{"name":"mload","nativeSrc":"1974:5:36","nodeType":"YulIdentifier","src":"1974:5:36"},"nativeSrc":"1974:18:36","nodeType":"YulFunctionCall","src":"1974:18:36"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:36","nodeType":"YulIdentifier","src":"1954:6:36"},"nativeSrc":"1954:39:36","nodeType":"YulFunctionCall","src":"1954:39:36"},"nativeSrc":"1954:39:36","nodeType":"YulExpressionStatement","src":"1954:39:36"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:36","nodeType":"YulIdentifier","src":"1901:1:36"},{"name":"length","nativeSrc":"1904:6:36","nodeType":"YulIdentifier","src":"1904:6:36"}],"functionName":{"name":"lt","nativeSrc":"1898:2:36","nodeType":"YulIdentifier","src":"1898:2:36"},"nativeSrc":"1898:13:36","nodeType":"YulFunctionCall","src":"1898:13:36"},"nativeSrc":"1890:113:36","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:36","nodeType":"YulBlock","src":"1912:19:36","statements":[{"nativeSrc":"1914:15:36","nodeType":"YulAssignment","src":"1914:15:36","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:36","nodeType":"YulIdentifier","src":"1923:1:36"},{"kind":"number","nativeSrc":"1926:2:36","nodeType":"YulLiteral","src":"1926:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:36","nodeType":"YulIdentifier","src":"1919:3:36"},"nativeSrc":"1919:10:36","nodeType":"YulFunctionCall","src":"1919:10:36"},"variableNames":[{"name":"i","nativeSrc":"1914:1:36","nodeType":"YulIdentifier","src":"1914:1:36"}]}]},"pre":{"nativeSrc":"1894:3:36","nodeType":"YulBlock","src":"1894:3:36","statements":[]},"src":"1890:113:36"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:36","nodeType":"YulIdentifier","src":"2023:3:36"},{"name":"length","nativeSrc":"2028:6:36","nodeType":"YulIdentifier","src":"2028:6:36"}],"functionName":{"name":"add","nativeSrc":"2019:3:36","nodeType":"YulIdentifier","src":"2019:3:36"},"nativeSrc":"2019:16:36","nodeType":"YulFunctionCall","src":"2019:16:36"},{"kind":"number","nativeSrc":"2037:1:36","nodeType":"YulLiteral","src":"2037:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:36","nodeType":"YulIdentifier","src":"2012:6:36"},"nativeSrc":"2012:27:36","nodeType":"YulFunctionCall","src":"2012:27:36"},"nativeSrc":"2012:27:36","nodeType":"YulExpressionStatement","src":"2012:27:36"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:36","nodeType":"YulTypedName","src":"1842:3:36","type":""},{"name":"dst","nativeSrc":"1847:3:36","nodeType":"YulTypedName","src":"1847:3:36","type":""},{"name":"length","nativeSrc":"1852:6:36","nodeType":"YulTypedName","src":"1852:6:36","type":""}],"src":"1798:248:36"},{"body":{"nativeSrc":"2100:54:36","nodeType":"YulBlock","src":"2100:54:36","statements":[{"nativeSrc":"2110:38:36","nodeType":"YulAssignment","src":"2110:38:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:36","nodeType":"YulIdentifier","src":"2128:5:36"},{"kind":"number","nativeSrc":"2135:2:36","nodeType":"YulLiteral","src":"2135:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:36","nodeType":"YulIdentifier","src":"2124:3:36"},"nativeSrc":"2124:14:36","nodeType":"YulFunctionCall","src":"2124:14:36"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:36","nodeType":"YulLiteral","src":"2144:2:36","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:36","nodeType":"YulIdentifier","src":"2140:3:36"},"nativeSrc":"2140:7:36","nodeType":"YulFunctionCall","src":"2140:7:36"}],"functionName":{"name":"and","nativeSrc":"2120:3:36","nodeType":"YulIdentifier","src":"2120:3:36"},"nativeSrc":"2120:28:36","nodeType":"YulFunctionCall","src":"2120:28:36"},"variableNames":[{"name":"result","nativeSrc":"2110:6:36","nodeType":"YulIdentifier","src":"2110:6:36"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:36","nodeType":"YulTypedName","src":"2083:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:36","nodeType":"YulTypedName","src":"2093:6:36","type":""}],"src":"2052:102:36"},{"body":{"nativeSrc":"2252:285:36","nodeType":"YulBlock","src":"2252:285:36","statements":[{"nativeSrc":"2262:53:36","nodeType":"YulVariableDeclaration","src":"2262:53:36","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:36","nodeType":"YulIdentifier","src":"2309:5:36"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:36","nodeType":"YulIdentifier","src":"2276:32:36"},"nativeSrc":"2276:39:36","nodeType":"YulFunctionCall","src":"2276:39:36"},"variables":[{"name":"length","nativeSrc":"2266:6:36","nodeType":"YulTypedName","src":"2266:6:36","type":""}]},{"nativeSrc":"2324:78:36","nodeType":"YulAssignment","src":"2324:78:36","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:36","nodeType":"YulIdentifier","src":"2390:3:36"},{"name":"length","nativeSrc":"2395:6:36","nodeType":"YulIdentifier","src":"2395:6:36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:36","nodeType":"YulIdentifier","src":"2331:58:36"},"nativeSrc":"2331:71:36","nodeType":"YulFunctionCall","src":"2331:71:36"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:36","nodeType":"YulIdentifier","src":"2324:3:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:36","nodeType":"YulIdentifier","src":"2450:5:36"},{"kind":"number","nativeSrc":"2457:4:36","nodeType":"YulLiteral","src":"2457:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:36","nodeType":"YulIdentifier","src":"2446:3:36"},"nativeSrc":"2446:16:36","nodeType":"YulFunctionCall","src":"2446:16:36"},{"name":"pos","nativeSrc":"2464:3:36","nodeType":"YulIdentifier","src":"2464:3:36"},{"name":"length","nativeSrc":"2469:6:36","nodeType":"YulIdentifier","src":"2469:6:36"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:36","nodeType":"YulIdentifier","src":"2411:34:36"},"nativeSrc":"2411:65:36","nodeType":"YulFunctionCall","src":"2411:65:36"},"nativeSrc":"2411:65:36","nodeType":"YulExpressionStatement","src":"2411:65:36"},{"nativeSrc":"2485:46:36","nodeType":"YulAssignment","src":"2485:46:36","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:36","nodeType":"YulIdentifier","src":"2496:3:36"},{"arguments":[{"name":"length","nativeSrc":"2523:6:36","nodeType":"YulIdentifier","src":"2523:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:36","nodeType":"YulIdentifier","src":"2501:21:36"},"nativeSrc":"2501:29:36","nodeType":"YulFunctionCall","src":"2501:29:36"}],"functionName":{"name":"add","nativeSrc":"2492:3:36","nodeType":"YulIdentifier","src":"2492:3:36"},"nativeSrc":"2492:39:36","nodeType":"YulFunctionCall","src":"2492:39:36"},"variableNames":[{"name":"end","nativeSrc":"2485:3:36","nodeType":"YulIdentifier","src":"2485:3:36"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:36","nodeType":"YulTypedName","src":"2233:5:36","type":""},{"name":"pos","nativeSrc":"2240:3:36","nodeType":"YulTypedName","src":"2240:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:36","nodeType":"YulTypedName","src":"2248:3:36","type":""}],"src":"2160:377:36"},{"body":{"nativeSrc":"2661:195:36","nodeType":"YulBlock","src":"2661:195:36","statements":[{"nativeSrc":"2671:26:36","nodeType":"YulAssignment","src":"2671:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:36","nodeType":"YulIdentifier","src":"2683:9:36"},{"kind":"number","nativeSrc":"2694:2:36","nodeType":"YulLiteral","src":"2694:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:36","nodeType":"YulIdentifier","src":"2679:3:36"},"nativeSrc":"2679:18:36","nodeType":"YulFunctionCall","src":"2679:18:36"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:36","nodeType":"YulIdentifier","src":"2671:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:36","nodeType":"YulIdentifier","src":"2718:9:36"},{"kind":"number","nativeSrc":"2729:1:36","nodeType":"YulLiteral","src":"2729:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:36","nodeType":"YulIdentifier","src":"2714:3:36"},"nativeSrc":"2714:17:36","nodeType":"YulFunctionCall","src":"2714:17:36"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:36","nodeType":"YulIdentifier","src":"2737:4:36"},{"name":"headStart","nativeSrc":"2743:9:36","nodeType":"YulIdentifier","src":"2743:9:36"}],"functionName":{"name":"sub","nativeSrc":"2733:3:36","nodeType":"YulIdentifier","src":"2733:3:36"},"nativeSrc":"2733:20:36","nodeType":"YulFunctionCall","src":"2733:20:36"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:36","nodeType":"YulIdentifier","src":"2707:6:36"},"nativeSrc":"2707:47:36","nodeType":"YulFunctionCall","src":"2707:47:36"},"nativeSrc":"2707:47:36","nodeType":"YulExpressionStatement","src":"2707:47:36"},{"nativeSrc":"2763:86:36","nodeType":"YulAssignment","src":"2763:86:36","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:36","nodeType":"YulIdentifier","src":"2835:6:36"},{"name":"tail","nativeSrc":"2844:4:36","nodeType":"YulIdentifier","src":"2844:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:36","nodeType":"YulIdentifier","src":"2771:63:36"},"nativeSrc":"2771:78:36","nodeType":"YulFunctionCall","src":"2771:78:36"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:36","nodeType":"YulIdentifier","src":"2763:4:36"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:36","nodeType":"YulTypedName","src":"2633:9:36","type":""},{"name":"value0","nativeSrc":"2645:6:36","nodeType":"YulTypedName","src":"2645:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:36","nodeType":"YulTypedName","src":"2656:4:36","type":""}],"src":"2543:313:36"},{"body":{"nativeSrc":"2907:32:36","nodeType":"YulBlock","src":"2907:32:36","statements":[{"nativeSrc":"2917:16:36","nodeType":"YulAssignment","src":"2917:16:36","value":{"name":"value","nativeSrc":"2928:5:36","nodeType":"YulIdentifier","src":"2928:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:36","nodeType":"YulIdentifier","src":"2917:7:36"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:36","nodeType":"YulTypedName","src":"2889:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:36","nodeType":"YulTypedName","src":"2899:7:36","type":""}],"src":"2862:77:36"},{"body":{"nativeSrc":"2988:79:36","nodeType":"YulBlock","src":"2988:79:36","statements":[{"body":{"nativeSrc":"3045:16:36","nodeType":"YulBlock","src":"3045:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:36","nodeType":"YulLiteral","src":"3054:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:36","nodeType":"YulLiteral","src":"3057:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:36","nodeType":"YulIdentifier","src":"3047:6:36"},"nativeSrc":"3047:12:36","nodeType":"YulFunctionCall","src":"3047:12:36"},"nativeSrc":"3047:12:36","nodeType":"YulExpressionStatement","src":"3047:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:36","nodeType":"YulIdentifier","src":"3011:5:36"},{"arguments":[{"name":"value","nativeSrc":"3036:5:36","nodeType":"YulIdentifier","src":"3036:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:36","nodeType":"YulIdentifier","src":"3018:17:36"},"nativeSrc":"3018:24:36","nodeType":"YulFunctionCall","src":"3018:24:36"}],"functionName":{"name":"eq","nativeSrc":"3008:2:36","nodeType":"YulIdentifier","src":"3008:2:36"},"nativeSrc":"3008:35:36","nodeType":"YulFunctionCall","src":"3008:35:36"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:36","nodeType":"YulIdentifier","src":"3001:6:36"},"nativeSrc":"3001:43:36","nodeType":"YulFunctionCall","src":"3001:43:36"},"nativeSrc":"2998:63:36","nodeType":"YulIf","src":"2998:63:36"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:36","nodeType":"YulTypedName","src":"2981:5:36","type":""}],"src":"2945:122:36"},{"body":{"nativeSrc":"3125:87:36","nodeType":"YulBlock","src":"3125:87:36","statements":[{"nativeSrc":"3135:29:36","nodeType":"YulAssignment","src":"3135:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:36","nodeType":"YulIdentifier","src":"3157:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:36","nodeType":"YulIdentifier","src":"3144:12:36"},"nativeSrc":"3144:20:36","nodeType":"YulFunctionCall","src":"3144:20:36"},"variableNames":[{"name":"value","nativeSrc":"3135:5:36","nodeType":"YulIdentifier","src":"3135:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:36","nodeType":"YulIdentifier","src":"3200:5:36"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:36","nodeType":"YulIdentifier","src":"3173:26:36"},"nativeSrc":"3173:33:36","nodeType":"YulFunctionCall","src":"3173:33:36"},"nativeSrc":"3173:33:36","nodeType":"YulExpressionStatement","src":"3173:33:36"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:36","nodeType":"YulTypedName","src":"3103:6:36","type":""},{"name":"end","nativeSrc":"3111:3:36","nodeType":"YulTypedName","src":"3111:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:36","nodeType":"YulTypedName","src":"3119:5:36","type":""}],"src":"3073:139:36"},{"body":{"nativeSrc":"3284:263:36","nodeType":"YulBlock","src":"3284:263:36","statements":[{"body":{"nativeSrc":"3330:83:36","nodeType":"YulBlock","src":"3330:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:36","nodeType":"YulIdentifier","src":"3332:77:36"},"nativeSrc":"3332:79:36","nodeType":"YulFunctionCall","src":"3332:79:36"},"nativeSrc":"3332:79:36","nodeType":"YulExpressionStatement","src":"3332:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:36","nodeType":"YulIdentifier","src":"3305:7:36"},{"name":"headStart","nativeSrc":"3314:9:36","nodeType":"YulIdentifier","src":"3314:9:36"}],"functionName":{"name":"sub","nativeSrc":"3301:3:36","nodeType":"YulIdentifier","src":"3301:3:36"},"nativeSrc":"3301:23:36","nodeType":"YulFunctionCall","src":"3301:23:36"},{"kind":"number","nativeSrc":"3326:2:36","nodeType":"YulLiteral","src":"3326:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:36","nodeType":"YulIdentifier","src":"3297:3:36"},"nativeSrc":"3297:32:36","nodeType":"YulFunctionCall","src":"3297:32:36"},"nativeSrc":"3294:119:36","nodeType":"YulIf","src":"3294:119:36"},{"nativeSrc":"3423:117:36","nodeType":"YulBlock","src":"3423:117:36","statements":[{"nativeSrc":"3438:15:36","nodeType":"YulVariableDeclaration","src":"3438:15:36","value":{"kind":"number","nativeSrc":"3452:1:36","nodeType":"YulLiteral","src":"3452:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:36","nodeType":"YulTypedName","src":"3442:6:36","type":""}]},{"nativeSrc":"3467:63:36","nodeType":"YulAssignment","src":"3467:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:36","nodeType":"YulIdentifier","src":"3502:9:36"},{"name":"offset","nativeSrc":"3513:6:36","nodeType":"YulIdentifier","src":"3513:6:36"}],"functionName":{"name":"add","nativeSrc":"3498:3:36","nodeType":"YulIdentifier","src":"3498:3:36"},"nativeSrc":"3498:22:36","nodeType":"YulFunctionCall","src":"3498:22:36"},{"name":"dataEnd","nativeSrc":"3522:7:36","nodeType":"YulIdentifier","src":"3522:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:36","nodeType":"YulIdentifier","src":"3477:20:36"},"nativeSrc":"3477:53:36","nodeType":"YulFunctionCall","src":"3477:53:36"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:36","nodeType":"YulIdentifier","src":"3467:6:36"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:36","nodeType":"YulTypedName","src":"3254:9:36","type":""},{"name":"dataEnd","nativeSrc":"3265:7:36","nodeType":"YulTypedName","src":"3265:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:36","nodeType":"YulTypedName","src":"3277:6:36","type":""}],"src":"3218:329:36"},{"body":{"nativeSrc":"3598:81:36","nodeType":"YulBlock","src":"3598:81:36","statements":[{"nativeSrc":"3608:65:36","nodeType":"YulAssignment","src":"3608:65:36","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:36","nodeType":"YulIdentifier","src":"3623:5:36"},{"kind":"number","nativeSrc":"3630:42:36","nodeType":"YulLiteral","src":"3630:42:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:36","nodeType":"YulIdentifier","src":"3619:3:36"},"nativeSrc":"3619:54:36","nodeType":"YulFunctionCall","src":"3619:54:36"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:36","nodeType":"YulIdentifier","src":"3608:7:36"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:36","nodeType":"YulTypedName","src":"3580:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:36","nodeType":"YulTypedName","src":"3590:7:36","type":""}],"src":"3553:126:36"},{"body":{"nativeSrc":"3730:51:36","nodeType":"YulBlock","src":"3730:51:36","statements":[{"nativeSrc":"3740:35:36","nodeType":"YulAssignment","src":"3740:35:36","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:36","nodeType":"YulIdentifier","src":"3769:5:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:36","nodeType":"YulIdentifier","src":"3751:17:36"},"nativeSrc":"3751:24:36","nodeType":"YulFunctionCall","src":"3751:24:36"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:36","nodeType":"YulIdentifier","src":"3740:7:36"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:36","nodeType":"YulTypedName","src":"3712:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:36","nodeType":"YulTypedName","src":"3722:7:36","type":""}],"src":"3685:96:36"},{"body":{"nativeSrc":"3852:53:36","nodeType":"YulBlock","src":"3852:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:36","nodeType":"YulIdentifier","src":"3869:3:36"},{"arguments":[{"name":"value","nativeSrc":"3892:5:36","nodeType":"YulIdentifier","src":"3892:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:36","nodeType":"YulIdentifier","src":"3874:17:36"},"nativeSrc":"3874:24:36","nodeType":"YulFunctionCall","src":"3874:24:36"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:36","nodeType":"YulIdentifier","src":"3862:6:36"},"nativeSrc":"3862:37:36","nodeType":"YulFunctionCall","src":"3862:37:36"},"nativeSrc":"3862:37:36","nodeType":"YulExpressionStatement","src":"3862:37:36"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:36","nodeType":"YulTypedName","src":"3840:5:36","type":""},{"name":"pos","nativeSrc":"3847:3:36","nodeType":"YulTypedName","src":"3847:3:36","type":""}],"src":"3787:118:36"},{"body":{"nativeSrc":"4009:124:36","nodeType":"YulBlock","src":"4009:124:36","statements":[{"nativeSrc":"4019:26:36","nodeType":"YulAssignment","src":"4019:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:36","nodeType":"YulIdentifier","src":"4031:9:36"},{"kind":"number","nativeSrc":"4042:2:36","nodeType":"YulLiteral","src":"4042:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:36","nodeType":"YulIdentifier","src":"4027:3:36"},"nativeSrc":"4027:18:36","nodeType":"YulFunctionCall","src":"4027:18:36"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:36","nodeType":"YulIdentifier","src":"4019:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:36","nodeType":"YulIdentifier","src":"4099:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:36","nodeType":"YulIdentifier","src":"4112:9:36"},{"kind":"number","nativeSrc":"4123:1:36","nodeType":"YulLiteral","src":"4123:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:36","nodeType":"YulIdentifier","src":"4108:3:36"},"nativeSrc":"4108:17:36","nodeType":"YulFunctionCall","src":"4108:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:36","nodeType":"YulIdentifier","src":"4055:43:36"},"nativeSrc":"4055:71:36","nodeType":"YulFunctionCall","src":"4055:71:36"},"nativeSrc":"4055:71:36","nodeType":"YulExpressionStatement","src":"4055:71:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:36","nodeType":"YulTypedName","src":"3981:9:36","type":""},{"name":"value0","nativeSrc":"3993:6:36","nodeType":"YulTypedName","src":"3993:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:36","nodeType":"YulTypedName","src":"4004:4:36","type":""}],"src":"3911:222:36"},{"body":{"nativeSrc":"4182:79:36","nodeType":"YulBlock","src":"4182:79:36","statements":[{"body":{"nativeSrc":"4239:16:36","nodeType":"YulBlock","src":"4239:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:36","nodeType":"YulLiteral","src":"4248:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:36","nodeType":"YulLiteral","src":"4251:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:36","nodeType":"YulIdentifier","src":"4241:6:36"},"nativeSrc":"4241:12:36","nodeType":"YulFunctionCall","src":"4241:12:36"},"nativeSrc":"4241:12:36","nodeType":"YulExpressionStatement","src":"4241:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:36","nodeType":"YulIdentifier","src":"4205:5:36"},{"arguments":[{"name":"value","nativeSrc":"4230:5:36","nodeType":"YulIdentifier","src":"4230:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:36","nodeType":"YulIdentifier","src":"4212:17:36"},"nativeSrc":"4212:24:36","nodeType":"YulFunctionCall","src":"4212:24:36"}],"functionName":{"name":"eq","nativeSrc":"4202:2:36","nodeType":"YulIdentifier","src":"4202:2:36"},"nativeSrc":"4202:35:36","nodeType":"YulFunctionCall","src":"4202:35:36"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:36","nodeType":"YulIdentifier","src":"4195:6:36"},"nativeSrc":"4195:43:36","nodeType":"YulFunctionCall","src":"4195:43:36"},"nativeSrc":"4192:63:36","nodeType":"YulIf","src":"4192:63:36"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:36","nodeType":"YulTypedName","src":"4175:5:36","type":""}],"src":"4139:122:36"},{"body":{"nativeSrc":"4319:87:36","nodeType":"YulBlock","src":"4319:87:36","statements":[{"nativeSrc":"4329:29:36","nodeType":"YulAssignment","src":"4329:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:36","nodeType":"YulIdentifier","src":"4351:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:36","nodeType":"YulIdentifier","src":"4338:12:36"},"nativeSrc":"4338:20:36","nodeType":"YulFunctionCall","src":"4338:20:36"},"variableNames":[{"name":"value","nativeSrc":"4329:5:36","nodeType":"YulIdentifier","src":"4329:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:36","nodeType":"YulIdentifier","src":"4394:5:36"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:36","nodeType":"YulIdentifier","src":"4367:26:36"},"nativeSrc":"4367:33:36","nodeType":"YulFunctionCall","src":"4367:33:36"},"nativeSrc":"4367:33:36","nodeType":"YulExpressionStatement","src":"4367:33:36"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:36","nodeType":"YulTypedName","src":"4297:6:36","type":""},{"name":"end","nativeSrc":"4305:3:36","nodeType":"YulTypedName","src":"4305:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:36","nodeType":"YulTypedName","src":"4313:5:36","type":""}],"src":"4267:139:36"},{"body":{"nativeSrc":"4495:391:36","nodeType":"YulBlock","src":"4495:391:36","statements":[{"body":{"nativeSrc":"4541:83:36","nodeType":"YulBlock","src":"4541:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:36","nodeType":"YulIdentifier","src":"4543:77:36"},"nativeSrc":"4543:79:36","nodeType":"YulFunctionCall","src":"4543:79:36"},"nativeSrc":"4543:79:36","nodeType":"YulExpressionStatement","src":"4543:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:36","nodeType":"YulIdentifier","src":"4516:7:36"},{"name":"headStart","nativeSrc":"4525:9:36","nodeType":"YulIdentifier","src":"4525:9:36"}],"functionName":{"name":"sub","nativeSrc":"4512:3:36","nodeType":"YulIdentifier","src":"4512:3:36"},"nativeSrc":"4512:23:36","nodeType":"YulFunctionCall","src":"4512:23:36"},{"kind":"number","nativeSrc":"4537:2:36","nodeType":"YulLiteral","src":"4537:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:36","nodeType":"YulIdentifier","src":"4508:3:36"},"nativeSrc":"4508:32:36","nodeType":"YulFunctionCall","src":"4508:32:36"},"nativeSrc":"4505:119:36","nodeType":"YulIf","src":"4505:119:36"},{"nativeSrc":"4634:117:36","nodeType":"YulBlock","src":"4634:117:36","statements":[{"nativeSrc":"4649:15:36","nodeType":"YulVariableDeclaration","src":"4649:15:36","value":{"kind":"number","nativeSrc":"4663:1:36","nodeType":"YulLiteral","src":"4663:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:36","nodeType":"YulTypedName","src":"4653:6:36","type":""}]},{"nativeSrc":"4678:63:36","nodeType":"YulAssignment","src":"4678:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:36","nodeType":"YulIdentifier","src":"4713:9:36"},{"name":"offset","nativeSrc":"4724:6:36","nodeType":"YulIdentifier","src":"4724:6:36"}],"functionName":{"name":"add","nativeSrc":"4709:3:36","nodeType":"YulIdentifier","src":"4709:3:36"},"nativeSrc":"4709:22:36","nodeType":"YulFunctionCall","src":"4709:22:36"},{"name":"dataEnd","nativeSrc":"4733:7:36","nodeType":"YulIdentifier","src":"4733:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:36","nodeType":"YulIdentifier","src":"4688:20:36"},"nativeSrc":"4688:53:36","nodeType":"YulFunctionCall","src":"4688:53:36"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:36","nodeType":"YulIdentifier","src":"4678:6:36"}]}]},{"nativeSrc":"4761:118:36","nodeType":"YulBlock","src":"4761:118:36","statements":[{"nativeSrc":"4776:16:36","nodeType":"YulVariableDeclaration","src":"4776:16:36","value":{"kind":"number","nativeSrc":"4790:2:36","nodeType":"YulLiteral","src":"4790:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:36","nodeType":"YulTypedName","src":"4780:6:36","type":""}]},{"nativeSrc":"4806:63:36","nodeType":"YulAssignment","src":"4806:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:36","nodeType":"YulIdentifier","src":"4841:9:36"},{"name":"offset","nativeSrc":"4852:6:36","nodeType":"YulIdentifier","src":"4852:6:36"}],"functionName":{"name":"add","nativeSrc":"4837:3:36","nodeType":"YulIdentifier","src":"4837:3:36"},"nativeSrc":"4837:22:36","nodeType":"YulFunctionCall","src":"4837:22:36"},{"name":"dataEnd","nativeSrc":"4861:7:36","nodeType":"YulIdentifier","src":"4861:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:36","nodeType":"YulIdentifier","src":"4816:20:36"},"nativeSrc":"4816:53:36","nodeType":"YulFunctionCall","src":"4816:53:36"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:36","nodeType":"YulIdentifier","src":"4806:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:36","nodeType":"YulTypedName","src":"4457:9:36","type":""},{"name":"dataEnd","nativeSrc":"4468:7:36","nodeType":"YulTypedName","src":"4468:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:36","nodeType":"YulTypedName","src":"4480:6:36","type":""},{"name":"value1","nativeSrc":"4488:6:36","nodeType":"YulTypedName","src":"4488:6:36","type":""}],"src":"4412:474:36"},{"body":{"nativeSrc":"4992:519:36","nodeType":"YulBlock","src":"4992:519:36","statements":[{"body":{"nativeSrc":"5038:83:36","nodeType":"YulBlock","src":"5038:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5040:77:36","nodeType":"YulIdentifier","src":"5040:77:36"},"nativeSrc":"5040:79:36","nodeType":"YulFunctionCall","src":"5040:79:36"},"nativeSrc":"5040:79:36","nodeType":"YulExpressionStatement","src":"5040:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5013:7:36","nodeType":"YulIdentifier","src":"5013:7:36"},{"name":"headStart","nativeSrc":"5022:9:36","nodeType":"YulIdentifier","src":"5022:9:36"}],"functionName":{"name":"sub","nativeSrc":"5009:3:36","nodeType":"YulIdentifier","src":"5009:3:36"},"nativeSrc":"5009:23:36","nodeType":"YulFunctionCall","src":"5009:23:36"},{"kind":"number","nativeSrc":"5034:2:36","nodeType":"YulLiteral","src":"5034:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5005:3:36","nodeType":"YulIdentifier","src":"5005:3:36"},"nativeSrc":"5005:32:36","nodeType":"YulFunctionCall","src":"5005:32:36"},"nativeSrc":"5002:119:36","nodeType":"YulIf","src":"5002:119:36"},{"nativeSrc":"5131:117:36","nodeType":"YulBlock","src":"5131:117:36","statements":[{"nativeSrc":"5146:15:36","nodeType":"YulVariableDeclaration","src":"5146:15:36","value":{"kind":"number","nativeSrc":"5160:1:36","nodeType":"YulLiteral","src":"5160:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5150:6:36","nodeType":"YulTypedName","src":"5150:6:36","type":""}]},{"nativeSrc":"5175:63:36","nodeType":"YulAssignment","src":"5175:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5210:9:36","nodeType":"YulIdentifier","src":"5210:9:36"},{"name":"offset","nativeSrc":"5221:6:36","nodeType":"YulIdentifier","src":"5221:6:36"}],"functionName":{"name":"add","nativeSrc":"5206:3:36","nodeType":"YulIdentifier","src":"5206:3:36"},"nativeSrc":"5206:22:36","nodeType":"YulFunctionCall","src":"5206:22:36"},{"name":"dataEnd","nativeSrc":"5230:7:36","nodeType":"YulIdentifier","src":"5230:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5185:20:36","nodeType":"YulIdentifier","src":"5185:20:36"},"nativeSrc":"5185:53:36","nodeType":"YulFunctionCall","src":"5185:53:36"},"variableNames":[{"name":"value0","nativeSrc":"5175:6:36","nodeType":"YulIdentifier","src":"5175:6:36"}]}]},{"nativeSrc":"5258:118:36","nodeType":"YulBlock","src":"5258:118:36","statements":[{"nativeSrc":"5273:16:36","nodeType":"YulVariableDeclaration","src":"5273:16:36","value":{"kind":"number","nativeSrc":"5287:2:36","nodeType":"YulLiteral","src":"5287:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5277:6:36","nodeType":"YulTypedName","src":"5277:6:36","type":""}]},{"nativeSrc":"5303:63:36","nodeType":"YulAssignment","src":"5303:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5338:9:36","nodeType":"YulIdentifier","src":"5338:9:36"},{"name":"offset","nativeSrc":"5349:6:36","nodeType":"YulIdentifier","src":"5349:6:36"}],"functionName":{"name":"add","nativeSrc":"5334:3:36","nodeType":"YulIdentifier","src":"5334:3:36"},"nativeSrc":"5334:22:36","nodeType":"YulFunctionCall","src":"5334:22:36"},{"name":"dataEnd","nativeSrc":"5358:7:36","nodeType":"YulIdentifier","src":"5358:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5313:20:36","nodeType":"YulIdentifier","src":"5313:20:36"},"nativeSrc":"5313:53:36","nodeType":"YulFunctionCall","src":"5313:53:36"},"variableNames":[{"name":"value1","nativeSrc":"5303:6:36","nodeType":"YulIdentifier","src":"5303:6:36"}]}]},{"nativeSrc":"5386:118:36","nodeType":"YulBlock","src":"5386:118:36","statements":[{"nativeSrc":"5401:16:36","nodeType":"YulVariableDeclaration","src":"5401:16:36","value":{"kind":"number","nativeSrc":"5415:2:36","nodeType":"YulLiteral","src":"5415:2:36","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5405:6:36","nodeType":"YulTypedName","src":"5405:6:36","type":""}]},{"nativeSrc":"5431:63:36","nodeType":"YulAssignment","src":"5431:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5466:9:36","nodeType":"YulIdentifier","src":"5466:9:36"},{"name":"offset","nativeSrc":"5477:6:36","nodeType":"YulIdentifier","src":"5477:6:36"}],"functionName":{"name":"add","nativeSrc":"5462:3:36","nodeType":"YulIdentifier","src":"5462:3:36"},"nativeSrc":"5462:22:36","nodeType":"YulFunctionCall","src":"5462:22:36"},{"name":"dataEnd","nativeSrc":"5486:7:36","nodeType":"YulIdentifier","src":"5486:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5441:20:36","nodeType":"YulIdentifier","src":"5441:20:36"},"nativeSrc":"5441:53:36","nodeType":"YulFunctionCall","src":"5441:53:36"},"variableNames":[{"name":"value2","nativeSrc":"5431:6:36","nodeType":"YulIdentifier","src":"5431:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4892:619:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4946:9:36","nodeType":"YulTypedName","src":"4946:9:36","type":""},{"name":"dataEnd","nativeSrc":"4957:7:36","nodeType":"YulTypedName","src":"4957:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4969:6:36","nodeType":"YulTypedName","src":"4969:6:36","type":""},{"name":"value1","nativeSrc":"4977:6:36","nodeType":"YulTypedName","src":"4977:6:36","type":""},{"name":"value2","nativeSrc":"4985:6:36","nodeType":"YulTypedName","src":"4985:6:36","type":""}],"src":"4892:619:36"},{"body":{"nativeSrc":"5606:28:36","nodeType":"YulBlock","src":"5606:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5623:1:36","nodeType":"YulLiteral","src":"5623:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5626:1:36","nodeType":"YulLiteral","src":"5626:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5616:6:36","nodeType":"YulIdentifier","src":"5616:6:36"},"nativeSrc":"5616:12:36","nodeType":"YulFunctionCall","src":"5616:12:36"},"nativeSrc":"5616:12:36","nodeType":"YulExpressionStatement","src":"5616:12:36"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5517:117:36","nodeType":"YulFunctionDefinition","src":"5517:117:36"},{"body":{"nativeSrc":"5729:28:36","nodeType":"YulBlock","src":"5729:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5746:1:36","nodeType":"YulLiteral","src":"5746:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5749:1:36","nodeType":"YulLiteral","src":"5749:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5739:6:36","nodeType":"YulIdentifier","src":"5739:6:36"},"nativeSrc":"5739:12:36","nodeType":"YulFunctionCall","src":"5739:12:36"},"nativeSrc":"5739:12:36","nodeType":"YulExpressionStatement","src":"5739:12:36"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5640:117:36","nodeType":"YulFunctionDefinition","src":"5640:117:36"},{"body":{"nativeSrc":"5791:152:36","nodeType":"YulBlock","src":"5791:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5808:1:36","nodeType":"YulLiteral","src":"5808:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5811:77:36","nodeType":"YulLiteral","src":"5811:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5801:6:36","nodeType":"YulIdentifier","src":"5801:6:36"},"nativeSrc":"5801:88:36","nodeType":"YulFunctionCall","src":"5801:88:36"},"nativeSrc":"5801:88:36","nodeType":"YulExpressionStatement","src":"5801:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5905:1:36","nodeType":"YulLiteral","src":"5905:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"5908:4:36","nodeType":"YulLiteral","src":"5908:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5898:6:36","nodeType":"YulIdentifier","src":"5898:6:36"},"nativeSrc":"5898:15:36","nodeType":"YulFunctionCall","src":"5898:15:36"},"nativeSrc":"5898:15:36","nodeType":"YulExpressionStatement","src":"5898:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5929:1:36","nodeType":"YulLiteral","src":"5929:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"5932:4:36","nodeType":"YulLiteral","src":"5932:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5922:6:36","nodeType":"YulIdentifier","src":"5922:6:36"},"nativeSrc":"5922:15:36","nodeType":"YulFunctionCall","src":"5922:15:36"},"nativeSrc":"5922:15:36","nodeType":"YulExpressionStatement","src":"5922:15:36"}]},"name":"panic_error_0x41","nativeSrc":"5763:180:36","nodeType":"YulFunctionDefinition","src":"5763:180:36"},{"body":{"nativeSrc":"5992:238:36","nodeType":"YulBlock","src":"5992:238:36","statements":[{"nativeSrc":"6002:58:36","nodeType":"YulVariableDeclaration","src":"6002:58:36","value":{"arguments":[{"name":"memPtr","nativeSrc":"6024:6:36","nodeType":"YulIdentifier","src":"6024:6:36"},{"arguments":[{"name":"size","nativeSrc":"6054:4:36","nodeType":"YulIdentifier","src":"6054:4:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6032:21:36","nodeType":"YulIdentifier","src":"6032:21:36"},"nativeSrc":"6032:27:36","nodeType":"YulFunctionCall","src":"6032:27:36"}],"functionName":{"name":"add","nativeSrc":"6020:3:36","nodeType":"YulIdentifier","src":"6020:3:36"},"nativeSrc":"6020:40:36","nodeType":"YulFunctionCall","src":"6020:40:36"},"variables":[{"name":"newFreePtr","nativeSrc":"6006:10:36","nodeType":"YulTypedName","src":"6006:10:36","type":""}]},{"body":{"nativeSrc":"6171:22:36","nodeType":"YulBlock","src":"6171:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6173:16:36","nodeType":"YulIdentifier","src":"6173:16:36"},"nativeSrc":"6173:18:36","nodeType":"YulFunctionCall","src":"6173:18:36"},"nativeSrc":"6173:18:36","nodeType":"YulExpressionStatement","src":"6173:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"6114:10:36","nodeType":"YulIdentifier","src":"6114:10:36"},{"kind":"number","nativeSrc":"6126:18:36","nodeType":"YulLiteral","src":"6126:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6111:2:36","nodeType":"YulIdentifier","src":"6111:2:36"},"nativeSrc":"6111:34:36","nodeType":"YulFunctionCall","src":"6111:34:36"},{"arguments":[{"name":"newFreePtr","nativeSrc":"6150:10:36","nodeType":"YulIdentifier","src":"6150:10:36"},{"name":"memPtr","nativeSrc":"6162:6:36","nodeType":"YulIdentifier","src":"6162:6:36"}],"functionName":{"name":"lt","nativeSrc":"6147:2:36","nodeType":"YulIdentifier","src":"6147:2:36"},"nativeSrc":"6147:22:36","nodeType":"YulFunctionCall","src":"6147:22:36"}],"functionName":{"name":"or","nativeSrc":"6108:2:36","nodeType":"YulIdentifier","src":"6108:2:36"},"nativeSrc":"6108:62:36","nodeType":"YulFunctionCall","src":"6108:62:36"},"nativeSrc":"6105:88:36","nodeType":"YulIf","src":"6105:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6209:2:36","nodeType":"YulLiteral","src":"6209:2:36","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"6213:10:36","nodeType":"YulIdentifier","src":"6213:10:36"}],"functionName":{"name":"mstore","nativeSrc":"6202:6:36","nodeType":"YulIdentifier","src":"6202:6:36"},"nativeSrc":"6202:22:36","nodeType":"YulFunctionCall","src":"6202:22:36"},"nativeSrc":"6202:22:36","nodeType":"YulExpressionStatement","src":"6202:22:36"}]},"name":"finalize_allocation","nativeSrc":"5949:281:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5978:6:36","nodeType":"YulTypedName","src":"5978:6:36","type":""},{"name":"size","nativeSrc":"5986:4:36","nodeType":"YulTypedName","src":"5986:4:36","type":""}],"src":"5949:281:36"},{"body":{"nativeSrc":"6277:88:36","nodeType":"YulBlock","src":"6277:88:36","statements":[{"nativeSrc":"6287:30:36","nodeType":"YulAssignment","src":"6287:30:36","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"6297:18:36","nodeType":"YulIdentifier","src":"6297:18:36"},"nativeSrc":"6297:20:36","nodeType":"YulFunctionCall","src":"6297:20:36"},"variableNames":[{"name":"memPtr","nativeSrc":"6287:6:36","nodeType":"YulIdentifier","src":"6287:6:36"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"6346:6:36","nodeType":"YulIdentifier","src":"6346:6:36"},{"name":"size","nativeSrc":"6354:4:36","nodeType":"YulIdentifier","src":"6354:4:36"}],"functionName":{"name":"finalize_allocation","nativeSrc":"6326:19:36","nodeType":"YulIdentifier","src":"6326:19:36"},"nativeSrc":"6326:33:36","nodeType":"YulFunctionCall","src":"6326:33:36"},"nativeSrc":"6326:33:36","nodeType":"YulExpressionStatement","src":"6326:33:36"}]},"name":"allocate_memory","nativeSrc":"6236:129:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"6261:4:36","nodeType":"YulTypedName","src":"6261:4:36","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"6270:6:36","nodeType":"YulTypedName","src":"6270:6:36","type":""}],"src":"6236:129:36"},{"body":{"nativeSrc":"6438:241:36","nodeType":"YulBlock","src":"6438:241:36","statements":[{"body":{"nativeSrc":"6543:22:36","nodeType":"YulBlock","src":"6543:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6545:16:36","nodeType":"YulIdentifier","src":"6545:16:36"},"nativeSrc":"6545:18:36","nodeType":"YulFunctionCall","src":"6545:18:36"},"nativeSrc":"6545:18:36","nodeType":"YulExpressionStatement","src":"6545:18:36"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6515:6:36","nodeType":"YulIdentifier","src":"6515:6:36"},{"kind":"number","nativeSrc":"6523:18:36","nodeType":"YulLiteral","src":"6523:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6512:2:36","nodeType":"YulIdentifier","src":"6512:2:36"},"nativeSrc":"6512:30:36","nodeType":"YulFunctionCall","src":"6512:30:36"},"nativeSrc":"6509:56:36","nodeType":"YulIf","src":"6509:56:36"},{"nativeSrc":"6575:37:36","nodeType":"YulAssignment","src":"6575:37:36","value":{"arguments":[{"name":"length","nativeSrc":"6605:6:36","nodeType":"YulIdentifier","src":"6605:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6583:21:36","nodeType":"YulIdentifier","src":"6583:21:36"},"nativeSrc":"6583:29:36","nodeType":"YulFunctionCall","src":"6583:29:36"},"variableNames":[{"name":"size","nativeSrc":"6575:4:36","nodeType":"YulIdentifier","src":"6575:4:36"}]},{"nativeSrc":"6649:23:36","nodeType":"YulAssignment","src":"6649:23:36","value":{"arguments":[{"name":"size","nativeSrc":"6661:4:36","nodeType":"YulIdentifier","src":"6661:4:36"},{"kind":"number","nativeSrc":"6667:4:36","nodeType":"YulLiteral","src":"6667:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6657:3:36","nodeType":"YulIdentifier","src":"6657:3:36"},"nativeSrc":"6657:15:36","nodeType":"YulFunctionCall","src":"6657:15:36"},"variableNames":[{"name":"size","nativeSrc":"6649:4:36","nodeType":"YulIdentifier","src":"6649:4:36"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"6371:308:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"6422:6:36","nodeType":"YulTypedName","src":"6422:6:36","type":""}],"returnVariables":[{"name":"size","nativeSrc":"6433:4:36","nodeType":"YulTypedName","src":"6433:4:36","type":""}],"src":"6371:308:36"},{"body":{"nativeSrc":"6749:84:36","nodeType":"YulBlock","src":"6749:84:36","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6773:3:36","nodeType":"YulIdentifier","src":"6773:3:36"},{"name":"src","nativeSrc":"6778:3:36","nodeType":"YulIdentifier","src":"6778:3:36"},{"name":"length","nativeSrc":"6783:6:36","nodeType":"YulIdentifier","src":"6783:6:36"}],"functionName":{"name":"calldatacopy","nativeSrc":"6760:12:36","nodeType":"YulIdentifier","src":"6760:12:36"},"nativeSrc":"6760:30:36","nodeType":"YulFunctionCall","src":"6760:30:36"},"nativeSrc":"6760:30:36","nodeType":"YulExpressionStatement","src":"6760:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6810:3:36","nodeType":"YulIdentifier","src":"6810:3:36"},{"name":"length","nativeSrc":"6815:6:36","nodeType":"YulIdentifier","src":"6815:6:36"}],"functionName":{"name":"add","nativeSrc":"6806:3:36","nodeType":"YulIdentifier","src":"6806:3:36"},"nativeSrc":"6806:16:36","nodeType":"YulFunctionCall","src":"6806:16:36"},{"kind":"number","nativeSrc":"6824:1:36","nodeType":"YulLiteral","src":"6824:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6799:6:36","nodeType":"YulIdentifier","src":"6799:6:36"},"nativeSrc":"6799:27:36","nodeType":"YulFunctionCall","src":"6799:27:36"},"nativeSrc":"6799:27:36","nodeType":"YulExpressionStatement","src":"6799:27:36"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6685:148:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6731:3:36","nodeType":"YulTypedName","src":"6731:3:36","type":""},{"name":"dst","nativeSrc":"6736:3:36","nodeType":"YulTypedName","src":"6736:3:36","type":""},{"name":"length","nativeSrc":"6741:6:36","nodeType":"YulTypedName","src":"6741:6:36","type":""}],"src":"6685:148:36"},{"body":{"nativeSrc":"6923:341:36","nodeType":"YulBlock","src":"6923:341:36","statements":[{"nativeSrc":"6933:75:36","nodeType":"YulAssignment","src":"6933:75:36","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7000:6:36","nodeType":"YulIdentifier","src":"7000:6:36"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"6958:41:36","nodeType":"YulIdentifier","src":"6958:41:36"},"nativeSrc":"6958:49:36","nodeType":"YulFunctionCall","src":"6958:49:36"}],"functionName":{"name":"allocate_memory","nativeSrc":"6942:15:36","nodeType":"YulIdentifier","src":"6942:15:36"},"nativeSrc":"6942:66:36","nodeType":"YulFunctionCall","src":"6942:66:36"},"variableNames":[{"name":"array","nativeSrc":"6933:5:36","nodeType":"YulIdentifier","src":"6933:5:36"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7024:5:36","nodeType":"YulIdentifier","src":"7024:5:36"},{"name":"length","nativeSrc":"7031:6:36","nodeType":"YulIdentifier","src":"7031:6:36"}],"functionName":{"name":"mstore","nativeSrc":"7017:6:36","nodeType":"YulIdentifier","src":"7017:6:36"},"nativeSrc":"7017:21:36","nodeType":"YulFunctionCall","src":"7017:21:36"},"nativeSrc":"7017:21:36","nodeType":"YulExpressionStatement","src":"7017:21:36"},{"nativeSrc":"7047:27:36","nodeType":"YulVariableDeclaration","src":"7047:27:36","value":{"arguments":[{"name":"array","nativeSrc":"7062:5:36","nodeType":"YulIdentifier","src":"7062:5:36"},{"kind":"number","nativeSrc":"7069:4:36","nodeType":"YulLiteral","src":"7069:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7058:3:36","nodeType":"YulIdentifier","src":"7058:3:36"},"nativeSrc":"7058:16:36","nodeType":"YulFunctionCall","src":"7058:16:36"},"variables":[{"name":"dst","nativeSrc":"7051:3:36","nodeType":"YulTypedName","src":"7051:3:36","type":""}]},{"body":{"nativeSrc":"7112:83:36","nodeType":"YulBlock","src":"7112:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7114:77:36","nodeType":"YulIdentifier","src":"7114:77:36"},"nativeSrc":"7114:79:36","nodeType":"YulFunctionCall","src":"7114:79:36"},"nativeSrc":"7114:79:36","nodeType":"YulExpressionStatement","src":"7114:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7093:3:36","nodeType":"YulIdentifier","src":"7093:3:36"},{"name":"length","nativeSrc":"7098:6:36","nodeType":"YulIdentifier","src":"7098:6:36"}],"functionName":{"name":"add","nativeSrc":"7089:3:36","nodeType":"YulIdentifier","src":"7089:3:36"},"nativeSrc":"7089:16:36","nodeType":"YulFunctionCall","src":"7089:16:36"},{"name":"end","nativeSrc":"7107:3:36","nodeType":"YulIdentifier","src":"7107:3:36"}],"functionName":{"name":"gt","nativeSrc":"7086:2:36","nodeType":"YulIdentifier","src":"7086:2:36"},"nativeSrc":"7086:25:36","nodeType":"YulFunctionCall","src":"7086:25:36"},"nativeSrc":"7083:112:36","nodeType":"YulIf","src":"7083:112:36"},{"expression":{"arguments":[{"name":"src","nativeSrc":"7241:3:36","nodeType":"YulIdentifier","src":"7241:3:36"},{"name":"dst","nativeSrc":"7246:3:36","nodeType":"YulIdentifier","src":"7246:3:36"},{"name":"length","nativeSrc":"7251:6:36","nodeType":"YulIdentifier","src":"7251:6:36"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7204:36:36","nodeType":"YulIdentifier","src":"7204:36:36"},"nativeSrc":"7204:54:36","nodeType":"YulFunctionCall","src":"7204:54:36"},"nativeSrc":"7204:54:36","nodeType":"YulExpressionStatement","src":"7204:54:36"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"6839:425:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6896:3:36","nodeType":"YulTypedName","src":"6896:3:36","type":""},{"name":"length","nativeSrc":"6901:6:36","nodeType":"YulTypedName","src":"6901:6:36","type":""},{"name":"end","nativeSrc":"6909:3:36","nodeType":"YulTypedName","src":"6909:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6917:5:36","nodeType":"YulTypedName","src":"6917:5:36","type":""}],"src":"6839:425:36"},{"body":{"nativeSrc":"7346:278:36","nodeType":"YulBlock","src":"7346:278:36","statements":[{"body":{"nativeSrc":"7395:83:36","nodeType":"YulBlock","src":"7395:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7397:77:36","nodeType":"YulIdentifier","src":"7397:77:36"},"nativeSrc":"7397:79:36","nodeType":"YulFunctionCall","src":"7397:79:36"},"nativeSrc":"7397:79:36","nodeType":"YulExpressionStatement","src":"7397:79:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7374:6:36","nodeType":"YulIdentifier","src":"7374:6:36"},{"kind":"number","nativeSrc":"7382:4:36","nodeType":"YulLiteral","src":"7382:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7370:3:36","nodeType":"YulIdentifier","src":"7370:3:36"},"nativeSrc":"7370:17:36","nodeType":"YulFunctionCall","src":"7370:17:36"},{"name":"end","nativeSrc":"7389:3:36","nodeType":"YulIdentifier","src":"7389:3:36"}],"functionName":{"name":"slt","nativeSrc":"7366:3:36","nodeType":"YulIdentifier","src":"7366:3:36"},"nativeSrc":"7366:27:36","nodeType":"YulFunctionCall","src":"7366:27:36"}],"functionName":{"name":"iszero","nativeSrc":"7359:6:36","nodeType":"YulIdentifier","src":"7359:6:36"},"nativeSrc":"7359:35:36","nodeType":"YulFunctionCall","src":"7359:35:36"},"nativeSrc":"7356:122:36","nodeType":"YulIf","src":"7356:122:36"},{"nativeSrc":"7487:34:36","nodeType":"YulVariableDeclaration","src":"7487:34:36","value":{"arguments":[{"name":"offset","nativeSrc":"7514:6:36","nodeType":"YulIdentifier","src":"7514:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"7501:12:36","nodeType":"YulIdentifier","src":"7501:12:36"},"nativeSrc":"7501:20:36","nodeType":"YulFunctionCall","src":"7501:20:36"},"variables":[{"name":"length","nativeSrc":"7491:6:36","nodeType":"YulTypedName","src":"7491:6:36","type":""}]},{"nativeSrc":"7530:88:36","nodeType":"YulAssignment","src":"7530:88:36","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7591:6:36","nodeType":"YulIdentifier","src":"7591:6:36"},{"kind":"number","nativeSrc":"7599:4:36","nodeType":"YulLiteral","src":"7599:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7587:3:36","nodeType":"YulIdentifier","src":"7587:3:36"},"nativeSrc":"7587:17:36","nodeType":"YulFunctionCall","src":"7587:17:36"},{"name":"length","nativeSrc":"7606:6:36","nodeType":"YulIdentifier","src":"7606:6:36"},{"name":"end","nativeSrc":"7614:3:36","nodeType":"YulIdentifier","src":"7614:3:36"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"7539:47:36","nodeType":"YulIdentifier","src":"7539:47:36"},"nativeSrc":"7539:79:36","nodeType":"YulFunctionCall","src":"7539:79:36"},"variableNames":[{"name":"array","nativeSrc":"7530:5:36","nodeType":"YulIdentifier","src":"7530:5:36"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"7284:340:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7324:6:36","nodeType":"YulTypedName","src":"7324:6:36","type":""},{"name":"end","nativeSrc":"7332:3:36","nodeType":"YulTypedName","src":"7332:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7340:5:36","nodeType":"YulTypedName","src":"7340:5:36","type":""}],"src":"7284:340:36"},{"body":{"nativeSrc":"7828:1545:36","nodeType":"YulBlock","src":"7828:1545:36","statements":[{"body":{"nativeSrc":"7875:83:36","nodeType":"YulBlock","src":"7875:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7877:77:36","nodeType":"YulIdentifier","src":"7877:77:36"},"nativeSrc":"7877:79:36","nodeType":"YulFunctionCall","src":"7877:79:36"},"nativeSrc":"7877:79:36","nodeType":"YulExpressionStatement","src":"7877:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7849:7:36","nodeType":"YulIdentifier","src":"7849:7:36"},{"name":"headStart","nativeSrc":"7858:9:36","nodeType":"YulIdentifier","src":"7858:9:36"}],"functionName":{"name":"sub","nativeSrc":"7845:3:36","nodeType":"YulIdentifier","src":"7845:3:36"},"nativeSrc":"7845:23:36","nodeType":"YulFunctionCall","src":"7845:23:36"},{"kind":"number","nativeSrc":"7870:3:36","nodeType":"YulLiteral","src":"7870:3:36","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"7841:3:36","nodeType":"YulIdentifier","src":"7841:3:36"},"nativeSrc":"7841:33:36","nodeType":"YulFunctionCall","src":"7841:33:36"},"nativeSrc":"7838:120:36","nodeType":"YulIf","src":"7838:120:36"},{"nativeSrc":"7968:117:36","nodeType":"YulBlock","src":"7968:117:36","statements":[{"nativeSrc":"7983:15:36","nodeType":"YulVariableDeclaration","src":"7983:15:36","value":{"kind":"number","nativeSrc":"7997:1:36","nodeType":"YulLiteral","src":"7997:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7987:6:36","nodeType":"YulTypedName","src":"7987:6:36","type":""}]},{"nativeSrc":"8012:63:36","nodeType":"YulAssignment","src":"8012:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8047:9:36","nodeType":"YulIdentifier","src":"8047:9:36"},{"name":"offset","nativeSrc":"8058:6:36","nodeType":"YulIdentifier","src":"8058:6:36"}],"functionName":{"name":"add","nativeSrc":"8043:3:36","nodeType":"YulIdentifier","src":"8043:3:36"},"nativeSrc":"8043:22:36","nodeType":"YulFunctionCall","src":"8043:22:36"},{"name":"dataEnd","nativeSrc":"8067:7:36","nodeType":"YulIdentifier","src":"8067:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8022:20:36","nodeType":"YulIdentifier","src":"8022:20:36"},"nativeSrc":"8022:53:36","nodeType":"YulFunctionCall","src":"8022:53:36"},"variableNames":[{"name":"value0","nativeSrc":"8012:6:36","nodeType":"YulIdentifier","src":"8012:6:36"}]}]},{"nativeSrc":"8095:288:36","nodeType":"YulBlock","src":"8095:288:36","statements":[{"nativeSrc":"8110:46:36","nodeType":"YulVariableDeclaration","src":"8110:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8141:9:36","nodeType":"YulIdentifier","src":"8141:9:36"},{"kind":"number","nativeSrc":"8152:2:36","nodeType":"YulLiteral","src":"8152:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8137:3:36","nodeType":"YulIdentifier","src":"8137:3:36"},"nativeSrc":"8137:18:36","nodeType":"YulFunctionCall","src":"8137:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"8124:12:36","nodeType":"YulIdentifier","src":"8124:12:36"},"nativeSrc":"8124:32:36","nodeType":"YulFunctionCall","src":"8124:32:36"},"variables":[{"name":"offset","nativeSrc":"8114:6:36","nodeType":"YulTypedName","src":"8114:6:36","type":""}]},{"body":{"nativeSrc":"8203:83:36","nodeType":"YulBlock","src":"8203:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8205:77:36","nodeType":"YulIdentifier","src":"8205:77:36"},"nativeSrc":"8205:79:36","nodeType":"YulFunctionCall","src":"8205:79:36"},"nativeSrc":"8205:79:36","nodeType":"YulExpressionStatement","src":"8205:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8175:6:36","nodeType":"YulIdentifier","src":"8175:6:36"},{"kind":"number","nativeSrc":"8183:18:36","nodeType":"YulLiteral","src":"8183:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8172:2:36","nodeType":"YulIdentifier","src":"8172:2:36"},"nativeSrc":"8172:30:36","nodeType":"YulFunctionCall","src":"8172:30:36"},"nativeSrc":"8169:117:36","nodeType":"YulIf","src":"8169:117:36"},{"nativeSrc":"8300:73:36","nodeType":"YulAssignment","src":"8300:73:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8345:9:36","nodeType":"YulIdentifier","src":"8345:9:36"},{"name":"offset","nativeSrc":"8356:6:36","nodeType":"YulIdentifier","src":"8356:6:36"}],"functionName":{"name":"add","nativeSrc":"8341:3:36","nodeType":"YulIdentifier","src":"8341:3:36"},"nativeSrc":"8341:22:36","nodeType":"YulFunctionCall","src":"8341:22:36"},{"name":"dataEnd","nativeSrc":"8365:7:36","nodeType":"YulIdentifier","src":"8365:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"8310:30:36","nodeType":"YulIdentifier","src":"8310:30:36"},"nativeSrc":"8310:63:36","nodeType":"YulFunctionCall","src":"8310:63:36"},"variableNames":[{"name":"value1","nativeSrc":"8300:6:36","nodeType":"YulIdentifier","src":"8300:6:36"}]}]},{"nativeSrc":"8393:288:36","nodeType":"YulBlock","src":"8393:288:36","statements":[{"nativeSrc":"8408:46:36","nodeType":"YulVariableDeclaration","src":"8408:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8439:9:36","nodeType":"YulIdentifier","src":"8439:9:36"},{"kind":"number","nativeSrc":"8450:2:36","nodeType":"YulLiteral","src":"8450:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8435:3:36","nodeType":"YulIdentifier","src":"8435:3:36"},"nativeSrc":"8435:18:36","nodeType":"YulFunctionCall","src":"8435:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"8422:12:36","nodeType":"YulIdentifier","src":"8422:12:36"},"nativeSrc":"8422:32:36","nodeType":"YulFunctionCall","src":"8422:32:36"},"variables":[{"name":"offset","nativeSrc":"8412:6:36","nodeType":"YulTypedName","src":"8412:6:36","type":""}]},{"body":{"nativeSrc":"8501:83:36","nodeType":"YulBlock","src":"8501:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8503:77:36","nodeType":"YulIdentifier","src":"8503:77:36"},"nativeSrc":"8503:79:36","nodeType":"YulFunctionCall","src":"8503:79:36"},"nativeSrc":"8503:79:36","nodeType":"YulExpressionStatement","src":"8503:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8473:6:36","nodeType":"YulIdentifier","src":"8473:6:36"},{"kind":"number","nativeSrc":"8481:18:36","nodeType":"YulLiteral","src":"8481:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8470:2:36","nodeType":"YulIdentifier","src":"8470:2:36"},"nativeSrc":"8470:30:36","nodeType":"YulFunctionCall","src":"8470:30:36"},"nativeSrc":"8467:117:36","nodeType":"YulIf","src":"8467:117:36"},{"nativeSrc":"8598:73:36","nodeType":"YulAssignment","src":"8598:73:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8643:9:36","nodeType":"YulIdentifier","src":"8643:9:36"},{"name":"offset","nativeSrc":"8654:6:36","nodeType":"YulIdentifier","src":"8654:6:36"}],"functionName":{"name":"add","nativeSrc":"8639:3:36","nodeType":"YulIdentifier","src":"8639:3:36"},"nativeSrc":"8639:22:36","nodeType":"YulFunctionCall","src":"8639:22:36"},{"name":"dataEnd","nativeSrc":"8663:7:36","nodeType":"YulIdentifier","src":"8663:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"8608:30:36","nodeType":"YulIdentifier","src":"8608:30:36"},"nativeSrc":"8608:63:36","nodeType":"YulFunctionCall","src":"8608:63:36"},"variableNames":[{"name":"value2","nativeSrc":"8598:6:36","nodeType":"YulIdentifier","src":"8598:6:36"}]}]},{"nativeSrc":"8691:288:36","nodeType":"YulBlock","src":"8691:288:36","statements":[{"nativeSrc":"8706:46:36","nodeType":"YulVariableDeclaration","src":"8706:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8737:9:36","nodeType":"YulIdentifier","src":"8737:9:36"},{"kind":"number","nativeSrc":"8748:2:36","nodeType":"YulLiteral","src":"8748:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8733:3:36","nodeType":"YulIdentifier","src":"8733:3:36"},"nativeSrc":"8733:18:36","nodeType":"YulFunctionCall","src":"8733:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"8720:12:36","nodeType":"YulIdentifier","src":"8720:12:36"},"nativeSrc":"8720:32:36","nodeType":"YulFunctionCall","src":"8720:32:36"},"variables":[{"name":"offset","nativeSrc":"8710:6:36","nodeType":"YulTypedName","src":"8710:6:36","type":""}]},{"body":{"nativeSrc":"8799:83:36","nodeType":"YulBlock","src":"8799:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8801:77:36","nodeType":"YulIdentifier","src":"8801:77:36"},"nativeSrc":"8801:79:36","nodeType":"YulFunctionCall","src":"8801:79:36"},"nativeSrc":"8801:79:36","nodeType":"YulExpressionStatement","src":"8801:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8771:6:36","nodeType":"YulIdentifier","src":"8771:6:36"},{"kind":"number","nativeSrc":"8779:18:36","nodeType":"YulLiteral","src":"8779:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8768:2:36","nodeType":"YulIdentifier","src":"8768:2:36"},"nativeSrc":"8768:30:36","nodeType":"YulFunctionCall","src":"8768:30:36"},"nativeSrc":"8765:117:36","nodeType":"YulIf","src":"8765:117:36"},{"nativeSrc":"8896:73:36","nodeType":"YulAssignment","src":"8896:73:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8941:9:36","nodeType":"YulIdentifier","src":"8941:9:36"},{"name":"offset","nativeSrc":"8952:6:36","nodeType":"YulIdentifier","src":"8952:6:36"}],"functionName":{"name":"add","nativeSrc":"8937:3:36","nodeType":"YulIdentifier","src":"8937:3:36"},"nativeSrc":"8937:22:36","nodeType":"YulFunctionCall","src":"8937:22:36"},{"name":"dataEnd","nativeSrc":"8961:7:36","nodeType":"YulIdentifier","src":"8961:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"8906:30:36","nodeType":"YulIdentifier","src":"8906:30:36"},"nativeSrc":"8906:63:36","nodeType":"YulFunctionCall","src":"8906:63:36"},"variableNames":[{"name":"value3","nativeSrc":"8896:6:36","nodeType":"YulIdentifier","src":"8896:6:36"}]}]},{"nativeSrc":"8989:119:36","nodeType":"YulBlock","src":"8989:119:36","statements":[{"nativeSrc":"9004:17:36","nodeType":"YulVariableDeclaration","src":"9004:17:36","value":{"kind":"number","nativeSrc":"9018:3:36","nodeType":"YulLiteral","src":"9018:3:36","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"9008:6:36","nodeType":"YulTypedName","src":"9008:6:36","type":""}]},{"nativeSrc":"9035:63:36","nodeType":"YulAssignment","src":"9035:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9070:9:36","nodeType":"YulIdentifier","src":"9070:9:36"},{"name":"offset","nativeSrc":"9081:6:36","nodeType":"YulIdentifier","src":"9081:6:36"}],"functionName":{"name":"add","nativeSrc":"9066:3:36","nodeType":"YulIdentifier","src":"9066:3:36"},"nativeSrc":"9066:22:36","nodeType":"YulFunctionCall","src":"9066:22:36"},{"name":"dataEnd","nativeSrc":"9090:7:36","nodeType":"YulIdentifier","src":"9090:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9045:20:36","nodeType":"YulIdentifier","src":"9045:20:36"},"nativeSrc":"9045:53:36","nodeType":"YulFunctionCall","src":"9045:53:36"},"variableNames":[{"name":"value4","nativeSrc":"9035:6:36","nodeType":"YulIdentifier","src":"9035:6:36"}]}]},{"nativeSrc":"9118:119:36","nodeType":"YulBlock","src":"9118:119:36","statements":[{"nativeSrc":"9133:17:36","nodeType":"YulVariableDeclaration","src":"9133:17:36","value":{"kind":"number","nativeSrc":"9147:3:36","nodeType":"YulLiteral","src":"9147:3:36","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"9137:6:36","nodeType":"YulTypedName","src":"9137:6:36","type":""}]},{"nativeSrc":"9164:63:36","nodeType":"YulAssignment","src":"9164:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9199:9:36","nodeType":"YulIdentifier","src":"9199:9:36"},{"name":"offset","nativeSrc":"9210:6:36","nodeType":"YulIdentifier","src":"9210:6:36"}],"functionName":{"name":"add","nativeSrc":"9195:3:36","nodeType":"YulIdentifier","src":"9195:3:36"},"nativeSrc":"9195:22:36","nodeType":"YulFunctionCall","src":"9195:22:36"},{"name":"dataEnd","nativeSrc":"9219:7:36","nodeType":"YulIdentifier","src":"9219:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9174:20:36","nodeType":"YulIdentifier","src":"9174:20:36"},"nativeSrc":"9174:53:36","nodeType":"YulFunctionCall","src":"9174:53:36"},"variableNames":[{"name":"value5","nativeSrc":"9164:6:36","nodeType":"YulIdentifier","src":"9164:6:36"}]}]},{"nativeSrc":"9247:119:36","nodeType":"YulBlock","src":"9247:119:36","statements":[{"nativeSrc":"9262:17:36","nodeType":"YulVariableDeclaration","src":"9262:17:36","value":{"kind":"number","nativeSrc":"9276:3:36","nodeType":"YulLiteral","src":"9276:3:36","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"9266:6:36","nodeType":"YulTypedName","src":"9266:6:36","type":""}]},{"nativeSrc":"9293:63:36","nodeType":"YulAssignment","src":"9293:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9328:9:36","nodeType":"YulIdentifier","src":"9328:9:36"},{"name":"offset","nativeSrc":"9339:6:36","nodeType":"YulIdentifier","src":"9339:6:36"}],"functionName":{"name":"add","nativeSrc":"9324:3:36","nodeType":"YulIdentifier","src":"9324:3:36"},"nativeSrc":"9324:22:36","nodeType":"YulFunctionCall","src":"9324:22:36"},{"name":"dataEnd","nativeSrc":"9348:7:36","nodeType":"YulIdentifier","src":"9348:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9303:20:36","nodeType":"YulIdentifier","src":"9303:20:36"},"nativeSrc":"9303:53:36","nodeType":"YulFunctionCall","src":"9303:53:36"},"variableNames":[{"name":"value6","nativeSrc":"9293:6:36","nodeType":"YulIdentifier","src":"9293:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256","nativeSrc":"7630:1743:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7750:9:36","nodeType":"YulTypedName","src":"7750:9:36","type":""},{"name":"dataEnd","nativeSrc":"7761:7:36","nodeType":"YulTypedName","src":"7761:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7773:6:36","nodeType":"YulTypedName","src":"7773:6:36","type":""},{"name":"value1","nativeSrc":"7781:6:36","nodeType":"YulTypedName","src":"7781:6:36","type":""},{"name":"value2","nativeSrc":"7789:6:36","nodeType":"YulTypedName","src":"7789:6:36","type":""},{"name":"value3","nativeSrc":"7797:6:36","nodeType":"YulTypedName","src":"7797:6:36","type":""},{"name":"value4","nativeSrc":"7805:6:36","nodeType":"YulTypedName","src":"7805:6:36","type":""},{"name":"value5","nativeSrc":"7813:6:36","nodeType":"YulTypedName","src":"7813:6:36","type":""},{"name":"value6","nativeSrc":"7821:6:36","nodeType":"YulTypedName","src":"7821:6:36","type":""}],"src":"7630:1743:36"},{"body":{"nativeSrc":"9444:53:36","nodeType":"YulBlock","src":"9444:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9461:3:36","nodeType":"YulIdentifier","src":"9461:3:36"},{"arguments":[{"name":"value","nativeSrc":"9484:5:36","nodeType":"YulIdentifier","src":"9484:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9466:17:36","nodeType":"YulIdentifier","src":"9466:17:36"},"nativeSrc":"9466:24:36","nodeType":"YulFunctionCall","src":"9466:24:36"}],"functionName":{"name":"mstore","nativeSrc":"9454:6:36","nodeType":"YulIdentifier","src":"9454:6:36"},"nativeSrc":"9454:37:36","nodeType":"YulFunctionCall","src":"9454:37:36"},"nativeSrc":"9454:37:36","nodeType":"YulExpressionStatement","src":"9454:37:36"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9379:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9432:5:36","nodeType":"YulTypedName","src":"9432:5:36","type":""},{"name":"pos","nativeSrc":"9439:3:36","nodeType":"YulTypedName","src":"9439:3:36","type":""}],"src":"9379:118:36"},{"body":{"nativeSrc":"9601:124:36","nodeType":"YulBlock","src":"9601:124:36","statements":[{"nativeSrc":"9611:26:36","nodeType":"YulAssignment","src":"9611:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"9623:9:36","nodeType":"YulIdentifier","src":"9623:9:36"},{"kind":"number","nativeSrc":"9634:2:36","nodeType":"YulLiteral","src":"9634:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9619:3:36","nodeType":"YulIdentifier","src":"9619:3:36"},"nativeSrc":"9619:18:36","nodeType":"YulFunctionCall","src":"9619:18:36"},"variableNames":[{"name":"tail","nativeSrc":"9611:4:36","nodeType":"YulIdentifier","src":"9611:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9691:6:36","nodeType":"YulIdentifier","src":"9691:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"9704:9:36","nodeType":"YulIdentifier","src":"9704:9:36"},{"kind":"number","nativeSrc":"9715:1:36","nodeType":"YulLiteral","src":"9715:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9700:3:36","nodeType":"YulIdentifier","src":"9700:3:36"},"nativeSrc":"9700:17:36","nodeType":"YulFunctionCall","src":"9700:17:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9647:43:36","nodeType":"YulIdentifier","src":"9647:43:36"},"nativeSrc":"9647:71:36","nodeType":"YulFunctionCall","src":"9647:71:36"},"nativeSrc":"9647:71:36","nodeType":"YulExpressionStatement","src":"9647:71:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"9503:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9573:9:36","nodeType":"YulTypedName","src":"9573:9:36","type":""},{"name":"value0","nativeSrc":"9585:6:36","nodeType":"YulTypedName","src":"9585:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9596:4:36","nodeType":"YulTypedName","src":"9596:4:36","type":""}],"src":"9503:222:36"},{"body":{"nativeSrc":"9807:433:36","nodeType":"YulBlock","src":"9807:433:36","statements":[{"body":{"nativeSrc":"9853:83:36","nodeType":"YulBlock","src":"9853:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9855:77:36","nodeType":"YulIdentifier","src":"9855:77:36"},"nativeSrc":"9855:79:36","nodeType":"YulFunctionCall","src":"9855:79:36"},"nativeSrc":"9855:79:36","nodeType":"YulExpressionStatement","src":"9855:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9828:7:36","nodeType":"YulIdentifier","src":"9828:7:36"},{"name":"headStart","nativeSrc":"9837:9:36","nodeType":"YulIdentifier","src":"9837:9:36"}],"functionName":{"name":"sub","nativeSrc":"9824:3:36","nodeType":"YulIdentifier","src":"9824:3:36"},"nativeSrc":"9824:23:36","nodeType":"YulFunctionCall","src":"9824:23:36"},{"kind":"number","nativeSrc":"9849:2:36","nodeType":"YulLiteral","src":"9849:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9820:3:36","nodeType":"YulIdentifier","src":"9820:3:36"},"nativeSrc":"9820:32:36","nodeType":"YulFunctionCall","src":"9820:32:36"},"nativeSrc":"9817:119:36","nodeType":"YulIf","src":"9817:119:36"},{"nativeSrc":"9946:287:36","nodeType":"YulBlock","src":"9946:287:36","statements":[{"nativeSrc":"9961:45:36","nodeType":"YulVariableDeclaration","src":"9961:45:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9992:9:36","nodeType":"YulIdentifier","src":"9992:9:36"},{"kind":"number","nativeSrc":"10003:1:36","nodeType":"YulLiteral","src":"10003:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9988:3:36","nodeType":"YulIdentifier","src":"9988:3:36"},"nativeSrc":"9988:17:36","nodeType":"YulFunctionCall","src":"9988:17:36"}],"functionName":{"name":"calldataload","nativeSrc":"9975:12:36","nodeType":"YulIdentifier","src":"9975:12:36"},"nativeSrc":"9975:31:36","nodeType":"YulFunctionCall","src":"9975:31:36"},"variables":[{"name":"offset","nativeSrc":"9965:6:36","nodeType":"YulTypedName","src":"9965:6:36","type":""}]},{"body":{"nativeSrc":"10053:83:36","nodeType":"YulBlock","src":"10053:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10055:77:36","nodeType":"YulIdentifier","src":"10055:77:36"},"nativeSrc":"10055:79:36","nodeType":"YulFunctionCall","src":"10055:79:36"},"nativeSrc":"10055:79:36","nodeType":"YulExpressionStatement","src":"10055:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10025:6:36","nodeType":"YulIdentifier","src":"10025:6:36"},{"kind":"number","nativeSrc":"10033:18:36","nodeType":"YulLiteral","src":"10033:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10022:2:36","nodeType":"YulIdentifier","src":"10022:2:36"},"nativeSrc":"10022:30:36","nodeType":"YulFunctionCall","src":"10022:30:36"},"nativeSrc":"10019:117:36","nodeType":"YulIf","src":"10019:117:36"},{"nativeSrc":"10150:73:36","nodeType":"YulAssignment","src":"10150:73:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10195:9:36","nodeType":"YulIdentifier","src":"10195:9:36"},{"name":"offset","nativeSrc":"10206:6:36","nodeType":"YulIdentifier","src":"10206:6:36"}],"functionName":{"name":"add","nativeSrc":"10191:3:36","nodeType":"YulIdentifier","src":"10191:3:36"},"nativeSrc":"10191:22:36","nodeType":"YulFunctionCall","src":"10191:22:36"},{"name":"dataEnd","nativeSrc":"10215:7:36","nodeType":"YulIdentifier","src":"10215:7:36"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"10160:30:36","nodeType":"YulIdentifier","src":"10160:30:36"},"nativeSrc":"10160:63:36","nodeType":"YulFunctionCall","src":"10160:63:36"},"variableNames":[{"name":"value0","nativeSrc":"10150:6:36","nodeType":"YulIdentifier","src":"10150:6:36"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"9731:509:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9777:9:36","nodeType":"YulTypedName","src":"9777:9:36","type":""},{"name":"dataEnd","nativeSrc":"9788:7:36","nodeType":"YulTypedName","src":"9788:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9800:6:36","nodeType":"YulTypedName","src":"9800:6:36","type":""}],"src":"9731:509:36"},{"body":{"nativeSrc":"10496:596:36","nodeType":"YulBlock","src":"10496:596:36","statements":[{"nativeSrc":"10506:27:36","nodeType":"YulAssignment","src":"10506:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"10518:9:36","nodeType":"YulIdentifier","src":"10518:9:36"},{"kind":"number","nativeSrc":"10529:3:36","nodeType":"YulLiteral","src":"10529:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10514:3:36","nodeType":"YulIdentifier","src":"10514:3:36"},"nativeSrc":"10514:19:36","nodeType":"YulFunctionCall","src":"10514:19:36"},"variableNames":[{"name":"tail","nativeSrc":"10506:4:36","nodeType":"YulIdentifier","src":"10506:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10554:9:36","nodeType":"YulIdentifier","src":"10554:9:36"},{"kind":"number","nativeSrc":"10565:1:36","nodeType":"YulLiteral","src":"10565:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10550:3:36","nodeType":"YulIdentifier","src":"10550:3:36"},"nativeSrc":"10550:17:36","nodeType":"YulFunctionCall","src":"10550:17:36"},{"arguments":[{"name":"tail","nativeSrc":"10573:4:36","nodeType":"YulIdentifier","src":"10573:4:36"},{"name":"headStart","nativeSrc":"10579:9:36","nodeType":"YulIdentifier","src":"10579:9:36"}],"functionName":{"name":"sub","nativeSrc":"10569:3:36","nodeType":"YulIdentifier","src":"10569:3:36"},"nativeSrc":"10569:20:36","nodeType":"YulFunctionCall","src":"10569:20:36"}],"functionName":{"name":"mstore","nativeSrc":"10543:6:36","nodeType":"YulIdentifier","src":"10543:6:36"},"nativeSrc":"10543:47:36","nodeType":"YulFunctionCall","src":"10543:47:36"},"nativeSrc":"10543:47:36","nodeType":"YulExpressionStatement","src":"10543:47:36"},{"nativeSrc":"10599:86:36","nodeType":"YulAssignment","src":"10599:86:36","value":{"arguments":[{"name":"value0","nativeSrc":"10671:6:36","nodeType":"YulIdentifier","src":"10671:6:36"},{"name":"tail","nativeSrc":"10680:4:36","nodeType":"YulIdentifier","src":"10680:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10607:63:36","nodeType":"YulIdentifier","src":"10607:63:36"},"nativeSrc":"10607:78:36","nodeType":"YulFunctionCall","src":"10607:78:36"},"variableNames":[{"name":"tail","nativeSrc":"10599:4:36","nodeType":"YulIdentifier","src":"10599:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10706:9:36","nodeType":"YulIdentifier","src":"10706:9:36"},{"kind":"number","nativeSrc":"10717:2:36","nodeType":"YulLiteral","src":"10717:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10702:3:36","nodeType":"YulIdentifier","src":"10702:3:36"},"nativeSrc":"10702:18:36","nodeType":"YulFunctionCall","src":"10702:18:36"},{"arguments":[{"name":"tail","nativeSrc":"10726:4:36","nodeType":"YulIdentifier","src":"10726:4:36"},{"name":"headStart","nativeSrc":"10732:9:36","nodeType":"YulIdentifier","src":"10732:9:36"}],"functionName":{"name":"sub","nativeSrc":"10722:3:36","nodeType":"YulIdentifier","src":"10722:3:36"},"nativeSrc":"10722:20:36","nodeType":"YulFunctionCall","src":"10722:20:36"}],"functionName":{"name":"mstore","nativeSrc":"10695:6:36","nodeType":"YulIdentifier","src":"10695:6:36"},"nativeSrc":"10695:48:36","nodeType":"YulFunctionCall","src":"10695:48:36"},"nativeSrc":"10695:48:36","nodeType":"YulExpressionStatement","src":"10695:48:36"},{"nativeSrc":"10752:86:36","nodeType":"YulAssignment","src":"10752:86:36","value":{"arguments":[{"name":"value1","nativeSrc":"10824:6:36","nodeType":"YulIdentifier","src":"10824:6:36"},{"name":"tail","nativeSrc":"10833:4:36","nodeType":"YulIdentifier","src":"10833:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10760:63:36","nodeType":"YulIdentifier","src":"10760:63:36"},"nativeSrc":"10760:78:36","nodeType":"YulFunctionCall","src":"10760:78:36"},"variableNames":[{"name":"tail","nativeSrc":"10752:4:36","nodeType":"YulIdentifier","src":"10752:4:36"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10892:6:36","nodeType":"YulIdentifier","src":"10892:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"10905:9:36","nodeType":"YulIdentifier","src":"10905:9:36"},{"kind":"number","nativeSrc":"10916:2:36","nodeType":"YulLiteral","src":"10916:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10901:3:36","nodeType":"YulIdentifier","src":"10901:3:36"},"nativeSrc":"10901:18:36","nodeType":"YulFunctionCall","src":"10901:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10848:43:36","nodeType":"YulIdentifier","src":"10848:43:36"},"nativeSrc":"10848:72:36","nodeType":"YulFunctionCall","src":"10848:72:36"},"nativeSrc":"10848:72:36","nodeType":"YulExpressionStatement","src":"10848:72:36"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10974:6:36","nodeType":"YulIdentifier","src":"10974:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"10987:9:36","nodeType":"YulIdentifier","src":"10987:9:36"},{"kind":"number","nativeSrc":"10998:2:36","nodeType":"YulLiteral","src":"10998:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10983:3:36","nodeType":"YulIdentifier","src":"10983:3:36"},"nativeSrc":"10983:18:36","nodeType":"YulFunctionCall","src":"10983:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10930:43:36","nodeType":"YulIdentifier","src":"10930:43:36"},"nativeSrc":"10930:72:36","nodeType":"YulFunctionCall","src":"10930:72:36"},"nativeSrc":"10930:72:36","nodeType":"YulExpressionStatement","src":"10930:72:36"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11056:6:36","nodeType":"YulIdentifier","src":"11056:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"11069:9:36","nodeType":"YulIdentifier","src":"11069:9:36"},{"kind":"number","nativeSrc":"11080:3:36","nodeType":"YulLiteral","src":"11080:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11065:3:36","nodeType":"YulIdentifier","src":"11065:3:36"},"nativeSrc":"11065:19:36","nodeType":"YulFunctionCall","src":"11065:19:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11012:43:36","nodeType":"YulIdentifier","src":"11012:43:36"},"nativeSrc":"11012:73:36","nodeType":"YulFunctionCall","src":"11012:73:36"},"nativeSrc":"11012:73:36","nodeType":"YulExpressionStatement","src":"11012:73:36"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10246:846:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10436:9:36","nodeType":"YulTypedName","src":"10436:9:36","type":""},{"name":"value4","nativeSrc":"10448:6:36","nodeType":"YulTypedName","src":"10448:6:36","type":""},{"name":"value3","nativeSrc":"10456:6:36","nodeType":"YulTypedName","src":"10456:6:36","type":""},{"name":"value2","nativeSrc":"10464:6:36","nodeType":"YulTypedName","src":"10464:6:36","type":""},{"name":"value1","nativeSrc":"10472:6:36","nodeType":"YulTypedName","src":"10472:6:36","type":""},{"name":"value0","nativeSrc":"10480:6:36","nodeType":"YulTypedName","src":"10480:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10491:4:36","nodeType":"YulTypedName","src":"10491:4:36","type":""}],"src":"10246:846:36"},{"body":{"nativeSrc":"11164:263:36","nodeType":"YulBlock","src":"11164:263:36","statements":[{"body":{"nativeSrc":"11210:83:36","nodeType":"YulBlock","src":"11210:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11212:77:36","nodeType":"YulIdentifier","src":"11212:77:36"},"nativeSrc":"11212:79:36","nodeType":"YulFunctionCall","src":"11212:79:36"},"nativeSrc":"11212:79:36","nodeType":"YulExpressionStatement","src":"11212:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11185:7:36","nodeType":"YulIdentifier","src":"11185:7:36"},{"name":"headStart","nativeSrc":"11194:9:36","nodeType":"YulIdentifier","src":"11194:9:36"}],"functionName":{"name":"sub","nativeSrc":"11181:3:36","nodeType":"YulIdentifier","src":"11181:3:36"},"nativeSrc":"11181:23:36","nodeType":"YulFunctionCall","src":"11181:23:36"},{"kind":"number","nativeSrc":"11206:2:36","nodeType":"YulLiteral","src":"11206:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11177:3:36","nodeType":"YulIdentifier","src":"11177:3:36"},"nativeSrc":"11177:32:36","nodeType":"YulFunctionCall","src":"11177:32:36"},"nativeSrc":"11174:119:36","nodeType":"YulIf","src":"11174:119:36"},{"nativeSrc":"11303:117:36","nodeType":"YulBlock","src":"11303:117:36","statements":[{"nativeSrc":"11318:15:36","nodeType":"YulVariableDeclaration","src":"11318:15:36","value":{"kind":"number","nativeSrc":"11332:1:36","nodeType":"YulLiteral","src":"11332:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11322:6:36","nodeType":"YulTypedName","src":"11322:6:36","type":""}]},{"nativeSrc":"11347:63:36","nodeType":"YulAssignment","src":"11347:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11382:9:36","nodeType":"YulIdentifier","src":"11382:9:36"},{"name":"offset","nativeSrc":"11393:6:36","nodeType":"YulIdentifier","src":"11393:6:36"}],"functionName":{"name":"add","nativeSrc":"11378:3:36","nodeType":"YulIdentifier","src":"11378:3:36"},"nativeSrc":"11378:22:36","nodeType":"YulFunctionCall","src":"11378:22:36"},{"name":"dataEnd","nativeSrc":"11402:7:36","nodeType":"YulIdentifier","src":"11402:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11357:20:36","nodeType":"YulIdentifier","src":"11357:20:36"},"nativeSrc":"11357:53:36","nodeType":"YulFunctionCall","src":"11357:53:36"},"variableNames":[{"name":"value0","nativeSrc":"11347:6:36","nodeType":"YulIdentifier","src":"11347:6:36"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"11098:329:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11134:9:36","nodeType":"YulTypedName","src":"11134:9:36","type":""},{"name":"dataEnd","nativeSrc":"11145:7:36","nodeType":"YulTypedName","src":"11145:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11157:6:36","nodeType":"YulTypedName","src":"11157:6:36","type":""}],"src":"11098:329:36"},{"body":{"nativeSrc":"11473:76:36","nodeType":"YulBlock","src":"11473:76:36","statements":[{"body":{"nativeSrc":"11527:16:36","nodeType":"YulBlock","src":"11527:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11536:1:36","nodeType":"YulLiteral","src":"11536:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"11539:1:36","nodeType":"YulLiteral","src":"11539:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11529:6:36","nodeType":"YulIdentifier","src":"11529:6:36"},"nativeSrc":"11529:12:36","nodeType":"YulFunctionCall","src":"11529:12:36"},"nativeSrc":"11529:12:36","nodeType":"YulExpressionStatement","src":"11529:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11496:5:36","nodeType":"YulIdentifier","src":"11496:5:36"},{"arguments":[{"name":"value","nativeSrc":"11518:5:36","nodeType":"YulIdentifier","src":"11518:5:36"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"11503:14:36","nodeType":"YulIdentifier","src":"11503:14:36"},"nativeSrc":"11503:21:36","nodeType":"YulFunctionCall","src":"11503:21:36"}],"functionName":{"name":"eq","nativeSrc":"11493:2:36","nodeType":"YulIdentifier","src":"11493:2:36"},"nativeSrc":"11493:32:36","nodeType":"YulFunctionCall","src":"11493:32:36"}],"functionName":{"name":"iszero","nativeSrc":"11486:6:36","nodeType":"YulIdentifier","src":"11486:6:36"},"nativeSrc":"11486:40:36","nodeType":"YulFunctionCall","src":"11486:40:36"},"nativeSrc":"11483:60:36","nodeType":"YulIf","src":"11483:60:36"}]},"name":"validator_revert_t_bool","nativeSrc":"11433:116:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11466:5:36","nodeType":"YulTypedName","src":"11466:5:36","type":""}],"src":"11433:116:36"},{"body":{"nativeSrc":"11604:84:36","nodeType":"YulBlock","src":"11604:84:36","statements":[{"nativeSrc":"11614:29:36","nodeType":"YulAssignment","src":"11614:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"11636:6:36","nodeType":"YulIdentifier","src":"11636:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"11623:12:36","nodeType":"YulIdentifier","src":"11623:12:36"},"nativeSrc":"11623:20:36","nodeType":"YulFunctionCall","src":"11623:20:36"},"variableNames":[{"name":"value","nativeSrc":"11614:5:36","nodeType":"YulIdentifier","src":"11614:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11676:5:36","nodeType":"YulIdentifier","src":"11676:5:36"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"11652:23:36","nodeType":"YulIdentifier","src":"11652:23:36"},"nativeSrc":"11652:30:36","nodeType":"YulFunctionCall","src":"11652:30:36"},"nativeSrc":"11652:30:36","nodeType":"YulExpressionStatement","src":"11652:30:36"}]},"name":"abi_decode_t_bool","nativeSrc":"11555:133:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11582:6:36","nodeType":"YulTypedName","src":"11582:6:36","type":""},{"name":"end","nativeSrc":"11590:3:36","nodeType":"YulTypedName","src":"11590:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11598:5:36","nodeType":"YulTypedName","src":"11598:5:36","type":""}],"src":"11555:133:36"},{"body":{"nativeSrc":"11774:388:36","nodeType":"YulBlock","src":"11774:388:36","statements":[{"body":{"nativeSrc":"11820:83:36","nodeType":"YulBlock","src":"11820:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11822:77:36","nodeType":"YulIdentifier","src":"11822:77:36"},"nativeSrc":"11822:79:36","nodeType":"YulFunctionCall","src":"11822:79:36"},"nativeSrc":"11822:79:36","nodeType":"YulExpressionStatement","src":"11822:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11795:7:36","nodeType":"YulIdentifier","src":"11795:7:36"},{"name":"headStart","nativeSrc":"11804:9:36","nodeType":"YulIdentifier","src":"11804:9:36"}],"functionName":{"name":"sub","nativeSrc":"11791:3:36","nodeType":"YulIdentifier","src":"11791:3:36"},"nativeSrc":"11791:23:36","nodeType":"YulFunctionCall","src":"11791:23:36"},{"kind":"number","nativeSrc":"11816:2:36","nodeType":"YulLiteral","src":"11816:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11787:3:36","nodeType":"YulIdentifier","src":"11787:3:36"},"nativeSrc":"11787:32:36","nodeType":"YulFunctionCall","src":"11787:32:36"},"nativeSrc":"11784:119:36","nodeType":"YulIf","src":"11784:119:36"},{"nativeSrc":"11913:117:36","nodeType":"YulBlock","src":"11913:117:36","statements":[{"nativeSrc":"11928:15:36","nodeType":"YulVariableDeclaration","src":"11928:15:36","value":{"kind":"number","nativeSrc":"11942:1:36","nodeType":"YulLiteral","src":"11942:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11932:6:36","nodeType":"YulTypedName","src":"11932:6:36","type":""}]},{"nativeSrc":"11957:63:36","nodeType":"YulAssignment","src":"11957:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11992:9:36","nodeType":"YulIdentifier","src":"11992:9:36"},{"name":"offset","nativeSrc":"12003:6:36","nodeType":"YulIdentifier","src":"12003:6:36"}],"functionName":{"name":"add","nativeSrc":"11988:3:36","nodeType":"YulIdentifier","src":"11988:3:36"},"nativeSrc":"11988:22:36","nodeType":"YulFunctionCall","src":"11988:22:36"},{"name":"dataEnd","nativeSrc":"12012:7:36","nodeType":"YulIdentifier","src":"12012:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11967:20:36","nodeType":"YulIdentifier","src":"11967:20:36"},"nativeSrc":"11967:53:36","nodeType":"YulFunctionCall","src":"11967:53:36"},"variableNames":[{"name":"value0","nativeSrc":"11957:6:36","nodeType":"YulIdentifier","src":"11957:6:36"}]}]},{"nativeSrc":"12040:115:36","nodeType":"YulBlock","src":"12040:115:36","statements":[{"nativeSrc":"12055:16:36","nodeType":"YulVariableDeclaration","src":"12055:16:36","value":{"kind":"number","nativeSrc":"12069:2:36","nodeType":"YulLiteral","src":"12069:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12059:6:36","nodeType":"YulTypedName","src":"12059:6:36","type":""}]},{"nativeSrc":"12085:60:36","nodeType":"YulAssignment","src":"12085:60:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12117:9:36","nodeType":"YulIdentifier","src":"12117:9:36"},{"name":"offset","nativeSrc":"12128:6:36","nodeType":"YulIdentifier","src":"12128:6:36"}],"functionName":{"name":"add","nativeSrc":"12113:3:36","nodeType":"YulIdentifier","src":"12113:3:36"},"nativeSrc":"12113:22:36","nodeType":"YulFunctionCall","src":"12113:22:36"},{"name":"dataEnd","nativeSrc":"12137:7:36","nodeType":"YulIdentifier","src":"12137:7:36"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"12095:17:36","nodeType":"YulIdentifier","src":"12095:17:36"},"nativeSrc":"12095:50:36","nodeType":"YulFunctionCall","src":"12095:50:36"},"variableNames":[{"name":"value1","nativeSrc":"12085:6:36","nodeType":"YulIdentifier","src":"12085:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"11694:468:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11736:9:36","nodeType":"YulTypedName","src":"11736:9:36","type":""},{"name":"dataEnd","nativeSrc":"11747:7:36","nodeType":"YulTypedName","src":"11747:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11759:6:36","nodeType":"YulTypedName","src":"11759:6:36","type":""},{"name":"value1","nativeSrc":"11767:6:36","nodeType":"YulTypedName","src":"11767:6:36","type":""}],"src":"11694:468:36"},{"body":{"nativeSrc":"12446:679:36","nodeType":"YulBlock","src":"12446:679:36","statements":[{"nativeSrc":"12456:27:36","nodeType":"YulAssignment","src":"12456:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"12468:9:36","nodeType":"YulIdentifier","src":"12468:9:36"},{"kind":"number","nativeSrc":"12479:3:36","nodeType":"YulLiteral","src":"12479:3:36","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12464:3:36","nodeType":"YulIdentifier","src":"12464:3:36"},"nativeSrc":"12464:19:36","nodeType":"YulFunctionCall","src":"12464:19:36"},"variableNames":[{"name":"tail","nativeSrc":"12456:4:36","nodeType":"YulIdentifier","src":"12456:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12504:9:36","nodeType":"YulIdentifier","src":"12504:9:36"},{"kind":"number","nativeSrc":"12515:1:36","nodeType":"YulLiteral","src":"12515:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12500:3:36","nodeType":"YulIdentifier","src":"12500:3:36"},"nativeSrc":"12500:17:36","nodeType":"YulFunctionCall","src":"12500:17:36"},{"arguments":[{"name":"tail","nativeSrc":"12523:4:36","nodeType":"YulIdentifier","src":"12523:4:36"},{"name":"headStart","nativeSrc":"12529:9:36","nodeType":"YulIdentifier","src":"12529:9:36"}],"functionName":{"name":"sub","nativeSrc":"12519:3:36","nodeType":"YulIdentifier","src":"12519:3:36"},"nativeSrc":"12519:20:36","nodeType":"YulFunctionCall","src":"12519:20:36"}],"functionName":{"name":"mstore","nativeSrc":"12493:6:36","nodeType":"YulIdentifier","src":"12493:6:36"},"nativeSrc":"12493:47:36","nodeType":"YulFunctionCall","src":"12493:47:36"},"nativeSrc":"12493:47:36","nodeType":"YulExpressionStatement","src":"12493:47:36"},{"nativeSrc":"12549:86:36","nodeType":"YulAssignment","src":"12549:86:36","value":{"arguments":[{"name":"value0","nativeSrc":"12621:6:36","nodeType":"YulIdentifier","src":"12621:6:36"},{"name":"tail","nativeSrc":"12630:4:36","nodeType":"YulIdentifier","src":"12630:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12557:63:36","nodeType":"YulIdentifier","src":"12557:63:36"},"nativeSrc":"12557:78:36","nodeType":"YulFunctionCall","src":"12557:78:36"},"variableNames":[{"name":"tail","nativeSrc":"12549:4:36","nodeType":"YulIdentifier","src":"12549:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12656:9:36","nodeType":"YulIdentifier","src":"12656:9:36"},{"kind":"number","nativeSrc":"12667:2:36","nodeType":"YulLiteral","src":"12667:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12652:3:36","nodeType":"YulIdentifier","src":"12652:3:36"},"nativeSrc":"12652:18:36","nodeType":"YulFunctionCall","src":"12652:18:36"},{"arguments":[{"name":"tail","nativeSrc":"12676:4:36","nodeType":"YulIdentifier","src":"12676:4:36"},{"name":"headStart","nativeSrc":"12682:9:36","nodeType":"YulIdentifier","src":"12682:9:36"}],"functionName":{"name":"sub","nativeSrc":"12672:3:36","nodeType":"YulIdentifier","src":"12672:3:36"},"nativeSrc":"12672:20:36","nodeType":"YulFunctionCall","src":"12672:20:36"}],"functionName":{"name":"mstore","nativeSrc":"12645:6:36","nodeType":"YulIdentifier","src":"12645:6:36"},"nativeSrc":"12645:48:36","nodeType":"YulFunctionCall","src":"12645:48:36"},"nativeSrc":"12645:48:36","nodeType":"YulExpressionStatement","src":"12645:48:36"},{"nativeSrc":"12702:86:36","nodeType":"YulAssignment","src":"12702:86:36","value":{"arguments":[{"name":"value1","nativeSrc":"12774:6:36","nodeType":"YulIdentifier","src":"12774:6:36"},{"name":"tail","nativeSrc":"12783:4:36","nodeType":"YulIdentifier","src":"12783:4:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12710:63:36","nodeType":"YulIdentifier","src":"12710:63:36"},"nativeSrc":"12710:78:36","nodeType":"YulFunctionCall","src":"12710:78:36"},"variableNames":[{"name":"tail","nativeSrc":"12702:4:36","nodeType":"YulIdentifier","src":"12702:4:36"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12842:6:36","nodeType":"YulIdentifier","src":"12842:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12855:9:36","nodeType":"YulIdentifier","src":"12855:9:36"},{"kind":"number","nativeSrc":"12866:2:36","nodeType":"YulLiteral","src":"12866:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12851:3:36","nodeType":"YulIdentifier","src":"12851:3:36"},"nativeSrc":"12851:18:36","nodeType":"YulFunctionCall","src":"12851:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12798:43:36","nodeType":"YulIdentifier","src":"12798:43:36"},"nativeSrc":"12798:72:36","nodeType":"YulFunctionCall","src":"12798:72:36"},"nativeSrc":"12798:72:36","nodeType":"YulExpressionStatement","src":"12798:72:36"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12924:6:36","nodeType":"YulIdentifier","src":"12924:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12937:9:36","nodeType":"YulIdentifier","src":"12937:9:36"},{"kind":"number","nativeSrc":"12948:2:36","nodeType":"YulLiteral","src":"12948:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12933:3:36","nodeType":"YulIdentifier","src":"12933:3:36"},"nativeSrc":"12933:18:36","nodeType":"YulFunctionCall","src":"12933:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12880:43:36","nodeType":"YulIdentifier","src":"12880:43:36"},"nativeSrc":"12880:72:36","nodeType":"YulFunctionCall","src":"12880:72:36"},"nativeSrc":"12880:72:36","nodeType":"YulExpressionStatement","src":"12880:72:36"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"13006:6:36","nodeType":"YulIdentifier","src":"13006:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"13019:9:36","nodeType":"YulIdentifier","src":"13019:9:36"},{"kind":"number","nativeSrc":"13030:3:36","nodeType":"YulLiteral","src":"13030:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13015:3:36","nodeType":"YulIdentifier","src":"13015:3:36"},"nativeSrc":"13015:19:36","nodeType":"YulFunctionCall","src":"13015:19:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12962:43:36","nodeType":"YulIdentifier","src":"12962:43:36"},"nativeSrc":"12962:73:36","nodeType":"YulFunctionCall","src":"12962:73:36"},"nativeSrc":"12962:73:36","nodeType":"YulExpressionStatement","src":"12962:73:36"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"13089:6:36","nodeType":"YulIdentifier","src":"13089:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"13102:9:36","nodeType":"YulIdentifier","src":"13102:9:36"},{"kind":"number","nativeSrc":"13113:3:36","nodeType":"YulLiteral","src":"13113:3:36","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"13098:3:36","nodeType":"YulIdentifier","src":"13098:3:36"},"nativeSrc":"13098:19:36","nodeType":"YulFunctionCall","src":"13098:19:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13045:43:36","nodeType":"YulIdentifier","src":"13045:43:36"},"nativeSrc":"13045:73:36","nodeType":"YulFunctionCall","src":"13045:73:36"},"nativeSrc":"13045:73:36","nodeType":"YulExpressionStatement","src":"13045:73:36"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed","nativeSrc":"12168:957:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12378:9:36","nodeType":"YulTypedName","src":"12378:9:36","type":""},{"name":"value5","nativeSrc":"12390:6:36","nodeType":"YulTypedName","src":"12390:6:36","type":""},{"name":"value4","nativeSrc":"12398:6:36","nodeType":"YulTypedName","src":"12398:6:36","type":""},{"name":"value3","nativeSrc":"12406:6:36","nodeType":"YulTypedName","src":"12406:6:36","type":""},{"name":"value2","nativeSrc":"12414:6:36","nodeType":"YulTypedName","src":"12414:6:36","type":""},{"name":"value1","nativeSrc":"12422:6:36","nodeType":"YulTypedName","src":"12422:6:36","type":""},{"name":"value0","nativeSrc":"12430:6:36","nodeType":"YulTypedName","src":"12430:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12441:4:36","nodeType":"YulTypedName","src":"12441:4:36","type":""}],"src":"12168:957:36"},{"body":{"nativeSrc":"13197:241:36","nodeType":"YulBlock","src":"13197:241:36","statements":[{"body":{"nativeSrc":"13302:22:36","nodeType":"YulBlock","src":"13302:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"13304:16:36","nodeType":"YulIdentifier","src":"13304:16:36"},"nativeSrc":"13304:18:36","nodeType":"YulFunctionCall","src":"13304:18:36"},"nativeSrc":"13304:18:36","nodeType":"YulExpressionStatement","src":"13304:18:36"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13274:6:36","nodeType":"YulIdentifier","src":"13274:6:36"},{"kind":"number","nativeSrc":"13282:18:36","nodeType":"YulLiteral","src":"13282:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13271:2:36","nodeType":"YulIdentifier","src":"13271:2:36"},"nativeSrc":"13271:30:36","nodeType":"YulFunctionCall","src":"13271:30:36"},"nativeSrc":"13268:56:36","nodeType":"YulIf","src":"13268:56:36"},{"nativeSrc":"13334:37:36","nodeType":"YulAssignment","src":"13334:37:36","value":{"arguments":[{"name":"length","nativeSrc":"13364:6:36","nodeType":"YulIdentifier","src":"13364:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"13342:21:36","nodeType":"YulIdentifier","src":"13342:21:36"},"nativeSrc":"13342:29:36","nodeType":"YulFunctionCall","src":"13342:29:36"},"variableNames":[{"name":"size","nativeSrc":"13334:4:36","nodeType":"YulIdentifier","src":"13334:4:36"}]},{"nativeSrc":"13408:23:36","nodeType":"YulAssignment","src":"13408:23:36","value":{"arguments":[{"name":"size","nativeSrc":"13420:4:36","nodeType":"YulIdentifier","src":"13420:4:36"},{"kind":"number","nativeSrc":"13426:4:36","nodeType":"YulLiteral","src":"13426:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13416:3:36","nodeType":"YulIdentifier","src":"13416:3:36"},"nativeSrc":"13416:15:36","nodeType":"YulFunctionCall","src":"13416:15:36"},"variableNames":[{"name":"size","nativeSrc":"13408:4:36","nodeType":"YulIdentifier","src":"13408:4:36"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"13131:307:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"13181:6:36","nodeType":"YulTypedName","src":"13181:6:36","type":""}],"returnVariables":[{"name":"size","nativeSrc":"13192:4:36","nodeType":"YulTypedName","src":"13192:4:36","type":""}],"src":"13131:307:36"},{"body":{"nativeSrc":"13527:340:36","nodeType":"YulBlock","src":"13527:340:36","statements":[{"nativeSrc":"13537:74:36","nodeType":"YulAssignment","src":"13537:74:36","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"13603:6:36","nodeType":"YulIdentifier","src":"13603:6:36"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"13562:40:36","nodeType":"YulIdentifier","src":"13562:40:36"},"nativeSrc":"13562:48:36","nodeType":"YulFunctionCall","src":"13562:48:36"}],"functionName":{"name":"allocate_memory","nativeSrc":"13546:15:36","nodeType":"YulIdentifier","src":"13546:15:36"},"nativeSrc":"13546:65:36","nodeType":"YulFunctionCall","src":"13546:65:36"},"variableNames":[{"name":"array","nativeSrc":"13537:5:36","nodeType":"YulIdentifier","src":"13537:5:36"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"13627:5:36","nodeType":"YulIdentifier","src":"13627:5:36"},{"name":"length","nativeSrc":"13634:6:36","nodeType":"YulIdentifier","src":"13634:6:36"}],"functionName":{"name":"mstore","nativeSrc":"13620:6:36","nodeType":"YulIdentifier","src":"13620:6:36"},"nativeSrc":"13620:21:36","nodeType":"YulFunctionCall","src":"13620:21:36"},"nativeSrc":"13620:21:36","nodeType":"YulExpressionStatement","src":"13620:21:36"},{"nativeSrc":"13650:27:36","nodeType":"YulVariableDeclaration","src":"13650:27:36","value":{"arguments":[{"name":"array","nativeSrc":"13665:5:36","nodeType":"YulIdentifier","src":"13665:5:36"},{"kind":"number","nativeSrc":"13672:4:36","nodeType":"YulLiteral","src":"13672:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13661:3:36","nodeType":"YulIdentifier","src":"13661:3:36"},"nativeSrc":"13661:16:36","nodeType":"YulFunctionCall","src":"13661:16:36"},"variables":[{"name":"dst","nativeSrc":"13654:3:36","nodeType":"YulTypedName","src":"13654:3:36","type":""}]},{"body":{"nativeSrc":"13715:83:36","nodeType":"YulBlock","src":"13715:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"13717:77:36","nodeType":"YulIdentifier","src":"13717:77:36"},"nativeSrc":"13717:79:36","nodeType":"YulFunctionCall","src":"13717:79:36"},"nativeSrc":"13717:79:36","nodeType":"YulExpressionStatement","src":"13717:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"13696:3:36","nodeType":"YulIdentifier","src":"13696:3:36"},{"name":"length","nativeSrc":"13701:6:36","nodeType":"YulIdentifier","src":"13701:6:36"}],"functionName":{"name":"add","nativeSrc":"13692:3:36","nodeType":"YulIdentifier","src":"13692:3:36"},"nativeSrc":"13692:16:36","nodeType":"YulFunctionCall","src":"13692:16:36"},{"name":"end","nativeSrc":"13710:3:36","nodeType":"YulIdentifier","src":"13710:3:36"}],"functionName":{"name":"gt","nativeSrc":"13689:2:36","nodeType":"YulIdentifier","src":"13689:2:36"},"nativeSrc":"13689:25:36","nodeType":"YulFunctionCall","src":"13689:25:36"},"nativeSrc":"13686:112:36","nodeType":"YulIf","src":"13686:112:36"},{"expression":{"arguments":[{"name":"src","nativeSrc":"13844:3:36","nodeType":"YulIdentifier","src":"13844:3:36"},{"name":"dst","nativeSrc":"13849:3:36","nodeType":"YulIdentifier","src":"13849:3:36"},{"name":"length","nativeSrc":"13854:6:36","nodeType":"YulIdentifier","src":"13854:6:36"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"13807:36:36","nodeType":"YulIdentifier","src":"13807:36:36"},"nativeSrc":"13807:54:36","nodeType":"YulFunctionCall","src":"13807:54:36"},"nativeSrc":"13807:54:36","nodeType":"YulExpressionStatement","src":"13807:54:36"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"13444:423:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"13500:3:36","nodeType":"YulTypedName","src":"13500:3:36","type":""},{"name":"length","nativeSrc":"13505:6:36","nodeType":"YulTypedName","src":"13505:6:36","type":""},{"name":"end","nativeSrc":"13513:3:36","nodeType":"YulTypedName","src":"13513:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"13521:5:36","nodeType":"YulTypedName","src":"13521:5:36","type":""}],"src":"13444:423:36"},{"body":{"nativeSrc":"13947:277:36","nodeType":"YulBlock","src":"13947:277:36","statements":[{"body":{"nativeSrc":"13996:83:36","nodeType":"YulBlock","src":"13996:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"13998:77:36","nodeType":"YulIdentifier","src":"13998:77:36"},"nativeSrc":"13998:79:36","nodeType":"YulFunctionCall","src":"13998:79:36"},"nativeSrc":"13998:79:36","nodeType":"YulExpressionStatement","src":"13998:79:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"13975:6:36","nodeType":"YulIdentifier","src":"13975:6:36"},{"kind":"number","nativeSrc":"13983:4:36","nodeType":"YulLiteral","src":"13983:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"13971:3:36","nodeType":"YulIdentifier","src":"13971:3:36"},"nativeSrc":"13971:17:36","nodeType":"YulFunctionCall","src":"13971:17:36"},{"name":"end","nativeSrc":"13990:3:36","nodeType":"YulIdentifier","src":"13990:3:36"}],"functionName":{"name":"slt","nativeSrc":"13967:3:36","nodeType":"YulIdentifier","src":"13967:3:36"},"nativeSrc":"13967:27:36","nodeType":"YulFunctionCall","src":"13967:27:36"}],"functionName":{"name":"iszero","nativeSrc":"13960:6:36","nodeType":"YulIdentifier","src":"13960:6:36"},"nativeSrc":"13960:35:36","nodeType":"YulFunctionCall","src":"13960:35:36"},"nativeSrc":"13957:122:36","nodeType":"YulIf","src":"13957:122:36"},{"nativeSrc":"14088:34:36","nodeType":"YulVariableDeclaration","src":"14088:34:36","value":{"arguments":[{"name":"offset","nativeSrc":"14115:6:36","nodeType":"YulIdentifier","src":"14115:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"14102:12:36","nodeType":"YulIdentifier","src":"14102:12:36"},"nativeSrc":"14102:20:36","nodeType":"YulFunctionCall","src":"14102:20:36"},"variables":[{"name":"length","nativeSrc":"14092:6:36","nodeType":"YulTypedName","src":"14092:6:36","type":""}]},{"nativeSrc":"14131:87:36","nodeType":"YulAssignment","src":"14131:87:36","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"14191:6:36","nodeType":"YulIdentifier","src":"14191:6:36"},{"kind":"number","nativeSrc":"14199:4:36","nodeType":"YulLiteral","src":"14199:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14187:3:36","nodeType":"YulIdentifier","src":"14187:3:36"},"nativeSrc":"14187:17:36","nodeType":"YulFunctionCall","src":"14187:17:36"},{"name":"length","nativeSrc":"14206:6:36","nodeType":"YulIdentifier","src":"14206:6:36"},{"name":"end","nativeSrc":"14214:3:36","nodeType":"YulIdentifier","src":"14214:3:36"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"14140:46:36","nodeType":"YulIdentifier","src":"14140:46:36"},"nativeSrc":"14140:78:36","nodeType":"YulFunctionCall","src":"14140:78:36"},"variableNames":[{"name":"array","nativeSrc":"14131:5:36","nodeType":"YulIdentifier","src":"14131:5:36"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"13886:338:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13925:6:36","nodeType":"YulTypedName","src":"13925:6:36","type":""},{"name":"end","nativeSrc":"13933:3:36","nodeType":"YulTypedName","src":"13933:3:36","type":""}],"returnVariables":[{"name":"array","nativeSrc":"13941:5:36","nodeType":"YulTypedName","src":"13941:5:36","type":""}],"src":"13886:338:36"},{"body":{"nativeSrc":"14356:817:36","nodeType":"YulBlock","src":"14356:817:36","statements":[{"body":{"nativeSrc":"14403:83:36","nodeType":"YulBlock","src":"14403:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14405:77:36","nodeType":"YulIdentifier","src":"14405:77:36"},"nativeSrc":"14405:79:36","nodeType":"YulFunctionCall","src":"14405:79:36"},"nativeSrc":"14405:79:36","nodeType":"YulExpressionStatement","src":"14405:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14377:7:36","nodeType":"YulIdentifier","src":"14377:7:36"},{"name":"headStart","nativeSrc":"14386:9:36","nodeType":"YulIdentifier","src":"14386:9:36"}],"functionName":{"name":"sub","nativeSrc":"14373:3:36","nodeType":"YulIdentifier","src":"14373:3:36"},"nativeSrc":"14373:23:36","nodeType":"YulFunctionCall","src":"14373:23:36"},{"kind":"number","nativeSrc":"14398:3:36","nodeType":"YulLiteral","src":"14398:3:36","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"14369:3:36","nodeType":"YulIdentifier","src":"14369:3:36"},"nativeSrc":"14369:33:36","nodeType":"YulFunctionCall","src":"14369:33:36"},"nativeSrc":"14366:120:36","nodeType":"YulIf","src":"14366:120:36"},{"nativeSrc":"14496:117:36","nodeType":"YulBlock","src":"14496:117:36","statements":[{"nativeSrc":"14511:15:36","nodeType":"YulVariableDeclaration","src":"14511:15:36","value":{"kind":"number","nativeSrc":"14525:1:36","nodeType":"YulLiteral","src":"14525:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14515:6:36","nodeType":"YulTypedName","src":"14515:6:36","type":""}]},{"nativeSrc":"14540:63:36","nodeType":"YulAssignment","src":"14540:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14575:9:36","nodeType":"YulIdentifier","src":"14575:9:36"},{"name":"offset","nativeSrc":"14586:6:36","nodeType":"YulIdentifier","src":"14586:6:36"}],"functionName":{"name":"add","nativeSrc":"14571:3:36","nodeType":"YulIdentifier","src":"14571:3:36"},"nativeSrc":"14571:22:36","nodeType":"YulFunctionCall","src":"14571:22:36"},{"name":"dataEnd","nativeSrc":"14595:7:36","nodeType":"YulIdentifier","src":"14595:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14550:20:36","nodeType":"YulIdentifier","src":"14550:20:36"},"nativeSrc":"14550:53:36","nodeType":"YulFunctionCall","src":"14550:53:36"},"variableNames":[{"name":"value0","nativeSrc":"14540:6:36","nodeType":"YulIdentifier","src":"14540:6:36"}]}]},{"nativeSrc":"14623:118:36","nodeType":"YulBlock","src":"14623:118:36","statements":[{"nativeSrc":"14638:16:36","nodeType":"YulVariableDeclaration","src":"14638:16:36","value":{"kind":"number","nativeSrc":"14652:2:36","nodeType":"YulLiteral","src":"14652:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14642:6:36","nodeType":"YulTypedName","src":"14642:6:36","type":""}]},{"nativeSrc":"14668:63:36","nodeType":"YulAssignment","src":"14668:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14703:9:36","nodeType":"YulIdentifier","src":"14703:9:36"},{"name":"offset","nativeSrc":"14714:6:36","nodeType":"YulIdentifier","src":"14714:6:36"}],"functionName":{"name":"add","nativeSrc":"14699:3:36","nodeType":"YulIdentifier","src":"14699:3:36"},"nativeSrc":"14699:22:36","nodeType":"YulFunctionCall","src":"14699:22:36"},{"name":"dataEnd","nativeSrc":"14723:7:36","nodeType":"YulIdentifier","src":"14723:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14678:20:36","nodeType":"YulIdentifier","src":"14678:20:36"},"nativeSrc":"14678:53:36","nodeType":"YulFunctionCall","src":"14678:53:36"},"variableNames":[{"name":"value1","nativeSrc":"14668:6:36","nodeType":"YulIdentifier","src":"14668:6:36"}]}]},{"nativeSrc":"14751:118:36","nodeType":"YulBlock","src":"14751:118:36","statements":[{"nativeSrc":"14766:16:36","nodeType":"YulVariableDeclaration","src":"14766:16:36","value":{"kind":"number","nativeSrc":"14780:2:36","nodeType":"YulLiteral","src":"14780:2:36","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"14770:6:36","nodeType":"YulTypedName","src":"14770:6:36","type":""}]},{"nativeSrc":"14796:63:36","nodeType":"YulAssignment","src":"14796:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14831:9:36","nodeType":"YulIdentifier","src":"14831:9:36"},{"name":"offset","nativeSrc":"14842:6:36","nodeType":"YulIdentifier","src":"14842:6:36"}],"functionName":{"name":"add","nativeSrc":"14827:3:36","nodeType":"YulIdentifier","src":"14827:3:36"},"nativeSrc":"14827:22:36","nodeType":"YulFunctionCall","src":"14827:22:36"},{"name":"dataEnd","nativeSrc":"14851:7:36","nodeType":"YulIdentifier","src":"14851:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14806:20:36","nodeType":"YulIdentifier","src":"14806:20:36"},"nativeSrc":"14806:53:36","nodeType":"YulFunctionCall","src":"14806:53:36"},"variableNames":[{"name":"value2","nativeSrc":"14796:6:36","nodeType":"YulIdentifier","src":"14796:6:36"}]}]},{"nativeSrc":"14879:287:36","nodeType":"YulBlock","src":"14879:287:36","statements":[{"nativeSrc":"14894:46:36","nodeType":"YulVariableDeclaration","src":"14894:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14925:9:36","nodeType":"YulIdentifier","src":"14925:9:36"},{"kind":"number","nativeSrc":"14936:2:36","nodeType":"YulLiteral","src":"14936:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14921:3:36","nodeType":"YulIdentifier","src":"14921:3:36"},"nativeSrc":"14921:18:36","nodeType":"YulFunctionCall","src":"14921:18:36"}],"functionName":{"name":"calldataload","nativeSrc":"14908:12:36","nodeType":"YulIdentifier","src":"14908:12:36"},"nativeSrc":"14908:32:36","nodeType":"YulFunctionCall","src":"14908:32:36"},"variables":[{"name":"offset","nativeSrc":"14898:6:36","nodeType":"YulTypedName","src":"14898:6:36","type":""}]},{"body":{"nativeSrc":"14987:83:36","nodeType":"YulBlock","src":"14987:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14989:77:36","nodeType":"YulIdentifier","src":"14989:77:36"},"nativeSrc":"14989:79:36","nodeType":"YulFunctionCall","src":"14989:79:36"},"nativeSrc":"14989:79:36","nodeType":"YulExpressionStatement","src":"14989:79:36"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"14959:6:36","nodeType":"YulIdentifier","src":"14959:6:36"},{"kind":"number","nativeSrc":"14967:18:36","nodeType":"YulLiteral","src":"14967:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14956:2:36","nodeType":"YulIdentifier","src":"14956:2:36"},"nativeSrc":"14956:30:36","nodeType":"YulFunctionCall","src":"14956:30:36"},"nativeSrc":"14953:117:36","nodeType":"YulIf","src":"14953:117:36"},{"nativeSrc":"15084:72:36","nodeType":"YulAssignment","src":"15084:72:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15128:9:36","nodeType":"YulIdentifier","src":"15128:9:36"},{"name":"offset","nativeSrc":"15139:6:36","nodeType":"YulIdentifier","src":"15139:6:36"}],"functionName":{"name":"add","nativeSrc":"15124:3:36","nodeType":"YulIdentifier","src":"15124:3:36"},"nativeSrc":"15124:22:36","nodeType":"YulFunctionCall","src":"15124:22:36"},{"name":"dataEnd","nativeSrc":"15148:7:36","nodeType":"YulIdentifier","src":"15148:7:36"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"15094:29:36","nodeType":"YulIdentifier","src":"15094:29:36"},"nativeSrc":"15094:62:36","nodeType":"YulFunctionCall","src":"15094:62:36"},"variableNames":[{"name":"value3","nativeSrc":"15084:6:36","nodeType":"YulIdentifier","src":"15084:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"14230:943:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14302:9:36","nodeType":"YulTypedName","src":"14302:9:36","type":""},{"name":"dataEnd","nativeSrc":"14313:7:36","nodeType":"YulTypedName","src":"14313:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14325:6:36","nodeType":"YulTypedName","src":"14325:6:36","type":""},{"name":"value1","nativeSrc":"14333:6:36","nodeType":"YulTypedName","src":"14333:6:36","type":""},{"name":"value2","nativeSrc":"14341:6:36","nodeType":"YulTypedName","src":"14341:6:36","type":""},{"name":"value3","nativeSrc":"14349:6:36","nodeType":"YulTypedName","src":"14349:6:36","type":""}],"src":"14230:943:36"},{"body":{"nativeSrc":"15262:391:36","nodeType":"YulBlock","src":"15262:391:36","statements":[{"body":{"nativeSrc":"15308:83:36","nodeType":"YulBlock","src":"15308:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15310:77:36","nodeType":"YulIdentifier","src":"15310:77:36"},"nativeSrc":"15310:79:36","nodeType":"YulFunctionCall","src":"15310:79:36"},"nativeSrc":"15310:79:36","nodeType":"YulExpressionStatement","src":"15310:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15283:7:36","nodeType":"YulIdentifier","src":"15283:7:36"},{"name":"headStart","nativeSrc":"15292:9:36","nodeType":"YulIdentifier","src":"15292:9:36"}],"functionName":{"name":"sub","nativeSrc":"15279:3:36","nodeType":"YulIdentifier","src":"15279:3:36"},"nativeSrc":"15279:23:36","nodeType":"YulFunctionCall","src":"15279:23:36"},{"kind":"number","nativeSrc":"15304:2:36","nodeType":"YulLiteral","src":"15304:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15275:3:36","nodeType":"YulIdentifier","src":"15275:3:36"},"nativeSrc":"15275:32:36","nodeType":"YulFunctionCall","src":"15275:32:36"},"nativeSrc":"15272:119:36","nodeType":"YulIf","src":"15272:119:36"},{"nativeSrc":"15401:117:36","nodeType":"YulBlock","src":"15401:117:36","statements":[{"nativeSrc":"15416:15:36","nodeType":"YulVariableDeclaration","src":"15416:15:36","value":{"kind":"number","nativeSrc":"15430:1:36","nodeType":"YulLiteral","src":"15430:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15420:6:36","nodeType":"YulTypedName","src":"15420:6:36","type":""}]},{"nativeSrc":"15445:63:36","nodeType":"YulAssignment","src":"15445:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15480:9:36","nodeType":"YulIdentifier","src":"15480:9:36"},{"name":"offset","nativeSrc":"15491:6:36","nodeType":"YulIdentifier","src":"15491:6:36"}],"functionName":{"name":"add","nativeSrc":"15476:3:36","nodeType":"YulIdentifier","src":"15476:3:36"},"nativeSrc":"15476:22:36","nodeType":"YulFunctionCall","src":"15476:22:36"},{"name":"dataEnd","nativeSrc":"15500:7:36","nodeType":"YulIdentifier","src":"15500:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15455:20:36","nodeType":"YulIdentifier","src":"15455:20:36"},"nativeSrc":"15455:53:36","nodeType":"YulFunctionCall","src":"15455:53:36"},"variableNames":[{"name":"value0","nativeSrc":"15445:6:36","nodeType":"YulIdentifier","src":"15445:6:36"}]}]},{"nativeSrc":"15528:118:36","nodeType":"YulBlock","src":"15528:118:36","statements":[{"nativeSrc":"15543:16:36","nodeType":"YulVariableDeclaration","src":"15543:16:36","value":{"kind":"number","nativeSrc":"15557:2:36","nodeType":"YulLiteral","src":"15557:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15547:6:36","nodeType":"YulTypedName","src":"15547:6:36","type":""}]},{"nativeSrc":"15573:63:36","nodeType":"YulAssignment","src":"15573:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15608:9:36","nodeType":"YulIdentifier","src":"15608:9:36"},{"name":"offset","nativeSrc":"15619:6:36","nodeType":"YulIdentifier","src":"15619:6:36"}],"functionName":{"name":"add","nativeSrc":"15604:3:36","nodeType":"YulIdentifier","src":"15604:3:36"},"nativeSrc":"15604:22:36","nodeType":"YulFunctionCall","src":"15604:22:36"},{"name":"dataEnd","nativeSrc":"15628:7:36","nodeType":"YulIdentifier","src":"15628:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15583:20:36","nodeType":"YulIdentifier","src":"15583:20:36"},"nativeSrc":"15583:53:36","nodeType":"YulFunctionCall","src":"15583:53:36"},"variableNames":[{"name":"value1","nativeSrc":"15573:6:36","nodeType":"YulIdentifier","src":"15573:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"15179:474:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15224:9:36","nodeType":"YulTypedName","src":"15224:9:36","type":""},{"name":"dataEnd","nativeSrc":"15235:7:36","nodeType":"YulTypedName","src":"15235:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15247:6:36","nodeType":"YulTypedName","src":"15247:6:36","type":""},{"name":"value1","nativeSrc":"15255:6:36","nodeType":"YulTypedName","src":"15255:6:36","type":""}],"src":"15179:474:36"},{"body":{"nativeSrc":"15687:152:36","nodeType":"YulBlock","src":"15687:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15704:1:36","nodeType":"YulLiteral","src":"15704:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"15707:77:36","nodeType":"YulLiteral","src":"15707:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15697:6:36","nodeType":"YulIdentifier","src":"15697:6:36"},"nativeSrc":"15697:88:36","nodeType":"YulFunctionCall","src":"15697:88:36"},"nativeSrc":"15697:88:36","nodeType":"YulExpressionStatement","src":"15697:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15801:1:36","nodeType":"YulLiteral","src":"15801:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"15804:4:36","nodeType":"YulLiteral","src":"15804:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"15794:6:36","nodeType":"YulIdentifier","src":"15794:6:36"},"nativeSrc":"15794:15:36","nodeType":"YulFunctionCall","src":"15794:15:36"},"nativeSrc":"15794:15:36","nodeType":"YulExpressionStatement","src":"15794:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15825:1:36","nodeType":"YulLiteral","src":"15825:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"15828:4:36","nodeType":"YulLiteral","src":"15828:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15818:6:36","nodeType":"YulIdentifier","src":"15818:6:36"},"nativeSrc":"15818:15:36","nodeType":"YulFunctionCall","src":"15818:15:36"},"nativeSrc":"15818:15:36","nodeType":"YulExpressionStatement","src":"15818:15:36"}]},"name":"panic_error_0x22","nativeSrc":"15659:180:36","nodeType":"YulFunctionDefinition","src":"15659:180:36"},{"body":{"nativeSrc":"15896:269:36","nodeType":"YulBlock","src":"15896:269:36","statements":[{"nativeSrc":"15906:22:36","nodeType":"YulAssignment","src":"15906:22:36","value":{"arguments":[{"name":"data","nativeSrc":"15920:4:36","nodeType":"YulIdentifier","src":"15920:4:36"},{"kind":"number","nativeSrc":"15926:1:36","nodeType":"YulLiteral","src":"15926:1:36","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"15916:3:36","nodeType":"YulIdentifier","src":"15916:3:36"},"nativeSrc":"15916:12:36","nodeType":"YulFunctionCall","src":"15916:12:36"},"variableNames":[{"name":"length","nativeSrc":"15906:6:36","nodeType":"YulIdentifier","src":"15906:6:36"}]},{"nativeSrc":"15937:38:36","nodeType":"YulVariableDeclaration","src":"15937:38:36","value":{"arguments":[{"name":"data","nativeSrc":"15967:4:36","nodeType":"YulIdentifier","src":"15967:4:36"},{"kind":"number","nativeSrc":"15973:1:36","nodeType":"YulLiteral","src":"15973:1:36","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"15963:3:36","nodeType":"YulIdentifier","src":"15963:3:36"},"nativeSrc":"15963:12:36","nodeType":"YulFunctionCall","src":"15963:12:36"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"15941:18:36","nodeType":"YulTypedName","src":"15941:18:36","type":""}]},{"body":{"nativeSrc":"16014:51:36","nodeType":"YulBlock","src":"16014:51:36","statements":[{"nativeSrc":"16028:27:36","nodeType":"YulAssignment","src":"16028:27:36","value":{"arguments":[{"name":"length","nativeSrc":"16042:6:36","nodeType":"YulIdentifier","src":"16042:6:36"},{"kind":"number","nativeSrc":"16050:4:36","nodeType":"YulLiteral","src":"16050:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"16038:3:36","nodeType":"YulIdentifier","src":"16038:3:36"},"nativeSrc":"16038:17:36","nodeType":"YulFunctionCall","src":"16038:17:36"},"variableNames":[{"name":"length","nativeSrc":"16028:6:36","nodeType":"YulIdentifier","src":"16028:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"15994:18:36","nodeType":"YulIdentifier","src":"15994:18:36"}],"functionName":{"name":"iszero","nativeSrc":"15987:6:36","nodeType":"YulIdentifier","src":"15987:6:36"},"nativeSrc":"15987:26:36","nodeType":"YulFunctionCall","src":"15987:26:36"},"nativeSrc":"15984:81:36","nodeType":"YulIf","src":"15984:81:36"},{"body":{"nativeSrc":"16117:42:36","nodeType":"YulBlock","src":"16117:42:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"16131:16:36","nodeType":"YulIdentifier","src":"16131:16:36"},"nativeSrc":"16131:18:36","nodeType":"YulFunctionCall","src":"16131:18:36"},"nativeSrc":"16131:18:36","nodeType":"YulExpressionStatement","src":"16131:18:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16081:18:36","nodeType":"YulIdentifier","src":"16081:18:36"},{"arguments":[{"name":"length","nativeSrc":"16104:6:36","nodeType":"YulIdentifier","src":"16104:6:36"},{"kind":"number","nativeSrc":"16112:2:36","nodeType":"YulLiteral","src":"16112:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"16101:2:36","nodeType":"YulIdentifier","src":"16101:2:36"},"nativeSrc":"16101:14:36","nodeType":"YulFunctionCall","src":"16101:14:36"}],"functionName":{"name":"eq","nativeSrc":"16078:2:36","nodeType":"YulIdentifier","src":"16078:2:36"},"nativeSrc":"16078:38:36","nodeType":"YulFunctionCall","src":"16078:38:36"},"nativeSrc":"16075:84:36","nodeType":"YulIf","src":"16075:84:36"}]},"name":"extract_byte_array_length","nativeSrc":"15845:320:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"15880:4:36","nodeType":"YulTypedName","src":"15880:4:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15889:6:36","nodeType":"YulTypedName","src":"15889:6:36","type":""}],"src":"15845:320:36"},{"body":{"nativeSrc":"16325:288:36","nodeType":"YulBlock","src":"16325:288:36","statements":[{"nativeSrc":"16335:26:36","nodeType":"YulAssignment","src":"16335:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"16347:9:36","nodeType":"YulIdentifier","src":"16347:9:36"},{"kind":"number","nativeSrc":"16358:2:36","nodeType":"YulLiteral","src":"16358:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16343:3:36","nodeType":"YulIdentifier","src":"16343:3:36"},"nativeSrc":"16343:18:36","nodeType":"YulFunctionCall","src":"16343:18:36"},"variableNames":[{"name":"tail","nativeSrc":"16335:4:36","nodeType":"YulIdentifier","src":"16335:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16415:6:36","nodeType":"YulIdentifier","src":"16415:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"16428:9:36","nodeType":"YulIdentifier","src":"16428:9:36"},{"kind":"number","nativeSrc":"16439:1:36","nodeType":"YulLiteral","src":"16439:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16424:3:36","nodeType":"YulIdentifier","src":"16424:3:36"},"nativeSrc":"16424:17:36","nodeType":"YulFunctionCall","src":"16424:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16371:43:36","nodeType":"YulIdentifier","src":"16371:43:36"},"nativeSrc":"16371:71:36","nodeType":"YulFunctionCall","src":"16371:71:36"},"nativeSrc":"16371:71:36","nodeType":"YulExpressionStatement","src":"16371:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16496:6:36","nodeType":"YulIdentifier","src":"16496:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"16509:9:36","nodeType":"YulIdentifier","src":"16509:9:36"},{"kind":"number","nativeSrc":"16520:2:36","nodeType":"YulLiteral","src":"16520:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16505:3:36","nodeType":"YulIdentifier","src":"16505:3:36"},"nativeSrc":"16505:18:36","nodeType":"YulFunctionCall","src":"16505:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16452:43:36","nodeType":"YulIdentifier","src":"16452:43:36"},"nativeSrc":"16452:72:36","nodeType":"YulFunctionCall","src":"16452:72:36"},"nativeSrc":"16452:72:36","nodeType":"YulExpressionStatement","src":"16452:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"16578:6:36","nodeType":"YulIdentifier","src":"16578:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"16591:9:36","nodeType":"YulIdentifier","src":"16591:9:36"},{"kind":"number","nativeSrc":"16602:2:36","nodeType":"YulLiteral","src":"16602:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16587:3:36","nodeType":"YulIdentifier","src":"16587:3:36"},"nativeSrc":"16587:18:36","nodeType":"YulFunctionCall","src":"16587:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16534:43:36","nodeType":"YulIdentifier","src":"16534:43:36"},"nativeSrc":"16534:72:36","nodeType":"YulFunctionCall","src":"16534:72:36"},"nativeSrc":"16534:72:36","nodeType":"YulExpressionStatement","src":"16534:72:36"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"16171:442:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16281:9:36","nodeType":"YulTypedName","src":"16281:9:36","type":""},{"name":"value2","nativeSrc":"16293:6:36","nodeType":"YulTypedName","src":"16293:6:36","type":""},{"name":"value1","nativeSrc":"16301:6:36","nodeType":"YulTypedName","src":"16301:6:36","type":""},{"name":"value0","nativeSrc":"16309:6:36","nodeType":"YulTypedName","src":"16309:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16320:4:36","nodeType":"YulTypedName","src":"16320:4:36","type":""}],"src":"16171:442:36"},{"body":{"nativeSrc":"16673:87:36","nodeType":"YulBlock","src":"16673:87:36","statements":[{"nativeSrc":"16683:11:36","nodeType":"YulAssignment","src":"16683:11:36","value":{"name":"ptr","nativeSrc":"16691:3:36","nodeType":"YulIdentifier","src":"16691:3:36"},"variableNames":[{"name":"data","nativeSrc":"16683:4:36","nodeType":"YulIdentifier","src":"16683:4:36"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16711:1:36","nodeType":"YulLiteral","src":"16711:1:36","type":"","value":"0"},{"name":"ptr","nativeSrc":"16714:3:36","nodeType":"YulIdentifier","src":"16714:3:36"}],"functionName":{"name":"mstore","nativeSrc":"16704:6:36","nodeType":"YulIdentifier","src":"16704:6:36"},"nativeSrc":"16704:14:36","nodeType":"YulFunctionCall","src":"16704:14:36"},"nativeSrc":"16704:14:36","nodeType":"YulExpressionStatement","src":"16704:14:36"},{"nativeSrc":"16727:26:36","nodeType":"YulAssignment","src":"16727:26:36","value":{"arguments":[{"kind":"number","nativeSrc":"16745:1:36","nodeType":"YulLiteral","src":"16745:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"16748:4:36","nodeType":"YulLiteral","src":"16748:4:36","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"16735:9:36","nodeType":"YulIdentifier","src":"16735:9:36"},"nativeSrc":"16735:18:36","nodeType":"YulFunctionCall","src":"16735:18:36"},"variableNames":[{"name":"data","nativeSrc":"16727:4:36","nodeType":"YulIdentifier","src":"16727:4:36"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"16619:141:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"16660:3:36","nodeType":"YulTypedName","src":"16660:3:36","type":""}],"returnVariables":[{"name":"data","nativeSrc":"16668:4:36","nodeType":"YulTypedName","src":"16668:4:36","type":""}],"src":"16619:141:36"},{"body":{"nativeSrc":"16810:49:36","nodeType":"YulBlock","src":"16810:49:36","statements":[{"nativeSrc":"16820:33:36","nodeType":"YulAssignment","src":"16820:33:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16838:5:36","nodeType":"YulIdentifier","src":"16838:5:36"},{"kind":"number","nativeSrc":"16845:2:36","nodeType":"YulLiteral","src":"16845:2:36","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"16834:3:36","nodeType":"YulIdentifier","src":"16834:3:36"},"nativeSrc":"16834:14:36","nodeType":"YulFunctionCall","src":"16834:14:36"},{"kind":"number","nativeSrc":"16850:2:36","nodeType":"YulLiteral","src":"16850:2:36","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"16830:3:36","nodeType":"YulIdentifier","src":"16830:3:36"},"nativeSrc":"16830:23:36","nodeType":"YulFunctionCall","src":"16830:23:36"},"variableNames":[{"name":"result","nativeSrc":"16820:6:36","nodeType":"YulIdentifier","src":"16820:6:36"}]}]},"name":"divide_by_32_ceil","nativeSrc":"16766:93:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16793:5:36","nodeType":"YulTypedName","src":"16793:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"16803:6:36","nodeType":"YulTypedName","src":"16803:6:36","type":""}],"src":"16766:93:36"},{"body":{"nativeSrc":"16918:54:36","nodeType":"YulBlock","src":"16918:54:36","statements":[{"nativeSrc":"16928:37:36","nodeType":"YulAssignment","src":"16928:37:36","value":{"arguments":[{"name":"bits","nativeSrc":"16953:4:36","nodeType":"YulIdentifier","src":"16953:4:36"},{"name":"value","nativeSrc":"16959:5:36","nodeType":"YulIdentifier","src":"16959:5:36"}],"functionName":{"name":"shl","nativeSrc":"16949:3:36","nodeType":"YulIdentifier","src":"16949:3:36"},"nativeSrc":"16949:16:36","nodeType":"YulFunctionCall","src":"16949:16:36"},"variableNames":[{"name":"newValue","nativeSrc":"16928:8:36","nodeType":"YulIdentifier","src":"16928:8:36"}]}]},"name":"shift_left_dynamic","nativeSrc":"16865:107:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"16893:4:36","nodeType":"YulTypedName","src":"16893:4:36","type":""},{"name":"value","nativeSrc":"16899:5:36","nodeType":"YulTypedName","src":"16899:5:36","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"16909:8:36","nodeType":"YulTypedName","src":"16909:8:36","type":""}],"src":"16865:107:36"},{"body":{"nativeSrc":"17054:317:36","nodeType":"YulBlock","src":"17054:317:36","statements":[{"nativeSrc":"17064:35:36","nodeType":"YulVariableDeclaration","src":"17064:35:36","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"17085:10:36","nodeType":"YulIdentifier","src":"17085:10:36"},{"kind":"number","nativeSrc":"17097:1:36","nodeType":"YulLiteral","src":"17097:1:36","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"17081:3:36","nodeType":"YulIdentifier","src":"17081:3:36"},"nativeSrc":"17081:18:36","nodeType":"YulFunctionCall","src":"17081:18:36"},"variables":[{"name":"shiftBits","nativeSrc":"17068:9:36","nodeType":"YulTypedName","src":"17068:9:36","type":""}]},{"nativeSrc":"17108:109:36","nodeType":"YulVariableDeclaration","src":"17108:109:36","value":{"arguments":[{"name":"shiftBits","nativeSrc":"17139:9:36","nodeType":"YulIdentifier","src":"17139:9:36"},{"kind":"number","nativeSrc":"17150:66:36","nodeType":"YulLiteral","src":"17150:66:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"17120:18:36","nodeType":"YulIdentifier","src":"17120:18:36"},"nativeSrc":"17120:97:36","nodeType":"YulFunctionCall","src":"17120:97:36"},"variables":[{"name":"mask","nativeSrc":"17112:4:36","nodeType":"YulTypedName","src":"17112:4:36","type":""}]},{"nativeSrc":"17226:51:36","nodeType":"YulAssignment","src":"17226:51:36","value":{"arguments":[{"name":"shiftBits","nativeSrc":"17257:9:36","nodeType":"YulIdentifier","src":"17257:9:36"},{"name":"toInsert","nativeSrc":"17268:8:36","nodeType":"YulIdentifier","src":"17268:8:36"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"17238:18:36","nodeType":"YulIdentifier","src":"17238:18:36"},"nativeSrc":"17238:39:36","nodeType":"YulFunctionCall","src":"17238:39:36"},"variableNames":[{"name":"toInsert","nativeSrc":"17226:8:36","nodeType":"YulIdentifier","src":"17226:8:36"}]},{"nativeSrc":"17286:30:36","nodeType":"YulAssignment","src":"17286:30:36","value":{"arguments":[{"name":"value","nativeSrc":"17299:5:36","nodeType":"YulIdentifier","src":"17299:5:36"},{"arguments":[{"name":"mask","nativeSrc":"17310:4:36","nodeType":"YulIdentifier","src":"17310:4:36"}],"functionName":{"name":"not","nativeSrc":"17306:3:36","nodeType":"YulIdentifier","src":"17306:3:36"},"nativeSrc":"17306:9:36","nodeType":"YulFunctionCall","src":"17306:9:36"}],"functionName":{"name":"and","nativeSrc":"17295:3:36","nodeType":"YulIdentifier","src":"17295:3:36"},"nativeSrc":"17295:21:36","nodeType":"YulFunctionCall","src":"17295:21:36"},"variableNames":[{"name":"value","nativeSrc":"17286:5:36","nodeType":"YulIdentifier","src":"17286:5:36"}]},{"nativeSrc":"17325:40:36","nodeType":"YulAssignment","src":"17325:40:36","value":{"arguments":[{"name":"value","nativeSrc":"17338:5:36","nodeType":"YulIdentifier","src":"17338:5:36"},{"arguments":[{"name":"toInsert","nativeSrc":"17349:8:36","nodeType":"YulIdentifier","src":"17349:8:36"},{"name":"mask","nativeSrc":"17359:4:36","nodeType":"YulIdentifier","src":"17359:4:36"}],"functionName":{"name":"and","nativeSrc":"17345:3:36","nodeType":"YulIdentifier","src":"17345:3:36"},"nativeSrc":"17345:19:36","nodeType":"YulFunctionCall","src":"17345:19:36"}],"functionName":{"name":"or","nativeSrc":"17335:2:36","nodeType":"YulIdentifier","src":"17335:2:36"},"nativeSrc":"17335:30:36","nodeType":"YulFunctionCall","src":"17335:30:36"},"variableNames":[{"name":"result","nativeSrc":"17325:6:36","nodeType":"YulIdentifier","src":"17325:6:36"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"16978:393:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17015:5:36","nodeType":"YulTypedName","src":"17015:5:36","type":""},{"name":"shiftBytes","nativeSrc":"17022:10:36","nodeType":"YulTypedName","src":"17022:10:36","type":""},{"name":"toInsert","nativeSrc":"17034:8:36","nodeType":"YulTypedName","src":"17034:8:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"17047:6:36","nodeType":"YulTypedName","src":"17047:6:36","type":""}],"src":"16978:393:36"},{"body":{"nativeSrc":"17409:28:36","nodeType":"YulBlock","src":"17409:28:36","statements":[{"nativeSrc":"17419:12:36","nodeType":"YulAssignment","src":"17419:12:36","value":{"name":"value","nativeSrc":"17426:5:36","nodeType":"YulIdentifier","src":"17426:5:36"},"variableNames":[{"name":"ret","nativeSrc":"17419:3:36","nodeType":"YulIdentifier","src":"17419:3:36"}]}]},"name":"identity","nativeSrc":"17377:60:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17395:5:36","nodeType":"YulTypedName","src":"17395:5:36","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"17405:3:36","nodeType":"YulTypedName","src":"17405:3:36","type":""}],"src":"17377:60:36"},{"body":{"nativeSrc":"17503:82:36","nodeType":"YulBlock","src":"17503:82:36","statements":[{"nativeSrc":"17513:66:36","nodeType":"YulAssignment","src":"17513:66:36","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17571:5:36","nodeType":"YulIdentifier","src":"17571:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17553:17:36","nodeType":"YulIdentifier","src":"17553:17:36"},"nativeSrc":"17553:24:36","nodeType":"YulFunctionCall","src":"17553:24:36"}],"functionName":{"name":"identity","nativeSrc":"17544:8:36","nodeType":"YulIdentifier","src":"17544:8:36"},"nativeSrc":"17544:34:36","nodeType":"YulFunctionCall","src":"17544:34:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17526:17:36","nodeType":"YulIdentifier","src":"17526:17:36"},"nativeSrc":"17526:53:36","nodeType":"YulFunctionCall","src":"17526:53:36"},"variableNames":[{"name":"converted","nativeSrc":"17513:9:36","nodeType":"YulIdentifier","src":"17513:9:36"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"17443:142:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17483:5:36","nodeType":"YulTypedName","src":"17483:5:36","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"17493:9:36","nodeType":"YulTypedName","src":"17493:9:36","type":""}],"src":"17443:142:36"},{"body":{"nativeSrc":"17638:28:36","nodeType":"YulBlock","src":"17638:28:36","statements":[{"nativeSrc":"17648:12:36","nodeType":"YulAssignment","src":"17648:12:36","value":{"name":"value","nativeSrc":"17655:5:36","nodeType":"YulIdentifier","src":"17655:5:36"},"variableNames":[{"name":"ret","nativeSrc":"17648:3:36","nodeType":"YulIdentifier","src":"17648:3:36"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"17591:75:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17624:5:36","nodeType":"YulTypedName","src":"17624:5:36","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"17634:3:36","nodeType":"YulTypedName","src":"17634:3:36","type":""}],"src":"17591:75:36"},{"body":{"nativeSrc":"17748:193:36","nodeType":"YulBlock","src":"17748:193:36","statements":[{"nativeSrc":"17758:63:36","nodeType":"YulVariableDeclaration","src":"17758:63:36","value":{"arguments":[{"name":"value_0","nativeSrc":"17813:7:36","nodeType":"YulIdentifier","src":"17813:7:36"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"17782:30:36","nodeType":"YulIdentifier","src":"17782:30:36"},"nativeSrc":"17782:39:36","nodeType":"YulFunctionCall","src":"17782:39:36"},"variables":[{"name":"convertedValue_0","nativeSrc":"17762:16:36","nodeType":"YulTypedName","src":"17762:16:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17837:4:36","nodeType":"YulIdentifier","src":"17837:4:36"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"17877:4:36","nodeType":"YulIdentifier","src":"17877:4:36"}],"functionName":{"name":"sload","nativeSrc":"17871:5:36","nodeType":"YulIdentifier","src":"17871:5:36"},"nativeSrc":"17871:11:36","nodeType":"YulFunctionCall","src":"17871:11:36"},{"name":"offset","nativeSrc":"17884:6:36","nodeType":"YulIdentifier","src":"17884:6:36"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"17916:16:36","nodeType":"YulIdentifier","src":"17916:16:36"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"17892:23:36","nodeType":"YulIdentifier","src":"17892:23:36"},"nativeSrc":"17892:41:36","nodeType":"YulFunctionCall","src":"17892:41:36"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"17843:27:36","nodeType":"YulIdentifier","src":"17843:27:36"},"nativeSrc":"17843:91:36","nodeType":"YulFunctionCall","src":"17843:91:36"}],"functionName":{"name":"sstore","nativeSrc":"17830:6:36","nodeType":"YulIdentifier","src":"17830:6:36"},"nativeSrc":"17830:105:36","nodeType":"YulFunctionCall","src":"17830:105:36"},"nativeSrc":"17830:105:36","nodeType":"YulExpressionStatement","src":"17830:105:36"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"17672:269:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"17725:4:36","nodeType":"YulTypedName","src":"17725:4:36","type":""},{"name":"offset","nativeSrc":"17731:6:36","nodeType":"YulTypedName","src":"17731:6:36","type":""},{"name":"value_0","nativeSrc":"17739:7:36","nodeType":"YulTypedName","src":"17739:7:36","type":""}],"src":"17672:269:36"},{"body":{"nativeSrc":"17996:24:36","nodeType":"YulBlock","src":"17996:24:36","statements":[{"nativeSrc":"18006:8:36","nodeType":"YulAssignment","src":"18006:8:36","value":{"kind":"number","nativeSrc":"18013:1:36","nodeType":"YulLiteral","src":"18013:1:36","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"18006:3:36","nodeType":"YulIdentifier","src":"18006:3:36"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"17947:73:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"17992:3:36","nodeType":"YulTypedName","src":"17992:3:36","type":""}],"src":"17947:73:36"},{"body":{"nativeSrc":"18079:136:36","nodeType":"YulBlock","src":"18079:136:36","statements":[{"nativeSrc":"18089:46:36","nodeType":"YulVariableDeclaration","src":"18089:46:36","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"18103:30:36","nodeType":"YulIdentifier","src":"18103:30:36"},"nativeSrc":"18103:32:36","nodeType":"YulFunctionCall","src":"18103:32:36"},"variables":[{"name":"zero_0","nativeSrc":"18093:6:36","nodeType":"YulTypedName","src":"18093:6:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18188:4:36","nodeType":"YulIdentifier","src":"18188:4:36"},{"name":"offset","nativeSrc":"18194:6:36","nodeType":"YulIdentifier","src":"18194:6:36"},{"name":"zero_0","nativeSrc":"18202:6:36","nodeType":"YulIdentifier","src":"18202:6:36"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"18144:43:36","nodeType":"YulIdentifier","src":"18144:43:36"},"nativeSrc":"18144:65:36","nodeType":"YulFunctionCall","src":"18144:65:36"},"nativeSrc":"18144:65:36","nodeType":"YulExpressionStatement","src":"18144:65:36"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"18026:189:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"18065:4:36","nodeType":"YulTypedName","src":"18065:4:36","type":""},{"name":"offset","nativeSrc":"18071:6:36","nodeType":"YulTypedName","src":"18071:6:36","type":""}],"src":"18026:189:36"},{"body":{"nativeSrc":"18271:136:36","nodeType":"YulBlock","src":"18271:136:36","statements":[{"body":{"nativeSrc":"18338:63:36","nodeType":"YulBlock","src":"18338:63:36","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"18382:5:36","nodeType":"YulIdentifier","src":"18382:5:36"},{"kind":"number","nativeSrc":"18389:1:36","nodeType":"YulLiteral","src":"18389:1:36","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"18352:29:36","nodeType":"YulIdentifier","src":"18352:29:36"},"nativeSrc":"18352:39:36","nodeType":"YulFunctionCall","src":"18352:39:36"},"nativeSrc":"18352:39:36","nodeType":"YulExpressionStatement","src":"18352:39:36"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"18291:5:36","nodeType":"YulIdentifier","src":"18291:5:36"},{"name":"end","nativeSrc":"18298:3:36","nodeType":"YulIdentifier","src":"18298:3:36"}],"functionName":{"name":"lt","nativeSrc":"18288:2:36","nodeType":"YulIdentifier","src":"18288:2:36"},"nativeSrc":"18288:14:36","nodeType":"YulFunctionCall","src":"18288:14:36"},"nativeSrc":"18281:120:36","nodeType":"YulForLoop","post":{"nativeSrc":"18303:26:36","nodeType":"YulBlock","src":"18303:26:36","statements":[{"nativeSrc":"18305:22:36","nodeType":"YulAssignment","src":"18305:22:36","value":{"arguments":[{"name":"start","nativeSrc":"18318:5:36","nodeType":"YulIdentifier","src":"18318:5:36"},{"kind":"number","nativeSrc":"18325:1:36","nodeType":"YulLiteral","src":"18325:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"18314:3:36","nodeType":"YulIdentifier","src":"18314:3:36"},"nativeSrc":"18314:13:36","nodeType":"YulFunctionCall","src":"18314:13:36"},"variableNames":[{"name":"start","nativeSrc":"18305:5:36","nodeType":"YulIdentifier","src":"18305:5:36"}]}]},"pre":{"nativeSrc":"18285:2:36","nodeType":"YulBlock","src":"18285:2:36","statements":[]},"src":"18281:120:36"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"18221:186:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"18259:5:36","nodeType":"YulTypedName","src":"18259:5:36","type":""},{"name":"end","nativeSrc":"18266:3:36","nodeType":"YulTypedName","src":"18266:3:36","type":""}],"src":"18221:186:36"},{"body":{"nativeSrc":"18492:464:36","nodeType":"YulBlock","src":"18492:464:36","statements":[{"body":{"nativeSrc":"18518:431:36","nodeType":"YulBlock","src":"18518:431:36","statements":[{"nativeSrc":"18532:54:36","nodeType":"YulVariableDeclaration","src":"18532:54:36","value":{"arguments":[{"name":"array","nativeSrc":"18580:5:36","nodeType":"YulIdentifier","src":"18580:5:36"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"18548:31:36","nodeType":"YulIdentifier","src":"18548:31:36"},"nativeSrc":"18548:38:36","nodeType":"YulFunctionCall","src":"18548:38:36"},"variables":[{"name":"dataArea","nativeSrc":"18536:8:36","nodeType":"YulTypedName","src":"18536:8:36","type":""}]},{"nativeSrc":"18599:63:36","nodeType":"YulVariableDeclaration","src":"18599:63:36","value":{"arguments":[{"name":"dataArea","nativeSrc":"18622:8:36","nodeType":"YulIdentifier","src":"18622:8:36"},{"arguments":[{"name":"startIndex","nativeSrc":"18650:10:36","nodeType":"YulIdentifier","src":"18650:10:36"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"18632:17:36","nodeType":"YulIdentifier","src":"18632:17:36"},"nativeSrc":"18632:29:36","nodeType":"YulFunctionCall","src":"18632:29:36"}],"functionName":{"name":"add","nativeSrc":"18618:3:36","nodeType":"YulIdentifier","src":"18618:3:36"},"nativeSrc":"18618:44:36","nodeType":"YulFunctionCall","src":"18618:44:36"},"variables":[{"name":"deleteStart","nativeSrc":"18603:11:36","nodeType":"YulTypedName","src":"18603:11:36","type":""}]},{"body":{"nativeSrc":"18819:27:36","nodeType":"YulBlock","src":"18819:27:36","statements":[{"nativeSrc":"18821:23:36","nodeType":"YulAssignment","src":"18821:23:36","value":{"name":"dataArea","nativeSrc":"18836:8:36","nodeType":"YulIdentifier","src":"18836:8:36"},"variableNames":[{"name":"deleteStart","nativeSrc":"18821:11:36","nodeType":"YulIdentifier","src":"18821:11:36"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"18803:10:36","nodeType":"YulIdentifier","src":"18803:10:36"},{"kind":"number","nativeSrc":"18815:2:36","nodeType":"YulLiteral","src":"18815:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"18800:2:36","nodeType":"YulIdentifier","src":"18800:2:36"},"nativeSrc":"18800:18:36","nodeType":"YulFunctionCall","src":"18800:18:36"},"nativeSrc":"18797:49:36","nodeType":"YulIf","src":"18797:49:36"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"18888:11:36","nodeType":"YulIdentifier","src":"18888:11:36"},{"arguments":[{"name":"dataArea","nativeSrc":"18905:8:36","nodeType":"YulIdentifier","src":"18905:8:36"},{"arguments":[{"name":"len","nativeSrc":"18933:3:36","nodeType":"YulIdentifier","src":"18933:3:36"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"18915:17:36","nodeType":"YulIdentifier","src":"18915:17:36"},"nativeSrc":"18915:22:36","nodeType":"YulFunctionCall","src":"18915:22:36"}],"functionName":{"name":"add","nativeSrc":"18901:3:36","nodeType":"YulIdentifier","src":"18901:3:36"},"nativeSrc":"18901:37:36","nodeType":"YulFunctionCall","src":"18901:37:36"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"18859:28:36","nodeType":"YulIdentifier","src":"18859:28:36"},"nativeSrc":"18859:80:36","nodeType":"YulFunctionCall","src":"18859:80:36"},"nativeSrc":"18859:80:36","nodeType":"YulExpressionStatement","src":"18859:80:36"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"18509:3:36","nodeType":"YulIdentifier","src":"18509:3:36"},{"kind":"number","nativeSrc":"18514:2:36","nodeType":"YulLiteral","src":"18514:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"18506:2:36","nodeType":"YulIdentifier","src":"18506:2:36"},"nativeSrc":"18506:11:36","nodeType":"YulFunctionCall","src":"18506:11:36"},"nativeSrc":"18503:446:36","nodeType":"YulIf","src":"18503:446:36"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"18413:543:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"18468:5:36","nodeType":"YulTypedName","src":"18468:5:36","type":""},{"name":"len","nativeSrc":"18475:3:36","nodeType":"YulTypedName","src":"18475:3:36","type":""},{"name":"startIndex","nativeSrc":"18480:10:36","nodeType":"YulTypedName","src":"18480:10:36","type":""}],"src":"18413:543:36"},{"body":{"nativeSrc":"19025:54:36","nodeType":"YulBlock","src":"19025:54:36","statements":[{"nativeSrc":"19035:37:36","nodeType":"YulAssignment","src":"19035:37:36","value":{"arguments":[{"name":"bits","nativeSrc":"19060:4:36","nodeType":"YulIdentifier","src":"19060:4:36"},{"name":"value","nativeSrc":"19066:5:36","nodeType":"YulIdentifier","src":"19066:5:36"}],"functionName":{"name":"shr","nativeSrc":"19056:3:36","nodeType":"YulIdentifier","src":"19056:3:36"},"nativeSrc":"19056:16:36","nodeType":"YulFunctionCall","src":"19056:16:36"},"variableNames":[{"name":"newValue","nativeSrc":"19035:8:36","nodeType":"YulIdentifier","src":"19035:8:36"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"18962:117:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"19000:4:36","nodeType":"YulTypedName","src":"19000:4:36","type":""},{"name":"value","nativeSrc":"19006:5:36","nodeType":"YulTypedName","src":"19006:5:36","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"19016:8:36","nodeType":"YulTypedName","src":"19016:8:36","type":""}],"src":"18962:117:36"},{"body":{"nativeSrc":"19136:118:36","nodeType":"YulBlock","src":"19136:118:36","statements":[{"nativeSrc":"19146:68:36","nodeType":"YulVariableDeclaration","src":"19146:68:36","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19195:1:36","nodeType":"YulLiteral","src":"19195:1:36","type":"","value":"8"},{"name":"bytes","nativeSrc":"19198:5:36","nodeType":"YulIdentifier","src":"19198:5:36"}],"functionName":{"name":"mul","nativeSrc":"19191:3:36","nodeType":"YulIdentifier","src":"19191:3:36"},"nativeSrc":"19191:13:36","nodeType":"YulFunctionCall","src":"19191:13:36"},{"arguments":[{"kind":"number","nativeSrc":"19210:1:36","nodeType":"YulLiteral","src":"19210:1:36","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"19206:3:36","nodeType":"YulIdentifier","src":"19206:3:36"},"nativeSrc":"19206:6:36","nodeType":"YulFunctionCall","src":"19206:6:36"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"19162:28:36","nodeType":"YulIdentifier","src":"19162:28:36"},"nativeSrc":"19162:51:36","nodeType":"YulFunctionCall","src":"19162:51:36"}],"functionName":{"name":"not","nativeSrc":"19158:3:36","nodeType":"YulIdentifier","src":"19158:3:36"},"nativeSrc":"19158:56:36","nodeType":"YulFunctionCall","src":"19158:56:36"},"variables":[{"name":"mask","nativeSrc":"19150:4:36","nodeType":"YulTypedName","src":"19150:4:36","type":""}]},{"nativeSrc":"19223:25:36","nodeType":"YulAssignment","src":"19223:25:36","value":{"arguments":[{"name":"data","nativeSrc":"19237:4:36","nodeType":"YulIdentifier","src":"19237:4:36"},{"name":"mask","nativeSrc":"19243:4:36","nodeType":"YulIdentifier","src":"19243:4:36"}],"functionName":{"name":"and","nativeSrc":"19233:3:36","nodeType":"YulIdentifier","src":"19233:3:36"},"nativeSrc":"19233:15:36","nodeType":"YulFunctionCall","src":"19233:15:36"},"variableNames":[{"name":"result","nativeSrc":"19223:6:36","nodeType":"YulIdentifier","src":"19223:6:36"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"19085:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"19113:4:36","nodeType":"YulTypedName","src":"19113:4:36","type":""},{"name":"bytes","nativeSrc":"19119:5:36","nodeType":"YulTypedName","src":"19119:5:36","type":""}],"returnVariables":[{"name":"result","nativeSrc":"19129:6:36","nodeType":"YulTypedName","src":"19129:6:36","type":""}],"src":"19085:169:36"},{"body":{"nativeSrc":"19340:214:36","nodeType":"YulBlock","src":"19340:214:36","statements":[{"nativeSrc":"19473:37:36","nodeType":"YulAssignment","src":"19473:37:36","value":{"arguments":[{"name":"data","nativeSrc":"19500:4:36","nodeType":"YulIdentifier","src":"19500:4:36"},{"name":"len","nativeSrc":"19506:3:36","nodeType":"YulIdentifier","src":"19506:3:36"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"19481:18:36","nodeType":"YulIdentifier","src":"19481:18:36"},"nativeSrc":"19481:29:36","nodeType":"YulFunctionCall","src":"19481:29:36"},"variableNames":[{"name":"data","nativeSrc":"19473:4:36","nodeType":"YulIdentifier","src":"19473:4:36"}]},{"nativeSrc":"19519:29:36","nodeType":"YulAssignment","src":"19519:29:36","value":{"arguments":[{"name":"data","nativeSrc":"19530:4:36","nodeType":"YulIdentifier","src":"19530:4:36"},{"arguments":[{"kind":"number","nativeSrc":"19540:1:36","nodeType":"YulLiteral","src":"19540:1:36","type":"","value":"2"},{"name":"len","nativeSrc":"19543:3:36","nodeType":"YulIdentifier","src":"19543:3:36"}],"functionName":{"name":"mul","nativeSrc":"19536:3:36","nodeType":"YulIdentifier","src":"19536:3:36"},"nativeSrc":"19536:11:36","nodeType":"YulFunctionCall","src":"19536:11:36"}],"functionName":{"name":"or","nativeSrc":"19527:2:36","nodeType":"YulIdentifier","src":"19527:2:36"},"nativeSrc":"19527:21:36","nodeType":"YulFunctionCall","src":"19527:21:36"},"variableNames":[{"name":"used","nativeSrc":"19519:4:36","nodeType":"YulIdentifier","src":"19519:4:36"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"19259:295:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"19321:4:36","nodeType":"YulTypedName","src":"19321:4:36","type":""},{"name":"len","nativeSrc":"19327:3:36","nodeType":"YulTypedName","src":"19327:3:36","type":""}],"returnVariables":[{"name":"used","nativeSrc":"19335:4:36","nodeType":"YulTypedName","src":"19335:4:36","type":""}],"src":"19259:295:36"},{"body":{"nativeSrc":"19651:1303:36","nodeType":"YulBlock","src":"19651:1303:36","statements":[{"nativeSrc":"19662:51:36","nodeType":"YulVariableDeclaration","src":"19662:51:36","value":{"arguments":[{"name":"src","nativeSrc":"19709:3:36","nodeType":"YulIdentifier","src":"19709:3:36"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"19676:32:36","nodeType":"YulIdentifier","src":"19676:32:36"},"nativeSrc":"19676:37:36","nodeType":"YulFunctionCall","src":"19676:37:36"},"variables":[{"name":"newLen","nativeSrc":"19666:6:36","nodeType":"YulTypedName","src":"19666:6:36","type":""}]},{"body":{"nativeSrc":"19798:22:36","nodeType":"YulBlock","src":"19798:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"19800:16:36","nodeType":"YulIdentifier","src":"19800:16:36"},"nativeSrc":"19800:18:36","nodeType":"YulFunctionCall","src":"19800:18:36"},"nativeSrc":"19800:18:36","nodeType":"YulExpressionStatement","src":"19800:18:36"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"19770:6:36","nodeType":"YulIdentifier","src":"19770:6:36"},{"kind":"number","nativeSrc":"19778:18:36","nodeType":"YulLiteral","src":"19778:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19767:2:36","nodeType":"YulIdentifier","src":"19767:2:36"},"nativeSrc":"19767:30:36","nodeType":"YulFunctionCall","src":"19767:30:36"},"nativeSrc":"19764:56:36","nodeType":"YulIf","src":"19764:56:36"},{"nativeSrc":"19830:52:36","nodeType":"YulVariableDeclaration","src":"19830:52:36","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"19876:4:36","nodeType":"YulIdentifier","src":"19876:4:36"}],"functionName":{"name":"sload","nativeSrc":"19870:5:36","nodeType":"YulIdentifier","src":"19870:5:36"},"nativeSrc":"19870:11:36","nodeType":"YulFunctionCall","src":"19870:11:36"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"19844:25:36","nodeType":"YulIdentifier","src":"19844:25:36"},"nativeSrc":"19844:38:36","nodeType":"YulFunctionCall","src":"19844:38:36"},"variables":[{"name":"oldLen","nativeSrc":"19834:6:36","nodeType":"YulTypedName","src":"19834:6:36","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19975:4:36","nodeType":"YulIdentifier","src":"19975:4:36"},{"name":"oldLen","nativeSrc":"19981:6:36","nodeType":"YulIdentifier","src":"19981:6:36"},{"name":"newLen","nativeSrc":"19989:6:36","nodeType":"YulIdentifier","src":"19989:6:36"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"19929:45:36","nodeType":"YulIdentifier","src":"19929:45:36"},"nativeSrc":"19929:67:36","nodeType":"YulFunctionCall","src":"19929:67:36"},"nativeSrc":"19929:67:36","nodeType":"YulExpressionStatement","src":"19929:67:36"},{"nativeSrc":"20006:18:36","nodeType":"YulVariableDeclaration","src":"20006:18:36","value":{"kind":"number","nativeSrc":"20023:1:36","nodeType":"YulLiteral","src":"20023:1:36","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"20010:9:36","nodeType":"YulTypedName","src":"20010:9:36","type":""}]},{"nativeSrc":"20034:17:36","nodeType":"YulAssignment","src":"20034:17:36","value":{"kind":"number","nativeSrc":"20047:4:36","nodeType":"YulLiteral","src":"20047:4:36","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"20034:9:36","nodeType":"YulIdentifier","src":"20034:9:36"}]},{"cases":[{"body":{"nativeSrc":"20098:611:36","nodeType":"YulBlock","src":"20098:611:36","statements":[{"nativeSrc":"20112:37:36","nodeType":"YulVariableDeclaration","src":"20112:37:36","value":{"arguments":[{"name":"newLen","nativeSrc":"20131:6:36","nodeType":"YulIdentifier","src":"20131:6:36"},{"arguments":[{"kind":"number","nativeSrc":"20143:4:36","nodeType":"YulLiteral","src":"20143:4:36","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"20139:3:36","nodeType":"YulIdentifier","src":"20139:3:36"},"nativeSrc":"20139:9:36","nodeType":"YulFunctionCall","src":"20139:9:36"}],"functionName":{"name":"and","nativeSrc":"20127:3:36","nodeType":"YulIdentifier","src":"20127:3:36"},"nativeSrc":"20127:22:36","nodeType":"YulFunctionCall","src":"20127:22:36"},"variables":[{"name":"loopEnd","nativeSrc":"20116:7:36","nodeType":"YulTypedName","src":"20116:7:36","type":""}]},{"nativeSrc":"20163:51:36","nodeType":"YulVariableDeclaration","src":"20163:51:36","value":{"arguments":[{"name":"slot","nativeSrc":"20209:4:36","nodeType":"YulIdentifier","src":"20209:4:36"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"20177:31:36","nodeType":"YulIdentifier","src":"20177:31:36"},"nativeSrc":"20177:37:36","nodeType":"YulFunctionCall","src":"20177:37:36"},"variables":[{"name":"dstPtr","nativeSrc":"20167:6:36","nodeType":"YulTypedName","src":"20167:6:36","type":""}]},{"nativeSrc":"20227:10:36","nodeType":"YulVariableDeclaration","src":"20227:10:36","value":{"kind":"number","nativeSrc":"20236:1:36","nodeType":"YulLiteral","src":"20236:1:36","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"20231:1:36","nodeType":"YulTypedName","src":"20231:1:36","type":""}]},{"body":{"nativeSrc":"20295:163:36","nodeType":"YulBlock","src":"20295:163:36","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"20320:6:36","nodeType":"YulIdentifier","src":"20320:6:36"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"20338:3:36","nodeType":"YulIdentifier","src":"20338:3:36"},{"name":"srcOffset","nativeSrc":"20343:9:36","nodeType":"YulIdentifier","src":"20343:9:36"}],"functionName":{"name":"add","nativeSrc":"20334:3:36","nodeType":"YulIdentifier","src":"20334:3:36"},"nativeSrc":"20334:19:36","nodeType":"YulFunctionCall","src":"20334:19:36"}],"functionName":{"name":"mload","nativeSrc":"20328:5:36","nodeType":"YulIdentifier","src":"20328:5:36"},"nativeSrc":"20328:26:36","nodeType":"YulFunctionCall","src":"20328:26:36"}],"functionName":{"name":"sstore","nativeSrc":"20313:6:36","nodeType":"YulIdentifier","src":"20313:6:36"},"nativeSrc":"20313:42:36","nodeType":"YulFunctionCall","src":"20313:42:36"},"nativeSrc":"20313:42:36","nodeType":"YulExpressionStatement","src":"20313:42:36"},{"nativeSrc":"20372:24:36","nodeType":"YulAssignment","src":"20372:24:36","value":{"arguments":[{"name":"dstPtr","nativeSrc":"20386:6:36","nodeType":"YulIdentifier","src":"20386:6:36"},{"kind":"number","nativeSrc":"20394:1:36","nodeType":"YulLiteral","src":"20394:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20382:3:36","nodeType":"YulIdentifier","src":"20382:3:36"},"nativeSrc":"20382:14:36","nodeType":"YulFunctionCall","src":"20382:14:36"},"variableNames":[{"name":"dstPtr","nativeSrc":"20372:6:36","nodeType":"YulIdentifier","src":"20372:6:36"}]},{"nativeSrc":"20413:31:36","nodeType":"YulAssignment","src":"20413:31:36","value":{"arguments":[{"name":"srcOffset","nativeSrc":"20430:9:36","nodeType":"YulIdentifier","src":"20430:9:36"},{"kind":"number","nativeSrc":"20441:2:36","nodeType":"YulLiteral","src":"20441:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20426:3:36","nodeType":"YulIdentifier","src":"20426:3:36"},"nativeSrc":"20426:18:36","nodeType":"YulFunctionCall","src":"20426:18:36"},"variableNames":[{"name":"srcOffset","nativeSrc":"20413:9:36","nodeType":"YulIdentifier","src":"20413:9:36"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"20261:1:36","nodeType":"YulIdentifier","src":"20261:1:36"},{"name":"loopEnd","nativeSrc":"20264:7:36","nodeType":"YulIdentifier","src":"20264:7:36"}],"functionName":{"name":"lt","nativeSrc":"20258:2:36","nodeType":"YulIdentifier","src":"20258:2:36"},"nativeSrc":"20258:14:36","nodeType":"YulFunctionCall","src":"20258:14:36"},"nativeSrc":"20250:208:36","nodeType":"YulForLoop","post":{"nativeSrc":"20273:21:36","nodeType":"YulBlock","src":"20273:21:36","statements":[{"nativeSrc":"20275:17:36","nodeType":"YulAssignment","src":"20275:17:36","value":{"arguments":[{"name":"i","nativeSrc":"20284:1:36","nodeType":"YulIdentifier","src":"20284:1:36"},{"kind":"number","nativeSrc":"20287:4:36","nodeType":"YulLiteral","src":"20287:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20280:3:36","nodeType":"YulIdentifier","src":"20280:3:36"},"nativeSrc":"20280:12:36","nodeType":"YulFunctionCall","src":"20280:12:36"},"variableNames":[{"name":"i","nativeSrc":"20275:1:36","nodeType":"YulIdentifier","src":"20275:1:36"}]}]},"pre":{"nativeSrc":"20254:3:36","nodeType":"YulBlock","src":"20254:3:36","statements":[]},"src":"20250:208:36"},{"body":{"nativeSrc":"20494:156:36","nodeType":"YulBlock","src":"20494:156:36","statements":[{"nativeSrc":"20512:43:36","nodeType":"YulVariableDeclaration","src":"20512:43:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"20539:3:36","nodeType":"YulIdentifier","src":"20539:3:36"},{"name":"srcOffset","nativeSrc":"20544:9:36","nodeType":"YulIdentifier","src":"20544:9:36"}],"functionName":{"name":"add","nativeSrc":"20535:3:36","nodeType":"YulIdentifier","src":"20535:3:36"},"nativeSrc":"20535:19:36","nodeType":"YulFunctionCall","src":"20535:19:36"}],"functionName":{"name":"mload","nativeSrc":"20529:5:36","nodeType":"YulIdentifier","src":"20529:5:36"},"nativeSrc":"20529:26:36","nodeType":"YulFunctionCall","src":"20529:26:36"},"variables":[{"name":"lastValue","nativeSrc":"20516:9:36","nodeType":"YulTypedName","src":"20516:9:36","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"20579:6:36","nodeType":"YulIdentifier","src":"20579:6:36"},{"arguments":[{"name":"lastValue","nativeSrc":"20606:9:36","nodeType":"YulIdentifier","src":"20606:9:36"},{"arguments":[{"name":"newLen","nativeSrc":"20621:6:36","nodeType":"YulIdentifier","src":"20621:6:36"},{"kind":"number","nativeSrc":"20629:4:36","nodeType":"YulLiteral","src":"20629:4:36","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"20617:3:36","nodeType":"YulIdentifier","src":"20617:3:36"},"nativeSrc":"20617:17:36","nodeType":"YulFunctionCall","src":"20617:17:36"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"20587:18:36","nodeType":"YulIdentifier","src":"20587:18:36"},"nativeSrc":"20587:48:36","nodeType":"YulFunctionCall","src":"20587:48:36"}],"functionName":{"name":"sstore","nativeSrc":"20572:6:36","nodeType":"YulIdentifier","src":"20572:6:36"},"nativeSrc":"20572:64:36","nodeType":"YulFunctionCall","src":"20572:64:36"},"nativeSrc":"20572:64:36","nodeType":"YulExpressionStatement","src":"20572:64:36"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"20477:7:36","nodeType":"YulIdentifier","src":"20477:7:36"},{"name":"newLen","nativeSrc":"20486:6:36","nodeType":"YulIdentifier","src":"20486:6:36"}],"functionName":{"name":"lt","nativeSrc":"20474:2:36","nodeType":"YulIdentifier","src":"20474:2:36"},"nativeSrc":"20474:19:36","nodeType":"YulFunctionCall","src":"20474:19:36"},"nativeSrc":"20471:179:36","nodeType":"YulIf","src":"20471:179:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20670:4:36","nodeType":"YulIdentifier","src":"20670:4:36"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"20684:6:36","nodeType":"YulIdentifier","src":"20684:6:36"},{"kind":"number","nativeSrc":"20692:1:36","nodeType":"YulLiteral","src":"20692:1:36","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"20680:3:36","nodeType":"YulIdentifier","src":"20680:3:36"},"nativeSrc":"20680:14:36","nodeType":"YulFunctionCall","src":"20680:14:36"},{"kind":"number","nativeSrc":"20696:1:36","nodeType":"YulLiteral","src":"20696:1:36","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20676:3:36","nodeType":"YulIdentifier","src":"20676:3:36"},"nativeSrc":"20676:22:36","nodeType":"YulFunctionCall","src":"20676:22:36"}],"functionName":{"name":"sstore","nativeSrc":"20663:6:36","nodeType":"YulIdentifier","src":"20663:6:36"},"nativeSrc":"20663:36:36","nodeType":"YulFunctionCall","src":"20663:36:36"},"nativeSrc":"20663:36:36","nodeType":"YulExpressionStatement","src":"20663:36:36"}]},"nativeSrc":"20091:618:36","nodeType":"YulCase","src":"20091:618:36","value":{"kind":"number","nativeSrc":"20096:1:36","nodeType":"YulLiteral","src":"20096:1:36","type":"","value":"1"}},{"body":{"nativeSrc":"20726:222:36","nodeType":"YulBlock","src":"20726:222:36","statements":[{"nativeSrc":"20740:14:36","nodeType":"YulVariableDeclaration","src":"20740:14:36","value":{"kind":"number","nativeSrc":"20753:1:36","nodeType":"YulLiteral","src":"20753:1:36","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"20744:5:36","nodeType":"YulTypedName","src":"20744:5:36","type":""}]},{"body":{"nativeSrc":"20777:67:36","nodeType":"YulBlock","src":"20777:67:36","statements":[{"nativeSrc":"20795:35:36","nodeType":"YulAssignment","src":"20795:35:36","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"20814:3:36","nodeType":"YulIdentifier","src":"20814:3:36"},{"name":"srcOffset","nativeSrc":"20819:9:36","nodeType":"YulIdentifier","src":"20819:9:36"}],"functionName":{"name":"add","nativeSrc":"20810:3:36","nodeType":"YulIdentifier","src":"20810:3:36"},"nativeSrc":"20810:19:36","nodeType":"YulFunctionCall","src":"20810:19:36"}],"functionName":{"name":"mload","nativeSrc":"20804:5:36","nodeType":"YulIdentifier","src":"20804:5:36"},"nativeSrc":"20804:26:36","nodeType":"YulFunctionCall","src":"20804:26:36"},"variableNames":[{"name":"value","nativeSrc":"20795:5:36","nodeType":"YulIdentifier","src":"20795:5:36"}]}]},"condition":{"name":"newLen","nativeSrc":"20770:6:36","nodeType":"YulIdentifier","src":"20770:6:36"},"nativeSrc":"20767:77:36","nodeType":"YulIf","src":"20767:77:36"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20864:4:36","nodeType":"YulIdentifier","src":"20864:4:36"},{"arguments":[{"name":"value","nativeSrc":"20923:5:36","nodeType":"YulIdentifier","src":"20923:5:36"},{"name":"newLen","nativeSrc":"20930:6:36","nodeType":"YulIdentifier","src":"20930:6:36"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20870:52:36","nodeType":"YulIdentifier","src":"20870:52:36"},"nativeSrc":"20870:67:36","nodeType":"YulFunctionCall","src":"20870:67:36"}],"functionName":{"name":"sstore","nativeSrc":"20857:6:36","nodeType":"YulIdentifier","src":"20857:6:36"},"nativeSrc":"20857:81:36","nodeType":"YulFunctionCall","src":"20857:81:36"},"nativeSrc":"20857:81:36","nodeType":"YulExpressionStatement","src":"20857:81:36"}]},"nativeSrc":"20718:230:36","nodeType":"YulCase","src":"20718:230:36","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"20071:6:36","nodeType":"YulIdentifier","src":"20071:6:36"},{"kind":"number","nativeSrc":"20079:2:36","nodeType":"YulLiteral","src":"20079:2:36","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"20068:2:36","nodeType":"YulIdentifier","src":"20068:2:36"},"nativeSrc":"20068:14:36","nodeType":"YulFunctionCall","src":"20068:14:36"},"nativeSrc":"20061:887:36","nodeType":"YulSwitch","src":"20061:887:36"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"19559:1395:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19640:4:36","nodeType":"YulTypedName","src":"19640:4:36","type":""},{"name":"src","nativeSrc":"19646:3:36","nodeType":"YulTypedName","src":"19646:3:36","type":""}],"src":"19559:1395:36"},{"body":{"nativeSrc":"21019:32:36","nodeType":"YulBlock","src":"21019:32:36","statements":[{"nativeSrc":"21029:16:36","nodeType":"YulAssignment","src":"21029:16:36","value":{"name":"value","nativeSrc":"21040:5:36","nodeType":"YulIdentifier","src":"21040:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"21029:7:36","nodeType":"YulIdentifier","src":"21029:7:36"}]}]},"name":"cleanup_t_rational_1000000_by_1","nativeSrc":"20960:91:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21001:5:36","nodeType":"YulTypedName","src":"21001:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"21011:7:36","nodeType":"YulTypedName","src":"21011:7:36","type":""}],"src":"20960:91:36"},{"body":{"nativeSrc":"21131:96:36","nodeType":"YulBlock","src":"21131:96:36","statements":[{"nativeSrc":"21141:80:36","nodeType":"YulAssignment","src":"21141:80:36","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"21213:5:36","nodeType":"YulIdentifier","src":"21213:5:36"}],"functionName":{"name":"cleanup_t_rational_1000000_by_1","nativeSrc":"21181:31:36","nodeType":"YulIdentifier","src":"21181:31:36"},"nativeSrc":"21181:38:36","nodeType":"YulFunctionCall","src":"21181:38:36"}],"functionName":{"name":"identity","nativeSrc":"21172:8:36","nodeType":"YulIdentifier","src":"21172:8:36"},"nativeSrc":"21172:48:36","nodeType":"YulFunctionCall","src":"21172:48:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21154:17:36","nodeType":"YulIdentifier","src":"21154:17:36"},"nativeSrc":"21154:67:36","nodeType":"YulFunctionCall","src":"21154:67:36"},"variableNames":[{"name":"converted","nativeSrc":"21141:9:36","nodeType":"YulIdentifier","src":"21141:9:36"}]}]},"name":"convert_t_rational_1000000_by_1_to_t_uint256","nativeSrc":"21057:170:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21111:5:36","nodeType":"YulTypedName","src":"21111:5:36","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"21121:9:36","nodeType":"YulTypedName","src":"21121:9:36","type":""}],"src":"21057:170:36"},{"body":{"nativeSrc":"21312:80:36","nodeType":"YulBlock","src":"21312:80:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21329:3:36","nodeType":"YulIdentifier","src":"21329:3:36"},{"arguments":[{"name":"value","nativeSrc":"21379:5:36","nodeType":"YulIdentifier","src":"21379:5:36"}],"functionName":{"name":"convert_t_rational_1000000_by_1_to_t_uint256","nativeSrc":"21334:44:36","nodeType":"YulIdentifier","src":"21334:44:36"},"nativeSrc":"21334:51:36","nodeType":"YulFunctionCall","src":"21334:51:36"}],"functionName":{"name":"mstore","nativeSrc":"21322:6:36","nodeType":"YulIdentifier","src":"21322:6:36"},"nativeSrc":"21322:64:36","nodeType":"YulFunctionCall","src":"21322:64:36"},"nativeSrc":"21322:64:36","nodeType":"YulExpressionStatement","src":"21322:64:36"}]},"name":"abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack","nativeSrc":"21233:159:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21300:5:36","nodeType":"YulTypedName","src":"21300:5:36","type":""},{"name":"pos","nativeSrc":"21307:3:36","nodeType":"YulTypedName","src":"21307:3:36","type":""}],"src":"21233:159:36"},{"body":{"nativeSrc":"21566:302:36","nodeType":"YulBlock","src":"21566:302:36","statements":[{"nativeSrc":"21576:26:36","nodeType":"YulAssignment","src":"21576:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"21588:9:36","nodeType":"YulIdentifier","src":"21588:9:36"},{"kind":"number","nativeSrc":"21599:2:36","nodeType":"YulLiteral","src":"21599:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21584:3:36","nodeType":"YulIdentifier","src":"21584:3:36"},"nativeSrc":"21584:18:36","nodeType":"YulFunctionCall","src":"21584:18:36"},"variableNames":[{"name":"tail","nativeSrc":"21576:4:36","nodeType":"YulIdentifier","src":"21576:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21656:6:36","nodeType":"YulIdentifier","src":"21656:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21669:9:36","nodeType":"YulIdentifier","src":"21669:9:36"},{"kind":"number","nativeSrc":"21680:1:36","nodeType":"YulLiteral","src":"21680:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21665:3:36","nodeType":"YulIdentifier","src":"21665:3:36"},"nativeSrc":"21665:17:36","nodeType":"YulFunctionCall","src":"21665:17:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21612:43:36","nodeType":"YulIdentifier","src":"21612:43:36"},"nativeSrc":"21612:71:36","nodeType":"YulFunctionCall","src":"21612:71:36"},"nativeSrc":"21612:71:36","nodeType":"YulExpressionStatement","src":"21612:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21737:6:36","nodeType":"YulIdentifier","src":"21737:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21750:9:36","nodeType":"YulIdentifier","src":"21750:9:36"},{"kind":"number","nativeSrc":"21761:2:36","nodeType":"YulLiteral","src":"21761:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21746:3:36","nodeType":"YulIdentifier","src":"21746:3:36"},"nativeSrc":"21746:18:36","nodeType":"YulFunctionCall","src":"21746:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21693:43:36","nodeType":"YulIdentifier","src":"21693:43:36"},"nativeSrc":"21693:72:36","nodeType":"YulFunctionCall","src":"21693:72:36"},"nativeSrc":"21693:72:36","nodeType":"YulExpressionStatement","src":"21693:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21833:6:36","nodeType":"YulIdentifier","src":"21833:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"21846:9:36","nodeType":"YulIdentifier","src":"21846:9:36"},{"kind":"number","nativeSrc":"21857:2:36","nodeType":"YulLiteral","src":"21857:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21842:3:36","nodeType":"YulIdentifier","src":"21842:3:36"},"nativeSrc":"21842:18:36","nodeType":"YulFunctionCall","src":"21842:18:36"}],"functionName":{"name":"abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack","nativeSrc":"21775:57:36","nodeType":"YulIdentifier","src":"21775:57:36"},"nativeSrc":"21775:86:36","nodeType":"YulFunctionCall","src":"21775:86:36"},"nativeSrc":"21775:86:36","nodeType":"YulExpressionStatement","src":"21775:86:36"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_rational_1000000_by_1__to_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"21398:470:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21522:9:36","nodeType":"YulTypedName","src":"21522:9:36","type":""},{"name":"value2","nativeSrc":"21534:6:36","nodeType":"YulTypedName","src":"21534:6:36","type":""},{"name":"value1","nativeSrc":"21542:6:36","nodeType":"YulTypedName","src":"21542:6:36","type":""},{"name":"value0","nativeSrc":"21550:6:36","nodeType":"YulTypedName","src":"21550:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21561:4:36","nodeType":"YulTypedName","src":"21561:4:36","type":""}],"src":"21398:470:36"},{"body":{"nativeSrc":"21980:130:36","nodeType":"YulBlock","src":"21980:130:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22002:6:36","nodeType":"YulIdentifier","src":"22002:6:36"},{"kind":"number","nativeSrc":"22010:1:36","nodeType":"YulLiteral","src":"22010:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21998:3:36","nodeType":"YulIdentifier","src":"21998:3:36"},"nativeSrc":"21998:14:36","nodeType":"YulFunctionCall","src":"21998:14:36"},{"hexValue":"4952654343657274696669636174653a2063616c6c6572206973206e6f74206f","kind":"string","nativeSrc":"22014:34:36","nodeType":"YulLiteral","src":"22014:34:36","type":"","value":"IReCCertificate: caller is not o"}],"functionName":{"name":"mstore","nativeSrc":"21991:6:36","nodeType":"YulIdentifier","src":"21991:6:36"},"nativeSrc":"21991:58:36","nodeType":"YulFunctionCall","src":"21991:58:36"},"nativeSrc":"21991:58:36","nodeType":"YulExpressionStatement","src":"21991:58:36"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22070:6:36","nodeType":"YulIdentifier","src":"22070:6:36"},{"kind":"number","nativeSrc":"22078:2:36","nodeType":"YulLiteral","src":"22078:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22066:3:36","nodeType":"YulIdentifier","src":"22066:3:36"},"nativeSrc":"22066:15:36","nodeType":"YulFunctionCall","src":"22066:15:36"},{"hexValue":"776e6572206e6f7220617070726f766564","kind":"string","nativeSrc":"22083:19:36","nodeType":"YulLiteral","src":"22083:19:36","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nativeSrc":"22059:6:36","nodeType":"YulIdentifier","src":"22059:6:36"},"nativeSrc":"22059:44:36","nodeType":"YulFunctionCall","src":"22059:44:36"},"nativeSrc":"22059:44:36","nodeType":"YulExpressionStatement","src":"22059:44:36"}]},"name":"store_literal_in_memory_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b","nativeSrc":"21874:236:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21972:6:36","nodeType":"YulTypedName","src":"21972:6:36","type":""}],"src":"21874:236:36"},{"body":{"nativeSrc":"22262:220:36","nodeType":"YulBlock","src":"22262:220:36","statements":[{"nativeSrc":"22272:74:36","nodeType":"YulAssignment","src":"22272:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"22338:3:36","nodeType":"YulIdentifier","src":"22338:3:36"},{"kind":"number","nativeSrc":"22343:2:36","nodeType":"YulLiteral","src":"22343:2:36","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22279:58:36","nodeType":"YulIdentifier","src":"22279:58:36"},"nativeSrc":"22279:67:36","nodeType":"YulFunctionCall","src":"22279:67:36"},"variableNames":[{"name":"pos","nativeSrc":"22272:3:36","nodeType":"YulIdentifier","src":"22272:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22444:3:36","nodeType":"YulIdentifier","src":"22444:3:36"}],"functionName":{"name":"store_literal_in_memory_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b","nativeSrc":"22355:88:36","nodeType":"YulIdentifier","src":"22355:88:36"},"nativeSrc":"22355:93:36","nodeType":"YulFunctionCall","src":"22355:93:36"},"nativeSrc":"22355:93:36","nodeType":"YulExpressionStatement","src":"22355:93:36"},{"nativeSrc":"22457:19:36","nodeType":"YulAssignment","src":"22457:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"22468:3:36","nodeType":"YulIdentifier","src":"22468:3:36"},{"kind":"number","nativeSrc":"22473:2:36","nodeType":"YulLiteral","src":"22473:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22464:3:36","nodeType":"YulIdentifier","src":"22464:3:36"},"nativeSrc":"22464:12:36","nodeType":"YulFunctionCall","src":"22464:12:36"},"variableNames":[{"name":"end","nativeSrc":"22457:3:36","nodeType":"YulIdentifier","src":"22457:3:36"}]}]},"name":"abi_encode_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b_to_t_string_memory_ptr_fromStack","nativeSrc":"22116:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22250:3:36","nodeType":"YulTypedName","src":"22250:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22258:3:36","nodeType":"YulTypedName","src":"22258:3:36","type":""}],"src":"22116:366:36"},{"body":{"nativeSrc":"22659:248:36","nodeType":"YulBlock","src":"22659:248:36","statements":[{"nativeSrc":"22669:26:36","nodeType":"YulAssignment","src":"22669:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"22681:9:36","nodeType":"YulIdentifier","src":"22681:9:36"},{"kind":"number","nativeSrc":"22692:2:36","nodeType":"YulLiteral","src":"22692:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22677:3:36","nodeType":"YulIdentifier","src":"22677:3:36"},"nativeSrc":"22677:18:36","nodeType":"YulFunctionCall","src":"22677:18:36"},"variableNames":[{"name":"tail","nativeSrc":"22669:4:36","nodeType":"YulIdentifier","src":"22669:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22716:9:36","nodeType":"YulIdentifier","src":"22716:9:36"},{"kind":"number","nativeSrc":"22727:1:36","nodeType":"YulLiteral","src":"22727:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22712:3:36","nodeType":"YulIdentifier","src":"22712:3:36"},"nativeSrc":"22712:17:36","nodeType":"YulFunctionCall","src":"22712:17:36"},{"arguments":[{"name":"tail","nativeSrc":"22735:4:36","nodeType":"YulIdentifier","src":"22735:4:36"},{"name":"headStart","nativeSrc":"22741:9:36","nodeType":"YulIdentifier","src":"22741:9:36"}],"functionName":{"name":"sub","nativeSrc":"22731:3:36","nodeType":"YulIdentifier","src":"22731:3:36"},"nativeSrc":"22731:20:36","nodeType":"YulFunctionCall","src":"22731:20:36"}],"functionName":{"name":"mstore","nativeSrc":"22705:6:36","nodeType":"YulIdentifier","src":"22705:6:36"},"nativeSrc":"22705:47:36","nodeType":"YulFunctionCall","src":"22705:47:36"},"nativeSrc":"22705:47:36","nodeType":"YulExpressionStatement","src":"22705:47:36"},{"nativeSrc":"22761:139:36","nodeType":"YulAssignment","src":"22761:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"22895:4:36","nodeType":"YulIdentifier","src":"22895:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b_to_t_string_memory_ptr_fromStack","nativeSrc":"22769:124:36","nodeType":"YulIdentifier","src":"22769:124:36"},"nativeSrc":"22769:131:36","nodeType":"YulFunctionCall","src":"22769:131:36"},"variableNames":[{"name":"tail","nativeSrc":"22761:4:36","nodeType":"YulIdentifier","src":"22761:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22488:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22639:9:36","nodeType":"YulTypedName","src":"22639:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22654:4:36","nodeType":"YulTypedName","src":"22654:4:36","type":""}],"src":"22488:419:36"},{"body":{"nativeSrc":"23067:288:36","nodeType":"YulBlock","src":"23067:288:36","statements":[{"nativeSrc":"23077:26:36","nodeType":"YulAssignment","src":"23077:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"23089:9:36","nodeType":"YulIdentifier","src":"23089:9:36"},{"kind":"number","nativeSrc":"23100:2:36","nodeType":"YulLiteral","src":"23100:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23085:3:36","nodeType":"YulIdentifier","src":"23085:3:36"},"nativeSrc":"23085:18:36","nodeType":"YulFunctionCall","src":"23085:18:36"},"variableNames":[{"name":"tail","nativeSrc":"23077:4:36","nodeType":"YulIdentifier","src":"23077:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23157:6:36","nodeType":"YulIdentifier","src":"23157:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"23170:9:36","nodeType":"YulIdentifier","src":"23170:9:36"},{"kind":"number","nativeSrc":"23181:1:36","nodeType":"YulLiteral","src":"23181:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23166:3:36","nodeType":"YulIdentifier","src":"23166:3:36"},"nativeSrc":"23166:17:36","nodeType":"YulFunctionCall","src":"23166:17:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23113:43:36","nodeType":"YulIdentifier","src":"23113:43:36"},"nativeSrc":"23113:71:36","nodeType":"YulFunctionCall","src":"23113:71:36"},"nativeSrc":"23113:71:36","nodeType":"YulExpressionStatement","src":"23113:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23238:6:36","nodeType":"YulIdentifier","src":"23238:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"23251:9:36","nodeType":"YulIdentifier","src":"23251:9:36"},{"kind":"number","nativeSrc":"23262:2:36","nodeType":"YulLiteral","src":"23262:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23247:3:36","nodeType":"YulIdentifier","src":"23247:3:36"},"nativeSrc":"23247:18:36","nodeType":"YulFunctionCall","src":"23247:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"23194:43:36","nodeType":"YulIdentifier","src":"23194:43:36"},"nativeSrc":"23194:72:36","nodeType":"YulFunctionCall","src":"23194:72:36"},"nativeSrc":"23194:72:36","nodeType":"YulExpressionStatement","src":"23194:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"23320:6:36","nodeType":"YulIdentifier","src":"23320:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"23333:9:36","nodeType":"YulIdentifier","src":"23333:9:36"},{"kind":"number","nativeSrc":"23344:2:36","nodeType":"YulLiteral","src":"23344:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23329:3:36","nodeType":"YulIdentifier","src":"23329:3:36"},"nativeSrc":"23329:18:36","nodeType":"YulFunctionCall","src":"23329:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23276:43:36","nodeType":"YulIdentifier","src":"23276:43:36"},"nativeSrc":"23276:72:36","nodeType":"YulFunctionCall","src":"23276:72:36"},"nativeSrc":"23276:72:36","nodeType":"YulExpressionStatement","src":"23276:72:36"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"22913:442:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23023:9:36","nodeType":"YulTypedName","src":"23023:9:36","type":""},{"name":"value2","nativeSrc":"23035:6:36","nodeType":"YulTypedName","src":"23035:6:36","type":""},{"name":"value1","nativeSrc":"23043:6:36","nodeType":"YulTypedName","src":"23043:6:36","type":""},{"name":"value0","nativeSrc":"23051:6:36","nodeType":"YulTypedName","src":"23051:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23062:4:36","nodeType":"YulTypedName","src":"23062:4:36","type":""}],"src":"22913:442:36"},{"body":{"nativeSrc":"23467:70:36","nodeType":"YulBlock","src":"23467:70:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23489:6:36","nodeType":"YulIdentifier","src":"23489:6:36"},{"kind":"number","nativeSrc":"23497:1:36","nodeType":"YulLiteral","src":"23497:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23485:3:36","nodeType":"YulIdentifier","src":"23485:3:36"},"nativeSrc":"23485:14:36","nodeType":"YulFunctionCall","src":"23485:14:36"},{"hexValue":"436572746966696361746520646f6573206e6f74206578697374","kind":"string","nativeSrc":"23501:28:36","nodeType":"YulLiteral","src":"23501:28:36","type":"","value":"Certificate does not exist"}],"functionName":{"name":"mstore","nativeSrc":"23478:6:36","nodeType":"YulIdentifier","src":"23478:6:36"},"nativeSrc":"23478:52:36","nodeType":"YulFunctionCall","src":"23478:52:36"},"nativeSrc":"23478:52:36","nodeType":"YulExpressionStatement","src":"23478:52:36"}]},"name":"store_literal_in_memory_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf","nativeSrc":"23361:176:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23459:6:36","nodeType":"YulTypedName","src":"23459:6:36","type":""}],"src":"23361:176:36"},{"body":{"nativeSrc":"23689:220:36","nodeType":"YulBlock","src":"23689:220:36","statements":[{"nativeSrc":"23699:74:36","nodeType":"YulAssignment","src":"23699:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"23765:3:36","nodeType":"YulIdentifier","src":"23765:3:36"},{"kind":"number","nativeSrc":"23770:2:36","nodeType":"YulLiteral","src":"23770:2:36","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23706:58:36","nodeType":"YulIdentifier","src":"23706:58:36"},"nativeSrc":"23706:67:36","nodeType":"YulFunctionCall","src":"23706:67:36"},"variableNames":[{"name":"pos","nativeSrc":"23699:3:36","nodeType":"YulIdentifier","src":"23699:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23871:3:36","nodeType":"YulIdentifier","src":"23871:3:36"}],"functionName":{"name":"store_literal_in_memory_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf","nativeSrc":"23782:88:36","nodeType":"YulIdentifier","src":"23782:88:36"},"nativeSrc":"23782:93:36","nodeType":"YulFunctionCall","src":"23782:93:36"},"nativeSrc":"23782:93:36","nodeType":"YulExpressionStatement","src":"23782:93:36"},{"nativeSrc":"23884:19:36","nodeType":"YulAssignment","src":"23884:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"23895:3:36","nodeType":"YulIdentifier","src":"23895:3:36"},{"kind":"number","nativeSrc":"23900:2:36","nodeType":"YulLiteral","src":"23900:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23891:3:36","nodeType":"YulIdentifier","src":"23891:3:36"},"nativeSrc":"23891:12:36","nodeType":"YulFunctionCall","src":"23891:12:36"},"variableNames":[{"name":"end","nativeSrc":"23884:3:36","nodeType":"YulIdentifier","src":"23884:3:36"}]}]},"name":"abi_encode_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf_to_t_string_memory_ptr_fromStack","nativeSrc":"23543:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23677:3:36","nodeType":"YulTypedName","src":"23677:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23685:3:36","nodeType":"YulTypedName","src":"23685:3:36","type":""}],"src":"23543:366:36"},{"body":{"nativeSrc":"24086:248:36","nodeType":"YulBlock","src":"24086:248:36","statements":[{"nativeSrc":"24096:26:36","nodeType":"YulAssignment","src":"24096:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"24108:9:36","nodeType":"YulIdentifier","src":"24108:9:36"},{"kind":"number","nativeSrc":"24119:2:36","nodeType":"YulLiteral","src":"24119:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24104:3:36","nodeType":"YulIdentifier","src":"24104:3:36"},"nativeSrc":"24104:18:36","nodeType":"YulFunctionCall","src":"24104:18:36"},"variableNames":[{"name":"tail","nativeSrc":"24096:4:36","nodeType":"YulIdentifier","src":"24096:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24143:9:36","nodeType":"YulIdentifier","src":"24143:9:36"},{"kind":"number","nativeSrc":"24154:1:36","nodeType":"YulLiteral","src":"24154:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24139:3:36","nodeType":"YulIdentifier","src":"24139:3:36"},"nativeSrc":"24139:17:36","nodeType":"YulFunctionCall","src":"24139:17:36"},{"arguments":[{"name":"tail","nativeSrc":"24162:4:36","nodeType":"YulIdentifier","src":"24162:4:36"},{"name":"headStart","nativeSrc":"24168:9:36","nodeType":"YulIdentifier","src":"24168:9:36"}],"functionName":{"name":"sub","nativeSrc":"24158:3:36","nodeType":"YulIdentifier","src":"24158:3:36"},"nativeSrc":"24158:20:36","nodeType":"YulFunctionCall","src":"24158:20:36"}],"functionName":{"name":"mstore","nativeSrc":"24132:6:36","nodeType":"YulIdentifier","src":"24132:6:36"},"nativeSrc":"24132:47:36","nodeType":"YulFunctionCall","src":"24132:47:36"},"nativeSrc":"24132:47:36","nodeType":"YulExpressionStatement","src":"24132:47:36"},{"nativeSrc":"24188:139:36","nodeType":"YulAssignment","src":"24188:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"24322:4:36","nodeType":"YulIdentifier","src":"24322:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf_to_t_string_memory_ptr_fromStack","nativeSrc":"24196:124:36","nodeType":"YulIdentifier","src":"24196:124:36"},"nativeSrc":"24196:131:36","nodeType":"YulFunctionCall","src":"24196:131:36"},"variableNames":[{"name":"tail","nativeSrc":"24188:4:36","nodeType":"YulIdentifier","src":"24188:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23915:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24066:9:36","nodeType":"YulTypedName","src":"24066:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24081:4:36","nodeType":"YulTypedName","src":"24081:4:36","type":""}],"src":"23915:419:36"},{"body":{"nativeSrc":"24454:34:36","nodeType":"YulBlock","src":"24454:34:36","statements":[{"nativeSrc":"24464:18:36","nodeType":"YulAssignment","src":"24464:18:36","value":{"name":"pos","nativeSrc":"24479:3:36","nodeType":"YulIdentifier","src":"24479:3:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"24464:11:36","nodeType":"YulIdentifier","src":"24464:11:36"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"24340:148:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24426:3:36","nodeType":"YulTypedName","src":"24426:3:36","type":""},{"name":"length","nativeSrc":"24431:6:36","nodeType":"YulTypedName","src":"24431:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"24442:11:36","nodeType":"YulTypedName","src":"24442:11:36","type":""}],"src":"24340:148:36"},{"body":{"nativeSrc":"24604:280:36","nodeType":"YulBlock","src":"24604:280:36","statements":[{"nativeSrc":"24614:53:36","nodeType":"YulVariableDeclaration","src":"24614:53:36","value":{"arguments":[{"name":"value","nativeSrc":"24661:5:36","nodeType":"YulIdentifier","src":"24661:5:36"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"24628:32:36","nodeType":"YulIdentifier","src":"24628:32:36"},"nativeSrc":"24628:39:36","nodeType":"YulFunctionCall","src":"24628:39:36"},"variables":[{"name":"length","nativeSrc":"24618:6:36","nodeType":"YulTypedName","src":"24618:6:36","type":""}]},{"nativeSrc":"24676:96:36","nodeType":"YulAssignment","src":"24676:96:36","value":{"arguments":[{"name":"pos","nativeSrc":"24760:3:36","nodeType":"YulIdentifier","src":"24760:3:36"},{"name":"length","nativeSrc":"24765:6:36","nodeType":"YulIdentifier","src":"24765:6:36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"24683:76:36","nodeType":"YulIdentifier","src":"24683:76:36"},"nativeSrc":"24683:89:36","nodeType":"YulFunctionCall","src":"24683:89:36"},"variableNames":[{"name":"pos","nativeSrc":"24676:3:36","nodeType":"YulIdentifier","src":"24676:3:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"24820:5:36","nodeType":"YulIdentifier","src":"24820:5:36"},{"kind":"number","nativeSrc":"24827:4:36","nodeType":"YulLiteral","src":"24827:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24816:3:36","nodeType":"YulIdentifier","src":"24816:3:36"},"nativeSrc":"24816:16:36","nodeType":"YulFunctionCall","src":"24816:16:36"},{"name":"pos","nativeSrc":"24834:3:36","nodeType":"YulIdentifier","src":"24834:3:36"},{"name":"length","nativeSrc":"24839:6:36","nodeType":"YulIdentifier","src":"24839:6:36"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"24781:34:36","nodeType":"YulIdentifier","src":"24781:34:36"},"nativeSrc":"24781:65:36","nodeType":"YulFunctionCall","src":"24781:65:36"},"nativeSrc":"24781:65:36","nodeType":"YulExpressionStatement","src":"24781:65:36"},{"nativeSrc":"24855:23:36","nodeType":"YulAssignment","src":"24855:23:36","value":{"arguments":[{"name":"pos","nativeSrc":"24866:3:36","nodeType":"YulIdentifier","src":"24866:3:36"},{"name":"length","nativeSrc":"24871:6:36","nodeType":"YulIdentifier","src":"24871:6:36"}],"functionName":{"name":"add","nativeSrc":"24862:3:36","nodeType":"YulIdentifier","src":"24862:3:36"},"nativeSrc":"24862:16:36","nodeType":"YulFunctionCall","src":"24862:16:36"},"variableNames":[{"name":"end","nativeSrc":"24855:3:36","nodeType":"YulIdentifier","src":"24855:3:36"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"24494:390:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24585:5:36","nodeType":"YulTypedName","src":"24585:5:36","type":""},{"name":"pos","nativeSrc":"24592:3:36","nodeType":"YulTypedName","src":"24592:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24600:3:36","nodeType":"YulTypedName","src":"24600:3:36","type":""}],"src":"24494:390:36"},{"body":{"nativeSrc":"25074:251:36","nodeType":"YulBlock","src":"25074:251:36","statements":[{"nativeSrc":"25085:102:36","nodeType":"YulAssignment","src":"25085:102:36","value":{"arguments":[{"name":"value0","nativeSrc":"25174:6:36","nodeType":"YulIdentifier","src":"25174:6:36"},{"name":"pos","nativeSrc":"25183:3:36","nodeType":"YulIdentifier","src":"25183:3:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25092:81:36","nodeType":"YulIdentifier","src":"25092:81:36"},"nativeSrc":"25092:95:36","nodeType":"YulFunctionCall","src":"25092:95:36"},"variableNames":[{"name":"pos","nativeSrc":"25085:3:36","nodeType":"YulIdentifier","src":"25085:3:36"}]},{"nativeSrc":"25197:102:36","nodeType":"YulAssignment","src":"25197:102:36","value":{"arguments":[{"name":"value1","nativeSrc":"25286:6:36","nodeType":"YulIdentifier","src":"25286:6:36"},{"name":"pos","nativeSrc":"25295:3:36","nodeType":"YulIdentifier","src":"25295:3:36"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25204:81:36","nodeType":"YulIdentifier","src":"25204:81:36"},"nativeSrc":"25204:95:36","nodeType":"YulFunctionCall","src":"25204:95:36"},"variableNames":[{"name":"pos","nativeSrc":"25197:3:36","nodeType":"YulIdentifier","src":"25197:3:36"}]},{"nativeSrc":"25309:10:36","nodeType":"YulAssignment","src":"25309:10:36","value":{"name":"pos","nativeSrc":"25316:3:36","nodeType":"YulIdentifier","src":"25316:3:36"},"variableNames":[{"name":"end","nativeSrc":"25309:3:36","nodeType":"YulIdentifier","src":"25309:3:36"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"24890:435:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25045:3:36","nodeType":"YulTypedName","src":"25045:3:36","type":""},{"name":"value1","nativeSrc":"25051:6:36","nodeType":"YulTypedName","src":"25051:6:36","type":""},{"name":"value0","nativeSrc":"25059:6:36","nodeType":"YulTypedName","src":"25059:6:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25070:3:36","nodeType":"YulTypedName","src":"25070:3:36","type":""}],"src":"24890:435:36"},{"body":{"nativeSrc":"25389:40:36","nodeType":"YulBlock","src":"25389:40:36","statements":[{"nativeSrc":"25400:22:36","nodeType":"YulAssignment","src":"25400:22:36","value":{"arguments":[{"name":"value","nativeSrc":"25416:5:36","nodeType":"YulIdentifier","src":"25416:5:36"}],"functionName":{"name":"mload","nativeSrc":"25410:5:36","nodeType":"YulIdentifier","src":"25410:5:36"},"nativeSrc":"25410:12:36","nodeType":"YulFunctionCall","src":"25410:12:36"},"variableNames":[{"name":"length","nativeSrc":"25400:6:36","nodeType":"YulIdentifier","src":"25400:6:36"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"25331:98:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25372:5:36","nodeType":"YulTypedName","src":"25372:5:36","type":""}],"returnVariables":[{"name":"length","nativeSrc":"25382:6:36","nodeType":"YulTypedName","src":"25382:6:36","type":""}],"src":"25331:98:36"},{"body":{"nativeSrc":"25530:73:36","nodeType":"YulBlock","src":"25530:73:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"25547:3:36","nodeType":"YulIdentifier","src":"25547:3:36"},{"name":"length","nativeSrc":"25552:6:36","nodeType":"YulIdentifier","src":"25552:6:36"}],"functionName":{"name":"mstore","nativeSrc":"25540:6:36","nodeType":"YulIdentifier","src":"25540:6:36"},"nativeSrc":"25540:19:36","nodeType":"YulFunctionCall","src":"25540:19:36"},"nativeSrc":"25540:19:36","nodeType":"YulExpressionStatement","src":"25540:19:36"},{"nativeSrc":"25568:29:36","nodeType":"YulAssignment","src":"25568:29:36","value":{"arguments":[{"name":"pos","nativeSrc":"25587:3:36","nodeType":"YulIdentifier","src":"25587:3:36"},{"kind":"number","nativeSrc":"25592:4:36","nodeType":"YulLiteral","src":"25592:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25583:3:36","nodeType":"YulIdentifier","src":"25583:3:36"},"nativeSrc":"25583:14:36","nodeType":"YulFunctionCall","src":"25583:14:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"25568:11:36","nodeType":"YulIdentifier","src":"25568:11:36"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"25435:168:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25502:3:36","nodeType":"YulTypedName","src":"25502:3:36","type":""},{"name":"length","nativeSrc":"25507:6:36","nodeType":"YulTypedName","src":"25507:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"25518:11:36","nodeType":"YulTypedName","src":"25518:11:36","type":""}],"src":"25435:168:36"},{"body":{"nativeSrc":"25699:283:36","nodeType":"YulBlock","src":"25699:283:36","statements":[{"nativeSrc":"25709:52:36","nodeType":"YulVariableDeclaration","src":"25709:52:36","value":{"arguments":[{"name":"value","nativeSrc":"25755:5:36","nodeType":"YulIdentifier","src":"25755:5:36"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"25723:31:36","nodeType":"YulIdentifier","src":"25723:31:36"},"nativeSrc":"25723:38:36","nodeType":"YulFunctionCall","src":"25723:38:36"},"variables":[{"name":"length","nativeSrc":"25713:6:36","nodeType":"YulTypedName","src":"25713:6:36","type":""}]},{"nativeSrc":"25770:77:36","nodeType":"YulAssignment","src":"25770:77:36","value":{"arguments":[{"name":"pos","nativeSrc":"25835:3:36","nodeType":"YulIdentifier","src":"25835:3:36"},{"name":"length","nativeSrc":"25840:6:36","nodeType":"YulIdentifier","src":"25840:6:36"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"25777:57:36","nodeType":"YulIdentifier","src":"25777:57:36"},"nativeSrc":"25777:70:36","nodeType":"YulFunctionCall","src":"25777:70:36"},"variableNames":[{"name":"pos","nativeSrc":"25770:3:36","nodeType":"YulIdentifier","src":"25770:3:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"25895:5:36","nodeType":"YulIdentifier","src":"25895:5:36"},{"kind":"number","nativeSrc":"25902:4:36","nodeType":"YulLiteral","src":"25902:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25891:3:36","nodeType":"YulIdentifier","src":"25891:3:36"},"nativeSrc":"25891:16:36","nodeType":"YulFunctionCall","src":"25891:16:36"},{"name":"pos","nativeSrc":"25909:3:36","nodeType":"YulIdentifier","src":"25909:3:36"},{"name":"length","nativeSrc":"25914:6:36","nodeType":"YulIdentifier","src":"25914:6:36"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"25856:34:36","nodeType":"YulIdentifier","src":"25856:34:36"},"nativeSrc":"25856:65:36","nodeType":"YulFunctionCall","src":"25856:65:36"},"nativeSrc":"25856:65:36","nodeType":"YulExpressionStatement","src":"25856:65:36"},{"nativeSrc":"25930:46:36","nodeType":"YulAssignment","src":"25930:46:36","value":{"arguments":[{"name":"pos","nativeSrc":"25941:3:36","nodeType":"YulIdentifier","src":"25941:3:36"},{"arguments":[{"name":"length","nativeSrc":"25968:6:36","nodeType":"YulIdentifier","src":"25968:6:36"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"25946:21:36","nodeType":"YulIdentifier","src":"25946:21:36"},"nativeSrc":"25946:29:36","nodeType":"YulFunctionCall","src":"25946:29:36"}],"functionName":{"name":"add","nativeSrc":"25937:3:36","nodeType":"YulIdentifier","src":"25937:3:36"},"nativeSrc":"25937:39:36","nodeType":"YulFunctionCall","src":"25937:39:36"},"variableNames":[{"name":"end","nativeSrc":"25930:3:36","nodeType":"YulIdentifier","src":"25930:3:36"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"25609:373:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25680:5:36","nodeType":"YulTypedName","src":"25680:5:36","type":""},{"name":"pos","nativeSrc":"25687:3:36","nodeType":"YulTypedName","src":"25687:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25695:3:36","nodeType":"YulTypedName","src":"25695:3:36","type":""}],"src":"25609:373:36"},{"body":{"nativeSrc":"26188:440:36","nodeType":"YulBlock","src":"26188:440:36","statements":[{"nativeSrc":"26198:27:36","nodeType":"YulAssignment","src":"26198:27:36","value":{"arguments":[{"name":"headStart","nativeSrc":"26210:9:36","nodeType":"YulIdentifier","src":"26210:9:36"},{"kind":"number","nativeSrc":"26221:3:36","nodeType":"YulLiteral","src":"26221:3:36","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26206:3:36","nodeType":"YulIdentifier","src":"26206:3:36"},"nativeSrc":"26206:19:36","nodeType":"YulFunctionCall","src":"26206:19:36"},"variableNames":[{"name":"tail","nativeSrc":"26198:4:36","nodeType":"YulIdentifier","src":"26198:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26279:6:36","nodeType":"YulIdentifier","src":"26279:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"26292:9:36","nodeType":"YulIdentifier","src":"26292:9:36"},{"kind":"number","nativeSrc":"26303:1:36","nodeType":"YulLiteral","src":"26303:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26288:3:36","nodeType":"YulIdentifier","src":"26288:3:36"},"nativeSrc":"26288:17:36","nodeType":"YulFunctionCall","src":"26288:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26235:43:36","nodeType":"YulIdentifier","src":"26235:43:36"},"nativeSrc":"26235:71:36","nodeType":"YulFunctionCall","src":"26235:71:36"},"nativeSrc":"26235:71:36","nodeType":"YulExpressionStatement","src":"26235:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26360:6:36","nodeType":"YulIdentifier","src":"26360:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"26373:9:36","nodeType":"YulIdentifier","src":"26373:9:36"},{"kind":"number","nativeSrc":"26384:2:36","nodeType":"YulLiteral","src":"26384:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26369:3:36","nodeType":"YulIdentifier","src":"26369:3:36"},"nativeSrc":"26369:18:36","nodeType":"YulFunctionCall","src":"26369:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26316:43:36","nodeType":"YulIdentifier","src":"26316:43:36"},"nativeSrc":"26316:72:36","nodeType":"YulFunctionCall","src":"26316:72:36"},"nativeSrc":"26316:72:36","nodeType":"YulExpressionStatement","src":"26316:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"26442:6:36","nodeType":"YulIdentifier","src":"26442:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"26455:9:36","nodeType":"YulIdentifier","src":"26455:9:36"},{"kind":"number","nativeSrc":"26466:2:36","nodeType":"YulLiteral","src":"26466:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26451:3:36","nodeType":"YulIdentifier","src":"26451:3:36"},"nativeSrc":"26451:18:36","nodeType":"YulFunctionCall","src":"26451:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26398:43:36","nodeType":"YulIdentifier","src":"26398:43:36"},"nativeSrc":"26398:72:36","nodeType":"YulFunctionCall","src":"26398:72:36"},"nativeSrc":"26398:72:36","nodeType":"YulExpressionStatement","src":"26398:72:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26491:9:36","nodeType":"YulIdentifier","src":"26491:9:36"},{"kind":"number","nativeSrc":"26502:2:36","nodeType":"YulLiteral","src":"26502:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26487:3:36","nodeType":"YulIdentifier","src":"26487:3:36"},"nativeSrc":"26487:18:36","nodeType":"YulFunctionCall","src":"26487:18:36"},{"arguments":[{"name":"tail","nativeSrc":"26511:4:36","nodeType":"YulIdentifier","src":"26511:4:36"},{"name":"headStart","nativeSrc":"26517:9:36","nodeType":"YulIdentifier","src":"26517:9:36"}],"functionName":{"name":"sub","nativeSrc":"26507:3:36","nodeType":"YulIdentifier","src":"26507:3:36"},"nativeSrc":"26507:20:36","nodeType":"YulFunctionCall","src":"26507:20:36"}],"functionName":{"name":"mstore","nativeSrc":"26480:6:36","nodeType":"YulIdentifier","src":"26480:6:36"},"nativeSrc":"26480:48:36","nodeType":"YulFunctionCall","src":"26480:48:36"},"nativeSrc":"26480:48:36","nodeType":"YulExpressionStatement","src":"26480:48:36"},{"nativeSrc":"26537:84:36","nodeType":"YulAssignment","src":"26537:84:36","value":{"arguments":[{"name":"value3","nativeSrc":"26607:6:36","nodeType":"YulIdentifier","src":"26607:6:36"},{"name":"tail","nativeSrc":"26616:4:36","nodeType":"YulIdentifier","src":"26616:4:36"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"26545:61:36","nodeType":"YulIdentifier","src":"26545:61:36"},"nativeSrc":"26545:76:36","nodeType":"YulFunctionCall","src":"26545:76:36"},"variableNames":[{"name":"tail","nativeSrc":"26537:4:36","nodeType":"YulIdentifier","src":"26537:4:36"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"25988:640:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26136:9:36","nodeType":"YulTypedName","src":"26136:9:36","type":""},{"name":"value3","nativeSrc":"26148:6:36","nodeType":"YulTypedName","src":"26148:6:36","type":""},{"name":"value2","nativeSrc":"26156:6:36","nodeType":"YulTypedName","src":"26156:6:36","type":""},{"name":"value1","nativeSrc":"26164:6:36","nodeType":"YulTypedName","src":"26164:6:36","type":""},{"name":"value0","nativeSrc":"26172:6:36","nodeType":"YulTypedName","src":"26172:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26183:4:36","nodeType":"YulTypedName","src":"26183:4:36","type":""}],"src":"25988:640:36"},{"body":{"nativeSrc":"26696:79:36","nodeType":"YulBlock","src":"26696:79:36","statements":[{"nativeSrc":"26706:22:36","nodeType":"YulAssignment","src":"26706:22:36","value":{"arguments":[{"name":"offset","nativeSrc":"26721:6:36","nodeType":"YulIdentifier","src":"26721:6:36"}],"functionName":{"name":"mload","nativeSrc":"26715:5:36","nodeType":"YulIdentifier","src":"26715:5:36"},"nativeSrc":"26715:13:36","nodeType":"YulFunctionCall","src":"26715:13:36"},"variableNames":[{"name":"value","nativeSrc":"26706:5:36","nodeType":"YulIdentifier","src":"26706:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"26763:5:36","nodeType":"YulIdentifier","src":"26763:5:36"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"26737:25:36","nodeType":"YulIdentifier","src":"26737:25:36"},"nativeSrc":"26737:32:36","nodeType":"YulFunctionCall","src":"26737:32:36"},"nativeSrc":"26737:32:36","nodeType":"YulExpressionStatement","src":"26737:32:36"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"26634:141:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"26674:6:36","nodeType":"YulTypedName","src":"26674:6:36","type":""},{"name":"end","nativeSrc":"26682:3:36","nodeType":"YulTypedName","src":"26682:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"26690:5:36","nodeType":"YulTypedName","src":"26690:5:36","type":""}],"src":"26634:141:36"},{"body":{"nativeSrc":"26857:273:36","nodeType":"YulBlock","src":"26857:273:36","statements":[{"body":{"nativeSrc":"26903:83:36","nodeType":"YulBlock","src":"26903:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"26905:77:36","nodeType":"YulIdentifier","src":"26905:77:36"},"nativeSrc":"26905:79:36","nodeType":"YulFunctionCall","src":"26905:79:36"},"nativeSrc":"26905:79:36","nodeType":"YulExpressionStatement","src":"26905:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"26878:7:36","nodeType":"YulIdentifier","src":"26878:7:36"},{"name":"headStart","nativeSrc":"26887:9:36","nodeType":"YulIdentifier","src":"26887:9:36"}],"functionName":{"name":"sub","nativeSrc":"26874:3:36","nodeType":"YulIdentifier","src":"26874:3:36"},"nativeSrc":"26874:23:36","nodeType":"YulFunctionCall","src":"26874:23:36"},{"kind":"number","nativeSrc":"26899:2:36","nodeType":"YulLiteral","src":"26899:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"26870:3:36","nodeType":"YulIdentifier","src":"26870:3:36"},"nativeSrc":"26870:32:36","nodeType":"YulFunctionCall","src":"26870:32:36"},"nativeSrc":"26867:119:36","nodeType":"YulIf","src":"26867:119:36"},{"nativeSrc":"26996:127:36","nodeType":"YulBlock","src":"26996:127:36","statements":[{"nativeSrc":"27011:15:36","nodeType":"YulVariableDeclaration","src":"27011:15:36","value":{"kind":"number","nativeSrc":"27025:1:36","nodeType":"YulLiteral","src":"27025:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"27015:6:36","nodeType":"YulTypedName","src":"27015:6:36","type":""}]},{"nativeSrc":"27040:73:36","nodeType":"YulAssignment","src":"27040:73:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27085:9:36","nodeType":"YulIdentifier","src":"27085:9:36"},{"name":"offset","nativeSrc":"27096:6:36","nodeType":"YulIdentifier","src":"27096:6:36"}],"functionName":{"name":"add","nativeSrc":"27081:3:36","nodeType":"YulIdentifier","src":"27081:3:36"},"nativeSrc":"27081:22:36","nodeType":"YulFunctionCall","src":"27081:22:36"},{"name":"dataEnd","nativeSrc":"27105:7:36","nodeType":"YulIdentifier","src":"27105:7:36"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"27050:30:36","nodeType":"YulIdentifier","src":"27050:30:36"},"nativeSrc":"27050:63:36","nodeType":"YulFunctionCall","src":"27050:63:36"},"variableNames":[{"name":"value0","nativeSrc":"27040:6:36","nodeType":"YulIdentifier","src":"27040:6:36"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"26781:349:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26827:9:36","nodeType":"YulTypedName","src":"26827:9:36","type":""},{"name":"dataEnd","nativeSrc":"26838:7:36","nodeType":"YulTypedName","src":"26838:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"26850:6:36","nodeType":"YulTypedName","src":"26850:6:36","type":""}],"src":"26781:349:36"},{"body":{"nativeSrc":"27262:206:36","nodeType":"YulBlock","src":"27262:206:36","statements":[{"nativeSrc":"27272:26:36","nodeType":"YulAssignment","src":"27272:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"27284:9:36","nodeType":"YulIdentifier","src":"27284:9:36"},{"kind":"number","nativeSrc":"27295:2:36","nodeType":"YulLiteral","src":"27295:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27280:3:36","nodeType":"YulIdentifier","src":"27280:3:36"},"nativeSrc":"27280:18:36","nodeType":"YulFunctionCall","src":"27280:18:36"},"variableNames":[{"name":"tail","nativeSrc":"27272:4:36","nodeType":"YulIdentifier","src":"27272:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27352:6:36","nodeType":"YulIdentifier","src":"27352:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"27365:9:36","nodeType":"YulIdentifier","src":"27365:9:36"},{"kind":"number","nativeSrc":"27376:1:36","nodeType":"YulLiteral","src":"27376:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27361:3:36","nodeType":"YulIdentifier","src":"27361:3:36"},"nativeSrc":"27361:17:36","nodeType":"YulFunctionCall","src":"27361:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27308:43:36","nodeType":"YulIdentifier","src":"27308:43:36"},"nativeSrc":"27308:71:36","nodeType":"YulFunctionCall","src":"27308:71:36"},"nativeSrc":"27308:71:36","nodeType":"YulExpressionStatement","src":"27308:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27433:6:36","nodeType":"YulIdentifier","src":"27433:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"27446:9:36","nodeType":"YulIdentifier","src":"27446:9:36"},{"kind":"number","nativeSrc":"27457:2:36","nodeType":"YulLiteral","src":"27457:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27442:3:36","nodeType":"YulIdentifier","src":"27442:3:36"},"nativeSrc":"27442:18:36","nodeType":"YulFunctionCall","src":"27442:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27389:43:36","nodeType":"YulIdentifier","src":"27389:43:36"},"nativeSrc":"27389:72:36","nodeType":"YulFunctionCall","src":"27389:72:36"},"nativeSrc":"27389:72:36","nodeType":"YulExpressionStatement","src":"27389:72:36"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"27136:332:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27226:9:36","nodeType":"YulTypedName","src":"27226:9:36","type":""},{"name":"value1","nativeSrc":"27238:6:36","nodeType":"YulTypedName","src":"27238:6:36","type":""},{"name":"value0","nativeSrc":"27246:6:36","nodeType":"YulTypedName","src":"27246:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27257:4:36","nodeType":"YulTypedName","src":"27257:4:36","type":""}],"src":"27136:332:36"},{"body":{"nativeSrc":"27502:152:36","nodeType":"YulBlock","src":"27502:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27519:1:36","nodeType":"YulLiteral","src":"27519:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"27522:77:36","nodeType":"YulLiteral","src":"27522:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"27512:6:36","nodeType":"YulIdentifier","src":"27512:6:36"},"nativeSrc":"27512:88:36","nodeType":"YulFunctionCall","src":"27512:88:36"},"nativeSrc":"27512:88:36","nodeType":"YulExpressionStatement","src":"27512:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27616:1:36","nodeType":"YulLiteral","src":"27616:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"27619:4:36","nodeType":"YulLiteral","src":"27619:4:36","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"27609:6:36","nodeType":"YulIdentifier","src":"27609:6:36"},"nativeSrc":"27609:15:36","nodeType":"YulFunctionCall","src":"27609:15:36"},"nativeSrc":"27609:15:36","nodeType":"YulExpressionStatement","src":"27609:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27640:1:36","nodeType":"YulLiteral","src":"27640:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"27643:4:36","nodeType":"YulLiteral","src":"27643:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"27633:6:36","nodeType":"YulIdentifier","src":"27633:6:36"},"nativeSrc":"27633:15:36","nodeType":"YulFunctionCall","src":"27633:15:36"},"nativeSrc":"27633:15:36","nodeType":"YulExpressionStatement","src":"27633:15:36"}]},"name":"panic_error_0x12","nativeSrc":"27474:180:36","nodeType":"YulFunctionDefinition","src":"27474:180:36"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_1000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_rational_1000000_by_1__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b(memPtr) {\n\n        mstore(add(memPtr, 0), \"IReCCertificate: caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56d9be8c8272b4dcff4d237712853d3c949eebd66abf03353d2076c14a1dbc5b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Certificate does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d20443e17d9a8e16c568dd4ab2493d5221811aa77c022551b229fdf124b3bdf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb46514610350578063a901fe5e1461036c578063b88d4fde146103a1578063c87b56dd146103bd578063e985e9c5146103ed578063f2fde38b1461041d57610137565b806370a08231146102be578063715018a6146102ee5780638da5cb5b146102f857806393b16b451461031657806395d89b411461033257610137565b806342842e0e116100ff57806342842e0e146101f257806342eaa6f41461020e57806355f804b31461023e5780636352211e1461025a578063663b3e221461028a57610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806323b872dd146101d6575b600080fd5b610156600480360381019061015191906122bd565b610439565b6040516101639190612305565b60405180910390f35b61017461049a565b60405161018191906123b0565b60405180910390f35b6101a4600480360381019061019f9190612408565b61052c565b6040516101b19190612476565b60405180910390f35b6101d460048036038101906101cf91906124bd565b610548565b005b6101f060048036038101906101eb91906124fd565b61055e565b005b61020c600480360381019061020791906124fd565b610660565b005b61022860048036038101906102239190612685565b610680565b604051610235919061278a565b60405180910390f35b610258600480360381019061025391906127a5565b6107c6565b005b610274600480360381019061026f9190612408565b6107e1565b6040516102819190612476565b60405180910390f35b6102a4600480360381019061029f9190612408565b6107f3565b6040516102b59594939291906127ee565b60405180910390f35b6102d860048036038101906102d3919061284f565b610939565b6040516102e5919061278a565b60405180910390f35b6102f66109f3565b005b610300610a07565b60405161030d9190612476565b60405180910390f35b610330600480360381019061032b9190612408565b610a31565b005b61033a610b83565b60405161034791906123b0565b60405180910390f35b61036a600480360381019061036591906128a8565b610c15565b005b61038660048036038101906103819190612408565b610c2b565b604051610398969594939291906128e8565b60405180910390f35b6103bb60048036038101906103b691906129f8565b610e72565b005b6103d760048036038101906103d29190612408565b610e97565b6040516103e491906123b0565b60405180910390f35b61040760048036038101906104029190612a7b565b610faa565b6040516104149190612305565b60405180910390f35b6104376004803603810190610432919061284f565b61103e565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104935750610492826110c4565b5b9050919050565b6060600080546104a990612aea565b80601f01602080910402602001604051908101604052809291908181526020018280546104d590612aea565b80156105225780601f106104f757610100808354040283529160200191610522565b820191906000526020600020905b81548152906001019060200180831161050557829003601f168201915b5050505050905090565b6000610537826111a6565b506105418261122e565b9050919050565b61055a828261055561126b565b611273565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d05760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105c79190612476565b60405180910390fd5b60006105e483836105df61126b565b611285565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065a578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065193929190612b1b565b60405180910390fd5b50505050565b61067b83838360405180602001604052806000815250610e72565b505050565b600061068a61149f565b6106948883611526565b61069e828861161f565b6040518060a00160405280878152602001868152602001858152602001848152602001620f42408152506008600084815260200190815260200160002060008201518160000190816106f09190612cfe565b5060208201518160010190816107069190612cfe565b50604082015181600201556060820151816003015560808201518160040155905050876009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4d660303f3cf5c0e9d967870d281fc77f88bb1d50331ac1af95e18cce14ef1f98289620f42406040516107b093929190612e0b565b60405180910390a1819050979650505050505050565b6107ce61149f565b80600a90816107dd9190612cfe565b5050565b60006107ec826111a6565b9050919050565b600860205280600052604060002060009150905080600001805461081690612aea565b80601f016020809104026020016040519081016040528092919081815260200182805461084290612aea565b801561088f5780601f106108645761010080835404028352916020019161088f565b820191906000526020600020905b81548152906001019060200180831161087257829003601f168201915b5050505050908060010180546108a490612aea565b80601f01602080910402602001604051908101604052809291908181526020018280546108d090612aea565b801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b5050505050908060020154908060030154908060040154905085565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ac5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016109a39190612476565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109fb61149f565b610a05600061167b565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6009600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac990612eb4565b60405180910390fd5b6000600860008381526020019081526020016000206004015490506008600083815260200190815260200160002060008082016000610b1191906121f4565b600182016000610b2191906121f4565b6002820160009055600382016000905560048201600090555050610b4482611741565b7f35f384066bf07b6616bbf730515dc81145006942534dbfaa17eee53f248b532f823383604051610b7793929190612ed4565b60405180910390a15050565b606060018054610b9290612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbe90612aea565b8015610c0b5780601f10610be057610100808354040283529160200191610c0b565b820191906000526020600020905b815481529060010190602001808311610bee57829003601f168201915b5050505050905090565b610c27610c2061126b565b83836117c7565b5050565b606080600080600080600073ffffffffffffffffffffffffffffffffffffffff166009600089815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90612f57565b60405180910390fd5b6000600860008981526020019081526020016000206040518060a0016040529081600082018054610d0690612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3290612aea565b8015610d7f5780601f10610d5457610100808354040283529160200191610d7f565b820191906000526020600020905b815481529060010190602001808311610d6257829003601f168201915b50505050508152602001600182018054610d9890612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc490612aea565b8015610e115780601f10610de657610100808354040283529160200191610e11565b820191906000526020600020905b815481529060010190602001808311610df457829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481525050905080600001518160200151826040015183606001518460800151610e5c8d6107e1565b9650965096509650965096505091939550919395565b610e7d84848461055e565b610e91610e8861126b565b85858585611936565b50505050565b6060610ea2826111a6565b506000600660008481526020019081526020016000208054610ec390612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054610eef90612aea565b8015610f3c5780601f10610f1157610100808354040283529160200191610f3c565b820191906000526020600020905b815481529060010190602001808311610f1f57829003601f168201915b505050505090506000610f4d611ae7565b90506000815103610f62578192505050610fa5565b600082511115610f97578082604051602001610f7f929190612fb3565b60405160208183030381529060405292505050610fa5565b610fa084611b79565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61104661149f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110b85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110af9190612476565b60405180910390fd5b6110c18161167b565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061118f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061119f575061119e82611be2565b5b9050919050565b6000806111b283611c4c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361122557826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161121c919061278a565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6112808383836001611c89565b505050565b60008061129184611c4c565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112d3576112d2818486611e4e565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461136457611315600085600080611c89565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146113e7576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6114a761126b565b73ffffffffffffffffffffffffffffffffffffffff166114c5610a07565b73ffffffffffffffffffffffffffffffffffffffff1614611524576114e861126b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161151b9190612476565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115985760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161158f9190612476565b60405180910390fd5b60006115a683836000611285565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461161a5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016116119190612476565b60405180910390fd5b505050565b8060066000848152602001908152602001600020908161163f9190612cfe565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161166f919061278a565b60405180910390a15050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006117506000836000611285565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117c357816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117ba919061278a565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361183857816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161182f9190612476565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516119299190612305565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611ae0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611995949392919061302c565b6020604051808303816000875af19250505080156119d157506040513d601f19601f820116820180604052508101906119ce919061308d565b60015b611a55573d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b506000815103611a4d57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a449190612476565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ade57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ad59190612476565b60405180910390fd5b505b5050505050565b6060600a8054611af690612aea565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2290612aea565b8015611b6f5780601f10611b4457610100808354040283529160200191611b6f565b820191906000526020600020905b815481529060010190602001808311611b5257829003601f168201915b5050505050905090565b6060611b84826111a6565b506000611b8f611ae7565b90506000815111611baf5760405180602001604052806000815250611bda565b80611bb984611f12565b604051602001611bca929190612fb3565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611cc25750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611df6576000611cd2846111a6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611d3d57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611d505750611d4e8184610faa565b155b15611d9257826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611d899190612476565b60405180910390fd5b8115611df457838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611e59838383611fe0565b611f0d57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ece57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611ec5919061278a565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611f049291906130ba565b60405180910390fd5b505050565b606060006001611f21846120a1565b01905060008167ffffffffffffffff811115611f4057611f3f61255a565b5b6040519080825280601f01601f191660200182016040528015611f725781602001600182028036833780820191505090505b509050600082602001820190505b600115611fd5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611fc957611fc86130e3565b5b04945060008503611f80575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561209857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061205957506120588484610faa565b5b8061209757508273ffffffffffffffffffffffffffffffffffffffff1661207f8361122e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106120ff577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816120f5576120f46130e3565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061213c576d04ee2d6d415b85acef81000000008381612132576121316130e3565b5b0492506020810190505b662386f26fc10000831061216b57662386f26fc100008381612161576121606130e3565b5b0492506010810190505b6305f5e1008310612194576305f5e100838161218a576121896130e3565b5b0492506008810190505b61271083106121b95761271083816121af576121ae6130e3565b5b0492506004810190505b606483106121dc57606483816121d2576121d16130e3565b5b0492506002810190505b600a83106121eb576001810190505b80915050919050565b50805461220090612aea565b6000825580601f106122125750612231565b601f0160209004906000526020600020908101906122309190612234565b5b50565b5b8082111561224d576000816000905550600101612235565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61229a81612265565b81146122a557600080fd5b50565b6000813590506122b781612291565b92915050565b6000602082840312156122d3576122d261225b565b5b60006122e1848285016122a8565b91505092915050565b60008115159050919050565b6122ff816122ea565b82525050565b600060208201905061231a60008301846122f6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561235a57808201518184015260208101905061233f565b60008484015250505050565b6000601f19601f8301169050919050565b600061238282612320565b61238c818561232b565b935061239c81856020860161233c565b6123a581612366565b840191505092915050565b600060208201905081810360008301526123ca8184612377565b905092915050565b6000819050919050565b6123e5816123d2565b81146123f057600080fd5b50565b600081359050612402816123dc565b92915050565b60006020828403121561241e5761241d61225b565b5b600061242c848285016123f3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061246082612435565b9050919050565b61247081612455565b82525050565b600060208201905061248b6000830184612467565b92915050565b61249a81612455565b81146124a557600080fd5b50565b6000813590506124b781612491565b92915050565b600080604083850312156124d4576124d361225b565b5b60006124e2858286016124a8565b92505060206124f3858286016123f3565b9150509250929050565b6000806000606084860312156125165761251561225b565b5b6000612524868287016124a8565b9350506020612535868287016124a8565b9250506040612546868287016123f3565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61259282612366565b810181811067ffffffffffffffff821117156125b1576125b061255a565b5b80604052505050565b60006125c4612251565b90506125d08282612589565b919050565b600067ffffffffffffffff8211156125f0576125ef61255a565b5b6125f982612366565b9050602081019050919050565b82818337600083830152505050565b6000612628612623846125d5565b6125ba565b90508281526020810184848401111561264457612643612555565b5b61264f848285612606565b509392505050565b600082601f83011261266c5761266b612550565b5b813561267c848260208601612615565b91505092915050565b600080600080600080600060e0888a0312156126a4576126a361225b565b5b60006126b28a828b016124a8565b975050602088013567ffffffffffffffff8111156126d3576126d2612260565b5b6126df8a828b01612657565b965050604088013567ffffffffffffffff811115612700576126ff612260565b5b61270c8a828b01612657565b955050606088013567ffffffffffffffff81111561272d5761272c612260565b5b6127398a828b01612657565b945050608061274a8a828b016123f3565b93505060a061275b8a828b016123f3565b92505060c061276c8a828b016123f3565b91505092959891949750929550565b612784816123d2565b82525050565b600060208201905061279f600083018461277b565b92915050565b6000602082840312156127bb576127ba61225b565b5b600082013567ffffffffffffffff8111156127d9576127d8612260565b5b6127e584828501612657565b91505092915050565b600060a08201905081810360008301526128088188612377565b9050818103602083015261281c8187612377565b905061282b604083018661277b565b612838606083018561277b565b612845608083018461277b565b9695505050505050565b6000602082840312156128655761286461225b565b5b6000612873848285016124a8565b91505092915050565b612885816122ea565b811461289057600080fd5b50565b6000813590506128a28161287c565b92915050565b600080604083850312156128bf576128be61225b565b5b60006128cd858286016124a8565b92505060206128de85828601612893565b9150509250929050565b600060c08201905081810360008301526129028189612377565b905081810360208301526129168188612377565b9050612925604083018761277b565b612932606083018661277b565b61293f608083018561277b565b61294c60a0830184612467565b979650505050505050565b600067ffffffffffffffff8211156129725761297161255a565b5b61297b82612366565b9050602081019050919050565b600061299b61299684612957565b6125ba565b9050828152602081018484840111156129b7576129b6612555565b5b6129c2848285612606565b509392505050565b600082601f8301126129df576129de612550565b5b81356129ef848260208601612988565b91505092915050565b60008060008060808587031215612a1257612a1161225b565b5b6000612a20878288016124a8565b9450506020612a31878288016124a8565b9350506040612a42878288016123f3565b925050606085013567ffffffffffffffff811115612a6357612a62612260565b5b612a6f878288016129ca565b91505092959194509250565b60008060408385031215612a9257612a9161225b565b5b6000612aa0858286016124a8565b9250506020612ab1858286016124a8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612b0257607f821691505b602082108103612b1557612b14612abb565b5b50919050565b6000606082019050612b306000830186612467565b612b3d602083018561277b565b612b4a6040830184612467565b949350505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612bb47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612b77565b612bbe8683612b77565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612bfb612bf6612bf1846123d2565b612bd6565b6123d2565b9050919050565b6000819050919050565b612c1583612be0565b612c29612c2182612c02565b848454612b84565b825550505050565b600090565b612c3e612c31565b612c49818484612c0c565b505050565b5b81811015612c6d57612c62600082612c36565b600181019050612c4f565b5050565b601f821115612cb257612c8381612b52565b612c8c84612b67565b81016020851015612c9b578190505b612caf612ca785612b67565b830182612c4e565b50505b505050565b600082821c905092915050565b6000612cd560001984600802612cb7565b1980831691505092915050565b6000612cee8383612cc4565b9150826002028217905092915050565b612d0782612320565b67ffffffffffffffff811115612d2057612d1f61255a565b5b612d2a8254612aea565b612d35828285612c71565b600060209050601f831160018114612d685760008415612d56578287015190505b612d608582612ce2565b865550612dc8565b601f198416612d7686612b52565b60005b82811015612d9e57848901518255600182019150602085019450602081019050612d79565b86831015612dbb5784890151612db7601f891682612cc4565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b6000612df5612df0612deb84612dd0565b612bd6565b6123d2565b9050919050565b612e0581612dda565b82525050565b6000606082019050612e20600083018661277b565b612e2d6020830185612467565b612e3a6040830184612dfc565b949350505050565b7f4952654343657274696669636174653a2063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000612e9e60318361232b565b9150612ea982612e42565b604082019050919050565b60006020820190508181036000830152612ecd81612e91565b9050919050565b6000606082019050612ee9600083018661277b565b612ef66020830185612467565b612f03604083018461277b565b949350505050565b7f436572746966696361746520646f6573206e6f74206578697374000000000000600082015250565b6000612f41601a8361232b565b9150612f4c82612f0b565b602082019050919050565b60006020820190508181036000830152612f7081612f34565b9050919050565b600081905092915050565b6000612f8d82612320565b612f978185612f77565b9350612fa781856020860161233c565b80840191505092915050565b6000612fbf8285612f82565b9150612fcb8284612f82565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612ffe82612fd7565b6130088185612fe2565b935061301881856020860161233c565b61302181612366565b840191505092915050565b60006080820190506130416000830187612467565b61304e6020830186612467565b61305b604083018561277b565b818103606083015261306d8184612ff3565b905095945050505050565b60008151905061308781612291565b92915050565b6000602082840312156130a3576130a261225b565b5b60006130b184828501613078565b91505092915050565b60006040820190506130cf6000830185612467565b6130dc602083018461277b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212208f8249af9b29b6b8eb9045e19389014a879a7250f6d3121886782c5e811fb3f364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xA901FE5E EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41D JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x93B16B45 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x332 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x42EAA6F4 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x663B3E22 EQ PUSH2 0x28A JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x9F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x493 JUMPI POP PUSH2 0x492 DUP3 PUSH2 0x10C4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4A9 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D5 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x522 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x522 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x505 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP3 PUSH2 0x11A6 JUMP JUMPDEST POP PUSH2 0x541 DUP3 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55A DUP3 DUP3 PUSH2 0x555 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x1273 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5E4 DUP4 DUP4 PUSH2 0x5DF PUSH2 0x126B JUMP JUMPDEST PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x651 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x67B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A PUSH2 0x149F JUMP JUMPDEST PUSH2 0x694 DUP9 DUP4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x69E DUP3 DUP9 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xF4240 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP8 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4D660303F3CF5C0E9D967870D281FC77F88BB1D50331AC1AF95E18CCE14EF1F9 DUP3 DUP10 PUSH3 0xF4240 PUSH1 0x40 MLOAD PUSH2 0x7B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x149F JUMP JUMPDEST DUP1 PUSH1 0xA SWAP1 DUP2 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EC DUP3 PUSH2 0x11A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x816 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x842 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x88F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x864 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x88F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x872 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x8A4 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D0 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x91D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x91D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x900 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB PUSH2 0x149F JUMP JUMPDEST PUSH2 0xA05 PUSH1 0x0 PUSH2 0x167B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC9 SWAP1 PUSH2 0x2EB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0xB44 DUP3 PUSH2 0x1741 JUMP JUMPDEST PUSH32 0x35F384066BF07B6616BBF730515DC81145006942534DBFAA17EEE53F248B532F DUP3 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xB77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB92 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBE SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC0B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC27 PUSH2 0xC20 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP4 PUSH2 0x17C7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x2F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xD06 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD32 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD7F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD54 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD7F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD62 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD98 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDC4 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE11 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDE6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE11 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDF4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0xE5C DUP14 PUSH2 0x7E1 JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH2 0xE7D DUP5 DUP5 DUP5 PUSH2 0x55E JUMP JUMPDEST PUSH2 0xE91 PUSH2 0xE88 PUSH2 0x126B JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1936 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEA2 DUP3 PUSH2 0x11A6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xEC3 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEEF SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF4D PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xF62 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xF97 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7F SWAP3 SWAP2 SWAP1 PUSH2 0x2FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0xFA0 DUP5 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C1 DUP2 PUSH2 0x167B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x118F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x119F JUMPI POP PUSH2 0x119E DUP3 PUSH2 0x1BE2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11B2 DUP4 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1225 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1280 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1291 DUP5 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12D3 JUMPI PUSH2 0x12D2 DUP2 DUP5 DUP7 PUSH2 0x1E4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1364 JUMPI PUSH2 0x1315 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E7 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14A7 PUSH2 0x126B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14C5 PUSH2 0xA07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1524 JUMPI PUSH2 0x14E8 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1598 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158F SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15A6 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x161A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x163F SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x166F SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1750 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17C3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BA SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1838 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1929 SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1AE0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1995 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19D1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x308D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A55 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A4D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A44 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1ADE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x1AF6 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B22 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B6F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B44 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B6F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B52 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B84 DUP3 PUSH2 0x11A6 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1B8F PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BDA JUMP JUMPDEST DUP1 PUSH2 0x1BB9 DUP5 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BCA SWAP3 SWAP2 SWAP1 PUSH2 0x2FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1CC2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DF6 JUMPI PUSH1 0x0 PUSH2 0x1CD2 DUP5 PUSH2 0x11A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D3D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D50 JUMPI POP PUSH2 0x1D4E DUP2 DUP5 PUSH2 0xFAA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D92 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D89 SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1DF4 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E59 DUP4 DUP4 DUP4 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1F0D JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC5 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F04 SWAP3 SWAP2 SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1F21 DUP5 PUSH2 0x20A1 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F72 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1FD5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1FC9 JUMPI PUSH2 0x1FC8 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1F80 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2098 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2059 JUMPI POP PUSH2 0x2058 DUP5 DUP5 PUSH2 0xFAA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2097 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x207F DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x20FF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x213C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2132 JUMPI PUSH2 0x2131 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x216B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2161 JUMPI PUSH2 0x2160 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2194 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x218A JUMPI PUSH2 0x2189 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x21B9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x21AF JUMPI PUSH2 0x21AE PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x21DC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x21D2 JUMPI PUSH2 0x21D1 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x21EB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2200 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2212 JUMPI POP PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2230 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x224D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2235 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x2265 JUMP JUMPDEST DUP2 EQ PUSH2 0x22A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22B7 DUP2 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D3 JUMPI PUSH2 0x22D2 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E1 DUP5 DUP3 DUP6 ADD PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22FF DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x231A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x235A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x233F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2382 DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH2 0x238C DUP2 DUP6 PUSH2 0x232B JUMP JUMPDEST SWAP4 POP PUSH2 0x239C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x233C JUMP JUMPDEST PUSH2 0x23A5 DUP2 PUSH2 0x2366 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CA DUP2 DUP5 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E5 DUP2 PUSH2 0x23D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x23F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2402 DUP2 PUSH2 0x23DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH2 0x241D PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x242C DUP5 DUP3 DUP6 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 DUP3 PUSH2 0x2435 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2470 DUP2 PUSH2 0x2455 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x249A DUP2 PUSH2 0x2455 JUMP JUMPDEST DUP2 EQ PUSH2 0x24A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24B7 DUP2 PUSH2 0x2491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24D4 JUMPI PUSH2 0x24D3 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E2 DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24F3 DUP6 DUP3 DUP7 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2524 DUP7 DUP3 DUP8 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2535 DUP7 DUP3 DUP8 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2546 DUP7 DUP3 DUP8 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2592 DUP3 PUSH2 0x2366 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25B1 JUMPI PUSH2 0x25B0 PUSH2 0x255A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C4 PUSH2 0x2251 JUMP JUMPDEST SWAP1 POP PUSH2 0x25D0 DUP3 DUP3 PUSH2 0x2589 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25F0 JUMPI PUSH2 0x25EF PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH2 0x25F9 DUP3 PUSH2 0x2366 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2628 PUSH2 0x2623 DUP5 PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2644 JUMPI PUSH2 0x2643 PUSH2 0x2555 JUMP JUMPDEST JUMPDEST PUSH2 0x264F DUP5 DUP3 DUP6 PUSH2 0x2606 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x266C JUMPI PUSH2 0x266B PUSH2 0x2550 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x267C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x26A4 JUMPI PUSH2 0x26A3 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26B2 DUP11 DUP3 DUP12 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D3 JUMPI PUSH2 0x26D2 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x26DF DUP11 DUP3 DUP12 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2700 JUMPI PUSH2 0x26FF PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x270C DUP11 DUP3 DUP12 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x272D JUMPI PUSH2 0x272C PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x2739 DUP11 DUP3 DUP12 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x274A DUP11 DUP3 DUP12 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x275B DUP11 DUP3 DUP12 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x276C DUP11 DUP3 DUP12 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x2784 DUP2 PUSH2 0x23D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x279F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x27E5 DUP5 DUP3 DUP6 ADD PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2808 DUP2 DUP9 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x281C DUP2 DUP8 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP PUSH2 0x282B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2838 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2845 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2865 JUMPI PUSH2 0x2864 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2873 DUP5 DUP3 DUP6 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2885 DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP2 EQ PUSH2 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28A2 DUP2 PUSH2 0x287C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28BF JUMPI PUSH2 0x28BE PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28CD DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28DE DUP6 DUP3 DUP7 ADD PUSH2 0x2893 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 DUP10 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2916 DUP2 DUP9 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP PUSH2 0x2925 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2932 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x293F PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x294C PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2972 JUMPI PUSH2 0x2971 PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH2 0x297B DUP3 PUSH2 0x2366 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299B PUSH2 0x2996 DUP5 PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x2555 JUMP JUMPDEST JUMPDEST PUSH2 0x29C2 DUP5 DUP3 DUP6 PUSH2 0x2606 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29DF JUMPI PUSH2 0x29DE PUSH2 0x2550 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29EF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2988 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A12 JUMPI PUSH2 0x2A11 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A20 DUP8 DUP3 DUP9 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A31 DUP8 DUP3 DUP9 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A42 DUP8 DUP3 DUP9 ADD PUSH2 0x23F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A63 JUMPI PUSH2 0x2A62 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST PUSH2 0x2A6F DUP8 DUP3 DUP9 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A92 JUMPI PUSH2 0x2A91 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AA0 DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AB1 DUP6 DUP3 DUP7 ADD PUSH2 0x24A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B02 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B15 JUMPI PUSH2 0x2B14 PUSH2 0x2ABB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B30 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2B4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2BB4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x2BBE DUP7 DUP4 PUSH2 0x2B77 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFB PUSH2 0x2BF6 PUSH2 0x2BF1 DUP5 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x23D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C15 DUP4 PUSH2 0x2BE0 JUMP JUMPDEST PUSH2 0x2C29 PUSH2 0x2C21 DUP3 PUSH2 0x2C02 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B84 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2C3E PUSH2 0x2C31 JUMP JUMPDEST PUSH2 0x2C49 DUP2 DUP5 DUP5 PUSH2 0x2C0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C6D JUMPI PUSH2 0x2C62 PUSH1 0x0 DUP3 PUSH2 0x2C36 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2CB2 JUMPI PUSH2 0x2C83 DUP2 PUSH2 0x2B52 JUMP JUMPDEST PUSH2 0x2C8C DUP5 PUSH2 0x2B67 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2C9B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2CAF PUSH2 0x2CA7 DUP6 PUSH2 0x2B67 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2C4E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CD5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2CB7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CEE DUP4 DUP4 PUSH2 0x2CC4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D07 DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D20 JUMPI PUSH2 0x2D1F PUSH2 0x255A JUMP JUMPDEST JUMPDEST PUSH2 0x2D2A DUP3 SLOAD PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x2D35 DUP3 DUP3 DUP6 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2D68 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2D56 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2D60 DUP6 DUP3 PUSH2 0x2CE2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2D76 DUP7 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D9E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D79 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2DBB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2DB7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2CC4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DF5 PUSH2 0x2DF0 PUSH2 0x2DEB DUP5 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x23D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E05 DUP2 PUSH2 0x2DDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E20 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2E2D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x2E3A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2DFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4952654343657274696669636174653A2063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9E PUSH1 0x31 DUP4 PUSH2 0x232B JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA9 DUP3 PUSH2 0x2E42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ECD DUP2 PUSH2 0x2E91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EE9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x277B JUMP JUMPDEST PUSH2 0x2EF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x2F03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436572746966696361746520646F6573206E6F74206578697374000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F41 PUSH1 0x1A DUP4 PUSH2 0x232B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4C DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F70 DUP2 PUSH2 0x2F34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8D DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH2 0x2F97 DUP2 DUP6 PUSH2 0x2F77 JUMP JUMPDEST SWAP4 POP PUSH2 0x2FA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x233C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBF DUP3 DUP6 PUSH2 0x2F82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCB DUP3 DUP5 PUSH2 0x2F82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FFE DUP3 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x3008 DUP2 DUP6 PUSH2 0x2FE2 JUMP JUMPDEST SWAP4 POP PUSH2 0x3018 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x233C JUMP JUMPDEST PUSH2 0x3021 DUP2 PUSH2 0x2366 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3041 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x304E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x305B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x277B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x306D DUP2 DUP5 PUSH2 0x2FF3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3087 DUP2 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A3 JUMPI PUSH2 0x30A2 PUSH2 0x225B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30B1 DUP5 DUP3 DUP6 ADD PUSH2 0x3078 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x30CF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2467 JUMP JUMPDEST PUSH2 0x30DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x277B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 DUP3 BLOBHASH 0xAF SWAP12 0x29 0xB6 0xB8 0xEB SWAP1 GASLIMIT 0xE1 SWAP4 DUP10 ADD BLOBBASEFEE DUP8 SWAP11 PUSH19 0x50F6D3121886782C5E811FB3F364736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"290:3814:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:207:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1622:920:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1441:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:55:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1919:208:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2755:544:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2517:93:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3436:666:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;4984:233:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1211:593:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;938:207:14;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;2364:89:11:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;1622:920:34:-;1896:7;1531:13:0;:11;:13::i;:::-;1924:27:34::1;1930:9;1941;1924:5;:27::i;:::-;1961:32;1974:9;1985:7;1961:12;:32::i;:::-;2095:237;;;;;;;;2139:12;2095:237;;;;2179:12;2095:237;;;;2221:14;2095:237;;;;2261:10;2095:237;;;;2299:7;2095:237;;::::0;2069:12:::1;:23;2082:9;2069:23;;;;;;;;;;;:263;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:9;2393:12;:23;2406:9;2393:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2452:48;2470:9;2481;2492:7;2452:48;;;;;;;;:::i;:::-;;;;;;;;2526:9;2519:16;;1622:920:::0;;;;;;;;;:::o;1441:105::-;1531:13:0;:11;:13::i;:::-;1529:10:34::1;1514:12;:25;;;;;;:::i;:::-;;1441:105:::0;:::o;2184:118:11:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;603:55:34:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1919:208:11:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2755:544:34:-;2836:12;:21;2849:7;2836:21;;;;;;;;;;;;;;;;;;;;;2822:35;;:10;:35;;;2814:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2991:20;3014:12;:21;3027:7;3014:21;;;;;;;;;;;:34;;;2991:57;;3109:12;:21;3122:7;3109:21;;;;;;;;;;;;3102:28;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3175:14;3181:7;3175:5;:14::i;:::-;3240:52;3258:7;3267:10;3279:12;3240:52;;;;;;;;:::i;:::-;;;;;;;;2804:495;2755:544;:::o;2517:93:11:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;3436:666:34:-;3514:26;3550;3586:22;3618:18;3646:20;3676:13;3747:1;3714:35;;:12;:21;3727:7;3714:21;;;;;;;;;;;;;;;;;;;;;:35;;;3706:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3799:31;3833:12;:21;3846:7;3833:21;;;;;;;;;;;3799:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:8;:21;;;3929:8;:21;;;3964:8;:23;;;4001:8;:19;;;4034:8;:21;;;4069:16;4077:7;4069;:16::i;:::-;3873:222;;;;;;;;;;;;;3436:666;;;;;;;:::o;4984:233:11:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;1211:593:14:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;3927:153:11:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1560:300:11:-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;16212:241::-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:18:-;709:7;735:10;728:17;;656:96;:::o;14492:120:11:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9978:327:11:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;1923:167:14:-;2036:9;2014:10;:19;2025:7;2014:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2060:23;2075:7;2060:23;;;;;;:::i;:::-;;;;;;;;1923:167;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;11510:227:11:-;11561:21;11585:40;11601:1;11605:7;11622:1;11585:7;:40::i;:::-;11561:64;;11664:1;11639:27;;:13;:27;;;11635:96;;11712:7;11689:31;;;;;;;;;;;:::i;:::-;;;;;;;;11635:96;11551:186;11510:227;:::o;15665:312::-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:17:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;1254:111:34:-;1314:13;1346:12;1339:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1254:111;:::o;2676:255:11:-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;763:146:28:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;5732:115:11:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;987:632:24:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;6401:272:11:-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;25316:916:30:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:36:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:619::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:53;5486:7;5477:6;5466:9;5462:22;5441:53;:::i;:::-;5431:63;;5386:118;4892:619;;;;;:::o;5517:117::-;5626:1;5623;5616:12;5640:117;5749:1;5746;5739:12;5763:180;5811:77;5808:1;5801:88;5908:4;5905:1;5898:15;5932:4;5929:1;5922:15;5949:281;6032:27;6054:4;6032:27;:::i;:::-;6024:6;6020:40;6162:6;6150:10;6147:22;6126:18;6114:10;6111:34;6108:62;6105:88;;;6173:18;;:::i;:::-;6105:88;6213:10;6209:2;6202:22;5992:238;5949:281;;:::o;6236:129::-;6270:6;6297:20;;:::i;:::-;6287:30;;6326:33;6354:4;6346:6;6326:33;:::i;:::-;6236:129;;;:::o;6371:308::-;6433:4;6523:18;6515:6;6512:30;6509:56;;;6545:18;;:::i;:::-;6509:56;6583:29;6605:6;6583:29;:::i;:::-;6575:37;;6667:4;6661;6657:15;6649:23;;6371:308;;;:::o;6685:148::-;6783:6;6778:3;6773;6760:30;6824:1;6815:6;6810:3;6806:16;6799:27;6685:148;;;:::o;6839:425::-;6917:5;6942:66;6958:49;7000:6;6958:49;:::i;:::-;6942:66;:::i;:::-;6933:75;;7031:6;7024:5;7017:21;7069:4;7062:5;7058:16;7107:3;7098:6;7093:3;7089:16;7086:25;7083:112;;;7114:79;;:::i;:::-;7083:112;7204:54;7251:6;7246:3;7241;7204:54;:::i;:::-;6923:341;6839:425;;;;;:::o;7284:340::-;7340:5;7389:3;7382:4;7374:6;7370:17;7366:27;7356:122;;7397:79;;:::i;:::-;7356:122;7514:6;7501:20;7539:79;7614:3;7606:6;7599:4;7591:6;7587:17;7539:79;:::i;:::-;7530:88;;7346:278;7284:340;;;;:::o;7630:1743::-;7773:6;7781;7789;7797;7805;7813;7821;7870:3;7858:9;7849:7;7845:23;7841:33;7838:120;;;7877:79;;:::i;:::-;7838:120;7997:1;8022:53;8067:7;8058:6;8047:9;8043:22;8022:53;:::i;:::-;8012:63;;7968:117;8152:2;8141:9;8137:18;8124:32;8183:18;8175:6;8172:30;8169:117;;;8205:79;;:::i;:::-;8169:117;8310:63;8365:7;8356:6;8345:9;8341:22;8310:63;:::i;:::-;8300:73;;8095:288;8450:2;8439:9;8435:18;8422:32;8481:18;8473:6;8470:30;8467:117;;;8503:79;;:::i;:::-;8467:117;8608:63;8663:7;8654:6;8643:9;8639:22;8608:63;:::i;:::-;8598:73;;8393:288;8748:2;8737:9;8733:18;8720:32;8779:18;8771:6;8768:30;8765:117;;;8801:79;;:::i;:::-;8765:117;8906:63;8961:7;8952:6;8941:9;8937:22;8906:63;:::i;:::-;8896:73;;8691:288;9018:3;9045:53;9090:7;9081:6;9070:9;9066:22;9045:53;:::i;:::-;9035:63;;8989:119;9147:3;9174:53;9219:7;9210:6;9199:9;9195:22;9174:53;:::i;:::-;9164:63;;9118:119;9276:3;9303:53;9348:7;9339:6;9328:9;9324:22;9303:53;:::i;:::-;9293:63;;9247:119;7630:1743;;;;;;;;;;:::o;9379:118::-;9466:24;9484:5;9466:24;:::i;:::-;9461:3;9454:37;9379:118;;:::o;9503:222::-;9596:4;9634:2;9623:9;9619:18;9611:26;;9647:71;9715:1;9704:9;9700:17;9691:6;9647:71;:::i;:::-;9503:222;;;;:::o;9731:509::-;9800:6;9849:2;9837:9;9828:7;9824:23;9820:32;9817:119;;;9855:79;;:::i;:::-;9817:119;10003:1;9992:9;9988:17;9975:31;10033:18;10025:6;10022:30;10019:117;;;10055:79;;:::i;:::-;10019:117;10160:63;10215:7;10206:6;10195:9;10191:22;10160:63;:::i;:::-;10150:73;;9946:287;9731:509;;;;:::o;10246:846::-;10491:4;10529:3;10518:9;10514:19;10506:27;;10579:9;10573:4;10569:20;10565:1;10554:9;10550:17;10543:47;10607:78;10680:4;10671:6;10607:78;:::i;:::-;10599:86;;10732:9;10726:4;10722:20;10717:2;10706:9;10702:18;10695:48;10760:78;10833:4;10824:6;10760:78;:::i;:::-;10752:86;;10848:72;10916:2;10905:9;10901:18;10892:6;10848:72;:::i;:::-;10930;10998:2;10987:9;10983:18;10974:6;10930:72;:::i;:::-;11012:73;11080:3;11069:9;11065:19;11056:6;11012:73;:::i;:::-;10246:846;;;;;;;;:::o;11098:329::-;11157:6;11206:2;11194:9;11185:7;11181:23;11177:32;11174:119;;;11212:79;;:::i;:::-;11174:119;11332:1;11357:53;11402:7;11393:6;11382:9;11378:22;11357:53;:::i;:::-;11347:63;;11303:117;11098:329;;;;:::o;11433:116::-;11503:21;11518:5;11503:21;:::i;:::-;11496:5;11493:32;11483:60;;11539:1;11536;11529:12;11483:60;11433:116;:::o;11555:133::-;11598:5;11636:6;11623:20;11614:29;;11652:30;11676:5;11652:30;:::i;:::-;11555:133;;;;:::o;11694:468::-;11759:6;11767;11816:2;11804:9;11795:7;11791:23;11787:32;11784:119;;;11822:79;;:::i;:::-;11784:119;11942:1;11967:53;12012:7;12003:6;11992:9;11988:22;11967:53;:::i;:::-;11957:63;;11913:117;12069:2;12095:50;12137:7;12128:6;12117:9;12113:22;12095:50;:::i;:::-;12085:60;;12040:115;11694:468;;;;;:::o;12168:957::-;12441:4;12479:3;12468:9;12464:19;12456:27;;12529:9;12523:4;12519:20;12515:1;12504:9;12500:17;12493:47;12557:78;12630:4;12621:6;12557:78;:::i;:::-;12549:86;;12682:9;12676:4;12672:20;12667:2;12656:9;12652:18;12645:48;12710:78;12783:4;12774:6;12710:78;:::i;:::-;12702:86;;12798:72;12866:2;12855:9;12851:18;12842:6;12798:72;:::i;:::-;12880;12948:2;12937:9;12933:18;12924:6;12880:72;:::i;:::-;12962:73;13030:3;13019:9;13015:19;13006:6;12962:73;:::i;:::-;13045;13113:3;13102:9;13098:19;13089:6;13045:73;:::i;:::-;12168:957;;;;;;;;;:::o;13131:307::-;13192:4;13282:18;13274:6;13271:30;13268:56;;;13304:18;;:::i;:::-;13268:56;13342:29;13364:6;13342:29;:::i;:::-;13334:37;;13426:4;13420;13416:15;13408:23;;13131:307;;;:::o;13444:423::-;13521:5;13546:65;13562:48;13603:6;13562:48;:::i;:::-;13546:65;:::i;:::-;13537:74;;13634:6;13627:5;13620:21;13672:4;13665:5;13661:16;13710:3;13701:6;13696:3;13692:16;13689:25;13686:112;;;13717:79;;:::i;:::-;13686:112;13807:54;13854:6;13849:3;13844;13807:54;:::i;:::-;13527:340;13444:423;;;;;:::o;13886:338::-;13941:5;13990:3;13983:4;13975:6;13971:17;13967:27;13957:122;;13998:79;;:::i;:::-;13957:122;14115:6;14102:20;14140:78;14214:3;14206:6;14199:4;14191:6;14187:17;14140:78;:::i;:::-;14131:87;;13947:277;13886:338;;;;:::o;14230:943::-;14325:6;14333;14341;14349;14398:3;14386:9;14377:7;14373:23;14369:33;14366:120;;;14405:79;;:::i;:::-;14366:120;14525:1;14550:53;14595:7;14586:6;14575:9;14571:22;14550:53;:::i;:::-;14540:63;;14496:117;14652:2;14678:53;14723:7;14714:6;14703:9;14699:22;14678:53;:::i;:::-;14668:63;;14623:118;14780:2;14806:53;14851:7;14842:6;14831:9;14827:22;14806:53;:::i;:::-;14796:63;;14751:118;14936:2;14925:9;14921:18;14908:32;14967:18;14959:6;14956:30;14953:117;;;14989:79;;:::i;:::-;14953:117;15094:62;15148:7;15139:6;15128:9;15124:22;15094:62;:::i;:::-;15084:72;;14879:287;14230:943;;;;;;;:::o;15179:474::-;15247:6;15255;15304:2;15292:9;15283:7;15279:23;15275:32;15272:119;;;15310:79;;:::i;:::-;15272:119;15430:1;15455:53;15500:7;15491:6;15480:9;15476:22;15455:53;:::i;:::-;15445:63;;15401:117;15557:2;15583:53;15628:7;15619:6;15608:9;15604:22;15583:53;:::i;:::-;15573:63;;15528:118;15179:474;;;;;:::o;15659:180::-;15707:77;15704:1;15697:88;15804:4;15801:1;15794:15;15828:4;15825:1;15818:15;15845:320;15889:6;15926:1;15920:4;15916:12;15906:22;;15973:1;15967:4;15963:12;15994:18;15984:81;;16050:4;16042:6;16038:17;16028:27;;15984:81;16112:2;16104:6;16101:14;16081:18;16078:38;16075:84;;16131:18;;:::i;:::-;16075:84;15896:269;15845:320;;;:::o;16171:442::-;16320:4;16358:2;16347:9;16343:18;16335:26;;16371:71;16439:1;16428:9;16424:17;16415:6;16371:71;:::i;:::-;16452:72;16520:2;16509:9;16505:18;16496:6;16452:72;:::i;:::-;16534;16602:2;16591:9;16587:18;16578:6;16534:72;:::i;:::-;16171:442;;;;;;:::o;16619:141::-;16668:4;16691:3;16683:11;;16714:3;16711:1;16704:14;16748:4;16745:1;16735:18;16727:26;;16619:141;;;:::o;16766:93::-;16803:6;16850:2;16845;16838:5;16834:14;16830:23;16820:33;;16766:93;;;:::o;16865:107::-;16909:8;16959:5;16953:4;16949:16;16928:37;;16865:107;;;;:::o;16978:393::-;17047:6;17097:1;17085:10;17081:18;17120:97;17150:66;17139:9;17120:97;:::i;:::-;17238:39;17268:8;17257:9;17238:39;:::i;:::-;17226:51;;17310:4;17306:9;17299:5;17295:21;17286:30;;17359:4;17349:8;17345:19;17338:5;17335:30;17325:40;;17054:317;;16978:393;;;;;:::o;17377:60::-;17405:3;17426:5;17419:12;;17377:60;;;:::o;17443:142::-;17493:9;17526:53;17544:34;17553:24;17571:5;17553:24;:::i;:::-;17544:34;:::i;:::-;17526:53;:::i;:::-;17513:66;;17443:142;;;:::o;17591:75::-;17634:3;17655:5;17648:12;;17591:75;;;:::o;17672:269::-;17782:39;17813:7;17782:39;:::i;:::-;17843:91;17892:41;17916:16;17892:41;:::i;:::-;17884:6;17877:4;17871:11;17843:91;:::i;:::-;17837:4;17830:105;17748:193;17672:269;;;:::o;17947:73::-;17992:3;17947:73;:::o;18026:189::-;18103:32;;:::i;:::-;18144:65;18202:6;18194;18188:4;18144:65;:::i;:::-;18079:136;18026:189;;:::o;18221:186::-;18281:120;18298:3;18291:5;18288:14;18281:120;;;18352:39;18389:1;18382:5;18352:39;:::i;:::-;18325:1;18318:5;18314:13;18305:22;;18281:120;;;18221:186;;:::o;18413:543::-;18514:2;18509:3;18506:11;18503:446;;;18548:38;18580:5;18548:38;:::i;:::-;18632:29;18650:10;18632:29;:::i;:::-;18622:8;18618:44;18815:2;18803:10;18800:18;18797:49;;;18836:8;18821:23;;18797:49;18859:80;18915:22;18933:3;18915:22;:::i;:::-;18905:8;18901:37;18888:11;18859:80;:::i;:::-;18518:431;;18503:446;18413:543;;;:::o;18962:117::-;19016:8;19066:5;19060:4;19056:16;19035:37;;18962:117;;;;:::o;19085:169::-;19129:6;19162:51;19210:1;19206:6;19198:5;19195:1;19191:13;19162:51;:::i;:::-;19158:56;19243:4;19237;19233:15;19223:25;;19136:118;19085:169;;;;:::o;19259:295::-;19335:4;19481:29;19506:3;19500:4;19481:29;:::i;:::-;19473:37;;19543:3;19540:1;19536:11;19530:4;19527:21;19519:29;;19259:295;;;;:::o;19559:1395::-;19676:37;19709:3;19676:37;:::i;:::-;19778:18;19770:6;19767:30;19764:56;;;19800:18;;:::i;:::-;19764:56;19844:38;19876:4;19870:11;19844:38;:::i;:::-;19929:67;19989:6;19981;19975:4;19929:67;:::i;:::-;20023:1;20047:4;20034:17;;20079:2;20071:6;20068:14;20096:1;20091:618;;;;20753:1;20770:6;20767:77;;;20819:9;20814:3;20810:19;20804:26;20795:35;;20767:77;20870:67;20930:6;20923:5;20870:67;:::i;:::-;20864:4;20857:81;20726:222;20061:887;;20091:618;20143:4;20139:9;20131:6;20127:22;20177:37;20209:4;20177:37;:::i;:::-;20236:1;20250:208;20264:7;20261:1;20258:14;20250:208;;;20343:9;20338:3;20334:19;20328:26;20320:6;20313:42;20394:1;20386:6;20382:14;20372:24;;20441:2;20430:9;20426:18;20413:31;;20287:4;20284:1;20280:12;20275:17;;20250:208;;;20486:6;20477:7;20474:19;20471:179;;;20544:9;20539:3;20535:19;20529:26;20587:48;20629:4;20621:6;20617:17;20606:9;20587:48;:::i;:::-;20579:6;20572:64;20494:156;20471:179;20696:1;20692;20684:6;20680:14;20676:22;20670:4;20663:36;20098:611;;;20061:887;;19651:1303;;;19559:1395;;:::o;20960:91::-;21011:7;21040:5;21029:16;;20960:91;;;:::o;21057:170::-;21121:9;21154:67;21172:48;21181:38;21213:5;21181:38;:::i;:::-;21172:48;:::i;:::-;21154:67;:::i;:::-;21141:80;;21057:170;;;:::o;21233:159::-;21334:51;21379:5;21334:51;:::i;:::-;21329:3;21322:64;21233:159;;:::o;21398:470::-;21561:4;21599:2;21588:9;21584:18;21576:26;;21612:71;21680:1;21669:9;21665:17;21656:6;21612:71;:::i;:::-;21693:72;21761:2;21750:9;21746:18;21737:6;21693:72;:::i;:::-;21775:86;21857:2;21846:9;21842:18;21833:6;21775:86;:::i;:::-;21398:470;;;;;;:::o;21874:236::-;22014:34;22010:1;22002:6;21998:14;21991:58;22083:19;22078:2;22070:6;22066:15;22059:44;21874:236;:::o;22116:366::-;22258:3;22279:67;22343:2;22338:3;22279:67;:::i;:::-;22272:74;;22355:93;22444:3;22355:93;:::i;:::-;22473:2;22468:3;22464:12;22457:19;;22116:366;;;:::o;22488:419::-;22654:4;22692:2;22681:9;22677:18;22669:26;;22741:9;22735:4;22731:20;22727:1;22716:9;22712:17;22705:47;22769:131;22895:4;22769:131;:::i;:::-;22761:139;;22488:419;;;:::o;22913:442::-;23062:4;23100:2;23089:9;23085:18;23077:26;;23113:71;23181:1;23170:9;23166:17;23157:6;23113:71;:::i;:::-;23194:72;23262:2;23251:9;23247:18;23238:6;23194:72;:::i;:::-;23276;23344:2;23333:9;23329:18;23320:6;23276:72;:::i;:::-;22913:442;;;;;;:::o;23361:176::-;23501:28;23497:1;23489:6;23485:14;23478:52;23361:176;:::o;23543:366::-;23685:3;23706:67;23770:2;23765:3;23706:67;:::i;:::-;23699:74;;23782:93;23871:3;23782:93;:::i;:::-;23900:2;23895:3;23891:12;23884:19;;23543:366;;;:::o;23915:419::-;24081:4;24119:2;24108:9;24104:18;24096:26;;24168:9;24162:4;24158:20;24154:1;24143:9;24139:17;24132:47;24196:131;24322:4;24196:131;:::i;:::-;24188:139;;23915:419;;;:::o;24340:148::-;24442:11;24479:3;24464:18;;24340:148;;;;:::o;24494:390::-;24600:3;24628:39;24661:5;24628:39;:::i;:::-;24683:89;24765:6;24760:3;24683:89;:::i;:::-;24676:96;;24781:65;24839:6;24834:3;24827:4;24820:5;24816:16;24781:65;:::i;:::-;24871:6;24866:3;24862:16;24855:23;;24604:280;24494:390;;;;:::o;24890:435::-;25070:3;25092:95;25183:3;25174:6;25092:95;:::i;:::-;25085:102;;25204:95;25295:3;25286:6;25204:95;:::i;:::-;25197:102;;25316:3;25309:10;;24890:435;;;;;:::o;25331:98::-;25382:6;25416:5;25410:12;25400:22;;25331:98;;;:::o;25435:168::-;25518:11;25552:6;25547:3;25540:19;25592:4;25587:3;25583:14;25568:29;;25435:168;;;;:::o;25609:373::-;25695:3;25723:38;25755:5;25723:38;:::i;:::-;25777:70;25840:6;25835:3;25777:70;:::i;:::-;25770:77;;25856:65;25914:6;25909:3;25902:4;25895:5;25891:16;25856:65;:::i;:::-;25946:29;25968:6;25946:29;:::i;:::-;25941:3;25937:39;25930:46;;25699:283;25609:373;;;;:::o;25988:640::-;26183:4;26221:3;26210:9;26206:19;26198:27;;26235:71;26303:1;26292:9;26288:17;26279:6;26235:71;:::i;:::-;26316:72;26384:2;26373:9;26369:18;26360:6;26316:72;:::i;:::-;26398;26466:2;26455:9;26451:18;26442:6;26398:72;:::i;:::-;26517:9;26511:4;26507:20;26502:2;26491:9;26487:18;26480:48;26545:76;26616:4;26607:6;26545:76;:::i;:::-;26537:84;;25988:640;;;;;;;:::o;26634:141::-;26690:5;26721:6;26715:13;26706:22;;26737:32;26763:5;26737:32;:::i;:::-;26634:141;;;;:::o;26781:349::-;26850:6;26899:2;26887:9;26878:7;26874:23;26870:32;26867:119;;;26905:79;;:::i;:::-;26867:119;27025:1;27050:63;27105:7;27096:6;27085:9;27081:22;27050:63;:::i;:::-;27040:73;;26996:127;26781:349;;;;:::o;27136:332::-;27257:4;27295:2;27284:9;27280:18;27272:26;;27308:71;27376:1;27365:9;27361:17;27352:6;27308:71;:::i;:::-;27389:72;27457:2;27446:9;27442:18;27433:6;27389:72;:::i;:::-;27136:332;;;;;:::o;27474:180::-;27522:77;27519:1;27512:88;27619:4;27616:1;27609:15;27643:4;27640:1;27633:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burnCertificate(uint256)":"93b16b45","certificates(uint256)":"663b3e22","getApproved(uint256)":"081812fc","getCertificateDetails(uint256)":"a901fe5e","isApprovedForAll(address,address)":"e985e9c5","mintCertificate(address,string,string,string,uint256,uint256,uint256)":"42eaa6f4","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"initialBaseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"energyAmount\",\"type\":\"uint256\"}],\"name\":\"CertificateBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CertificateDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"energyAmount\",\"type\":\"uint256\"}],\"name\":\"CertificateMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificates\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"facilityName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"energySource\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"productionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCertificateDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"facilityName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"energySource\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"productionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"facilityName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"energySource\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"productionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newItemId\",\"type\":\"uint256\"}],\"name\":\"mintCertificate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for creating I-REC certificates as NFTs (ERC-721)\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burnCertificate(uint256)\":{\"details\":\"Burns (destroys) an I-REC certificate\",\"params\":{\"tokenId\":\"The ID of the token to burn Requirements: - The caller must own the token or be an approved operator\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getCertificateDetails(uint256)\":{\"details\":\"Returns the complete details of a certificate\",\"params\":{\"tokenId\":\"The ID of the certificate to query\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintCertificate(address,string,string,string,uint256,uint256,uint256)\":{\"details\":\"Creates a new I-REC certificate as an NFT\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setBaseURI(string)\":{\"details\":\"Function to update the base URI if needed\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"IReCCertificate\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IReCCertificate.sol\":\"IReCCertificate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/IReCCertificate.sol\":{\"keccak256\":\"0xbccf850361ed55c652dc2f6841bd8ddfa4bc599adcd502610f0f505799377eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f699983a33a6c5070432c179a8ebba54902ab4e6670e3b72871778dc8761db\",\"dweb:/ipfs/QmPRamqjrphkNye3sesxqqxzD2Xgct91ZuawW5c4Jrr98E\"]}},\"version\":1}"}},"contracts/Marketplace.sol":{"Marketplace":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pricePerToken","type":"uint256"}],"name":"Listed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"}],"name":"ListingCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalCost","type":"uint256"}],"name":"Purchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"amountToBuy","type":"uint256"}],"name":"buyTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"cancelListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"seller","type":"address"}],"name":"getListing","outputs":[{"internalType":"address","name":"sellerAddress","type":"address"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"uint256","name":"amountAvailable","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"}],"name":"listTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"listings","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"uint256","name":"amountAvailable","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2672":{"entryPoint":null,"id":2672,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8909":{"entryPoint":null,"id":8909,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":194,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":534,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":549,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":427,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":395,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":390,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":445,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1551:36","nodeType":"YulBlock","src":"0:1551:36","statements":[{"body":{"nativeSrc":"47:35:36","nodeType":"YulBlock","src":"47:35:36","statements":[{"nativeSrc":"57:19:36","nodeType":"YulAssignment","src":"57:19:36","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:36","nodeType":"YulLiteral","src":"73:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:36","nodeType":"YulIdentifier","src":"67:5:36"},"nativeSrc":"67:9:36","nodeType":"YulFunctionCall","src":"67:9:36"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:36","nodeType":"YulIdentifier","src":"57:6:36"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:36","nodeType":"YulTypedName","src":"40:6:36","type":""}],"src":"7:75:36"},{"body":{"nativeSrc":"177:28:36","nodeType":"YulBlock","src":"177:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:36","nodeType":"YulLiteral","src":"194:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:36","nodeType":"YulLiteral","src":"197:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:36","nodeType":"YulIdentifier","src":"187:6:36"},"nativeSrc":"187:12:36","nodeType":"YulFunctionCall","src":"187:12:36"},"nativeSrc":"187:12:36","nodeType":"YulExpressionStatement","src":"187:12:36"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:36","nodeType":"YulFunctionDefinition","src":"88:117:36"},{"body":{"nativeSrc":"300:28:36","nodeType":"YulBlock","src":"300:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:36","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:36","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:36","nodeType":"YulIdentifier","src":"310:6:36"},"nativeSrc":"310:12:36","nodeType":"YulFunctionCall","src":"310:12:36"},"nativeSrc":"310:12:36","nodeType":"YulExpressionStatement","src":"310:12:36"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:36","nodeType":"YulFunctionDefinition","src":"211:117:36"},{"body":{"nativeSrc":"379:81:36","nodeType":"YulBlock","src":"379:81:36","statements":[{"nativeSrc":"389:65:36","nodeType":"YulAssignment","src":"389:65:36","value":{"arguments":[{"name":"value","nativeSrc":"404:5:36","nodeType":"YulIdentifier","src":"404:5:36"},{"kind":"number","nativeSrc":"411:42:36","nodeType":"YulLiteral","src":"411:42:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:36","nodeType":"YulIdentifier","src":"400:3:36"},"nativeSrc":"400:54:36","nodeType":"YulFunctionCall","src":"400:54:36"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:36","nodeType":"YulIdentifier","src":"389:7:36"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:36","nodeType":"YulTypedName","src":"361:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:36","nodeType":"YulTypedName","src":"371:7:36","type":""}],"src":"334:126:36"},{"body":{"nativeSrc":"511:51:36","nodeType":"YulBlock","src":"511:51:36","statements":[{"nativeSrc":"521:35:36","nodeType":"YulAssignment","src":"521:35:36","value":{"arguments":[{"name":"value","nativeSrc":"550:5:36","nodeType":"YulIdentifier","src":"550:5:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:36","nodeType":"YulIdentifier","src":"532:17:36"},"nativeSrc":"532:24:36","nodeType":"YulFunctionCall","src":"532:24:36"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:36","nodeType":"YulIdentifier","src":"521:7:36"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:36","nodeType":"YulTypedName","src":"493:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:36","nodeType":"YulTypedName","src":"503:7:36","type":""}],"src":"466:96:36"},{"body":{"nativeSrc":"611:79:36","nodeType":"YulBlock","src":"611:79:36","statements":[{"body":{"nativeSrc":"668:16:36","nodeType":"YulBlock","src":"668:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:36","nodeType":"YulLiteral","src":"677:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:36","nodeType":"YulLiteral","src":"680:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:36","nodeType":"YulIdentifier","src":"670:6:36"},"nativeSrc":"670:12:36","nodeType":"YulFunctionCall","src":"670:12:36"},"nativeSrc":"670:12:36","nodeType":"YulExpressionStatement","src":"670:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:36","nodeType":"YulIdentifier","src":"634:5:36"},{"arguments":[{"name":"value","nativeSrc":"659:5:36","nodeType":"YulIdentifier","src":"659:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:36","nodeType":"YulIdentifier","src":"641:17:36"},"nativeSrc":"641:24:36","nodeType":"YulFunctionCall","src":"641:24:36"}],"functionName":{"name":"eq","nativeSrc":"631:2:36","nodeType":"YulIdentifier","src":"631:2:36"},"nativeSrc":"631:35:36","nodeType":"YulFunctionCall","src":"631:35:36"}],"functionName":{"name":"iszero","nativeSrc":"624:6:36","nodeType":"YulIdentifier","src":"624:6:36"},"nativeSrc":"624:43:36","nodeType":"YulFunctionCall","src":"624:43:36"},"nativeSrc":"621:63:36","nodeType":"YulIf","src":"621:63:36"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:36","nodeType":"YulTypedName","src":"604:5:36","type":""}],"src":"568:122:36"},{"body":{"nativeSrc":"759:80:36","nodeType":"YulBlock","src":"759:80:36","statements":[{"nativeSrc":"769:22:36","nodeType":"YulAssignment","src":"769:22:36","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:36","nodeType":"YulIdentifier","src":"784:6:36"}],"functionName":{"name":"mload","nativeSrc":"778:5:36","nodeType":"YulIdentifier","src":"778:5:36"},"nativeSrc":"778:13:36","nodeType":"YulFunctionCall","src":"778:13:36"},"variableNames":[{"name":"value","nativeSrc":"769:5:36","nodeType":"YulIdentifier","src":"769:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:36","nodeType":"YulIdentifier","src":"827:5:36"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:36","nodeType":"YulIdentifier","src":"800:26:36"},"nativeSrc":"800:33:36","nodeType":"YulFunctionCall","src":"800:33:36"},"nativeSrc":"800:33:36","nodeType":"YulExpressionStatement","src":"800:33:36"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:36","nodeType":"YulTypedName","src":"737:6:36","type":""},{"name":"end","nativeSrc":"745:3:36","nodeType":"YulTypedName","src":"745:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:36","nodeType":"YulTypedName","src":"753:5:36","type":""}],"src":"696:143:36"},{"body":{"nativeSrc":"922:274:36","nodeType":"YulBlock","src":"922:274:36","statements":[{"body":{"nativeSrc":"968:83:36","nodeType":"YulBlock","src":"968:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:36","nodeType":"YulIdentifier","src":"970:77:36"},"nativeSrc":"970:79:36","nodeType":"YulFunctionCall","src":"970:79:36"},"nativeSrc":"970:79:36","nodeType":"YulExpressionStatement","src":"970:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:36","nodeType":"YulIdentifier","src":"943:7:36"},{"name":"headStart","nativeSrc":"952:9:36","nodeType":"YulIdentifier","src":"952:9:36"}],"functionName":{"name":"sub","nativeSrc":"939:3:36","nodeType":"YulIdentifier","src":"939:3:36"},"nativeSrc":"939:23:36","nodeType":"YulFunctionCall","src":"939:23:36"},{"kind":"number","nativeSrc":"964:2:36","nodeType":"YulLiteral","src":"964:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:36","nodeType":"YulIdentifier","src":"935:3:36"},"nativeSrc":"935:32:36","nodeType":"YulFunctionCall","src":"935:32:36"},"nativeSrc":"932:119:36","nodeType":"YulIf","src":"932:119:36"},{"nativeSrc":"1061:128:36","nodeType":"YulBlock","src":"1061:128:36","statements":[{"nativeSrc":"1076:15:36","nodeType":"YulVariableDeclaration","src":"1076:15:36","value":{"kind":"number","nativeSrc":"1090:1:36","nodeType":"YulLiteral","src":"1090:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:36","nodeType":"YulTypedName","src":"1080:6:36","type":""}]},{"nativeSrc":"1105:74:36","nodeType":"YulAssignment","src":"1105:74:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:36","nodeType":"YulIdentifier","src":"1151:9:36"},{"name":"offset","nativeSrc":"1162:6:36","nodeType":"YulIdentifier","src":"1162:6:36"}],"functionName":{"name":"add","nativeSrc":"1147:3:36","nodeType":"YulIdentifier","src":"1147:3:36"},"nativeSrc":"1147:22:36","nodeType":"YulFunctionCall","src":"1147:22:36"},{"name":"dataEnd","nativeSrc":"1171:7:36","nodeType":"YulIdentifier","src":"1171:7:36"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:36","nodeType":"YulIdentifier","src":"1115:31:36"},"nativeSrc":"1115:64:36","nodeType":"YulFunctionCall","src":"1115:64:36"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:36","nodeType":"YulIdentifier","src":"1105:6:36"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:36","nodeType":"YulTypedName","src":"892:9:36","type":""},{"name":"dataEnd","nativeSrc":"903:7:36","nodeType":"YulTypedName","src":"903:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:36","nodeType":"YulTypedName","src":"915:6:36","type":""}],"src":"845:351:36"},{"body":{"nativeSrc":"1267:53:36","nodeType":"YulBlock","src":"1267:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1284:3:36","nodeType":"YulIdentifier","src":"1284:3:36"},{"arguments":[{"name":"value","nativeSrc":"1307:5:36","nodeType":"YulIdentifier","src":"1307:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1289:17:36","nodeType":"YulIdentifier","src":"1289:17:36"},"nativeSrc":"1289:24:36","nodeType":"YulFunctionCall","src":"1289:24:36"}],"functionName":{"name":"mstore","nativeSrc":"1277:6:36","nodeType":"YulIdentifier","src":"1277:6:36"},"nativeSrc":"1277:37:36","nodeType":"YulFunctionCall","src":"1277:37:36"},"nativeSrc":"1277:37:36","nodeType":"YulExpressionStatement","src":"1277:37:36"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1202:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1255:5:36","nodeType":"YulTypedName","src":"1255:5:36","type":""},{"name":"pos","nativeSrc":"1262:3:36","nodeType":"YulTypedName","src":"1262:3:36","type":""}],"src":"1202:118:36"},{"body":{"nativeSrc":"1424:124:36","nodeType":"YulBlock","src":"1424:124:36","statements":[{"nativeSrc":"1434:26:36","nodeType":"YulAssignment","src":"1434:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"1446:9:36","nodeType":"YulIdentifier","src":"1446:9:36"},{"kind":"number","nativeSrc":"1457:2:36","nodeType":"YulLiteral","src":"1457:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1442:3:36","nodeType":"YulIdentifier","src":"1442:3:36"},"nativeSrc":"1442:18:36","nodeType":"YulFunctionCall","src":"1442:18:36"},"variableNames":[{"name":"tail","nativeSrc":"1434:4:36","nodeType":"YulIdentifier","src":"1434:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1514:6:36","nodeType":"YulIdentifier","src":"1514:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"1527:9:36","nodeType":"YulIdentifier","src":"1527:9:36"},{"kind":"number","nativeSrc":"1538:1:36","nodeType":"YulLiteral","src":"1538:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1523:3:36","nodeType":"YulIdentifier","src":"1523:3:36"},"nativeSrc":"1523:17:36","nodeType":"YulFunctionCall","src":"1523:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1470:43:36","nodeType":"YulIdentifier","src":"1470:43:36"},"nativeSrc":"1470:71:36","nodeType":"YulFunctionCall","src":"1470:71:36"},"nativeSrc":"1470:71:36","nodeType":"YulExpressionStatement","src":"1470:71:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1326:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1396:9:36","nodeType":"YulTypedName","src":"1396:9:36","type":""},{"name":"value0","nativeSrc":"1408:6:36","nodeType":"YulTypedName","src":"1408:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1419:4:36","nodeType":"YulTypedName","src":"1419:4:36","type":""}],"src":"1326:222:36"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516117b83803806117b8833981810160405281019061003291906101e9565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610225565b60405180910390fd5b6100b4816100c260201b60201c565b506001808190555050610240565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b68261018b565b9050919050565b6101c6816101ab565b81146101d157600080fd5b50565b6000815190506101e3816101bd565b92915050565b6000602082840312156101ff576101fe610186565b5b600061020d848285016101d4565b91505092915050565b61021f816101ab565b82525050565b600060208201905061023a6000830184610216565b92915050565b6115698061024f6000396000f3fe60806040526004361061007b5760003560e01c8063db931fcd1161004e578063db931fcd1461012a578063dcefa53814610169578063f2fde38b14610185578063fa982ad1146101ae5761007b565b80634724da6f14610080578063715018a6146100a95780638da5cb5b146100c0578063b369f6ad146100eb575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610e5a565b6101d7565b005b3480156100b557600080fd5b506100be6103b2565b005b3480156100cc57600080fd5b506100d56103c6565b6040516100e29190610e96565b60405180910390f35b3480156100f757600080fd5b50610112600480360381019061010d9190610eb1565b6103ef565b60405161012193929190610f0a565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190610eb1565b610505565b60405161016093929190610f0a565b60405180910390f35b610183600480360381019061017e9190610f6d565b61055c565b005b34801561019157600080fd5b506101ac60048036038101906101a79190610e5a565b610889565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190610fc0565b61090f565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600201541161029e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029590611070565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905550503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f796ebe8ba5d6045889c70272f8e2dad46d17b785eebaf80794d94e1d7de0f08260405160405180910390a35050565b6103ba610c55565b6103c46000610cdc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509250925092565b6002602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b610564610da0565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160020154101561062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906110dc565b60405180910390fd5b600082826001015461063d919061112b565b905080341015610682576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610679906111b9565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633866040518463ffffffff1660e01b81526004016106e3939291906111d9565b6020604051808303816000875af1158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190611248565b508282600201600082825461073b9190611275565b9250508190555060008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161078c906112da565b60006040518083038185875af1925050503d80600081146107c9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ce565b606091505b5050905080610812576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108099061133b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49868560405161087192919061135b565b60405180910390a3505050610884610de6565b505050565b610891610c55565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109035760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108fa9190610e96565b60405180910390fd5b61090c81610cdc565b50565b60008211801561091f5750600081115b61095e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610955906113d0565b60405180910390fd5b6000839050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161099f9291906113f0565b602060405180830381865afa1580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e0919061142e565b1015610a21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a18906114a7565b60405180910390fd5b828173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a5b9190610e96565b602060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c919061142e565b1015610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490611513565b60405180910390fd5b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200184815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca8585604051610c4792919061135b565b60405180910390a350505050565b610c5d610def565b73ffffffffffffffffffffffffffffffffffffffff16610c7b6103c6565b73ffffffffffffffffffffffffffffffffffffffff1614610cda57610c9e610def565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cd19190610e96565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610ddc576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2782610dfc565b9050919050565b610e3781610e1c565b8114610e4257600080fd5b50565b600081359050610e5481610e2e565b92915050565b600060208284031215610e7057610e6f610df7565b5b6000610e7e84828501610e45565b91505092915050565b610e9081610e1c565b82525050565b6000602082019050610eab6000830184610e87565b92915050565b60008060408385031215610ec857610ec7610df7565b5b6000610ed685828601610e45565b9250506020610ee785828601610e45565b9150509250929050565b6000819050919050565b610f0481610ef1565b82525050565b6000606082019050610f1f6000830186610e87565b610f2c6020830185610efb565b610f396040830184610efb565b949350505050565b610f4a81610ef1565b8114610f5557600080fd5b50565b600081359050610f6781610f41565b92915050565b600080600060608486031215610f8657610f85610df7565b5b6000610f9486828701610e45565b9350506020610fa586828701610e45565b9250506040610fb686828701610f58565b9150509250925092565b600080600060608486031215610fd957610fd8610df7565b5b6000610fe786828701610e45565b9350506020610ff886828701610f58565b925050604061100986828701610f58565b9150509250925092565b600082825260208201905092915050565b7f4e6f206c697374696e6720746f2063616e63656c000000000000000000000000600082015250565b600061105a601483611013565b915061106582611024565b602082019050919050565b600060208201905081810360008301526110898161104d565b9050919050565b7f4e6f7420656e6f75676820746f6b656e73206c69737465640000000000000000600082015250565b60006110c6601883611013565b91506110d182611090565b602082019050919050565b600060208201905081810360008301526110f5816110b9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113682610ef1565b915061114183610ef1565b925082820261114f81610ef1565b91508282048414831517611166576111656110fc565b5b5092915050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b60006111a3601583611013565b91506111ae8261116d565b602082019050919050565b600060208201905081810360008301526111d281611196565b9050919050565b60006060820190506111ee6000830186610e87565b6111fb6020830185610e87565b6112086040830184610efb565b949350505050565b60008115159050919050565b61122581611210565b811461123057600080fd5b50565b6000815190506112428161121c565b92915050565b60006020828403121561125e5761125d610df7565b5b600061126c84828501611233565b91505092915050565b600061128082610ef1565b915061128b83610ef1565b92508282039050818111156112a3576112a26110fc565b5b92915050565b600081905092915050565b50565b60006112c46000836112a9565b91506112cf826112b4565b600082019050919050565b60006112e5826112b7565b9150819050919050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000611325601383611013565b9150611330826112ef565b602082019050919050565b6000602082019050818103600083015261135481611318565b9050919050565b60006040820190506113706000830185610efb565b61137d6020830184610efb565b9392505050565b7f496e76616c696420696e70757473000000000000000000000000000000000000600082015250565b60006113ba600e83611013565b91506113c582611384565b602082019050919050565b600060208201905081810360008301526113e9816113ad565b9050919050565b60006040820190506114056000830185610e87565b6114126020830184610e87565b9392505050565b60008151905061142881610f41565b92915050565b60006020828403121561144457611443610df7565b5b600061145284828501611419565b91505092915050565b7f4d61726b6574706c616365206e6f7420617070726f7665640000000000000000600082015250565b6000611491601883611013565b915061149c8261145b565b602082019050919050565b600060208201905081810360008301526114c081611484565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006114fd601483611013565b9150611508826114c7565b602082019050919050565b6000602082019050818103600083015261152c816114f0565b905091905056fea2646970667358221220494703a62b5149ab7b68a4a6c6b8fd1debc9eea6bdee8645fb30aba2ac3f77f464736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17B8 CODESIZE SUB DUP1 PUSH2 0x17B8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4 DUP2 PUSH2 0xC2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x240 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6 DUP3 PUSH2 0x18B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1AB JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E3 DUP2 PUSH2 0x1BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FE PUSH2 0x186 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D DUP5 DUP3 DUP6 ADD PUSH2 0x1D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21F DUP2 PUSH2 0x1AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1569 DUP1 PUSH2 0x24F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB931FCD GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDB931FCD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xDCEFA538 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xFA982AD1 EQ PUSH2 0x1AE JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x4724DA6F EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB369F6AD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x3B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x796EBE8BA5D6045889C70272F8E2DAD46D17B785EEBAF80794D94E1D7DE0F082 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3BA PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x3C4 PUSH1 0x0 PUSH2 0xCDC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x679 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST POP DUP3 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x78C SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x871 SWAP3 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x884 PUSH2 0xDE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x891 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x903 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90C DUP2 PUSH2 0xCDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x91F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST LT ISZERO PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP3 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xC5D PUSH2 0xDEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7B PUSH2 0x3C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDA JUMPI PUSH2 0xC9E PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xDDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE27 DUP3 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE1C JUMP JUMPDEST DUP2 EQ PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE54 DUP2 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE6F PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE7E DUP5 DUP3 DUP6 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE90 DUP2 PUSH2 0xE1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC8 JUMPI PUSH2 0xEC7 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED6 DUP6 DUP3 DUP7 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE7 DUP6 DUP3 DUP7 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF1F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0xF2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xF39 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xF4A DUP2 PUSH2 0xEF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF67 DUP2 PUSH2 0xF41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH2 0xF85 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF94 DUP7 DUP3 DUP8 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFA5 DUP7 DUP3 DUP8 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFB6 DUP7 DUP3 DUP8 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE7 DUP7 DUP3 DUP8 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFF8 DUP7 DUP3 DUP8 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1009 DUP7 DUP3 DUP8 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206C697374696E6720746F2063616E63656C000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105A PUSH1 0x14 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1065 DUP3 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1089 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E73206C69737465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C6 PUSH1 0x18 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D1 DUP3 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F5 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1136 DUP3 PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1141 DUP4 PUSH2 0xEF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x114F DUP2 PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0x10FC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 PUSH1 0x15 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AE DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D2 DUP2 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11EE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x11FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x1208 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x1210 JUMP JUMPDEST DUP2 EQ PUSH2 0x1230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1242 DUP2 PUSH2 0x121C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125E JUMPI PUSH2 0x125D PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x126C DUP5 DUP3 DUP6 ADD PUSH2 0x1233 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1280 DUP3 PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x128B DUP4 PUSH2 0xEF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x10FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C4 PUSH1 0x0 DUP4 PUSH2 0x12A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP3 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E5 DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1325 PUSH1 0x13 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1330 DUP3 PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1354 DUP2 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1370 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x137D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757473000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BA PUSH1 0xE DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C5 DUP3 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13E9 DUP2 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1405 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x1412 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1428 DUP2 PUSH2 0xF41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1443 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1452 DUP5 DUP3 DUP6 ADD PUSH2 0x1419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B6574706C616365206E6F7420617070726F7665640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1491 PUSH1 0x18 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x149C DUP3 PUSH2 0x145B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C0 DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FD PUSH1 0x14 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1508 DUP3 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x152C DUP2 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH SELFBALANCE SUB 0xA6 0x2B MLOAD BLOBHASH 0xAB PUSH28 0x68A4A6C6B8FD1DEBC9EEA6BDEE8645FB30ABA2AC3F77F464736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"369:3130:35:-:0;;;1055:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1097:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:21;2061:7;:21;;;;1055:58:35;369:3130;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:36:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;369:3130:35:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":3157,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_2512":{"entryPoint":3567,"id":2512,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2707":{"entryPoint":3558,"id":2707,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2699":{"entryPoint":3488,"id":2699,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3292,"id":146,"parameterSlots":1,"returnSlots":0},"@buyTokens_9074":{"entryPoint":1372,"id":9074,"parameterSlots":3,"returnSlots":0},"@cancelListing_9113":{"entryPoint":471,"id":9113,"parameterSlots":1,"returnSlots":0},"@getListing_9145":{"entryPoint":1007,"id":9145,"parameterSlots":2,"returnSlots":3},"@listTokens_8986":{"entryPoint":2319,"id":8986,"parameterSlots":3,"returnSlots":0},"@listings_8868":{"entryPoint":1285,"id":8868,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":966,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":946,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2185,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3761,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3949,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":4032,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3719,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack":{"entryPoint":4502,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack":{"entryPoint":5360,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea_to_t_string_memory_ptr_fromStack":{"entryPoint":5037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack":{"entryPoint":5252,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":4888,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965_to_t_string_memory_ptr_fromStack":{"entryPoint":4281,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774_to_t_string_memory_ptr_fromStack":{"entryPoint":4173,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3835,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":5104,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3850,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4537,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4923,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4316,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4208,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4955,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4777,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4115,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4395,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4725,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3612,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4624,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3580,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3825,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4348,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3575,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404":{"entryPoint":4461,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5":{"entryPoint":5319,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea":{"entryPoint":4996,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c":{"entryPoint":5211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4788,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd":{"entryPoint":4847,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965":{"entryPoint":4240,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774":{"entryPoint":4132,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3630,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4636,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3905,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15377:36","nodeType":"YulBlock","src":"0:15377:36","statements":[{"body":{"nativeSrc":"47:35:36","nodeType":"YulBlock","src":"47:35:36","statements":[{"nativeSrc":"57:19:36","nodeType":"YulAssignment","src":"57:19:36","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:36","nodeType":"YulLiteral","src":"73:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:36","nodeType":"YulIdentifier","src":"67:5:36"},"nativeSrc":"67:9:36","nodeType":"YulFunctionCall","src":"67:9:36"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:36","nodeType":"YulIdentifier","src":"57:6:36"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:36","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:36","nodeType":"YulTypedName","src":"40:6:36","type":""}],"src":"7:75:36"},{"body":{"nativeSrc":"177:28:36","nodeType":"YulBlock","src":"177:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:36","nodeType":"YulLiteral","src":"194:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:36","nodeType":"YulLiteral","src":"197:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:36","nodeType":"YulIdentifier","src":"187:6:36"},"nativeSrc":"187:12:36","nodeType":"YulFunctionCall","src":"187:12:36"},"nativeSrc":"187:12:36","nodeType":"YulExpressionStatement","src":"187:12:36"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:36","nodeType":"YulFunctionDefinition","src":"88:117:36"},{"body":{"nativeSrc":"300:28:36","nodeType":"YulBlock","src":"300:28:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:36","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:36","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:36","nodeType":"YulIdentifier","src":"310:6:36"},"nativeSrc":"310:12:36","nodeType":"YulFunctionCall","src":"310:12:36"},"nativeSrc":"310:12:36","nodeType":"YulExpressionStatement","src":"310:12:36"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:36","nodeType":"YulFunctionDefinition","src":"211:117:36"},{"body":{"nativeSrc":"379:81:36","nodeType":"YulBlock","src":"379:81:36","statements":[{"nativeSrc":"389:65:36","nodeType":"YulAssignment","src":"389:65:36","value":{"arguments":[{"name":"value","nativeSrc":"404:5:36","nodeType":"YulIdentifier","src":"404:5:36"},{"kind":"number","nativeSrc":"411:42:36","nodeType":"YulLiteral","src":"411:42:36","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:36","nodeType":"YulIdentifier","src":"400:3:36"},"nativeSrc":"400:54:36","nodeType":"YulFunctionCall","src":"400:54:36"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:36","nodeType":"YulIdentifier","src":"389:7:36"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:36","nodeType":"YulTypedName","src":"361:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:36","nodeType":"YulTypedName","src":"371:7:36","type":""}],"src":"334:126:36"},{"body":{"nativeSrc":"511:51:36","nodeType":"YulBlock","src":"511:51:36","statements":[{"nativeSrc":"521:35:36","nodeType":"YulAssignment","src":"521:35:36","value":{"arguments":[{"name":"value","nativeSrc":"550:5:36","nodeType":"YulIdentifier","src":"550:5:36"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:36","nodeType":"YulIdentifier","src":"532:17:36"},"nativeSrc":"532:24:36","nodeType":"YulFunctionCall","src":"532:24:36"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:36","nodeType":"YulIdentifier","src":"521:7:36"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:36","nodeType":"YulTypedName","src":"493:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:36","nodeType":"YulTypedName","src":"503:7:36","type":""}],"src":"466:96:36"},{"body":{"nativeSrc":"611:79:36","nodeType":"YulBlock","src":"611:79:36","statements":[{"body":{"nativeSrc":"668:16:36","nodeType":"YulBlock","src":"668:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:36","nodeType":"YulLiteral","src":"677:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:36","nodeType":"YulLiteral","src":"680:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:36","nodeType":"YulIdentifier","src":"670:6:36"},"nativeSrc":"670:12:36","nodeType":"YulFunctionCall","src":"670:12:36"},"nativeSrc":"670:12:36","nodeType":"YulExpressionStatement","src":"670:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:36","nodeType":"YulIdentifier","src":"634:5:36"},{"arguments":[{"name":"value","nativeSrc":"659:5:36","nodeType":"YulIdentifier","src":"659:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:36","nodeType":"YulIdentifier","src":"641:17:36"},"nativeSrc":"641:24:36","nodeType":"YulFunctionCall","src":"641:24:36"}],"functionName":{"name":"eq","nativeSrc":"631:2:36","nodeType":"YulIdentifier","src":"631:2:36"},"nativeSrc":"631:35:36","nodeType":"YulFunctionCall","src":"631:35:36"}],"functionName":{"name":"iszero","nativeSrc":"624:6:36","nodeType":"YulIdentifier","src":"624:6:36"},"nativeSrc":"624:43:36","nodeType":"YulFunctionCall","src":"624:43:36"},"nativeSrc":"621:63:36","nodeType":"YulIf","src":"621:63:36"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:36","nodeType":"YulTypedName","src":"604:5:36","type":""}],"src":"568:122:36"},{"body":{"nativeSrc":"748:87:36","nodeType":"YulBlock","src":"748:87:36","statements":[{"nativeSrc":"758:29:36","nodeType":"YulAssignment","src":"758:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:36","nodeType":"YulIdentifier","src":"780:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:36","nodeType":"YulIdentifier","src":"767:12:36"},"nativeSrc":"767:20:36","nodeType":"YulFunctionCall","src":"767:20:36"},"variableNames":[{"name":"value","nativeSrc":"758:5:36","nodeType":"YulIdentifier","src":"758:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:36","nodeType":"YulIdentifier","src":"823:5:36"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:36","nodeType":"YulIdentifier","src":"796:26:36"},"nativeSrc":"796:33:36","nodeType":"YulFunctionCall","src":"796:33:36"},"nativeSrc":"796:33:36","nodeType":"YulExpressionStatement","src":"796:33:36"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:36","nodeType":"YulTypedName","src":"726:6:36","type":""},{"name":"end","nativeSrc":"734:3:36","nodeType":"YulTypedName","src":"734:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:36","nodeType":"YulTypedName","src":"742:5:36","type":""}],"src":"696:139:36"},{"body":{"nativeSrc":"907:263:36","nodeType":"YulBlock","src":"907:263:36","statements":[{"body":{"nativeSrc":"953:83:36","nodeType":"YulBlock","src":"953:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"955:77:36","nodeType":"YulIdentifier","src":"955:77:36"},"nativeSrc":"955:79:36","nodeType":"YulFunctionCall","src":"955:79:36"},"nativeSrc":"955:79:36","nodeType":"YulExpressionStatement","src":"955:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"928:7:36","nodeType":"YulIdentifier","src":"928:7:36"},{"name":"headStart","nativeSrc":"937:9:36","nodeType":"YulIdentifier","src":"937:9:36"}],"functionName":{"name":"sub","nativeSrc":"924:3:36","nodeType":"YulIdentifier","src":"924:3:36"},"nativeSrc":"924:23:36","nodeType":"YulFunctionCall","src":"924:23:36"},{"kind":"number","nativeSrc":"949:2:36","nodeType":"YulLiteral","src":"949:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"920:3:36","nodeType":"YulIdentifier","src":"920:3:36"},"nativeSrc":"920:32:36","nodeType":"YulFunctionCall","src":"920:32:36"},"nativeSrc":"917:119:36","nodeType":"YulIf","src":"917:119:36"},{"nativeSrc":"1046:117:36","nodeType":"YulBlock","src":"1046:117:36","statements":[{"nativeSrc":"1061:15:36","nodeType":"YulVariableDeclaration","src":"1061:15:36","value":{"kind":"number","nativeSrc":"1075:1:36","nodeType":"YulLiteral","src":"1075:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1065:6:36","nodeType":"YulTypedName","src":"1065:6:36","type":""}]},{"nativeSrc":"1090:63:36","nodeType":"YulAssignment","src":"1090:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1125:9:36","nodeType":"YulIdentifier","src":"1125:9:36"},{"name":"offset","nativeSrc":"1136:6:36","nodeType":"YulIdentifier","src":"1136:6:36"}],"functionName":{"name":"add","nativeSrc":"1121:3:36","nodeType":"YulIdentifier","src":"1121:3:36"},"nativeSrc":"1121:22:36","nodeType":"YulFunctionCall","src":"1121:22:36"},{"name":"dataEnd","nativeSrc":"1145:7:36","nodeType":"YulIdentifier","src":"1145:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1100:20:36","nodeType":"YulIdentifier","src":"1100:20:36"},"nativeSrc":"1100:53:36","nodeType":"YulFunctionCall","src":"1100:53:36"},"variableNames":[{"name":"value0","nativeSrc":"1090:6:36","nodeType":"YulIdentifier","src":"1090:6:36"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"841:329:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"877:9:36","nodeType":"YulTypedName","src":"877:9:36","type":""},{"name":"dataEnd","nativeSrc":"888:7:36","nodeType":"YulTypedName","src":"888:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"900:6:36","nodeType":"YulTypedName","src":"900:6:36","type":""}],"src":"841:329:36"},{"body":{"nativeSrc":"1241:53:36","nodeType":"YulBlock","src":"1241:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1258:3:36","nodeType":"YulIdentifier","src":"1258:3:36"},{"arguments":[{"name":"value","nativeSrc":"1281:5:36","nodeType":"YulIdentifier","src":"1281:5:36"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1263:17:36","nodeType":"YulIdentifier","src":"1263:17:36"},"nativeSrc":"1263:24:36","nodeType":"YulFunctionCall","src":"1263:24:36"}],"functionName":{"name":"mstore","nativeSrc":"1251:6:36","nodeType":"YulIdentifier","src":"1251:6:36"},"nativeSrc":"1251:37:36","nodeType":"YulFunctionCall","src":"1251:37:36"},"nativeSrc":"1251:37:36","nodeType":"YulExpressionStatement","src":"1251:37:36"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1176:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1229:5:36","nodeType":"YulTypedName","src":"1229:5:36","type":""},{"name":"pos","nativeSrc":"1236:3:36","nodeType":"YulTypedName","src":"1236:3:36","type":""}],"src":"1176:118:36"},{"body":{"nativeSrc":"1398:124:36","nodeType":"YulBlock","src":"1398:124:36","statements":[{"nativeSrc":"1408:26:36","nodeType":"YulAssignment","src":"1408:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"1420:9:36","nodeType":"YulIdentifier","src":"1420:9:36"},{"kind":"number","nativeSrc":"1431:2:36","nodeType":"YulLiteral","src":"1431:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1416:3:36","nodeType":"YulIdentifier","src":"1416:3:36"},"nativeSrc":"1416:18:36","nodeType":"YulFunctionCall","src":"1416:18:36"},"variableNames":[{"name":"tail","nativeSrc":"1408:4:36","nodeType":"YulIdentifier","src":"1408:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1488:6:36","nodeType":"YulIdentifier","src":"1488:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"1501:9:36","nodeType":"YulIdentifier","src":"1501:9:36"},{"kind":"number","nativeSrc":"1512:1:36","nodeType":"YulLiteral","src":"1512:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1497:3:36","nodeType":"YulIdentifier","src":"1497:3:36"},"nativeSrc":"1497:17:36","nodeType":"YulFunctionCall","src":"1497:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1444:43:36","nodeType":"YulIdentifier","src":"1444:43:36"},"nativeSrc":"1444:71:36","nodeType":"YulFunctionCall","src":"1444:71:36"},"nativeSrc":"1444:71:36","nodeType":"YulExpressionStatement","src":"1444:71:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1300:222:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1370:9:36","nodeType":"YulTypedName","src":"1370:9:36","type":""},{"name":"value0","nativeSrc":"1382:6:36","nodeType":"YulTypedName","src":"1382:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1393:4:36","nodeType":"YulTypedName","src":"1393:4:36","type":""}],"src":"1300:222:36"},{"body":{"nativeSrc":"1611:391:36","nodeType":"YulBlock","src":"1611:391:36","statements":[{"body":{"nativeSrc":"1657:83:36","nodeType":"YulBlock","src":"1657:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1659:77:36","nodeType":"YulIdentifier","src":"1659:77:36"},"nativeSrc":"1659:79:36","nodeType":"YulFunctionCall","src":"1659:79:36"},"nativeSrc":"1659:79:36","nodeType":"YulExpressionStatement","src":"1659:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1632:7:36","nodeType":"YulIdentifier","src":"1632:7:36"},{"name":"headStart","nativeSrc":"1641:9:36","nodeType":"YulIdentifier","src":"1641:9:36"}],"functionName":{"name":"sub","nativeSrc":"1628:3:36","nodeType":"YulIdentifier","src":"1628:3:36"},"nativeSrc":"1628:23:36","nodeType":"YulFunctionCall","src":"1628:23:36"},{"kind":"number","nativeSrc":"1653:2:36","nodeType":"YulLiteral","src":"1653:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1624:3:36","nodeType":"YulIdentifier","src":"1624:3:36"},"nativeSrc":"1624:32:36","nodeType":"YulFunctionCall","src":"1624:32:36"},"nativeSrc":"1621:119:36","nodeType":"YulIf","src":"1621:119:36"},{"nativeSrc":"1750:117:36","nodeType":"YulBlock","src":"1750:117:36","statements":[{"nativeSrc":"1765:15:36","nodeType":"YulVariableDeclaration","src":"1765:15:36","value":{"kind":"number","nativeSrc":"1779:1:36","nodeType":"YulLiteral","src":"1779:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1769:6:36","nodeType":"YulTypedName","src":"1769:6:36","type":""}]},{"nativeSrc":"1794:63:36","nodeType":"YulAssignment","src":"1794:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1829:9:36","nodeType":"YulIdentifier","src":"1829:9:36"},{"name":"offset","nativeSrc":"1840:6:36","nodeType":"YulIdentifier","src":"1840:6:36"}],"functionName":{"name":"add","nativeSrc":"1825:3:36","nodeType":"YulIdentifier","src":"1825:3:36"},"nativeSrc":"1825:22:36","nodeType":"YulFunctionCall","src":"1825:22:36"},{"name":"dataEnd","nativeSrc":"1849:7:36","nodeType":"YulIdentifier","src":"1849:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1804:20:36","nodeType":"YulIdentifier","src":"1804:20:36"},"nativeSrc":"1804:53:36","nodeType":"YulFunctionCall","src":"1804:53:36"},"variableNames":[{"name":"value0","nativeSrc":"1794:6:36","nodeType":"YulIdentifier","src":"1794:6:36"}]}]},{"nativeSrc":"1877:118:36","nodeType":"YulBlock","src":"1877:118:36","statements":[{"nativeSrc":"1892:16:36","nodeType":"YulVariableDeclaration","src":"1892:16:36","value":{"kind":"number","nativeSrc":"1906:2:36","nodeType":"YulLiteral","src":"1906:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1896:6:36","nodeType":"YulTypedName","src":"1896:6:36","type":""}]},{"nativeSrc":"1922:63:36","nodeType":"YulAssignment","src":"1922:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1957:9:36","nodeType":"YulIdentifier","src":"1957:9:36"},{"name":"offset","nativeSrc":"1968:6:36","nodeType":"YulIdentifier","src":"1968:6:36"}],"functionName":{"name":"add","nativeSrc":"1953:3:36","nodeType":"YulIdentifier","src":"1953:3:36"},"nativeSrc":"1953:22:36","nodeType":"YulFunctionCall","src":"1953:22:36"},{"name":"dataEnd","nativeSrc":"1977:7:36","nodeType":"YulIdentifier","src":"1977:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1932:20:36","nodeType":"YulIdentifier","src":"1932:20:36"},"nativeSrc":"1932:53:36","nodeType":"YulFunctionCall","src":"1932:53:36"},"variableNames":[{"name":"value1","nativeSrc":"1922:6:36","nodeType":"YulIdentifier","src":"1922:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"1528:474:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1573:9:36","nodeType":"YulTypedName","src":"1573:9:36","type":""},{"name":"dataEnd","nativeSrc":"1584:7:36","nodeType":"YulTypedName","src":"1584:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1596:6:36","nodeType":"YulTypedName","src":"1596:6:36","type":""},{"name":"value1","nativeSrc":"1604:6:36","nodeType":"YulTypedName","src":"1604:6:36","type":""}],"src":"1528:474:36"},{"body":{"nativeSrc":"2053:32:36","nodeType":"YulBlock","src":"2053:32:36","statements":[{"nativeSrc":"2063:16:36","nodeType":"YulAssignment","src":"2063:16:36","value":{"name":"value","nativeSrc":"2074:5:36","nodeType":"YulIdentifier","src":"2074:5:36"},"variableNames":[{"name":"cleaned","nativeSrc":"2063:7:36","nodeType":"YulIdentifier","src":"2063:7:36"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2008:77:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2035:5:36","nodeType":"YulTypedName","src":"2035:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2045:7:36","nodeType":"YulTypedName","src":"2045:7:36","type":""}],"src":"2008:77:36"},{"body":{"nativeSrc":"2156:53:36","nodeType":"YulBlock","src":"2156:53:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2173:3:36","nodeType":"YulIdentifier","src":"2173:3:36"},{"arguments":[{"name":"value","nativeSrc":"2196:5:36","nodeType":"YulIdentifier","src":"2196:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2178:17:36","nodeType":"YulIdentifier","src":"2178:17:36"},"nativeSrc":"2178:24:36","nodeType":"YulFunctionCall","src":"2178:24:36"}],"functionName":{"name":"mstore","nativeSrc":"2166:6:36","nodeType":"YulIdentifier","src":"2166:6:36"},"nativeSrc":"2166:37:36","nodeType":"YulFunctionCall","src":"2166:37:36"},"nativeSrc":"2166:37:36","nodeType":"YulExpressionStatement","src":"2166:37:36"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2091:118:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2144:5:36","nodeType":"YulTypedName","src":"2144:5:36","type":""},{"name":"pos","nativeSrc":"2151:3:36","nodeType":"YulTypedName","src":"2151:3:36","type":""}],"src":"2091:118:36"},{"body":{"nativeSrc":"2369:288:36","nodeType":"YulBlock","src":"2369:288:36","statements":[{"nativeSrc":"2379:26:36","nodeType":"YulAssignment","src":"2379:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"2391:9:36","nodeType":"YulIdentifier","src":"2391:9:36"},{"kind":"number","nativeSrc":"2402:2:36","nodeType":"YulLiteral","src":"2402:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2387:3:36","nodeType":"YulIdentifier","src":"2387:3:36"},"nativeSrc":"2387:18:36","nodeType":"YulFunctionCall","src":"2387:18:36"},"variableNames":[{"name":"tail","nativeSrc":"2379:4:36","nodeType":"YulIdentifier","src":"2379:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2459:6:36","nodeType":"YulIdentifier","src":"2459:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"2472:9:36","nodeType":"YulIdentifier","src":"2472:9:36"},{"kind":"number","nativeSrc":"2483:1:36","nodeType":"YulLiteral","src":"2483:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2468:3:36","nodeType":"YulIdentifier","src":"2468:3:36"},"nativeSrc":"2468:17:36","nodeType":"YulFunctionCall","src":"2468:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2415:43:36","nodeType":"YulIdentifier","src":"2415:43:36"},"nativeSrc":"2415:71:36","nodeType":"YulFunctionCall","src":"2415:71:36"},"nativeSrc":"2415:71:36","nodeType":"YulExpressionStatement","src":"2415:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"2540:6:36","nodeType":"YulIdentifier","src":"2540:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"2553:9:36","nodeType":"YulIdentifier","src":"2553:9:36"},{"kind":"number","nativeSrc":"2564:2:36","nodeType":"YulLiteral","src":"2564:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2549:3:36","nodeType":"YulIdentifier","src":"2549:3:36"},"nativeSrc":"2549:18:36","nodeType":"YulFunctionCall","src":"2549:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2496:43:36","nodeType":"YulIdentifier","src":"2496:43:36"},"nativeSrc":"2496:72:36","nodeType":"YulFunctionCall","src":"2496:72:36"},"nativeSrc":"2496:72:36","nodeType":"YulExpressionStatement","src":"2496:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"2622:6:36","nodeType":"YulIdentifier","src":"2622:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"2635:9:36","nodeType":"YulIdentifier","src":"2635:9:36"},{"kind":"number","nativeSrc":"2646:2:36","nodeType":"YulLiteral","src":"2646:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2631:3:36","nodeType":"YulIdentifier","src":"2631:3:36"},"nativeSrc":"2631:18:36","nodeType":"YulFunctionCall","src":"2631:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2578:43:36","nodeType":"YulIdentifier","src":"2578:43:36"},"nativeSrc":"2578:72:36","nodeType":"YulFunctionCall","src":"2578:72:36"},"nativeSrc":"2578:72:36","nodeType":"YulExpressionStatement","src":"2578:72:36"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"2215:442:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2325:9:36","nodeType":"YulTypedName","src":"2325:9:36","type":""},{"name":"value2","nativeSrc":"2337:6:36","nodeType":"YulTypedName","src":"2337:6:36","type":""},{"name":"value1","nativeSrc":"2345:6:36","nodeType":"YulTypedName","src":"2345:6:36","type":""},{"name":"value0","nativeSrc":"2353:6:36","nodeType":"YulTypedName","src":"2353:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2364:4:36","nodeType":"YulTypedName","src":"2364:4:36","type":""}],"src":"2215:442:36"},{"body":{"nativeSrc":"2706:79:36","nodeType":"YulBlock","src":"2706:79:36","statements":[{"body":{"nativeSrc":"2763:16:36","nodeType":"YulBlock","src":"2763:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2772:1:36","nodeType":"YulLiteral","src":"2772:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"2775:1:36","nodeType":"YulLiteral","src":"2775:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2765:6:36","nodeType":"YulIdentifier","src":"2765:6:36"},"nativeSrc":"2765:12:36","nodeType":"YulFunctionCall","src":"2765:12:36"},"nativeSrc":"2765:12:36","nodeType":"YulExpressionStatement","src":"2765:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2729:5:36","nodeType":"YulIdentifier","src":"2729:5:36"},{"arguments":[{"name":"value","nativeSrc":"2754:5:36","nodeType":"YulIdentifier","src":"2754:5:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2736:17:36","nodeType":"YulIdentifier","src":"2736:17:36"},"nativeSrc":"2736:24:36","nodeType":"YulFunctionCall","src":"2736:24:36"}],"functionName":{"name":"eq","nativeSrc":"2726:2:36","nodeType":"YulIdentifier","src":"2726:2:36"},"nativeSrc":"2726:35:36","nodeType":"YulFunctionCall","src":"2726:35:36"}],"functionName":{"name":"iszero","nativeSrc":"2719:6:36","nodeType":"YulIdentifier","src":"2719:6:36"},"nativeSrc":"2719:43:36","nodeType":"YulFunctionCall","src":"2719:43:36"},"nativeSrc":"2716:63:36","nodeType":"YulIf","src":"2716:63:36"}]},"name":"validator_revert_t_uint256","nativeSrc":"2663:122:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2699:5:36","nodeType":"YulTypedName","src":"2699:5:36","type":""}],"src":"2663:122:36"},{"body":{"nativeSrc":"2843:87:36","nodeType":"YulBlock","src":"2843:87:36","statements":[{"nativeSrc":"2853:29:36","nodeType":"YulAssignment","src":"2853:29:36","value":{"arguments":[{"name":"offset","nativeSrc":"2875:6:36","nodeType":"YulIdentifier","src":"2875:6:36"}],"functionName":{"name":"calldataload","nativeSrc":"2862:12:36","nodeType":"YulIdentifier","src":"2862:12:36"},"nativeSrc":"2862:20:36","nodeType":"YulFunctionCall","src":"2862:20:36"},"variableNames":[{"name":"value","nativeSrc":"2853:5:36","nodeType":"YulIdentifier","src":"2853:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2918:5:36","nodeType":"YulIdentifier","src":"2918:5:36"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2891:26:36","nodeType":"YulIdentifier","src":"2891:26:36"},"nativeSrc":"2891:33:36","nodeType":"YulFunctionCall","src":"2891:33:36"},"nativeSrc":"2891:33:36","nodeType":"YulExpressionStatement","src":"2891:33:36"}]},"name":"abi_decode_t_uint256","nativeSrc":"2791:139:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2821:6:36","nodeType":"YulTypedName","src":"2821:6:36","type":""},{"name":"end","nativeSrc":"2829:3:36","nodeType":"YulTypedName","src":"2829:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2837:5:36","nodeType":"YulTypedName","src":"2837:5:36","type":""}],"src":"2791:139:36"},{"body":{"nativeSrc":"3036:519:36","nodeType":"YulBlock","src":"3036:519:36","statements":[{"body":{"nativeSrc":"3082:83:36","nodeType":"YulBlock","src":"3082:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3084:77:36","nodeType":"YulIdentifier","src":"3084:77:36"},"nativeSrc":"3084:79:36","nodeType":"YulFunctionCall","src":"3084:79:36"},"nativeSrc":"3084:79:36","nodeType":"YulExpressionStatement","src":"3084:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3057:7:36","nodeType":"YulIdentifier","src":"3057:7:36"},{"name":"headStart","nativeSrc":"3066:9:36","nodeType":"YulIdentifier","src":"3066:9:36"}],"functionName":{"name":"sub","nativeSrc":"3053:3:36","nodeType":"YulIdentifier","src":"3053:3:36"},"nativeSrc":"3053:23:36","nodeType":"YulFunctionCall","src":"3053:23:36"},{"kind":"number","nativeSrc":"3078:2:36","nodeType":"YulLiteral","src":"3078:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3049:3:36","nodeType":"YulIdentifier","src":"3049:3:36"},"nativeSrc":"3049:32:36","nodeType":"YulFunctionCall","src":"3049:32:36"},"nativeSrc":"3046:119:36","nodeType":"YulIf","src":"3046:119:36"},{"nativeSrc":"3175:117:36","nodeType":"YulBlock","src":"3175:117:36","statements":[{"nativeSrc":"3190:15:36","nodeType":"YulVariableDeclaration","src":"3190:15:36","value":{"kind":"number","nativeSrc":"3204:1:36","nodeType":"YulLiteral","src":"3204:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3194:6:36","nodeType":"YulTypedName","src":"3194:6:36","type":""}]},{"nativeSrc":"3219:63:36","nodeType":"YulAssignment","src":"3219:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3254:9:36","nodeType":"YulIdentifier","src":"3254:9:36"},{"name":"offset","nativeSrc":"3265:6:36","nodeType":"YulIdentifier","src":"3265:6:36"}],"functionName":{"name":"add","nativeSrc":"3250:3:36","nodeType":"YulIdentifier","src":"3250:3:36"},"nativeSrc":"3250:22:36","nodeType":"YulFunctionCall","src":"3250:22:36"},{"name":"dataEnd","nativeSrc":"3274:7:36","nodeType":"YulIdentifier","src":"3274:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3229:20:36","nodeType":"YulIdentifier","src":"3229:20:36"},"nativeSrc":"3229:53:36","nodeType":"YulFunctionCall","src":"3229:53:36"},"variableNames":[{"name":"value0","nativeSrc":"3219:6:36","nodeType":"YulIdentifier","src":"3219:6:36"}]}]},{"nativeSrc":"3302:118:36","nodeType":"YulBlock","src":"3302:118:36","statements":[{"nativeSrc":"3317:16:36","nodeType":"YulVariableDeclaration","src":"3317:16:36","value":{"kind":"number","nativeSrc":"3331:2:36","nodeType":"YulLiteral","src":"3331:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3321:6:36","nodeType":"YulTypedName","src":"3321:6:36","type":""}]},{"nativeSrc":"3347:63:36","nodeType":"YulAssignment","src":"3347:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3382:9:36","nodeType":"YulIdentifier","src":"3382:9:36"},{"name":"offset","nativeSrc":"3393:6:36","nodeType":"YulIdentifier","src":"3393:6:36"}],"functionName":{"name":"add","nativeSrc":"3378:3:36","nodeType":"YulIdentifier","src":"3378:3:36"},"nativeSrc":"3378:22:36","nodeType":"YulFunctionCall","src":"3378:22:36"},{"name":"dataEnd","nativeSrc":"3402:7:36","nodeType":"YulIdentifier","src":"3402:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3357:20:36","nodeType":"YulIdentifier","src":"3357:20:36"},"nativeSrc":"3357:53:36","nodeType":"YulFunctionCall","src":"3357:53:36"},"variableNames":[{"name":"value1","nativeSrc":"3347:6:36","nodeType":"YulIdentifier","src":"3347:6:36"}]}]},{"nativeSrc":"3430:118:36","nodeType":"YulBlock","src":"3430:118:36","statements":[{"nativeSrc":"3445:16:36","nodeType":"YulVariableDeclaration","src":"3445:16:36","value":{"kind":"number","nativeSrc":"3459:2:36","nodeType":"YulLiteral","src":"3459:2:36","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3449:6:36","nodeType":"YulTypedName","src":"3449:6:36","type":""}]},{"nativeSrc":"3475:63:36","nodeType":"YulAssignment","src":"3475:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3510:9:36","nodeType":"YulIdentifier","src":"3510:9:36"},{"name":"offset","nativeSrc":"3521:6:36","nodeType":"YulIdentifier","src":"3521:6:36"}],"functionName":{"name":"add","nativeSrc":"3506:3:36","nodeType":"YulIdentifier","src":"3506:3:36"},"nativeSrc":"3506:22:36","nodeType":"YulFunctionCall","src":"3506:22:36"},{"name":"dataEnd","nativeSrc":"3530:7:36","nodeType":"YulIdentifier","src":"3530:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3485:20:36","nodeType":"YulIdentifier","src":"3485:20:36"},"nativeSrc":"3485:53:36","nodeType":"YulFunctionCall","src":"3485:53:36"},"variableNames":[{"name":"value2","nativeSrc":"3475:6:36","nodeType":"YulIdentifier","src":"3475:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2936:619:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2990:9:36","nodeType":"YulTypedName","src":"2990:9:36","type":""},{"name":"dataEnd","nativeSrc":"3001:7:36","nodeType":"YulTypedName","src":"3001:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3013:6:36","nodeType":"YulTypedName","src":"3013:6:36","type":""},{"name":"value1","nativeSrc":"3021:6:36","nodeType":"YulTypedName","src":"3021:6:36","type":""},{"name":"value2","nativeSrc":"3029:6:36","nodeType":"YulTypedName","src":"3029:6:36","type":""}],"src":"2936:619:36"},{"body":{"nativeSrc":"3661:519:36","nodeType":"YulBlock","src":"3661:519:36","statements":[{"body":{"nativeSrc":"3707:83:36","nodeType":"YulBlock","src":"3707:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3709:77:36","nodeType":"YulIdentifier","src":"3709:77:36"},"nativeSrc":"3709:79:36","nodeType":"YulFunctionCall","src":"3709:79:36"},"nativeSrc":"3709:79:36","nodeType":"YulExpressionStatement","src":"3709:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3682:7:36","nodeType":"YulIdentifier","src":"3682:7:36"},{"name":"headStart","nativeSrc":"3691:9:36","nodeType":"YulIdentifier","src":"3691:9:36"}],"functionName":{"name":"sub","nativeSrc":"3678:3:36","nodeType":"YulIdentifier","src":"3678:3:36"},"nativeSrc":"3678:23:36","nodeType":"YulFunctionCall","src":"3678:23:36"},{"kind":"number","nativeSrc":"3703:2:36","nodeType":"YulLiteral","src":"3703:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3674:3:36","nodeType":"YulIdentifier","src":"3674:3:36"},"nativeSrc":"3674:32:36","nodeType":"YulFunctionCall","src":"3674:32:36"},"nativeSrc":"3671:119:36","nodeType":"YulIf","src":"3671:119:36"},{"nativeSrc":"3800:117:36","nodeType":"YulBlock","src":"3800:117:36","statements":[{"nativeSrc":"3815:15:36","nodeType":"YulVariableDeclaration","src":"3815:15:36","value":{"kind":"number","nativeSrc":"3829:1:36","nodeType":"YulLiteral","src":"3829:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3819:6:36","nodeType":"YulTypedName","src":"3819:6:36","type":""}]},{"nativeSrc":"3844:63:36","nodeType":"YulAssignment","src":"3844:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3879:9:36","nodeType":"YulIdentifier","src":"3879:9:36"},{"name":"offset","nativeSrc":"3890:6:36","nodeType":"YulIdentifier","src":"3890:6:36"}],"functionName":{"name":"add","nativeSrc":"3875:3:36","nodeType":"YulIdentifier","src":"3875:3:36"},"nativeSrc":"3875:22:36","nodeType":"YulFunctionCall","src":"3875:22:36"},{"name":"dataEnd","nativeSrc":"3899:7:36","nodeType":"YulIdentifier","src":"3899:7:36"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3854:20:36","nodeType":"YulIdentifier","src":"3854:20:36"},"nativeSrc":"3854:53:36","nodeType":"YulFunctionCall","src":"3854:53:36"},"variableNames":[{"name":"value0","nativeSrc":"3844:6:36","nodeType":"YulIdentifier","src":"3844:6:36"}]}]},{"nativeSrc":"3927:118:36","nodeType":"YulBlock","src":"3927:118:36","statements":[{"nativeSrc":"3942:16:36","nodeType":"YulVariableDeclaration","src":"3942:16:36","value":{"kind":"number","nativeSrc":"3956:2:36","nodeType":"YulLiteral","src":"3956:2:36","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3946:6:36","nodeType":"YulTypedName","src":"3946:6:36","type":""}]},{"nativeSrc":"3972:63:36","nodeType":"YulAssignment","src":"3972:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4007:9:36","nodeType":"YulIdentifier","src":"4007:9:36"},{"name":"offset","nativeSrc":"4018:6:36","nodeType":"YulIdentifier","src":"4018:6:36"}],"functionName":{"name":"add","nativeSrc":"4003:3:36","nodeType":"YulIdentifier","src":"4003:3:36"},"nativeSrc":"4003:22:36","nodeType":"YulFunctionCall","src":"4003:22:36"},{"name":"dataEnd","nativeSrc":"4027:7:36","nodeType":"YulIdentifier","src":"4027:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3982:20:36","nodeType":"YulIdentifier","src":"3982:20:36"},"nativeSrc":"3982:53:36","nodeType":"YulFunctionCall","src":"3982:53:36"},"variableNames":[{"name":"value1","nativeSrc":"3972:6:36","nodeType":"YulIdentifier","src":"3972:6:36"}]}]},{"nativeSrc":"4055:118:36","nodeType":"YulBlock","src":"4055:118:36","statements":[{"nativeSrc":"4070:16:36","nodeType":"YulVariableDeclaration","src":"4070:16:36","value":{"kind":"number","nativeSrc":"4084:2:36","nodeType":"YulLiteral","src":"4084:2:36","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4074:6:36","nodeType":"YulTypedName","src":"4074:6:36","type":""}]},{"nativeSrc":"4100:63:36","nodeType":"YulAssignment","src":"4100:63:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4135:9:36","nodeType":"YulIdentifier","src":"4135:9:36"},{"name":"offset","nativeSrc":"4146:6:36","nodeType":"YulIdentifier","src":"4146:6:36"}],"functionName":{"name":"add","nativeSrc":"4131:3:36","nodeType":"YulIdentifier","src":"4131:3:36"},"nativeSrc":"4131:22:36","nodeType":"YulFunctionCall","src":"4131:22:36"},{"name":"dataEnd","nativeSrc":"4155:7:36","nodeType":"YulIdentifier","src":"4155:7:36"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4110:20:36","nodeType":"YulIdentifier","src":"4110:20:36"},"nativeSrc":"4110:53:36","nodeType":"YulFunctionCall","src":"4110:53:36"},"variableNames":[{"name":"value2","nativeSrc":"4100:6:36","nodeType":"YulIdentifier","src":"4100:6:36"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nativeSrc":"3561:619:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3615:9:36","nodeType":"YulTypedName","src":"3615:9:36","type":""},{"name":"dataEnd","nativeSrc":"3626:7:36","nodeType":"YulTypedName","src":"3626:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3638:6:36","nodeType":"YulTypedName","src":"3638:6:36","type":""},{"name":"value1","nativeSrc":"3646:6:36","nodeType":"YulTypedName","src":"3646:6:36","type":""},{"name":"value2","nativeSrc":"3654:6:36","nodeType":"YulTypedName","src":"3654:6:36","type":""}],"src":"3561:619:36"},{"body":{"nativeSrc":"4282:73:36","nodeType":"YulBlock","src":"4282:73:36","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4299:3:36","nodeType":"YulIdentifier","src":"4299:3:36"},{"name":"length","nativeSrc":"4304:6:36","nodeType":"YulIdentifier","src":"4304:6:36"}],"functionName":{"name":"mstore","nativeSrc":"4292:6:36","nodeType":"YulIdentifier","src":"4292:6:36"},"nativeSrc":"4292:19:36","nodeType":"YulFunctionCall","src":"4292:19:36"},"nativeSrc":"4292:19:36","nodeType":"YulExpressionStatement","src":"4292:19:36"},{"nativeSrc":"4320:29:36","nodeType":"YulAssignment","src":"4320:29:36","value":{"arguments":[{"name":"pos","nativeSrc":"4339:3:36","nodeType":"YulIdentifier","src":"4339:3:36"},{"kind":"number","nativeSrc":"4344:4:36","nodeType":"YulLiteral","src":"4344:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4335:3:36","nodeType":"YulIdentifier","src":"4335:3:36"},"nativeSrc":"4335:14:36","nodeType":"YulFunctionCall","src":"4335:14:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"4320:11:36","nodeType":"YulIdentifier","src":"4320:11:36"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4186:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4254:3:36","nodeType":"YulTypedName","src":"4254:3:36","type":""},{"name":"length","nativeSrc":"4259:6:36","nodeType":"YulTypedName","src":"4259:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4270:11:36","nodeType":"YulTypedName","src":"4270:11:36","type":""}],"src":"4186:169:36"},{"body":{"nativeSrc":"4467:64:36","nodeType":"YulBlock","src":"4467:64:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4489:6:36","nodeType":"YulIdentifier","src":"4489:6:36"},{"kind":"number","nativeSrc":"4497:1:36","nodeType":"YulLiteral","src":"4497:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4485:3:36","nodeType":"YulIdentifier","src":"4485:3:36"},"nativeSrc":"4485:14:36","nodeType":"YulFunctionCall","src":"4485:14:36"},{"hexValue":"4e6f206c697374696e6720746f2063616e63656c","kind":"string","nativeSrc":"4501:22:36","nodeType":"YulLiteral","src":"4501:22:36","type":"","value":"No listing to cancel"}],"functionName":{"name":"mstore","nativeSrc":"4478:6:36","nodeType":"YulIdentifier","src":"4478:6:36"},"nativeSrc":"4478:46:36","nodeType":"YulFunctionCall","src":"4478:46:36"},"nativeSrc":"4478:46:36","nodeType":"YulExpressionStatement","src":"4478:46:36"}]},"name":"store_literal_in_memory_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774","nativeSrc":"4361:170:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4459:6:36","nodeType":"YulTypedName","src":"4459:6:36","type":""}],"src":"4361:170:36"},{"body":{"nativeSrc":"4683:220:36","nodeType":"YulBlock","src":"4683:220:36","statements":[{"nativeSrc":"4693:74:36","nodeType":"YulAssignment","src":"4693:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"4759:3:36","nodeType":"YulIdentifier","src":"4759:3:36"},{"kind":"number","nativeSrc":"4764:2:36","nodeType":"YulLiteral","src":"4764:2:36","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4700:58:36","nodeType":"YulIdentifier","src":"4700:58:36"},"nativeSrc":"4700:67:36","nodeType":"YulFunctionCall","src":"4700:67:36"},"variableNames":[{"name":"pos","nativeSrc":"4693:3:36","nodeType":"YulIdentifier","src":"4693:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4865:3:36","nodeType":"YulIdentifier","src":"4865:3:36"}],"functionName":{"name":"store_literal_in_memory_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774","nativeSrc":"4776:88:36","nodeType":"YulIdentifier","src":"4776:88:36"},"nativeSrc":"4776:93:36","nodeType":"YulFunctionCall","src":"4776:93:36"},"nativeSrc":"4776:93:36","nodeType":"YulExpressionStatement","src":"4776:93:36"},{"nativeSrc":"4878:19:36","nodeType":"YulAssignment","src":"4878:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"4889:3:36","nodeType":"YulIdentifier","src":"4889:3:36"},{"kind":"number","nativeSrc":"4894:2:36","nodeType":"YulLiteral","src":"4894:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4885:3:36","nodeType":"YulIdentifier","src":"4885:3:36"},"nativeSrc":"4885:12:36","nodeType":"YulFunctionCall","src":"4885:12:36"},"variableNames":[{"name":"end","nativeSrc":"4878:3:36","nodeType":"YulIdentifier","src":"4878:3:36"}]}]},"name":"abi_encode_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774_to_t_string_memory_ptr_fromStack","nativeSrc":"4537:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4671:3:36","nodeType":"YulTypedName","src":"4671:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4679:3:36","nodeType":"YulTypedName","src":"4679:3:36","type":""}],"src":"4537:366:36"},{"body":{"nativeSrc":"5080:248:36","nodeType":"YulBlock","src":"5080:248:36","statements":[{"nativeSrc":"5090:26:36","nodeType":"YulAssignment","src":"5090:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"5102:9:36","nodeType":"YulIdentifier","src":"5102:9:36"},{"kind":"number","nativeSrc":"5113:2:36","nodeType":"YulLiteral","src":"5113:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5098:3:36","nodeType":"YulIdentifier","src":"5098:3:36"},"nativeSrc":"5098:18:36","nodeType":"YulFunctionCall","src":"5098:18:36"},"variableNames":[{"name":"tail","nativeSrc":"5090:4:36","nodeType":"YulIdentifier","src":"5090:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:36","nodeType":"YulIdentifier","src":"5137:9:36"},{"kind":"number","nativeSrc":"5148:1:36","nodeType":"YulLiteral","src":"5148:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5133:3:36","nodeType":"YulIdentifier","src":"5133:3:36"},"nativeSrc":"5133:17:36","nodeType":"YulFunctionCall","src":"5133:17:36"},{"arguments":[{"name":"tail","nativeSrc":"5156:4:36","nodeType":"YulIdentifier","src":"5156:4:36"},{"name":"headStart","nativeSrc":"5162:9:36","nodeType":"YulIdentifier","src":"5162:9:36"}],"functionName":{"name":"sub","nativeSrc":"5152:3:36","nodeType":"YulIdentifier","src":"5152:3:36"},"nativeSrc":"5152:20:36","nodeType":"YulFunctionCall","src":"5152:20:36"}],"functionName":{"name":"mstore","nativeSrc":"5126:6:36","nodeType":"YulIdentifier","src":"5126:6:36"},"nativeSrc":"5126:47:36","nodeType":"YulFunctionCall","src":"5126:47:36"},"nativeSrc":"5126:47:36","nodeType":"YulExpressionStatement","src":"5126:47:36"},{"nativeSrc":"5182:139:36","nodeType":"YulAssignment","src":"5182:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"5316:4:36","nodeType":"YulIdentifier","src":"5316:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774_to_t_string_memory_ptr_fromStack","nativeSrc":"5190:124:36","nodeType":"YulIdentifier","src":"5190:124:36"},"nativeSrc":"5190:131:36","nodeType":"YulFunctionCall","src":"5190:131:36"},"variableNames":[{"name":"tail","nativeSrc":"5182:4:36","nodeType":"YulIdentifier","src":"5182:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4909:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5060:9:36","nodeType":"YulTypedName","src":"5060:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5075:4:36","nodeType":"YulTypedName","src":"5075:4:36","type":""}],"src":"4909:419:36"},{"body":{"nativeSrc":"5440:68:36","nodeType":"YulBlock","src":"5440:68:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5462:6:36","nodeType":"YulIdentifier","src":"5462:6:36"},{"kind":"number","nativeSrc":"5470:1:36","nodeType":"YulLiteral","src":"5470:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5458:3:36","nodeType":"YulIdentifier","src":"5458:3:36"},"nativeSrc":"5458:14:36","nodeType":"YulFunctionCall","src":"5458:14:36"},{"hexValue":"4e6f7420656e6f75676820746f6b656e73206c6973746564","kind":"string","nativeSrc":"5474:26:36","nodeType":"YulLiteral","src":"5474:26:36","type":"","value":"Not enough tokens listed"}],"functionName":{"name":"mstore","nativeSrc":"5451:6:36","nodeType":"YulIdentifier","src":"5451:6:36"},"nativeSrc":"5451:50:36","nodeType":"YulFunctionCall","src":"5451:50:36"},"nativeSrc":"5451:50:36","nodeType":"YulExpressionStatement","src":"5451:50:36"}]},"name":"store_literal_in_memory_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965","nativeSrc":"5334:174:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5432:6:36","nodeType":"YulTypedName","src":"5432:6:36","type":""}],"src":"5334:174:36"},{"body":{"nativeSrc":"5660:220:36","nodeType":"YulBlock","src":"5660:220:36","statements":[{"nativeSrc":"5670:74:36","nodeType":"YulAssignment","src":"5670:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"5736:3:36","nodeType":"YulIdentifier","src":"5736:3:36"},{"kind":"number","nativeSrc":"5741:2:36","nodeType":"YulLiteral","src":"5741:2:36","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5677:58:36","nodeType":"YulIdentifier","src":"5677:58:36"},"nativeSrc":"5677:67:36","nodeType":"YulFunctionCall","src":"5677:67:36"},"variableNames":[{"name":"pos","nativeSrc":"5670:3:36","nodeType":"YulIdentifier","src":"5670:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5842:3:36","nodeType":"YulIdentifier","src":"5842:3:36"}],"functionName":{"name":"store_literal_in_memory_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965","nativeSrc":"5753:88:36","nodeType":"YulIdentifier","src":"5753:88:36"},"nativeSrc":"5753:93:36","nodeType":"YulFunctionCall","src":"5753:93:36"},"nativeSrc":"5753:93:36","nodeType":"YulExpressionStatement","src":"5753:93:36"},{"nativeSrc":"5855:19:36","nodeType":"YulAssignment","src":"5855:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"5866:3:36","nodeType":"YulIdentifier","src":"5866:3:36"},{"kind":"number","nativeSrc":"5871:2:36","nodeType":"YulLiteral","src":"5871:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5862:3:36","nodeType":"YulIdentifier","src":"5862:3:36"},"nativeSrc":"5862:12:36","nodeType":"YulFunctionCall","src":"5862:12:36"},"variableNames":[{"name":"end","nativeSrc":"5855:3:36","nodeType":"YulIdentifier","src":"5855:3:36"}]}]},"name":"abi_encode_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965_to_t_string_memory_ptr_fromStack","nativeSrc":"5514:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5648:3:36","nodeType":"YulTypedName","src":"5648:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5656:3:36","nodeType":"YulTypedName","src":"5656:3:36","type":""}],"src":"5514:366:36"},{"body":{"nativeSrc":"6057:248:36","nodeType":"YulBlock","src":"6057:248:36","statements":[{"nativeSrc":"6067:26:36","nodeType":"YulAssignment","src":"6067:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"6079:9:36","nodeType":"YulIdentifier","src":"6079:9:36"},{"kind":"number","nativeSrc":"6090:2:36","nodeType":"YulLiteral","src":"6090:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6075:3:36","nodeType":"YulIdentifier","src":"6075:3:36"},"nativeSrc":"6075:18:36","nodeType":"YulFunctionCall","src":"6075:18:36"},"variableNames":[{"name":"tail","nativeSrc":"6067:4:36","nodeType":"YulIdentifier","src":"6067:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6114:9:36","nodeType":"YulIdentifier","src":"6114:9:36"},{"kind":"number","nativeSrc":"6125:1:36","nodeType":"YulLiteral","src":"6125:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6110:3:36","nodeType":"YulIdentifier","src":"6110:3:36"},"nativeSrc":"6110:17:36","nodeType":"YulFunctionCall","src":"6110:17:36"},{"arguments":[{"name":"tail","nativeSrc":"6133:4:36","nodeType":"YulIdentifier","src":"6133:4:36"},{"name":"headStart","nativeSrc":"6139:9:36","nodeType":"YulIdentifier","src":"6139:9:36"}],"functionName":{"name":"sub","nativeSrc":"6129:3:36","nodeType":"YulIdentifier","src":"6129:3:36"},"nativeSrc":"6129:20:36","nodeType":"YulFunctionCall","src":"6129:20:36"}],"functionName":{"name":"mstore","nativeSrc":"6103:6:36","nodeType":"YulIdentifier","src":"6103:6:36"},"nativeSrc":"6103:47:36","nodeType":"YulFunctionCall","src":"6103:47:36"},"nativeSrc":"6103:47:36","nodeType":"YulExpressionStatement","src":"6103:47:36"},{"nativeSrc":"6159:139:36","nodeType":"YulAssignment","src":"6159:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"6293:4:36","nodeType":"YulIdentifier","src":"6293:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965_to_t_string_memory_ptr_fromStack","nativeSrc":"6167:124:36","nodeType":"YulIdentifier","src":"6167:124:36"},"nativeSrc":"6167:131:36","nodeType":"YulFunctionCall","src":"6167:131:36"},"variableNames":[{"name":"tail","nativeSrc":"6159:4:36","nodeType":"YulIdentifier","src":"6159:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5886:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6037:9:36","nodeType":"YulTypedName","src":"6037:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6052:4:36","nodeType":"YulTypedName","src":"6052:4:36","type":""}],"src":"5886:419:36"},{"body":{"nativeSrc":"6339:152:36","nodeType":"YulBlock","src":"6339:152:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6356:1:36","nodeType":"YulLiteral","src":"6356:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"6359:77:36","nodeType":"YulLiteral","src":"6359:77:36","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6349:6:36","nodeType":"YulIdentifier","src":"6349:6:36"},"nativeSrc":"6349:88:36","nodeType":"YulFunctionCall","src":"6349:88:36"},"nativeSrc":"6349:88:36","nodeType":"YulExpressionStatement","src":"6349:88:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6453:1:36","nodeType":"YulLiteral","src":"6453:1:36","type":"","value":"4"},{"kind":"number","nativeSrc":"6456:4:36","nodeType":"YulLiteral","src":"6456:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6446:6:36","nodeType":"YulIdentifier","src":"6446:6:36"},"nativeSrc":"6446:15:36","nodeType":"YulFunctionCall","src":"6446:15:36"},"nativeSrc":"6446:15:36","nodeType":"YulExpressionStatement","src":"6446:15:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6477:1:36","nodeType":"YulLiteral","src":"6477:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"6480:4:36","nodeType":"YulLiteral","src":"6480:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6470:6:36","nodeType":"YulIdentifier","src":"6470:6:36"},"nativeSrc":"6470:15:36","nodeType":"YulFunctionCall","src":"6470:15:36"},"nativeSrc":"6470:15:36","nodeType":"YulExpressionStatement","src":"6470:15:36"}]},"name":"panic_error_0x11","nativeSrc":"6311:180:36","nodeType":"YulFunctionDefinition","src":"6311:180:36"},{"body":{"nativeSrc":"6545:362:36","nodeType":"YulBlock","src":"6545:362:36","statements":[{"nativeSrc":"6555:25:36","nodeType":"YulAssignment","src":"6555:25:36","value":{"arguments":[{"name":"x","nativeSrc":"6578:1:36","nodeType":"YulIdentifier","src":"6578:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6560:17:36","nodeType":"YulIdentifier","src":"6560:17:36"},"nativeSrc":"6560:20:36","nodeType":"YulFunctionCall","src":"6560:20:36"},"variableNames":[{"name":"x","nativeSrc":"6555:1:36","nodeType":"YulIdentifier","src":"6555:1:36"}]},{"nativeSrc":"6589:25:36","nodeType":"YulAssignment","src":"6589:25:36","value":{"arguments":[{"name":"y","nativeSrc":"6612:1:36","nodeType":"YulIdentifier","src":"6612:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6594:17:36","nodeType":"YulIdentifier","src":"6594:17:36"},"nativeSrc":"6594:20:36","nodeType":"YulFunctionCall","src":"6594:20:36"},"variableNames":[{"name":"y","nativeSrc":"6589:1:36","nodeType":"YulIdentifier","src":"6589:1:36"}]},{"nativeSrc":"6623:28:36","nodeType":"YulVariableDeclaration","src":"6623:28:36","value":{"arguments":[{"name":"x","nativeSrc":"6646:1:36","nodeType":"YulIdentifier","src":"6646:1:36"},{"name":"y","nativeSrc":"6649:1:36","nodeType":"YulIdentifier","src":"6649:1:36"}],"functionName":{"name":"mul","nativeSrc":"6642:3:36","nodeType":"YulIdentifier","src":"6642:3:36"},"nativeSrc":"6642:9:36","nodeType":"YulFunctionCall","src":"6642:9:36"},"variables":[{"name":"product_raw","nativeSrc":"6627:11:36","nodeType":"YulTypedName","src":"6627:11:36","type":""}]},{"nativeSrc":"6660:41:36","nodeType":"YulAssignment","src":"6660:41:36","value":{"arguments":[{"name":"product_raw","nativeSrc":"6689:11:36","nodeType":"YulIdentifier","src":"6689:11:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6671:17:36","nodeType":"YulIdentifier","src":"6671:17:36"},"nativeSrc":"6671:30:36","nodeType":"YulFunctionCall","src":"6671:30:36"},"variableNames":[{"name":"product","nativeSrc":"6660:7:36","nodeType":"YulIdentifier","src":"6660:7:36"}]},{"body":{"nativeSrc":"6878:22:36","nodeType":"YulBlock","src":"6878:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6880:16:36","nodeType":"YulIdentifier","src":"6880:16:36"},"nativeSrc":"6880:18:36","nodeType":"YulFunctionCall","src":"6880:18:36"},"nativeSrc":"6880:18:36","nodeType":"YulExpressionStatement","src":"6880:18:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6811:1:36","nodeType":"YulIdentifier","src":"6811:1:36"}],"functionName":{"name":"iszero","nativeSrc":"6804:6:36","nodeType":"YulIdentifier","src":"6804:6:36"},"nativeSrc":"6804:9:36","nodeType":"YulFunctionCall","src":"6804:9:36"},{"arguments":[{"name":"y","nativeSrc":"6834:1:36","nodeType":"YulIdentifier","src":"6834:1:36"},{"arguments":[{"name":"product","nativeSrc":"6841:7:36","nodeType":"YulIdentifier","src":"6841:7:36"},{"name":"x","nativeSrc":"6850:1:36","nodeType":"YulIdentifier","src":"6850:1:36"}],"functionName":{"name":"div","nativeSrc":"6837:3:36","nodeType":"YulIdentifier","src":"6837:3:36"},"nativeSrc":"6837:15:36","nodeType":"YulFunctionCall","src":"6837:15:36"}],"functionName":{"name":"eq","nativeSrc":"6831:2:36","nodeType":"YulIdentifier","src":"6831:2:36"},"nativeSrc":"6831:22:36","nodeType":"YulFunctionCall","src":"6831:22:36"}],"functionName":{"name":"or","nativeSrc":"6784:2:36","nodeType":"YulIdentifier","src":"6784:2:36"},"nativeSrc":"6784:83:36","nodeType":"YulFunctionCall","src":"6784:83:36"}],"functionName":{"name":"iszero","nativeSrc":"6764:6:36","nodeType":"YulIdentifier","src":"6764:6:36"},"nativeSrc":"6764:113:36","nodeType":"YulFunctionCall","src":"6764:113:36"},"nativeSrc":"6761:139:36","nodeType":"YulIf","src":"6761:139:36"}]},"name":"checked_mul_t_uint256","nativeSrc":"6497:410:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6528:1:36","nodeType":"YulTypedName","src":"6528:1:36","type":""},{"name":"y","nativeSrc":"6531:1:36","nodeType":"YulTypedName","src":"6531:1:36","type":""}],"returnVariables":[{"name":"product","nativeSrc":"6537:7:36","nodeType":"YulTypedName","src":"6537:7:36","type":""}],"src":"6497:410:36"},{"body":{"nativeSrc":"7019:65:36","nodeType":"YulBlock","src":"7019:65:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7041:6:36","nodeType":"YulIdentifier","src":"7041:6:36"},{"kind":"number","nativeSrc":"7049:1:36","nodeType":"YulLiteral","src":"7049:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7037:3:36","nodeType":"YulIdentifier","src":"7037:3:36"},"nativeSrc":"7037:14:36","nodeType":"YulFunctionCall","src":"7037:14:36"},{"hexValue":"496e73756666696369656e74204554482073656e74","kind":"string","nativeSrc":"7053:23:36","nodeType":"YulLiteral","src":"7053:23:36","type":"","value":"Insufficient ETH sent"}],"functionName":{"name":"mstore","nativeSrc":"7030:6:36","nodeType":"YulIdentifier","src":"7030:6:36"},"nativeSrc":"7030:47:36","nodeType":"YulFunctionCall","src":"7030:47:36"},"nativeSrc":"7030:47:36","nodeType":"YulExpressionStatement","src":"7030:47:36"}]},"name":"store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","nativeSrc":"6913:171:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7011:6:36","nodeType":"YulTypedName","src":"7011:6:36","type":""}],"src":"6913:171:36"},{"body":{"nativeSrc":"7236:220:36","nodeType":"YulBlock","src":"7236:220:36","statements":[{"nativeSrc":"7246:74:36","nodeType":"YulAssignment","src":"7246:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"7312:3:36","nodeType":"YulIdentifier","src":"7312:3:36"},{"kind":"number","nativeSrc":"7317:2:36","nodeType":"YulLiteral","src":"7317:2:36","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7253:58:36","nodeType":"YulIdentifier","src":"7253:58:36"},"nativeSrc":"7253:67:36","nodeType":"YulFunctionCall","src":"7253:67:36"},"variableNames":[{"name":"pos","nativeSrc":"7246:3:36","nodeType":"YulIdentifier","src":"7246:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7418:3:36","nodeType":"YulIdentifier","src":"7418:3:36"}],"functionName":{"name":"store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","nativeSrc":"7329:88:36","nodeType":"YulIdentifier","src":"7329:88:36"},"nativeSrc":"7329:93:36","nodeType":"YulFunctionCall","src":"7329:93:36"},"nativeSrc":"7329:93:36","nodeType":"YulExpressionStatement","src":"7329:93:36"},{"nativeSrc":"7431:19:36","nodeType":"YulAssignment","src":"7431:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"7442:3:36","nodeType":"YulIdentifier","src":"7442:3:36"},{"kind":"number","nativeSrc":"7447:2:36","nodeType":"YulLiteral","src":"7447:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7438:3:36","nodeType":"YulIdentifier","src":"7438:3:36"},"nativeSrc":"7438:12:36","nodeType":"YulFunctionCall","src":"7438:12:36"},"variableNames":[{"name":"end","nativeSrc":"7431:3:36","nodeType":"YulIdentifier","src":"7431:3:36"}]}]},"name":"abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack","nativeSrc":"7090:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7224:3:36","nodeType":"YulTypedName","src":"7224:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7232:3:36","nodeType":"YulTypedName","src":"7232:3:36","type":""}],"src":"7090:366:36"},{"body":{"nativeSrc":"7633:248:36","nodeType":"YulBlock","src":"7633:248:36","statements":[{"nativeSrc":"7643:26:36","nodeType":"YulAssignment","src":"7643:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"7655:9:36","nodeType":"YulIdentifier","src":"7655:9:36"},{"kind":"number","nativeSrc":"7666:2:36","nodeType":"YulLiteral","src":"7666:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7651:3:36","nodeType":"YulIdentifier","src":"7651:3:36"},"nativeSrc":"7651:18:36","nodeType":"YulFunctionCall","src":"7651:18:36"},"variableNames":[{"name":"tail","nativeSrc":"7643:4:36","nodeType":"YulIdentifier","src":"7643:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7690:9:36","nodeType":"YulIdentifier","src":"7690:9:36"},{"kind":"number","nativeSrc":"7701:1:36","nodeType":"YulLiteral","src":"7701:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7686:3:36","nodeType":"YulIdentifier","src":"7686:3:36"},"nativeSrc":"7686:17:36","nodeType":"YulFunctionCall","src":"7686:17:36"},{"arguments":[{"name":"tail","nativeSrc":"7709:4:36","nodeType":"YulIdentifier","src":"7709:4:36"},{"name":"headStart","nativeSrc":"7715:9:36","nodeType":"YulIdentifier","src":"7715:9:36"}],"functionName":{"name":"sub","nativeSrc":"7705:3:36","nodeType":"YulIdentifier","src":"7705:3:36"},"nativeSrc":"7705:20:36","nodeType":"YulFunctionCall","src":"7705:20:36"}],"functionName":{"name":"mstore","nativeSrc":"7679:6:36","nodeType":"YulIdentifier","src":"7679:6:36"},"nativeSrc":"7679:47:36","nodeType":"YulFunctionCall","src":"7679:47:36"},"nativeSrc":"7679:47:36","nodeType":"YulExpressionStatement","src":"7679:47:36"},{"nativeSrc":"7735:139:36","nodeType":"YulAssignment","src":"7735:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"7869:4:36","nodeType":"YulIdentifier","src":"7869:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack","nativeSrc":"7743:124:36","nodeType":"YulIdentifier","src":"7743:124:36"},"nativeSrc":"7743:131:36","nodeType":"YulFunctionCall","src":"7743:131:36"},"variableNames":[{"name":"tail","nativeSrc":"7735:4:36","nodeType":"YulIdentifier","src":"7735:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7462:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7613:9:36","nodeType":"YulTypedName","src":"7613:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7628:4:36","nodeType":"YulTypedName","src":"7628:4:36","type":""}],"src":"7462:419:36"},{"body":{"nativeSrc":"8041:288:36","nodeType":"YulBlock","src":"8041:288:36","statements":[{"nativeSrc":"8051:26:36","nodeType":"YulAssignment","src":"8051:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"8063:9:36","nodeType":"YulIdentifier","src":"8063:9:36"},{"kind":"number","nativeSrc":"8074:2:36","nodeType":"YulLiteral","src":"8074:2:36","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8059:3:36","nodeType":"YulIdentifier","src":"8059:3:36"},"nativeSrc":"8059:18:36","nodeType":"YulFunctionCall","src":"8059:18:36"},"variableNames":[{"name":"tail","nativeSrc":"8051:4:36","nodeType":"YulIdentifier","src":"8051:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8131:6:36","nodeType":"YulIdentifier","src":"8131:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"8144:9:36","nodeType":"YulIdentifier","src":"8144:9:36"},{"kind":"number","nativeSrc":"8155:1:36","nodeType":"YulLiteral","src":"8155:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8140:3:36","nodeType":"YulIdentifier","src":"8140:3:36"},"nativeSrc":"8140:17:36","nodeType":"YulFunctionCall","src":"8140:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8087:43:36","nodeType":"YulIdentifier","src":"8087:43:36"},"nativeSrc":"8087:71:36","nodeType":"YulFunctionCall","src":"8087:71:36"},"nativeSrc":"8087:71:36","nodeType":"YulExpressionStatement","src":"8087:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8212:6:36","nodeType":"YulIdentifier","src":"8212:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"8225:9:36","nodeType":"YulIdentifier","src":"8225:9:36"},{"kind":"number","nativeSrc":"8236:2:36","nodeType":"YulLiteral","src":"8236:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8221:3:36","nodeType":"YulIdentifier","src":"8221:3:36"},"nativeSrc":"8221:18:36","nodeType":"YulFunctionCall","src":"8221:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8168:43:36","nodeType":"YulIdentifier","src":"8168:43:36"},"nativeSrc":"8168:72:36","nodeType":"YulFunctionCall","src":"8168:72:36"},"nativeSrc":"8168:72:36","nodeType":"YulExpressionStatement","src":"8168:72:36"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8294:6:36","nodeType":"YulIdentifier","src":"8294:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"8307:9:36","nodeType":"YulIdentifier","src":"8307:9:36"},{"kind":"number","nativeSrc":"8318:2:36","nodeType":"YulLiteral","src":"8318:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8303:3:36","nodeType":"YulIdentifier","src":"8303:3:36"},"nativeSrc":"8303:18:36","nodeType":"YulFunctionCall","src":"8303:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8250:43:36","nodeType":"YulIdentifier","src":"8250:43:36"},"nativeSrc":"8250:72:36","nodeType":"YulFunctionCall","src":"8250:72:36"},"nativeSrc":"8250:72:36","nodeType":"YulExpressionStatement","src":"8250:72:36"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"7887:442:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7997:9:36","nodeType":"YulTypedName","src":"7997:9:36","type":""},{"name":"value2","nativeSrc":"8009:6:36","nodeType":"YulTypedName","src":"8009:6:36","type":""},{"name":"value1","nativeSrc":"8017:6:36","nodeType":"YulTypedName","src":"8017:6:36","type":""},{"name":"value0","nativeSrc":"8025:6:36","nodeType":"YulTypedName","src":"8025:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8036:4:36","nodeType":"YulTypedName","src":"8036:4:36","type":""}],"src":"7887:442:36"},{"body":{"nativeSrc":"8377:48:36","nodeType":"YulBlock","src":"8377:48:36","statements":[{"nativeSrc":"8387:32:36","nodeType":"YulAssignment","src":"8387:32:36","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8412:5:36","nodeType":"YulIdentifier","src":"8412:5:36"}],"functionName":{"name":"iszero","nativeSrc":"8405:6:36","nodeType":"YulIdentifier","src":"8405:6:36"},"nativeSrc":"8405:13:36","nodeType":"YulFunctionCall","src":"8405:13:36"}],"functionName":{"name":"iszero","nativeSrc":"8398:6:36","nodeType":"YulIdentifier","src":"8398:6:36"},"nativeSrc":"8398:21:36","nodeType":"YulFunctionCall","src":"8398:21:36"},"variableNames":[{"name":"cleaned","nativeSrc":"8387:7:36","nodeType":"YulIdentifier","src":"8387:7:36"}]}]},"name":"cleanup_t_bool","nativeSrc":"8335:90:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8359:5:36","nodeType":"YulTypedName","src":"8359:5:36","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8369:7:36","nodeType":"YulTypedName","src":"8369:7:36","type":""}],"src":"8335:90:36"},{"body":{"nativeSrc":"8471:76:36","nodeType":"YulBlock","src":"8471:76:36","statements":[{"body":{"nativeSrc":"8525:16:36","nodeType":"YulBlock","src":"8525:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8534:1:36","nodeType":"YulLiteral","src":"8534:1:36","type":"","value":"0"},{"kind":"number","nativeSrc":"8537:1:36","nodeType":"YulLiteral","src":"8537:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8527:6:36","nodeType":"YulIdentifier","src":"8527:6:36"},"nativeSrc":"8527:12:36","nodeType":"YulFunctionCall","src":"8527:12:36"},"nativeSrc":"8527:12:36","nodeType":"YulExpressionStatement","src":"8527:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8494:5:36","nodeType":"YulIdentifier","src":"8494:5:36"},{"arguments":[{"name":"value","nativeSrc":"8516:5:36","nodeType":"YulIdentifier","src":"8516:5:36"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"8501:14:36","nodeType":"YulIdentifier","src":"8501:14:36"},"nativeSrc":"8501:21:36","nodeType":"YulFunctionCall","src":"8501:21:36"}],"functionName":{"name":"eq","nativeSrc":"8491:2:36","nodeType":"YulIdentifier","src":"8491:2:36"},"nativeSrc":"8491:32:36","nodeType":"YulFunctionCall","src":"8491:32:36"}],"functionName":{"name":"iszero","nativeSrc":"8484:6:36","nodeType":"YulIdentifier","src":"8484:6:36"},"nativeSrc":"8484:40:36","nodeType":"YulFunctionCall","src":"8484:40:36"},"nativeSrc":"8481:60:36","nodeType":"YulIf","src":"8481:60:36"}]},"name":"validator_revert_t_bool","nativeSrc":"8431:116:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8464:5:36","nodeType":"YulTypedName","src":"8464:5:36","type":""}],"src":"8431:116:36"},{"body":{"nativeSrc":"8613:77:36","nodeType":"YulBlock","src":"8613:77:36","statements":[{"nativeSrc":"8623:22:36","nodeType":"YulAssignment","src":"8623:22:36","value":{"arguments":[{"name":"offset","nativeSrc":"8638:6:36","nodeType":"YulIdentifier","src":"8638:6:36"}],"functionName":{"name":"mload","nativeSrc":"8632:5:36","nodeType":"YulIdentifier","src":"8632:5:36"},"nativeSrc":"8632:13:36","nodeType":"YulFunctionCall","src":"8632:13:36"},"variableNames":[{"name":"value","nativeSrc":"8623:5:36","nodeType":"YulIdentifier","src":"8623:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8678:5:36","nodeType":"YulIdentifier","src":"8678:5:36"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"8654:23:36","nodeType":"YulIdentifier","src":"8654:23:36"},"nativeSrc":"8654:30:36","nodeType":"YulFunctionCall","src":"8654:30:36"},"nativeSrc":"8654:30:36","nodeType":"YulExpressionStatement","src":"8654:30:36"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"8553:137:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8591:6:36","nodeType":"YulTypedName","src":"8591:6:36","type":""},{"name":"end","nativeSrc":"8599:3:36","nodeType":"YulTypedName","src":"8599:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8607:5:36","nodeType":"YulTypedName","src":"8607:5:36","type":""}],"src":"8553:137:36"},{"body":{"nativeSrc":"8770:271:36","nodeType":"YulBlock","src":"8770:271:36","statements":[{"body":{"nativeSrc":"8816:83:36","nodeType":"YulBlock","src":"8816:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8818:77:36","nodeType":"YulIdentifier","src":"8818:77:36"},"nativeSrc":"8818:79:36","nodeType":"YulFunctionCall","src":"8818:79:36"},"nativeSrc":"8818:79:36","nodeType":"YulExpressionStatement","src":"8818:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8791:7:36","nodeType":"YulIdentifier","src":"8791:7:36"},{"name":"headStart","nativeSrc":"8800:9:36","nodeType":"YulIdentifier","src":"8800:9:36"}],"functionName":{"name":"sub","nativeSrc":"8787:3:36","nodeType":"YulIdentifier","src":"8787:3:36"},"nativeSrc":"8787:23:36","nodeType":"YulFunctionCall","src":"8787:23:36"},{"kind":"number","nativeSrc":"8812:2:36","nodeType":"YulLiteral","src":"8812:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8783:3:36","nodeType":"YulIdentifier","src":"8783:3:36"},"nativeSrc":"8783:32:36","nodeType":"YulFunctionCall","src":"8783:32:36"},"nativeSrc":"8780:119:36","nodeType":"YulIf","src":"8780:119:36"},{"nativeSrc":"8909:125:36","nodeType":"YulBlock","src":"8909:125:36","statements":[{"nativeSrc":"8924:15:36","nodeType":"YulVariableDeclaration","src":"8924:15:36","value":{"kind":"number","nativeSrc":"8938:1:36","nodeType":"YulLiteral","src":"8938:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8928:6:36","nodeType":"YulTypedName","src":"8928:6:36","type":""}]},{"nativeSrc":"8953:71:36","nodeType":"YulAssignment","src":"8953:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8996:9:36","nodeType":"YulIdentifier","src":"8996:9:36"},{"name":"offset","nativeSrc":"9007:6:36","nodeType":"YulIdentifier","src":"9007:6:36"}],"functionName":{"name":"add","nativeSrc":"8992:3:36","nodeType":"YulIdentifier","src":"8992:3:36"},"nativeSrc":"8992:22:36","nodeType":"YulFunctionCall","src":"8992:22:36"},{"name":"dataEnd","nativeSrc":"9016:7:36","nodeType":"YulIdentifier","src":"9016:7:36"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"8963:28:36","nodeType":"YulIdentifier","src":"8963:28:36"},"nativeSrc":"8963:61:36","nodeType":"YulFunctionCall","src":"8963:61:36"},"variableNames":[{"name":"value0","nativeSrc":"8953:6:36","nodeType":"YulIdentifier","src":"8953:6:36"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"8696:345:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8740:9:36","nodeType":"YulTypedName","src":"8740:9:36","type":""},{"name":"dataEnd","nativeSrc":"8751:7:36","nodeType":"YulTypedName","src":"8751:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8763:6:36","nodeType":"YulTypedName","src":"8763:6:36","type":""}],"src":"8696:345:36"},{"body":{"nativeSrc":"9092:149:36","nodeType":"YulBlock","src":"9092:149:36","statements":[{"nativeSrc":"9102:25:36","nodeType":"YulAssignment","src":"9102:25:36","value":{"arguments":[{"name":"x","nativeSrc":"9125:1:36","nodeType":"YulIdentifier","src":"9125:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9107:17:36","nodeType":"YulIdentifier","src":"9107:17:36"},"nativeSrc":"9107:20:36","nodeType":"YulFunctionCall","src":"9107:20:36"},"variableNames":[{"name":"x","nativeSrc":"9102:1:36","nodeType":"YulIdentifier","src":"9102:1:36"}]},{"nativeSrc":"9136:25:36","nodeType":"YulAssignment","src":"9136:25:36","value":{"arguments":[{"name":"y","nativeSrc":"9159:1:36","nodeType":"YulIdentifier","src":"9159:1:36"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9141:17:36","nodeType":"YulIdentifier","src":"9141:17:36"},"nativeSrc":"9141:20:36","nodeType":"YulFunctionCall","src":"9141:20:36"},"variableNames":[{"name":"y","nativeSrc":"9136:1:36","nodeType":"YulIdentifier","src":"9136:1:36"}]},{"nativeSrc":"9170:17:36","nodeType":"YulAssignment","src":"9170:17:36","value":{"arguments":[{"name":"x","nativeSrc":"9182:1:36","nodeType":"YulIdentifier","src":"9182:1:36"},{"name":"y","nativeSrc":"9185:1:36","nodeType":"YulIdentifier","src":"9185:1:36"}],"functionName":{"name":"sub","nativeSrc":"9178:3:36","nodeType":"YulIdentifier","src":"9178:3:36"},"nativeSrc":"9178:9:36","nodeType":"YulFunctionCall","src":"9178:9:36"},"variableNames":[{"name":"diff","nativeSrc":"9170:4:36","nodeType":"YulIdentifier","src":"9170:4:36"}]},{"body":{"nativeSrc":"9212:22:36","nodeType":"YulBlock","src":"9212:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9214:16:36","nodeType":"YulIdentifier","src":"9214:16:36"},"nativeSrc":"9214:18:36","nodeType":"YulFunctionCall","src":"9214:18:36"},"nativeSrc":"9214:18:36","nodeType":"YulExpressionStatement","src":"9214:18:36"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"9203:4:36","nodeType":"YulIdentifier","src":"9203:4:36"},{"name":"x","nativeSrc":"9209:1:36","nodeType":"YulIdentifier","src":"9209:1:36"}],"functionName":{"name":"gt","nativeSrc":"9200:2:36","nodeType":"YulIdentifier","src":"9200:2:36"},"nativeSrc":"9200:11:36","nodeType":"YulFunctionCall","src":"9200:11:36"},"nativeSrc":"9197:37:36","nodeType":"YulIf","src":"9197:37:36"}]},"name":"checked_sub_t_uint256","nativeSrc":"9047:194:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9078:1:36","nodeType":"YulTypedName","src":"9078:1:36","type":""},{"name":"y","nativeSrc":"9081:1:36","nodeType":"YulTypedName","src":"9081:1:36","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"9087:4:36","nodeType":"YulTypedName","src":"9087:4:36","type":""}],"src":"9047:194:36"},{"body":{"nativeSrc":"9360:34:36","nodeType":"YulBlock","src":"9360:34:36","statements":[{"nativeSrc":"9370:18:36","nodeType":"YulAssignment","src":"9370:18:36","value":{"name":"pos","nativeSrc":"9385:3:36","nodeType":"YulIdentifier","src":"9385:3:36"},"variableNames":[{"name":"updated_pos","nativeSrc":"9370:11:36","nodeType":"YulIdentifier","src":"9370:11:36"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9247:147:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9332:3:36","nodeType":"YulTypedName","src":"9332:3:36","type":""},{"name":"length","nativeSrc":"9337:6:36","nodeType":"YulTypedName","src":"9337:6:36","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9348:11:36","nodeType":"YulTypedName","src":"9348:11:36","type":""}],"src":"9247:147:36"},{"body":{"nativeSrc":"9506:8:36","nodeType":"YulBlock","src":"9506:8:36","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"9400:114:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9498:6:36","nodeType":"YulTypedName","src":"9498:6:36","type":""}],"src":"9400:114:36"},{"body":{"nativeSrc":"9683:235:36","nodeType":"YulBlock","src":"9683:235:36","statements":[{"nativeSrc":"9693:90:36","nodeType":"YulAssignment","src":"9693:90:36","value":{"arguments":[{"name":"pos","nativeSrc":"9776:3:36","nodeType":"YulIdentifier","src":"9776:3:36"},{"kind":"number","nativeSrc":"9781:1:36","nodeType":"YulLiteral","src":"9781:1:36","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9700:75:36","nodeType":"YulIdentifier","src":"9700:75:36"},"nativeSrc":"9700:83:36","nodeType":"YulFunctionCall","src":"9700:83:36"},"variableNames":[{"name":"pos","nativeSrc":"9693:3:36","nodeType":"YulIdentifier","src":"9693:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9881:3:36","nodeType":"YulIdentifier","src":"9881:3:36"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"9792:88:36","nodeType":"YulIdentifier","src":"9792:88:36"},"nativeSrc":"9792:93:36","nodeType":"YulFunctionCall","src":"9792:93:36"},"nativeSrc":"9792:93:36","nodeType":"YulExpressionStatement","src":"9792:93:36"},{"nativeSrc":"9894:18:36","nodeType":"YulAssignment","src":"9894:18:36","value":{"arguments":[{"name":"pos","nativeSrc":"9905:3:36","nodeType":"YulIdentifier","src":"9905:3:36"},{"kind":"number","nativeSrc":"9910:1:36","nodeType":"YulLiteral","src":"9910:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9901:3:36","nodeType":"YulIdentifier","src":"9901:3:36"},"nativeSrc":"9901:11:36","nodeType":"YulFunctionCall","src":"9901:11:36"},"variableNames":[{"name":"end","nativeSrc":"9894:3:36","nodeType":"YulIdentifier","src":"9894:3:36"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9520:398:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9671:3:36","nodeType":"YulTypedName","src":"9671:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9679:3:36","nodeType":"YulTypedName","src":"9679:3:36","type":""}],"src":"9520:398:36"},{"body":{"nativeSrc":"10112:191:36","nodeType":"YulBlock","src":"10112:191:36","statements":[{"nativeSrc":"10123:154:36","nodeType":"YulAssignment","src":"10123:154:36","value":{"arguments":[{"name":"pos","nativeSrc":"10273:3:36","nodeType":"YulIdentifier","src":"10273:3:36"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"10130:141:36","nodeType":"YulIdentifier","src":"10130:141:36"},"nativeSrc":"10130:147:36","nodeType":"YulFunctionCall","src":"10130:147:36"},"variableNames":[{"name":"pos","nativeSrc":"10123:3:36","nodeType":"YulIdentifier","src":"10123:3:36"}]},{"nativeSrc":"10287:10:36","nodeType":"YulAssignment","src":"10287:10:36","value":{"name":"pos","nativeSrc":"10294:3:36","nodeType":"YulIdentifier","src":"10294:3:36"},"variableNames":[{"name":"end","nativeSrc":"10287:3:36","nodeType":"YulIdentifier","src":"10287:3:36"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"9924:379:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10099:3:36","nodeType":"YulTypedName","src":"10099:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10108:3:36","nodeType":"YulTypedName","src":"10108:3:36","type":""}],"src":"9924:379:36"},{"body":{"nativeSrc":"10415:63:36","nodeType":"YulBlock","src":"10415:63:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10437:6:36","nodeType":"YulIdentifier","src":"10437:6:36"},{"kind":"number","nativeSrc":"10445:1:36","nodeType":"YulLiteral","src":"10445:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10433:3:36","nodeType":"YulIdentifier","src":"10433:3:36"},"nativeSrc":"10433:14:36","nodeType":"YulFunctionCall","src":"10433:14:36"},{"hexValue":"455448207472616e73666572206661696c6564","kind":"string","nativeSrc":"10449:21:36","nodeType":"YulLiteral","src":"10449:21:36","type":"","value":"ETH transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"10426:6:36","nodeType":"YulIdentifier","src":"10426:6:36"},"nativeSrc":"10426:45:36","nodeType":"YulFunctionCall","src":"10426:45:36"},"nativeSrc":"10426:45:36","nodeType":"YulExpressionStatement","src":"10426:45:36"}]},"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"10309:169:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10407:6:36","nodeType":"YulTypedName","src":"10407:6:36","type":""}],"src":"10309:169:36"},{"body":{"nativeSrc":"10630:220:36","nodeType":"YulBlock","src":"10630:220:36","statements":[{"nativeSrc":"10640:74:36","nodeType":"YulAssignment","src":"10640:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"10706:3:36","nodeType":"YulIdentifier","src":"10706:3:36"},{"kind":"number","nativeSrc":"10711:2:36","nodeType":"YulLiteral","src":"10711:2:36","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10647:58:36","nodeType":"YulIdentifier","src":"10647:58:36"},"nativeSrc":"10647:67:36","nodeType":"YulFunctionCall","src":"10647:67:36"},"variableNames":[{"name":"pos","nativeSrc":"10640:3:36","nodeType":"YulIdentifier","src":"10640:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10812:3:36","nodeType":"YulIdentifier","src":"10812:3:36"}],"functionName":{"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"10723:88:36","nodeType":"YulIdentifier","src":"10723:88:36"},"nativeSrc":"10723:93:36","nodeType":"YulFunctionCall","src":"10723:93:36"},"nativeSrc":"10723:93:36","nodeType":"YulExpressionStatement","src":"10723:93:36"},{"nativeSrc":"10825:19:36","nodeType":"YulAssignment","src":"10825:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"10836:3:36","nodeType":"YulIdentifier","src":"10836:3:36"},{"kind":"number","nativeSrc":"10841:2:36","nodeType":"YulLiteral","src":"10841:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10832:3:36","nodeType":"YulIdentifier","src":"10832:3:36"},"nativeSrc":"10832:12:36","nodeType":"YulFunctionCall","src":"10832:12:36"},"variableNames":[{"name":"end","nativeSrc":"10825:3:36","nodeType":"YulIdentifier","src":"10825:3:36"}]}]},"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"10484:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10618:3:36","nodeType":"YulTypedName","src":"10618:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10626:3:36","nodeType":"YulTypedName","src":"10626:3:36","type":""}],"src":"10484:366:36"},{"body":{"nativeSrc":"11027:248:36","nodeType":"YulBlock","src":"11027:248:36","statements":[{"nativeSrc":"11037:26:36","nodeType":"YulAssignment","src":"11037:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"11049:9:36","nodeType":"YulIdentifier","src":"11049:9:36"},{"kind":"number","nativeSrc":"11060:2:36","nodeType":"YulLiteral","src":"11060:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11045:3:36","nodeType":"YulIdentifier","src":"11045:3:36"},"nativeSrc":"11045:18:36","nodeType":"YulFunctionCall","src":"11045:18:36"},"variableNames":[{"name":"tail","nativeSrc":"11037:4:36","nodeType":"YulIdentifier","src":"11037:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11084:9:36","nodeType":"YulIdentifier","src":"11084:9:36"},{"kind":"number","nativeSrc":"11095:1:36","nodeType":"YulLiteral","src":"11095:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11080:3:36","nodeType":"YulIdentifier","src":"11080:3:36"},"nativeSrc":"11080:17:36","nodeType":"YulFunctionCall","src":"11080:17:36"},{"arguments":[{"name":"tail","nativeSrc":"11103:4:36","nodeType":"YulIdentifier","src":"11103:4:36"},{"name":"headStart","nativeSrc":"11109:9:36","nodeType":"YulIdentifier","src":"11109:9:36"}],"functionName":{"name":"sub","nativeSrc":"11099:3:36","nodeType":"YulIdentifier","src":"11099:3:36"},"nativeSrc":"11099:20:36","nodeType":"YulFunctionCall","src":"11099:20:36"}],"functionName":{"name":"mstore","nativeSrc":"11073:6:36","nodeType":"YulIdentifier","src":"11073:6:36"},"nativeSrc":"11073:47:36","nodeType":"YulFunctionCall","src":"11073:47:36"},"nativeSrc":"11073:47:36","nodeType":"YulExpressionStatement","src":"11073:47:36"},{"nativeSrc":"11129:139:36","nodeType":"YulAssignment","src":"11129:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"11263:4:36","nodeType":"YulIdentifier","src":"11263:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"11137:124:36","nodeType":"YulIdentifier","src":"11137:124:36"},"nativeSrc":"11137:131:36","nodeType":"YulFunctionCall","src":"11137:131:36"},"variableNames":[{"name":"tail","nativeSrc":"11129:4:36","nodeType":"YulIdentifier","src":"11129:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10856:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11007:9:36","nodeType":"YulTypedName","src":"11007:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11022:4:36","nodeType":"YulTypedName","src":"11022:4:36","type":""}],"src":"10856:419:36"},{"body":{"nativeSrc":"11407:206:36","nodeType":"YulBlock","src":"11407:206:36","statements":[{"nativeSrc":"11417:26:36","nodeType":"YulAssignment","src":"11417:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"11429:9:36","nodeType":"YulIdentifier","src":"11429:9:36"},{"kind":"number","nativeSrc":"11440:2:36","nodeType":"YulLiteral","src":"11440:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11425:3:36","nodeType":"YulIdentifier","src":"11425:3:36"},"nativeSrc":"11425:18:36","nodeType":"YulFunctionCall","src":"11425:18:36"},"variableNames":[{"name":"tail","nativeSrc":"11417:4:36","nodeType":"YulIdentifier","src":"11417:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11497:6:36","nodeType":"YulIdentifier","src":"11497:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"11510:9:36","nodeType":"YulIdentifier","src":"11510:9:36"},{"kind":"number","nativeSrc":"11521:1:36","nodeType":"YulLiteral","src":"11521:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11506:3:36","nodeType":"YulIdentifier","src":"11506:3:36"},"nativeSrc":"11506:17:36","nodeType":"YulFunctionCall","src":"11506:17:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11453:43:36","nodeType":"YulIdentifier","src":"11453:43:36"},"nativeSrc":"11453:71:36","nodeType":"YulFunctionCall","src":"11453:71:36"},"nativeSrc":"11453:71:36","nodeType":"YulExpressionStatement","src":"11453:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11578:6:36","nodeType":"YulIdentifier","src":"11578:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"11591:9:36","nodeType":"YulIdentifier","src":"11591:9:36"},{"kind":"number","nativeSrc":"11602:2:36","nodeType":"YulLiteral","src":"11602:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11587:3:36","nodeType":"YulIdentifier","src":"11587:3:36"},"nativeSrc":"11587:18:36","nodeType":"YulFunctionCall","src":"11587:18:36"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11534:43:36","nodeType":"YulIdentifier","src":"11534:43:36"},"nativeSrc":"11534:72:36","nodeType":"YulFunctionCall","src":"11534:72:36"},"nativeSrc":"11534:72:36","nodeType":"YulExpressionStatement","src":"11534:72:36"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11281:332:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11371:9:36","nodeType":"YulTypedName","src":"11371:9:36","type":""},{"name":"value1","nativeSrc":"11383:6:36","nodeType":"YulTypedName","src":"11383:6:36","type":""},{"name":"value0","nativeSrc":"11391:6:36","nodeType":"YulTypedName","src":"11391:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11402:4:36","nodeType":"YulTypedName","src":"11402:4:36","type":""}],"src":"11281:332:36"},{"body":{"nativeSrc":"11725:58:36","nodeType":"YulBlock","src":"11725:58:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11747:6:36","nodeType":"YulIdentifier","src":"11747:6:36"},{"kind":"number","nativeSrc":"11755:1:36","nodeType":"YulLiteral","src":"11755:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11743:3:36","nodeType":"YulIdentifier","src":"11743:3:36"},"nativeSrc":"11743:14:36","nodeType":"YulFunctionCall","src":"11743:14:36"},{"hexValue":"496e76616c696420696e70757473","kind":"string","nativeSrc":"11759:16:36","nodeType":"YulLiteral","src":"11759:16:36","type":"","value":"Invalid inputs"}],"functionName":{"name":"mstore","nativeSrc":"11736:6:36","nodeType":"YulIdentifier","src":"11736:6:36"},"nativeSrc":"11736:40:36","nodeType":"YulFunctionCall","src":"11736:40:36"},"nativeSrc":"11736:40:36","nodeType":"YulExpressionStatement","src":"11736:40:36"}]},"name":"store_literal_in_memory_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea","nativeSrc":"11619:164:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11717:6:36","nodeType":"YulTypedName","src":"11717:6:36","type":""}],"src":"11619:164:36"},{"body":{"nativeSrc":"11935:220:36","nodeType":"YulBlock","src":"11935:220:36","statements":[{"nativeSrc":"11945:74:36","nodeType":"YulAssignment","src":"11945:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"12011:3:36","nodeType":"YulIdentifier","src":"12011:3:36"},{"kind":"number","nativeSrc":"12016:2:36","nodeType":"YulLiteral","src":"12016:2:36","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11952:58:36","nodeType":"YulIdentifier","src":"11952:58:36"},"nativeSrc":"11952:67:36","nodeType":"YulFunctionCall","src":"11952:67:36"},"variableNames":[{"name":"pos","nativeSrc":"11945:3:36","nodeType":"YulIdentifier","src":"11945:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12117:3:36","nodeType":"YulIdentifier","src":"12117:3:36"}],"functionName":{"name":"store_literal_in_memory_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea","nativeSrc":"12028:88:36","nodeType":"YulIdentifier","src":"12028:88:36"},"nativeSrc":"12028:93:36","nodeType":"YulFunctionCall","src":"12028:93:36"},"nativeSrc":"12028:93:36","nodeType":"YulExpressionStatement","src":"12028:93:36"},{"nativeSrc":"12130:19:36","nodeType":"YulAssignment","src":"12130:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"12141:3:36","nodeType":"YulIdentifier","src":"12141:3:36"},{"kind":"number","nativeSrc":"12146:2:36","nodeType":"YulLiteral","src":"12146:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12137:3:36","nodeType":"YulIdentifier","src":"12137:3:36"},"nativeSrc":"12137:12:36","nodeType":"YulFunctionCall","src":"12137:12:36"},"variableNames":[{"name":"end","nativeSrc":"12130:3:36","nodeType":"YulIdentifier","src":"12130:3:36"}]}]},"name":"abi_encode_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea_to_t_string_memory_ptr_fromStack","nativeSrc":"11789:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11923:3:36","nodeType":"YulTypedName","src":"11923:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11931:3:36","nodeType":"YulTypedName","src":"11931:3:36","type":""}],"src":"11789:366:36"},{"body":{"nativeSrc":"12332:248:36","nodeType":"YulBlock","src":"12332:248:36","statements":[{"nativeSrc":"12342:26:36","nodeType":"YulAssignment","src":"12342:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"12354:9:36","nodeType":"YulIdentifier","src":"12354:9:36"},{"kind":"number","nativeSrc":"12365:2:36","nodeType":"YulLiteral","src":"12365:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12350:3:36","nodeType":"YulIdentifier","src":"12350:3:36"},"nativeSrc":"12350:18:36","nodeType":"YulFunctionCall","src":"12350:18:36"},"variableNames":[{"name":"tail","nativeSrc":"12342:4:36","nodeType":"YulIdentifier","src":"12342:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12389:9:36","nodeType":"YulIdentifier","src":"12389:9:36"},{"kind":"number","nativeSrc":"12400:1:36","nodeType":"YulLiteral","src":"12400:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12385:3:36","nodeType":"YulIdentifier","src":"12385:3:36"},"nativeSrc":"12385:17:36","nodeType":"YulFunctionCall","src":"12385:17:36"},{"arguments":[{"name":"tail","nativeSrc":"12408:4:36","nodeType":"YulIdentifier","src":"12408:4:36"},{"name":"headStart","nativeSrc":"12414:9:36","nodeType":"YulIdentifier","src":"12414:9:36"}],"functionName":{"name":"sub","nativeSrc":"12404:3:36","nodeType":"YulIdentifier","src":"12404:3:36"},"nativeSrc":"12404:20:36","nodeType":"YulFunctionCall","src":"12404:20:36"}],"functionName":{"name":"mstore","nativeSrc":"12378:6:36","nodeType":"YulIdentifier","src":"12378:6:36"},"nativeSrc":"12378:47:36","nodeType":"YulFunctionCall","src":"12378:47:36"},"nativeSrc":"12378:47:36","nodeType":"YulExpressionStatement","src":"12378:47:36"},{"nativeSrc":"12434:139:36","nodeType":"YulAssignment","src":"12434:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"12568:4:36","nodeType":"YulIdentifier","src":"12568:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea_to_t_string_memory_ptr_fromStack","nativeSrc":"12442:124:36","nodeType":"YulIdentifier","src":"12442:124:36"},"nativeSrc":"12442:131:36","nodeType":"YulFunctionCall","src":"12442:131:36"},"variableNames":[{"name":"tail","nativeSrc":"12434:4:36","nodeType":"YulIdentifier","src":"12434:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12161:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12312:9:36","nodeType":"YulTypedName","src":"12312:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12327:4:36","nodeType":"YulTypedName","src":"12327:4:36","type":""}],"src":"12161:419:36"},{"body":{"nativeSrc":"12712:206:36","nodeType":"YulBlock","src":"12712:206:36","statements":[{"nativeSrc":"12722:26:36","nodeType":"YulAssignment","src":"12722:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"12734:9:36","nodeType":"YulIdentifier","src":"12734:9:36"},{"kind":"number","nativeSrc":"12745:2:36","nodeType":"YulLiteral","src":"12745:2:36","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12730:3:36","nodeType":"YulIdentifier","src":"12730:3:36"},"nativeSrc":"12730:18:36","nodeType":"YulFunctionCall","src":"12730:18:36"},"variableNames":[{"name":"tail","nativeSrc":"12722:4:36","nodeType":"YulIdentifier","src":"12722:4:36"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12802:6:36","nodeType":"YulIdentifier","src":"12802:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12815:9:36","nodeType":"YulIdentifier","src":"12815:9:36"},{"kind":"number","nativeSrc":"12826:1:36","nodeType":"YulLiteral","src":"12826:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12811:3:36","nodeType":"YulIdentifier","src":"12811:3:36"},"nativeSrc":"12811:17:36","nodeType":"YulFunctionCall","src":"12811:17:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12758:43:36","nodeType":"YulIdentifier","src":"12758:43:36"},"nativeSrc":"12758:71:36","nodeType":"YulFunctionCall","src":"12758:71:36"},"nativeSrc":"12758:71:36","nodeType":"YulExpressionStatement","src":"12758:71:36"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12883:6:36","nodeType":"YulIdentifier","src":"12883:6:36"},{"arguments":[{"name":"headStart","nativeSrc":"12896:9:36","nodeType":"YulIdentifier","src":"12896:9:36"},{"kind":"number","nativeSrc":"12907:2:36","nodeType":"YulLiteral","src":"12907:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12892:3:36","nodeType":"YulIdentifier","src":"12892:3:36"},"nativeSrc":"12892:18:36","nodeType":"YulFunctionCall","src":"12892:18:36"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12839:43:36","nodeType":"YulIdentifier","src":"12839:43:36"},"nativeSrc":"12839:72:36","nodeType":"YulFunctionCall","src":"12839:72:36"},"nativeSrc":"12839:72:36","nodeType":"YulExpressionStatement","src":"12839:72:36"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12586:332:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12676:9:36","nodeType":"YulTypedName","src":"12676:9:36","type":""},{"name":"value1","nativeSrc":"12688:6:36","nodeType":"YulTypedName","src":"12688:6:36","type":""},{"name":"value0","nativeSrc":"12696:6:36","nodeType":"YulTypedName","src":"12696:6:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12707:4:36","nodeType":"YulTypedName","src":"12707:4:36","type":""}],"src":"12586:332:36"},{"body":{"nativeSrc":"12987:80:36","nodeType":"YulBlock","src":"12987:80:36","statements":[{"nativeSrc":"12997:22:36","nodeType":"YulAssignment","src":"12997:22:36","value":{"arguments":[{"name":"offset","nativeSrc":"13012:6:36","nodeType":"YulIdentifier","src":"13012:6:36"}],"functionName":{"name":"mload","nativeSrc":"13006:5:36","nodeType":"YulIdentifier","src":"13006:5:36"},"nativeSrc":"13006:13:36","nodeType":"YulFunctionCall","src":"13006:13:36"},"variableNames":[{"name":"value","nativeSrc":"12997:5:36","nodeType":"YulIdentifier","src":"12997:5:36"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13055:5:36","nodeType":"YulIdentifier","src":"13055:5:36"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"13028:26:36","nodeType":"YulIdentifier","src":"13028:26:36"},"nativeSrc":"13028:33:36","nodeType":"YulFunctionCall","src":"13028:33:36"},"nativeSrc":"13028:33:36","nodeType":"YulExpressionStatement","src":"13028:33:36"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"12924:143:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12965:6:36","nodeType":"YulTypedName","src":"12965:6:36","type":""},{"name":"end","nativeSrc":"12973:3:36","nodeType":"YulTypedName","src":"12973:3:36","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12981:5:36","nodeType":"YulTypedName","src":"12981:5:36","type":""}],"src":"12924:143:36"},{"body":{"nativeSrc":"13150:274:36","nodeType":"YulBlock","src":"13150:274:36","statements":[{"body":{"nativeSrc":"13196:83:36","nodeType":"YulBlock","src":"13196:83:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13198:77:36","nodeType":"YulIdentifier","src":"13198:77:36"},"nativeSrc":"13198:79:36","nodeType":"YulFunctionCall","src":"13198:79:36"},"nativeSrc":"13198:79:36","nodeType":"YulExpressionStatement","src":"13198:79:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13171:7:36","nodeType":"YulIdentifier","src":"13171:7:36"},{"name":"headStart","nativeSrc":"13180:9:36","nodeType":"YulIdentifier","src":"13180:9:36"}],"functionName":{"name":"sub","nativeSrc":"13167:3:36","nodeType":"YulIdentifier","src":"13167:3:36"},"nativeSrc":"13167:23:36","nodeType":"YulFunctionCall","src":"13167:23:36"},{"kind":"number","nativeSrc":"13192:2:36","nodeType":"YulLiteral","src":"13192:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13163:3:36","nodeType":"YulIdentifier","src":"13163:3:36"},"nativeSrc":"13163:32:36","nodeType":"YulFunctionCall","src":"13163:32:36"},"nativeSrc":"13160:119:36","nodeType":"YulIf","src":"13160:119:36"},{"nativeSrc":"13289:128:36","nodeType":"YulBlock","src":"13289:128:36","statements":[{"nativeSrc":"13304:15:36","nodeType":"YulVariableDeclaration","src":"13304:15:36","value":{"kind":"number","nativeSrc":"13318:1:36","nodeType":"YulLiteral","src":"13318:1:36","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13308:6:36","nodeType":"YulTypedName","src":"13308:6:36","type":""}]},{"nativeSrc":"13333:74:36","nodeType":"YulAssignment","src":"13333:74:36","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13379:9:36","nodeType":"YulIdentifier","src":"13379:9:36"},{"name":"offset","nativeSrc":"13390:6:36","nodeType":"YulIdentifier","src":"13390:6:36"}],"functionName":{"name":"add","nativeSrc":"13375:3:36","nodeType":"YulIdentifier","src":"13375:3:36"},"nativeSrc":"13375:22:36","nodeType":"YulFunctionCall","src":"13375:22:36"},{"name":"dataEnd","nativeSrc":"13399:7:36","nodeType":"YulIdentifier","src":"13399:7:36"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"13343:31:36","nodeType":"YulIdentifier","src":"13343:31:36"},"nativeSrc":"13343:64:36","nodeType":"YulFunctionCall","src":"13343:64:36"},"variableNames":[{"name":"value0","nativeSrc":"13333:6:36","nodeType":"YulIdentifier","src":"13333:6:36"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"13073:351:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13120:9:36","nodeType":"YulTypedName","src":"13120:9:36","type":""},{"name":"dataEnd","nativeSrc":"13131:7:36","nodeType":"YulTypedName","src":"13131:7:36","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13143:6:36","nodeType":"YulTypedName","src":"13143:6:36","type":""}],"src":"13073:351:36"},{"body":{"nativeSrc":"13536:68:36","nodeType":"YulBlock","src":"13536:68:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13558:6:36","nodeType":"YulIdentifier","src":"13558:6:36"},{"kind":"number","nativeSrc":"13566:1:36","nodeType":"YulLiteral","src":"13566:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13554:3:36","nodeType":"YulIdentifier","src":"13554:3:36"},"nativeSrc":"13554:14:36","nodeType":"YulFunctionCall","src":"13554:14:36"},{"hexValue":"4d61726b6574706c616365206e6f7420617070726f766564","kind":"string","nativeSrc":"13570:26:36","nodeType":"YulLiteral","src":"13570:26:36","type":"","value":"Marketplace not approved"}],"functionName":{"name":"mstore","nativeSrc":"13547:6:36","nodeType":"YulIdentifier","src":"13547:6:36"},"nativeSrc":"13547:50:36","nodeType":"YulFunctionCall","src":"13547:50:36"},"nativeSrc":"13547:50:36","nodeType":"YulExpressionStatement","src":"13547:50:36"}]},"name":"store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c","nativeSrc":"13430:174:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13528:6:36","nodeType":"YulTypedName","src":"13528:6:36","type":""}],"src":"13430:174:36"},{"body":{"nativeSrc":"13756:220:36","nodeType":"YulBlock","src":"13756:220:36","statements":[{"nativeSrc":"13766:74:36","nodeType":"YulAssignment","src":"13766:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"13832:3:36","nodeType":"YulIdentifier","src":"13832:3:36"},{"kind":"number","nativeSrc":"13837:2:36","nodeType":"YulLiteral","src":"13837:2:36","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13773:58:36","nodeType":"YulIdentifier","src":"13773:58:36"},"nativeSrc":"13773:67:36","nodeType":"YulFunctionCall","src":"13773:67:36"},"variableNames":[{"name":"pos","nativeSrc":"13766:3:36","nodeType":"YulIdentifier","src":"13766:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13938:3:36","nodeType":"YulIdentifier","src":"13938:3:36"}],"functionName":{"name":"store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c","nativeSrc":"13849:88:36","nodeType":"YulIdentifier","src":"13849:88:36"},"nativeSrc":"13849:93:36","nodeType":"YulFunctionCall","src":"13849:93:36"},"nativeSrc":"13849:93:36","nodeType":"YulExpressionStatement","src":"13849:93:36"},{"nativeSrc":"13951:19:36","nodeType":"YulAssignment","src":"13951:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"13962:3:36","nodeType":"YulIdentifier","src":"13962:3:36"},{"kind":"number","nativeSrc":"13967:2:36","nodeType":"YulLiteral","src":"13967:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13958:3:36","nodeType":"YulIdentifier","src":"13958:3:36"},"nativeSrc":"13958:12:36","nodeType":"YulFunctionCall","src":"13958:12:36"},"variableNames":[{"name":"end","nativeSrc":"13951:3:36","nodeType":"YulIdentifier","src":"13951:3:36"}]}]},"name":"abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack","nativeSrc":"13610:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13744:3:36","nodeType":"YulTypedName","src":"13744:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13752:3:36","nodeType":"YulTypedName","src":"13752:3:36","type":""}],"src":"13610:366:36"},{"body":{"nativeSrc":"14153:248:36","nodeType":"YulBlock","src":"14153:248:36","statements":[{"nativeSrc":"14163:26:36","nodeType":"YulAssignment","src":"14163:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"14175:9:36","nodeType":"YulIdentifier","src":"14175:9:36"},{"kind":"number","nativeSrc":"14186:2:36","nodeType":"YulLiteral","src":"14186:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14171:3:36","nodeType":"YulIdentifier","src":"14171:3:36"},"nativeSrc":"14171:18:36","nodeType":"YulFunctionCall","src":"14171:18:36"},"variableNames":[{"name":"tail","nativeSrc":"14163:4:36","nodeType":"YulIdentifier","src":"14163:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14210:9:36","nodeType":"YulIdentifier","src":"14210:9:36"},{"kind":"number","nativeSrc":"14221:1:36","nodeType":"YulLiteral","src":"14221:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14206:3:36","nodeType":"YulIdentifier","src":"14206:3:36"},"nativeSrc":"14206:17:36","nodeType":"YulFunctionCall","src":"14206:17:36"},{"arguments":[{"name":"tail","nativeSrc":"14229:4:36","nodeType":"YulIdentifier","src":"14229:4:36"},{"name":"headStart","nativeSrc":"14235:9:36","nodeType":"YulIdentifier","src":"14235:9:36"}],"functionName":{"name":"sub","nativeSrc":"14225:3:36","nodeType":"YulIdentifier","src":"14225:3:36"},"nativeSrc":"14225:20:36","nodeType":"YulFunctionCall","src":"14225:20:36"}],"functionName":{"name":"mstore","nativeSrc":"14199:6:36","nodeType":"YulIdentifier","src":"14199:6:36"},"nativeSrc":"14199:47:36","nodeType":"YulFunctionCall","src":"14199:47:36"},"nativeSrc":"14199:47:36","nodeType":"YulExpressionStatement","src":"14199:47:36"},{"nativeSrc":"14255:139:36","nodeType":"YulAssignment","src":"14255:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"14389:4:36","nodeType":"YulIdentifier","src":"14389:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack","nativeSrc":"14263:124:36","nodeType":"YulIdentifier","src":"14263:124:36"},"nativeSrc":"14263:131:36","nodeType":"YulFunctionCall","src":"14263:131:36"},"variableNames":[{"name":"tail","nativeSrc":"14255:4:36","nodeType":"YulIdentifier","src":"14255:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13982:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14133:9:36","nodeType":"YulTypedName","src":"14133:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14148:4:36","nodeType":"YulTypedName","src":"14148:4:36","type":""}],"src":"13982:419:36"},{"body":{"nativeSrc":"14513:64:36","nodeType":"YulBlock","src":"14513:64:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14535:6:36","nodeType":"YulIdentifier","src":"14535:6:36"},{"kind":"number","nativeSrc":"14543:1:36","nodeType":"YulLiteral","src":"14543:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14531:3:36","nodeType":"YulIdentifier","src":"14531:3:36"},"nativeSrc":"14531:14:36","nodeType":"YulFunctionCall","src":"14531:14:36"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"14547:22:36","nodeType":"YulLiteral","src":"14547:22:36","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"14524:6:36","nodeType":"YulIdentifier","src":"14524:6:36"},"nativeSrc":"14524:46:36","nodeType":"YulFunctionCall","src":"14524:46:36"},"nativeSrc":"14524:46:36","nodeType":"YulExpressionStatement","src":"14524:46:36"}]},"name":"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","nativeSrc":"14407:170:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14505:6:36","nodeType":"YulTypedName","src":"14505:6:36","type":""}],"src":"14407:170:36"},{"body":{"nativeSrc":"14729:220:36","nodeType":"YulBlock","src":"14729:220:36","statements":[{"nativeSrc":"14739:74:36","nodeType":"YulAssignment","src":"14739:74:36","value":{"arguments":[{"name":"pos","nativeSrc":"14805:3:36","nodeType":"YulIdentifier","src":"14805:3:36"},{"kind":"number","nativeSrc":"14810:2:36","nodeType":"YulLiteral","src":"14810:2:36","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14746:58:36","nodeType":"YulIdentifier","src":"14746:58:36"},"nativeSrc":"14746:67:36","nodeType":"YulFunctionCall","src":"14746:67:36"},"variableNames":[{"name":"pos","nativeSrc":"14739:3:36","nodeType":"YulIdentifier","src":"14739:3:36"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14911:3:36","nodeType":"YulIdentifier","src":"14911:3:36"}],"functionName":{"name":"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","nativeSrc":"14822:88:36","nodeType":"YulIdentifier","src":"14822:88:36"},"nativeSrc":"14822:93:36","nodeType":"YulFunctionCall","src":"14822:93:36"},"nativeSrc":"14822:93:36","nodeType":"YulExpressionStatement","src":"14822:93:36"},{"nativeSrc":"14924:19:36","nodeType":"YulAssignment","src":"14924:19:36","value":{"arguments":[{"name":"pos","nativeSrc":"14935:3:36","nodeType":"YulIdentifier","src":"14935:3:36"},{"kind":"number","nativeSrc":"14940:2:36","nodeType":"YulLiteral","src":"14940:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14931:3:36","nodeType":"YulIdentifier","src":"14931:3:36"},"nativeSrc":"14931:12:36","nodeType":"YulFunctionCall","src":"14931:12:36"},"variableNames":[{"name":"end","nativeSrc":"14924:3:36","nodeType":"YulIdentifier","src":"14924:3:36"}]}]},"name":"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack","nativeSrc":"14583:366:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14717:3:36","nodeType":"YulTypedName","src":"14717:3:36","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14725:3:36","nodeType":"YulTypedName","src":"14725:3:36","type":""}],"src":"14583:366:36"},{"body":{"nativeSrc":"15126:248:36","nodeType":"YulBlock","src":"15126:248:36","statements":[{"nativeSrc":"15136:26:36","nodeType":"YulAssignment","src":"15136:26:36","value":{"arguments":[{"name":"headStart","nativeSrc":"15148:9:36","nodeType":"YulIdentifier","src":"15148:9:36"},{"kind":"number","nativeSrc":"15159:2:36","nodeType":"YulLiteral","src":"15159:2:36","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15144:3:36","nodeType":"YulIdentifier","src":"15144:3:36"},"nativeSrc":"15144:18:36","nodeType":"YulFunctionCall","src":"15144:18:36"},"variableNames":[{"name":"tail","nativeSrc":"15136:4:36","nodeType":"YulIdentifier","src":"15136:4:36"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15183:9:36","nodeType":"YulIdentifier","src":"15183:9:36"},{"kind":"number","nativeSrc":"15194:1:36","nodeType":"YulLiteral","src":"15194:1:36","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15179:3:36","nodeType":"YulIdentifier","src":"15179:3:36"},"nativeSrc":"15179:17:36","nodeType":"YulFunctionCall","src":"15179:17:36"},{"arguments":[{"name":"tail","nativeSrc":"15202:4:36","nodeType":"YulIdentifier","src":"15202:4:36"},{"name":"headStart","nativeSrc":"15208:9:36","nodeType":"YulIdentifier","src":"15208:9:36"}],"functionName":{"name":"sub","nativeSrc":"15198:3:36","nodeType":"YulIdentifier","src":"15198:3:36"},"nativeSrc":"15198:20:36","nodeType":"YulFunctionCall","src":"15198:20:36"}],"functionName":{"name":"mstore","nativeSrc":"15172:6:36","nodeType":"YulIdentifier","src":"15172:6:36"},"nativeSrc":"15172:47:36","nodeType":"YulFunctionCall","src":"15172:47:36"},"nativeSrc":"15172:47:36","nodeType":"YulExpressionStatement","src":"15172:47:36"},{"nativeSrc":"15228:139:36","nodeType":"YulAssignment","src":"15228:139:36","value":{"arguments":[{"name":"tail","nativeSrc":"15362:4:36","nodeType":"YulIdentifier","src":"15362:4:36"}],"functionName":{"name":"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack","nativeSrc":"15236:124:36","nodeType":"YulIdentifier","src":"15236:124:36"},"nativeSrc":"15236:131:36","nodeType":"YulFunctionCall","src":"15236:131:36"},"variableNames":[{"name":"tail","nativeSrc":"15228:4:36","nodeType":"YulIdentifier","src":"15228:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14955:419:36","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15106:9:36","nodeType":"YulTypedName","src":"15106:9:36","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15121:4:36","nodeType":"YulTypedName","src":"15121:4:36","type":""}],"src":"14955:419:36"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774(memPtr) {\n\n        mstore(add(memPtr, 0), \"No listing to cancel\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9ea12c207906e1be614140ee5d785726ff7027edc4277fe9dc25285adf82774_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens listed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4a69df1333c5368f0d2c42c5e672c38d0881502ee7b58c82a20af20346ce965_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient ETH sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid inputs\")\n\n    }\n\n    function abi_encode_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50d40f2d5ea1a63b1335a307c98e0ac1e2f45b69cf3ac2c08e525149b80752ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Marketplace not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c8063db931fcd1161004e578063db931fcd1461012a578063dcefa53814610169578063f2fde38b14610185578063fa982ad1146101ae5761007b565b80634724da6f14610080578063715018a6146100a95780638da5cb5b146100c0578063b369f6ad146100eb575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610e5a565b6101d7565b005b3480156100b557600080fd5b506100be6103b2565b005b3480156100cc57600080fd5b506100d56103c6565b6040516100e29190610e96565b60405180910390f35b3480156100f757600080fd5b50610112600480360381019061010d9190610eb1565b6103ef565b60405161012193929190610f0a565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190610eb1565b610505565b60405161016093929190610f0a565b60405180910390f35b610183600480360381019061017e9190610f6d565b61055c565b005b34801561019157600080fd5b506101ac60048036038101906101a79190610e5a565b610889565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190610fc0565b61090f565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600201541161029e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029590611070565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905550503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f796ebe8ba5d6045889c70272f8e2dad46d17b785eebaf80794d94e1d7de0f08260405160405180910390a35050565b6103ba610c55565b6103c46000610cdc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509250925092565b6002602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b610564610da0565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160020154101561062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906110dc565b60405180910390fd5b600082826001015461063d919061112b565b905080341015610682576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610679906111b9565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633866040518463ffffffff1660e01b81526004016106e3939291906111d9565b6020604051808303816000875af1158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190611248565b508282600201600082825461073b9190611275565b9250508190555060008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161078c906112da565b60006040518083038185875af1925050503d80600081146107c9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ce565b606091505b5050905080610812576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108099061133b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49868560405161087192919061135b565b60405180910390a3505050610884610de6565b505050565b610891610c55565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109035760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108fa9190610e96565b60405180910390fd5b61090c81610cdc565b50565b60008211801561091f5750600081115b61095e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610955906113d0565b60405180910390fd5b6000839050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161099f9291906113f0565b602060405180830381865afa1580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e0919061142e565b1015610a21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a18906114a7565b60405180910390fd5b828173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a5b9190610e96565b602060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c919061142e565b1015610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490611513565b60405180910390fd5b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200184815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca8585604051610c4792919061135b565b60405180910390a350505050565b610c5d610def565b73ffffffffffffffffffffffffffffffffffffffff16610c7b6103c6565b73ffffffffffffffffffffffffffffffffffffffff1614610cda57610c9e610def565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cd19190610e96565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610ddc576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2782610dfc565b9050919050565b610e3781610e1c565b8114610e4257600080fd5b50565b600081359050610e5481610e2e565b92915050565b600060208284031215610e7057610e6f610df7565b5b6000610e7e84828501610e45565b91505092915050565b610e9081610e1c565b82525050565b6000602082019050610eab6000830184610e87565b92915050565b60008060408385031215610ec857610ec7610df7565b5b6000610ed685828601610e45565b9250506020610ee785828601610e45565b9150509250929050565b6000819050919050565b610f0481610ef1565b82525050565b6000606082019050610f1f6000830186610e87565b610f2c6020830185610efb565b610f396040830184610efb565b949350505050565b610f4a81610ef1565b8114610f5557600080fd5b50565b600081359050610f6781610f41565b92915050565b600080600060608486031215610f8657610f85610df7565b5b6000610f9486828701610e45565b9350506020610fa586828701610e45565b9250506040610fb686828701610f58565b9150509250925092565b600080600060608486031215610fd957610fd8610df7565b5b6000610fe786828701610e45565b9350506020610ff886828701610f58565b925050604061100986828701610f58565b9150509250925092565b600082825260208201905092915050565b7f4e6f206c697374696e6720746f2063616e63656c000000000000000000000000600082015250565b600061105a601483611013565b915061106582611024565b602082019050919050565b600060208201905081810360008301526110898161104d565b9050919050565b7f4e6f7420656e6f75676820746f6b656e73206c69737465640000000000000000600082015250565b60006110c6601883611013565b91506110d182611090565b602082019050919050565b600060208201905081810360008301526110f5816110b9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113682610ef1565b915061114183610ef1565b925082820261114f81610ef1565b91508282048414831517611166576111656110fc565b5b5092915050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b60006111a3601583611013565b91506111ae8261116d565b602082019050919050565b600060208201905081810360008301526111d281611196565b9050919050565b60006060820190506111ee6000830186610e87565b6111fb6020830185610e87565b6112086040830184610efb565b949350505050565b60008115159050919050565b61122581611210565b811461123057600080fd5b50565b6000815190506112428161121c565b92915050565b60006020828403121561125e5761125d610df7565b5b600061126c84828501611233565b91505092915050565b600061128082610ef1565b915061128b83610ef1565b92508282039050818111156112a3576112a26110fc565b5b92915050565b600081905092915050565b50565b60006112c46000836112a9565b91506112cf826112b4565b600082019050919050565b60006112e5826112b7565b9150819050919050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000611325601383611013565b9150611330826112ef565b602082019050919050565b6000602082019050818103600083015261135481611318565b9050919050565b60006040820190506113706000830185610efb565b61137d6020830184610efb565b9392505050565b7f496e76616c696420696e70757473000000000000000000000000000000000000600082015250565b60006113ba600e83611013565b91506113c582611384565b602082019050919050565b600060208201905081810360008301526113e9816113ad565b9050919050565b60006040820190506114056000830185610e87565b6114126020830184610e87565b9392505050565b60008151905061142881610f41565b92915050565b60006020828403121561144457611443610df7565b5b600061145284828501611419565b91505092915050565b7f4d61726b6574706c616365206e6f7420617070726f7665640000000000000000600082015250565b6000611491601883611013565b915061149c8261145b565b602082019050919050565b600060208201905081810360008301526114c081611484565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006114fd601483611013565b9150611508826114c7565b602082019050919050565b6000602082019050818103600083015261152c816114f0565b905091905056fea2646970667358221220494703a62b5149ab7b68a4a6c6b8fd1debc9eea6bdee8645fb30aba2ac3f77f464736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB931FCD GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDB931FCD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xDCEFA538 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xFA982AD1 EQ PUSH2 0x1AE JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x4724DA6F EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB369F6AD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x3B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x796EBE8BA5D6045889C70272F8E2DAD46D17B785EEBAF80794D94E1D7DE0F082 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3BA PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x3C4 PUSH1 0x0 PUSH2 0xCDC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x679 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST POP DUP3 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x78C SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x871 SWAP3 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x884 PUSH2 0xDE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x891 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x903 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90C DUP2 PUSH2 0xCDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x91F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST LT ISZERO PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP3 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xC5D PUSH2 0xDEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7B PUSH2 0x3C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDA JUMPI PUSH2 0xC9E PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xDDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE27 DUP3 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE1C JUMP JUMPDEST DUP2 EQ PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE54 DUP2 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE6F PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE7E DUP5 DUP3 DUP6 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE90 DUP2 PUSH2 0xE1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC8 JUMPI PUSH2 0xEC7 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED6 DUP6 DUP3 DUP7 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE7 DUP6 DUP3 DUP7 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF1F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0xF2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xF39 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xF4A DUP2 PUSH2 0xEF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF67 DUP2 PUSH2 0xF41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH2 0xF85 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF94 DUP7 DUP3 DUP8 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFA5 DUP7 DUP3 DUP8 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFB6 DUP7 DUP3 DUP8 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE7 DUP7 DUP3 DUP8 ADD PUSH2 0xE45 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFF8 DUP7 DUP3 DUP8 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1009 DUP7 DUP3 DUP8 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206C697374696E6720746F2063616E63656C000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105A PUSH1 0x14 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1065 DUP3 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1089 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E73206C69737465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C6 PUSH1 0x18 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D1 DUP3 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F5 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1136 DUP3 PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1141 DUP4 PUSH2 0xEF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x114F DUP2 PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0x10FC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 PUSH1 0x15 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AE DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D2 DUP2 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11EE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x11FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x1208 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x1210 JUMP JUMPDEST DUP2 EQ PUSH2 0x1230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1242 DUP2 PUSH2 0x121C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125E JUMPI PUSH2 0x125D PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x126C DUP5 DUP3 DUP6 ADD PUSH2 0x1233 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1280 DUP3 PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x128B DUP4 PUSH2 0xEF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x10FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C4 PUSH1 0x0 DUP4 PUSH2 0x12A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP3 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E5 DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1325 PUSH1 0x13 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1330 DUP3 PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1354 DUP2 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1370 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x137D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757473000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BA PUSH1 0xE DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C5 DUP3 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13E9 DUP2 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1405 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x1412 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1428 DUP2 PUSH2 0xF41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1443 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1452 DUP5 DUP3 DUP6 ADD PUSH2 0x1419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B6574706C616365206E6F7420617070726F7665640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1491 PUSH1 0x18 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x149C DUP3 PUSH2 0x145B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C0 DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FD PUSH1 0x14 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1508 DUP3 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x152C DUP2 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH SELFBALANCE SUB 0xA6 0x2B MLOAD BLOBHASH 0xAB PUSH28 0x68A4A6C6B8FD1DEBC9EEA6BDEE8645FB30ABA2AC3F77F464736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"369:3130:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:312;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3178:318:35;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;616:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1871:871;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1191:595:35;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2796:312;2861:20;2884:8;:22;2893:12;2884:22;;;;;;;;;;;;;;;:34;2907:10;2884:34;;;;;;;;;;;;;;;2861:57;;2960:1;2937:4;:20;;;:24;2929:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3006:8;:22;3015:12;3006:22;;;;;;;;;;;;;;;:34;3029:10;3006:34;;;;;;;;;;;;;;;;2999:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3089:10;3058:42;;3075:12;3058:42;;;;;;;;;;;;2850:258;2796:312;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3178:318:35:-;3269:21;3301;3333:23;3375:16;3394:8;:22;3403:12;3394:22;;;;;;;;;;;;;;;:30;3417:6;3394:30;;;;;;;;;;;;;;;3375:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:1;:8;;;3453:1;:15;;;3470:1;:17;;;3435:53;;;;;;;3178:318;;;;;:::o;616:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1871:871::-;2500:21:21;:19;:21::i;:::-;1990:20:35::1;2013:8;:22;2022:12;2013:22;;;;;;;;;;;;;;;:30;2036:6;2013:30;;;;;;;;;;;;;;;1990:53;;2086:11;2062:4;:20;;;:35;;2054:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2147:17;2188:11;2167:4;:18;;;:32;;;;:::i;:::-;2147:52;;2231:9;2218;:22;;2210:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2341:12;2334:33;;;2368:4;:11;;;;;;;;;;;;2381:10;2393:11;2334:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2492:11;2468:4;:20;;;:35;;;;;;;:::i;:::-;;;;;;;;2548:9;2571:4;:11;;;;;;;;;;;;2563:25;;2596:9;2563:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2547:63;;;2629:4;2621:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;2699:10;2675:59;;2685:12;2675:59;;;2711:11;2724:9;2675:59;;;;;;;:::i;:::-;;;;;;;;1979:763;;;2542:20:21::0;:18;:20::i;:::-;1871:871:35;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1191:595:35:-;1343:1;1334:6;:10;:31;;;;;1364:1;1348:13;:17;1334:31;1326:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1397:12;1419;1397:35;;1497:6;1451:5;:15;;;1467:10;1487:4;1451:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1443:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;1582:6;1551:5;:15;;;1567:10;1551:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1543:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1663:42;;;;;;;;1671:10;1663:42;;;;;;1683:13;1663:42;;;;1698:6;1663:42;;;1626:8;:22;1635:12;1626:22;;;;;;;;;;;;;;;:34;1649:10;1626:34;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1744:10;1723:55;;1730:12;1723:55;;;1756:6;1764:13;1723:55;;;;;;;:::i;:::-;;;;;;;;1315:471;1191:595;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2575:307:21:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;2888:208::-;1857:1;3068:7;:21;;;;2888:208::o;656:96:18:-;709:7;735:10;728:17;;656:96;:::o;88:117:36:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:474::-;1596:6;1604;1653:2;1641:9;1632:7;1628:23;1624:32;1621:119;;;1659:79;;:::i;:::-;1621:119;1779:1;1804:53;1849:7;1840:6;1829:9;1825:22;1804:53;:::i;:::-;1794:63;;1750:117;1906:2;1932:53;1977:7;1968:6;1957:9;1953:22;1932:53;:::i;:::-;1922:63;;1877:118;1528:474;;;;;:::o;2008:77::-;2045:7;2074:5;2063:16;;2008:77;;;:::o;2091:118::-;2178:24;2196:5;2178:24;:::i;:::-;2173:3;2166:37;2091:118;;:::o;2215:442::-;2364:4;2402:2;2391:9;2387:18;2379:26;;2415:71;2483:1;2472:9;2468:17;2459:6;2415:71;:::i;:::-;2496:72;2564:2;2553:9;2549:18;2540:6;2496:72;:::i;:::-;2578;2646:2;2635:9;2631:18;2622:6;2578:72;:::i;:::-;2215:442;;;;;;:::o;2663:122::-;2736:24;2754:5;2736:24;:::i;:::-;2729:5;2726:35;2716:63;;2775:1;2772;2765:12;2716:63;2663:122;:::o;2791:139::-;2837:5;2875:6;2862:20;2853:29;;2891:33;2918:5;2891:33;:::i;:::-;2791:139;;;;:::o;2936:619::-;3013:6;3021;3029;3078:2;3066:9;3057:7;3053:23;3049:32;3046:119;;;3084:79;;:::i;:::-;3046:119;3204:1;3229:53;3274:7;3265:6;3254:9;3250:22;3229:53;:::i;:::-;3219:63;;3175:117;3331:2;3357:53;3402:7;3393:6;3382:9;3378:22;3357:53;:::i;:::-;3347:63;;3302:118;3459:2;3485:53;3530:7;3521:6;3510:9;3506:22;3485:53;:::i;:::-;3475:63;;3430:118;2936:619;;;;;:::o;3561:::-;3638:6;3646;3654;3703:2;3691:9;3682:7;3678:23;3674:32;3671:119;;;3709:79;;:::i;:::-;3671:119;3829:1;3854:53;3899:7;3890:6;3879:9;3875:22;3854:53;:::i;:::-;3844:63;;3800:117;3956:2;3982:53;4027:7;4018:6;4007:9;4003:22;3982:53;:::i;:::-;3972:63;;3927:118;4084:2;4110:53;4155:7;4146:6;4135:9;4131:22;4110:53;:::i;:::-;4100:63;;4055:118;3561:619;;;;;:::o;4186:169::-;4270:11;4304:6;4299:3;4292:19;4344:4;4339:3;4335:14;4320:29;;4186:169;;;;:::o;4361:170::-;4501:22;4497:1;4489:6;4485:14;4478:46;4361:170;:::o;4537:366::-;4679:3;4700:67;4764:2;4759:3;4700:67;:::i;:::-;4693:74;;4776:93;4865:3;4776:93;:::i;:::-;4894:2;4889:3;4885:12;4878:19;;4537:366;;;:::o;4909:419::-;5075:4;5113:2;5102:9;5098:18;5090:26;;5162:9;5156:4;5152:20;5148:1;5137:9;5133:17;5126:47;5190:131;5316:4;5190:131;:::i;:::-;5182:139;;4909:419;;;:::o;5334:174::-;5474:26;5470:1;5462:6;5458:14;5451:50;5334:174;:::o;5514:366::-;5656:3;5677:67;5741:2;5736:3;5677:67;:::i;:::-;5670:74;;5753:93;5842:3;5753:93;:::i;:::-;5871:2;5866:3;5862:12;5855:19;;5514:366;;;:::o;5886:419::-;6052:4;6090:2;6079:9;6075:18;6067:26;;6139:9;6133:4;6129:20;6125:1;6114:9;6110:17;6103:47;6167:131;6293:4;6167:131;:::i;:::-;6159:139;;5886:419;;;:::o;6311:180::-;6359:77;6356:1;6349:88;6456:4;6453:1;6446:15;6480:4;6477:1;6470:15;6497:410;6537:7;6560:20;6578:1;6560:20;:::i;:::-;6555:25;;6594:20;6612:1;6594:20;:::i;:::-;6589:25;;6649:1;6646;6642:9;6671:30;6689:11;6671:30;:::i;:::-;6660:41;;6850:1;6841:7;6837:15;6834:1;6831:22;6811:1;6804:9;6784:83;6761:139;;6880:18;;:::i;:::-;6761:139;6545:362;6497:410;;;;:::o;6913:171::-;7053:23;7049:1;7041:6;7037:14;7030:47;6913:171;:::o;7090:366::-;7232:3;7253:67;7317:2;7312:3;7253:67;:::i;:::-;7246:74;;7329:93;7418:3;7329:93;:::i;:::-;7447:2;7442:3;7438:12;7431:19;;7090:366;;;:::o;7462:419::-;7628:4;7666:2;7655:9;7651:18;7643:26;;7715:9;7709:4;7705:20;7701:1;7690:9;7686:17;7679:47;7743:131;7869:4;7743:131;:::i;:::-;7735:139;;7462:419;;;:::o;7887:442::-;8036:4;8074:2;8063:9;8059:18;8051:26;;8087:71;8155:1;8144:9;8140:17;8131:6;8087:71;:::i;:::-;8168:72;8236:2;8225:9;8221:18;8212:6;8168:72;:::i;:::-;8250;8318:2;8307:9;8303:18;8294:6;8250:72;:::i;:::-;7887:442;;;;;;:::o;8335:90::-;8369:7;8412:5;8405:13;8398:21;8387:32;;8335:90;;;:::o;8431:116::-;8501:21;8516:5;8501:21;:::i;:::-;8494:5;8491:32;8481:60;;8537:1;8534;8527:12;8481:60;8431:116;:::o;8553:137::-;8607:5;8638:6;8632:13;8623:22;;8654:30;8678:5;8654:30;:::i;:::-;8553:137;;;;:::o;8696:345::-;8763:6;8812:2;8800:9;8791:7;8787:23;8783:32;8780:119;;;8818:79;;:::i;:::-;8780:119;8938:1;8963:61;9016:7;9007:6;8996:9;8992:22;8963:61;:::i;:::-;8953:71;;8909:125;8696:345;;;;:::o;9047:194::-;9087:4;9107:20;9125:1;9107:20;:::i;:::-;9102:25;;9141:20;9159:1;9141:20;:::i;:::-;9136:25;;9185:1;9182;9178:9;9170:17;;9209:1;9203:4;9200:11;9197:37;;;9214:18;;:::i;:::-;9197:37;9047:194;;;;:::o;9247:147::-;9348:11;9385:3;9370:18;;9247:147;;;;:::o;9400:114::-;;:::o;9520:398::-;9679:3;9700:83;9781:1;9776:3;9700:83;:::i;:::-;9693:90;;9792:93;9881:3;9792:93;:::i;:::-;9910:1;9905:3;9901:11;9894:18;;9520:398;;;:::o;9924:379::-;10108:3;10130:147;10273:3;10130:147;:::i;:::-;10123:154;;10294:3;10287:10;;9924:379;;;:::o;10309:169::-;10449:21;10445:1;10437:6;10433:14;10426:45;10309:169;:::o;10484:366::-;10626:3;10647:67;10711:2;10706:3;10647:67;:::i;:::-;10640:74;;10723:93;10812:3;10723:93;:::i;:::-;10841:2;10836:3;10832:12;10825:19;;10484:366;;;:::o;10856:419::-;11022:4;11060:2;11049:9;11045:18;11037:26;;11109:9;11103:4;11099:20;11095:1;11084:9;11080:17;11073:47;11137:131;11263:4;11137:131;:::i;:::-;11129:139;;10856:419;;;:::o;11281:332::-;11402:4;11440:2;11429:9;11425:18;11417:26;;11453:71;11521:1;11510:9;11506:17;11497:6;11453:71;:::i;:::-;11534:72;11602:2;11591:9;11587:18;11578:6;11534:72;:::i;:::-;11281:332;;;;;:::o;11619:164::-;11759:16;11755:1;11747:6;11743:14;11736:40;11619:164;:::o;11789:366::-;11931:3;11952:67;12016:2;12011:3;11952:67;:::i;:::-;11945:74;;12028:93;12117:3;12028:93;:::i;:::-;12146:2;12141:3;12137:12;12130:19;;11789:366;;;:::o;12161:419::-;12327:4;12365:2;12354:9;12350:18;12342:26;;12414:9;12408:4;12404:20;12400:1;12389:9;12385:17;12378:47;12442:131;12568:4;12442:131;:::i;:::-;12434:139;;12161:419;;;:::o;12586:332::-;12707:4;12745:2;12734:9;12730:18;12722:26;;12758:71;12826:1;12815:9;12811:17;12802:6;12758:71;:::i;:::-;12839:72;12907:2;12896:9;12892:18;12883:6;12839:72;:::i;:::-;12586:332;;;;;:::o;12924:143::-;12981:5;13012:6;13006:13;12997:22;;13028:33;13055:5;13028:33;:::i;:::-;12924:143;;;;:::o;13073:351::-;13143:6;13192:2;13180:9;13171:7;13167:23;13163:32;13160:119;;;13198:79;;:::i;:::-;13160:119;13318:1;13343:64;13399:7;13390:6;13379:9;13375:22;13343:64;:::i;:::-;13333:74;;13289:128;13073:351;;;;:::o;13430:174::-;13570:26;13566:1;13558:6;13554:14;13547:50;13430:174;:::o;13610:366::-;13752:3;13773:67;13837:2;13832:3;13773:67;:::i;:::-;13766:74;;13849:93;13938:3;13849:93;:::i;:::-;13967:2;13962:3;13958:12;13951:19;;13610:366;;;:::o;13982:419::-;14148:4;14186:2;14175:9;14171:18;14163:26;;14235:9;14229:4;14225:20;14221:1;14210:9;14206:17;14199:47;14263:131;14389:4;14263:131;:::i;:::-;14255:139;;13982:419;;;:::o;14407:170::-;14547:22;14543:1;14535:6;14531:14;14524:46;14407:170;:::o;14583:366::-;14725:3;14746:67;14810:2;14805:3;14746:67;:::i;:::-;14739:74;;14822:93;14911:3;14822:93;:::i;:::-;14940:2;14935:3;14931:12;14924:19;;14583:366;;;:::o;14955:419::-;15121:4;15159:2;15148:9;15144:18;15136:26;;15208:9;15202:4;15198:20;15194:1;15183:9;15179:17;15172:47;15236:131;15362:4;15236:131;:::i;:::-;15228:139;;14955:419;;;:::o"},"methodIdentifiers":{"buyTokens(address,address,uint256)":"dcefa538","cancelListing(address)":"4724da6f","getListing(address,address)":"b369f6ad","listTokens(address,uint256,uint256)":"fa982ad1","listings(address,address)":"db931fcd","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"name\":\"Listed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ListingCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalCost\",\"type\":\"uint256\"}],\"name\":\"Purchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToBuy\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sellerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAvailable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"name\":\"listTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAvailable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"buyTokens(address,address,uint256)\":{\"details\":\"Buyer buys `amountToBuy` of fractional tokens\"},\"cancelListing(address)\":{\"details\":\"Cancel listing\"},\"getListing(address,address)\":{\"details\":\"Returns listing details for UI\"},\"listTokens(address,uint256,uint256)\":{\"details\":\"Seller lists their fractional tokens\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/FractionalCertificateToken.sol\":{\"keccak256\":\"0xcbf33f78c2001e6975e56e52d257a381ad5292aca8cf7b2da855edf0e5ee6e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66fa96fa372b8ea6035f6ba639ba689bf20eb4a319387553963292e9b5896588\",\"dweb:/ipfs/QmV4zQNsQu9A1x3Q9DgPiYaFrwCU9Exm1kFkJb5nV3gh3K\"]},\"contracts/IReCCertificate.sol\":{\"keccak256\":\"0xbccf850361ed55c652dc2f6841bd8ddfa4bc599adcd502610f0f505799377eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f699983a33a6c5070432c179a8ebba54902ab4e6670e3b72871778dc8761db\",\"dweb:/ipfs/QmPRamqjrphkNye3sesxqqxzD2Xgct91ZuawW5c4Jrr98E\"]},\"contracts/Marketplace.sol\":{\"keccak256\":\"0xf1e34197bb1a91f523b4f0ab290845ac2bb524667673ca5229fe70dcfae96f53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76acc69417bb846db26f18070f4eabfa6e027bc87aba0085f1cbe3751bf5d968\",\"dweb:/ipfs/QmUYickYd9PYMejjwBTnoaiBvdgVrTNXsPwAUbhWA2hLS1\"]}},\"version\":1}"}}}}}